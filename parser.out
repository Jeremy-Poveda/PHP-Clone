Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT

Grammar

Rule 0     S' -> inicial_program
Rule 1     inicial_program -> PHP_IDENTIFIER program PHP_END_IDENTIFIER
Rule 2     program -> sentence program
Rule 3     program -> sentence
Rule 4     sentence -> print_statement SEMICOLON
Rule 5     sentence -> assignment SEMICOLON
Rule 6     sentence -> types_structure
Rule 7     sentence -> class_declaration
Rule 8     sentence -> interface_declaration
Rule 9     sentence -> control_structures
Rule 10    sentence -> function_declaration
Rule 11    control_structures -> if_statement
Rule 12    control_structures -> while_statement
Rule 13    control_structures -> for_statement
Rule 14    while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
Rule 15    if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
Rule 16    if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
Rule 17    if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
Rule 18    elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
Rule 19    elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
Rule 20    elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
Rule 21    else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE
Rule 22    body_statement -> sentence
Rule 23    body_statement -> sentence RETURN values SEMICOLON
Rule 24    body_statement -> sentence RETURN SEMICOLON
Rule 25    body_statement -> sentence BREAK SEMICOLON
Rule 26    body_statement -> sentence body_statement
Rule 27    body_statement -> RETURN values SEMICOLON
Rule 28    body_statement -> BREAK SEMICOLON
Rule 29    body_statement -> RETURN printable_values SEMICOLON
Rule 30    body_statement -> sentence RETURN printable_values SEMICOLON
Rule 31    for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
Rule 32    increment_statement -> VARIABLE INCREASE
Rule 33    increment_statement -> VARIABLE DECREMENT
Rule 34    increment_statement -> INCREASE VARIABLE
Rule 35    increment_statement -> DECREMENT VARIABLE
Rule 36    increment_statement -> VARIABLE PLUS_EQUALS INTEGER
Rule 37    increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values
Rule 38    condition_for -> VARIABLE comparator_operator expression_for
Rule 39    expression_for -> VARIABLE
Rule 40    expression_for -> number_values
Rule 41    expression_for -> expression_for operator_aritmetic expression_for
Rule 42    expression_for -> LEFT_PAREN expression_for RIGHT_PAREN
Rule 43    expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
Rule 44    expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
Rule 45    expression_for -> length_operations
Rule 46    number_values -> INTEGER
Rule 47    number_values -> FLOAT
Rule 48    operator_aritmetic -> PLUS
Rule 49    operator_aritmetic -> MINUS
Rule 50    operator_aritmetic -> MULTIPLY
Rule 51    operator_aritmetic -> DIVIDE
Rule 52    operator_aritmetic -> MODULE
Rule 53    operator_aritmetic -> POW
Rule 54    conditional -> boolean_expression
Rule 55    conditional -> boolean_expression logic_operator boolean_expression
Rule 56    logic_operator -> LOGIC_AND
Rule 57    logic_operator -> LOGIC_OR
Rule 58    logic_operator -> LOGIC_XOR
Rule 59    boolean_expression -> comparation
Rule 60    boolean_expression -> VARIABLE
Rule 61    boolean_expression -> IDENTIFIER
Rule 62    boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN
Rule 63    boolean_expression -> logic_not_sentence
Rule 64    boolean_expression -> logic_expression
Rule 65    logic_expression -> true_boolean_types logic_operator false_boolean_types
Rule 66    logic_expression -> false_boolean_types logic_operator true_boolean_types
Rule 67    true_boolean_types -> TRUE
Rule 68    true_boolean_types -> STRING
Rule 69    true_boolean_types -> INTEGER
Rule 70    true_boolean_types -> FLOAT
Rule 71    true_boolean_types -> VARIABLE
Rule 72    true_boolean_types -> IDENTIFIER
Rule 73    true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN
Rule 74    false_boolean_types -> FALSE
Rule 75    false_boolean_types -> STRING
Rule 76    false_boolean_types -> INTEGER
Rule 77    false_boolean_types -> VARIABLE
Rule 78    false_boolean_types -> IDENTIFIER
Rule 79    false_boolean_types -> FLOAT
Rule 80    false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN
Rule 81    false_boolean_types -> NULL
Rule 82    logic_not_sentence -> LOGIC_NOT conditional
Rule 83    logic_not_sentence -> LOGIC_NOT VARIABLE
Rule 84    comparation -> values comparator_operator values
Rule 85    comparation -> values comparator_operator expression
Rule 86    comparation -> expression comparator_operator expression
Rule 87    comparation -> VARIABLE EQUALS_EQUALS values
Rule 88    comparation -> access_array_element EQUALS_EQUALS values
Rule 89    comparation -> access_array_element EQUALS_EQUALS VARIABLE
Rule 90    comparation -> VARIABLE EQUALS_EQUALS access_array_element
Rule 91    comparation -> VARIABLE EQUALS_EQUALS VARIABLE
Rule 92    comparation -> access_array_element EQUALS_EQUALS access_array_element
Rule 93    comparation -> access_element_matrix EQUALS_EQUALS VARIABLE
Rule 94    comparation -> VARIABLE EQUALS_EQUALS access_element_matrix
Rule 95    comparator_operator -> EQUALS_EQUALS
Rule 96    comparator_operator -> IDENTICAL
Rule 97    comparator_operator -> NOT_EQUALS
Rule 98    comparator_operator -> NOT_IDENTICAL
Rule 99    comparator_operator -> SMALL_THAN
Rule 100   comparator_operator -> GREATER_THAN
Rule 101   comparator_operator -> SMALL_EQUALS_TO
Rule 102   comparator_operator -> GREATER_EQUALS_TO
Rule 103   comparator_operator -> SPACECRAFT
Rule 104   comparator_operator -> NULL_FUSION
Rule 105   print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN
Rule 106   print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN
Rule 107   print_statement -> ECHO printable_values
Rule 108   print_statement -> PRINT printable_values
Rule 109   printable_values -> values
Rule 110   printable_values -> values printable_dividers printable_values
Rule 111   printable_values -> values COMMA printable_values
Rule 112   printable_values -> VARIABLE
Rule 113   printable_values -> VARIABLE printable_dividers printable_values
Rule 114   printable_values -> VARIABLE COMMA printable_values
Rule 115   printable_values -> VARIABLE STRING_CONCATENATION STRING
Rule 116   printable_values -> conditional
Rule 117   printable_values -> conditional printable_dividers printable_values
Rule 118   printable_values -> conditional COMMA printable_values
Rule 119   printable_values -> structure_object_principal
Rule 120   printable_values -> structure_object_principal printable_dividers printable_values
Rule 121   printable_values -> structure_object_principal COMMA printable_values
Rule 122   printable_dividers -> COMMA
Rule 123   printable_dividers -> STRING_CONCATENATION
Rule 124   values -> INTEGER
Rule 125   values -> STRING
Rule 126   values -> FLOAT
Rule 127   values -> boolean
Rule 128   boolean -> TRUE
Rule 129   boolean -> FALSE
Rule 130   expression -> term
Rule 131   expression -> term PLUS expression
Rule 132   expression -> term MINUS expression
Rule 133   term -> factor
Rule 134   term -> factor MULTIPLY term
Rule 135   term -> factor DIVIDE term
Rule 136   term -> factor MODULE term
Rule 137   term -> factor POW term
Rule 138   factor -> INTEGER
Rule 139   factor -> FLOAT
Rule 140   factor -> VARIABLE
Rule 141   factor -> LEFT_PAREN expression RIGHT_PAREN
Rule 142   factor -> STRING
Rule 143   assignment -> variable_assignment
Rule 144   assignment -> constant_assignment
Rule 145   variable_assignment -> VARIABLE assignment_operator values
Rule 146   variable_assignment -> VARIABLE assignment_operator IDENTIFIER
Rule 147   variable_assignment -> VARIABLE assignment_operator expression
Rule 148   variable_assignment -> VARIABLE assignment_operator function_invocation
Rule 149   variable_assignment -> VARIABLE assignment_operator string_special_function
Rule 150   variable_assignment -> VARIABLE assignment_operator array_special_function_structure
Rule 151   variable_assignment -> VARIABLE assignment_operator types_structure
Rule 152   variable_assignment -> VARIABLE assignment_operator input
Rule 153   variable_assignment -> VARIABLE assignment_operator special_function
Rule 154   variable_assignment -> VARIABLE assignment_operator conditional
Rule 155   variable_assignment -> VARIABLE INCREASE
Rule 156   variable_assignment -> VARIABLE DECREMENT
Rule 157   variable_assignment -> INCREASE VARIABLE
Rule 158   variable_assignment -> DECREMENT VARIABLE
Rule 159   assignment_operator -> EQUALS
Rule 160   assignment_operator -> PLUS_EQUALS
Rule 161   constant_assignment -> const_syntax
Rule 162   constant_assignment -> define_syntax
Rule 163   const_syntax -> CONST IDENTIFIER EQUALS values
Rule 164   define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
Rule 165   function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN
Rule 166   function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN
Rule 167   params -> real_params
Rule 168   params -> empty
Rule 169   real_params -> VARIABLE
Rule 170   real_params -> values
Rule 171   real_params -> real_params COMMA VARIABLE
Rule 172   real_params -> real_params COMMA values
Rule 173   empty -> <empty>
Rule 174   function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
Rule 175   special_function -> arrow_function
Rule 176   special_function -> anonymous_functions
Rule 177   arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock
Rule 178   arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement
Rule 179   arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression
Rule 180   anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock
Rule 181   codeblock -> LEFT_BRACE body_statement RIGHT_BRACE
Rule 182   input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN
Rule 183   input -> READLINE LEFT_PAREN STRING RIGHT_PAREN
Rule 184   string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN
Rule 185   string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN
Rule 186   string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN
Rule 187   string_param -> STRING
Rule 188   string_param -> VARIABLE
Rule 189   string_param -> INTEGER
Rule 190   int_param -> INTEGER
Rule 191   int_param -> VARIABLE
Rule 192   int_param -> STRING
Rule 193   array_special_function_structure -> array_special_function
Rule 194   array_special_function_structure -> statement_array_special_function_error
Rule 195   array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
Rule 196   array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
Rule 197   array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
Rule 198   array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN
Rule 199   array_special_function -> ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN
Rule 200   statement_array_special_function_error -> COUNT LEFT_PAREN error count_param RIGHT_PAREN
Rule 201   statement_array_special_function_error -> ARRAY_POP LEFT_PAREN error RIGHT_PAREN
Rule 202   statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN error RIGHT_PAREN
Rule 203   count_param -> COMMA COUNT_NORMAL
Rule 204   count_param -> COMMA COUNT_RECURSIVE
Rule 205   count_param -> <empty>
Rule 206   length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
Rule 207   length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
Rule 208   length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
Rule 209   length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN
Rule 210   types_structure -> structure_array_principal
Rule 211   types_structure -> structure_matrix_principal
Rule 212   types_structure -> structure_object_principal
Rule 213   structure_array_principal -> indexed_array
Rule 214   structure_array_principal -> associative_array
Rule 215   structure_array_principal -> access_array_stucture
Rule 216   structure_array_principal -> access_array_element
Rule 217   indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
Rule 218   associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN
Rule 219   associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
Rule 220   structure_array -> key EQUALS GREATER_THAN values
Rule 221   structure_array -> key EQUALS GREATER_THAN values COMMA structure_array
Rule 222   key -> INTEGER
Rule 223   key -> STRING
Rule 224   values_array_indexed -> values
Rule 225   values_array_indexed -> values COMMA values_array_indexed
Rule 226   values_array_indexed -> object_creation
Rule 227   values_array_indexed -> object_creation COMMA values_array_indexed
Rule 228   values_array_indexed -> indexed_array
Rule 229   values_array_indexed -> indexed_array COMMA values_array_indexed
Rule 230   access_array_stucture -> access_array_element
Rule 231   access_array_stucture -> statement_access_array_element_error
Rule 232   access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
Rule 233   access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
Rule 234   statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET
Rule 235   structure_matrix_principal -> matrix_firstform
Rule 236   structure_matrix_principal -> matrix_secondform
Rule 237   structure_matrix_principal -> access_element_matrix SEMICOLON
Rule 238   structure_matrix_principal -> modify_element_matrix SEMICOLON
Rule 239   structure_matrix_principal -> add_element_matrix
Rule 240   matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
Rule 241   matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
Rule 242   structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET
Rule 243   structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second
Rule 244   structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN
Rule 245   structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first
Rule 246   access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
Rule 247   access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
Rule 248   access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
Rule 249   access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
Rule 250   modify_element_matrix -> access_element_matrix EQUALS values
Rule 251   modify_element_matrix -> access_element_matrix EQUALS VARIABLE
Rule 252   add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
Rule 253   structure_object_principal -> object_creation
Rule 254   structure_object_principal -> access_method_object
Rule 255   object_creation -> NEW IDENTIFIER
Rule 256   object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
Rule 257   access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation
Rule 258   access_method_object -> VARIABLE MINUS GREATER_THAN accessType
Rule 259   access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values
Rule 260   access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
Rule 261   access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
Rule 262   access_method_object -> access_array_element MINUS GREATER_THAN function_invocation
Rule 263   access_method_object -> access_array_element MINUS GREATER_THAN accessType
Rule 264   access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values
Rule 265   access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
Rule 266   access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
Rule 267   accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET
Rule 268   accessType -> IDENTIFIER
Rule 269   class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
Rule 270   interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
Rule 271   interface_body -> interface_body interface_method
Rule 272   interface_body -> <empty>
Rule 273   interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON
Rule 274   class_extends_opt -> EXTENDS IDENTIFIER
Rule 275   class_extends_opt -> <empty>
Rule 276   class_implements_opt -> IMPLEMENTS interface_list
Rule 277   class_implements_opt -> <empty>
Rule 278   interface_list -> IDENTIFIER
Rule 279   interface_list -> interface_list COMMA IDENTIFIER
Rule 280   class_body -> class_body class_member
Rule 281   class_body -> <empty>
Rule 282   class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
Rule 283   class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
Rule 284   class_member -> class_attribute
Rule 285   class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON
Rule 286   class_attribute -> visibility_opt VARIABLE SEMICOLON
Rule 287   class_attribute -> visibility_opt constant_assignment SEMICOLON
Rule 288   visibility_opt -> PUBLIC
Rule 289   visibility_opt -> PRIVATE
Rule 290   visibility_opt -> PROTECTED
Rule 291   visibility_opt -> <empty>
Rule 292   method_body -> classStatement
Rule 293   method_body -> classStatement return_form
Rule 294   method_body -> return_form
Rule 295   method_body -> classStatement BREAK SEMICOLON
Rule 296   method_body -> classStatement method_body
Rule 297   return_form -> RETURN values SEMICOLON
Rule 298   return_form -> RETURN access_method_object SEMICOLON
Rule 299   return_form -> RETURN SEMICOLON
Rule 300   return_form -> RETURN expression SEMICOLON
Rule 301   return_form -> RETURN string_special_function SEMICOLON
Rule 302   return_form -> RETURN array_special_function_structure SEMICOLON
Rule 303   classStatement -> sentence
Rule 304   classStatement -> access_method_object SEMICOLON

Terminals, with rules where they appear

ARRAY                : 73 80 217 218 219 240 244 245
ARRAY_POP            : 198 201
ARRAY_SUM            : 199 202
BREAK                : 25 28 295
CLASS                : 269
COLON                : 
COMMA                : 111 114 118 121 122 164 171 172 185 186 186 203 204 221 225 227 229 243 245 279
COMMENT              : 
CONST                : 163
COUNT                : 195 196 197 200 206 207 208
COUNT_NORMAL         : 203
COUNT_RECURSIVE      : 204
DECREMENT            : 33 35 156 158
DEFINE               : 164
DIVIDE               : 51 135
ECHO                 : 105 107
ELSE                 : 21
ELSEIF               : 18 19 20
EQUALS               : 31 37 159 163 177 178 179 220 221 250 251 252 259 260 261 264 265 266 285
EQUALS_EQUALS        : 87 88 89 90 91 92 93 94 95
EXTENDS              : 274
FALSE                : 74 129
FEGTS                : 182
FLOAT                : 47 70 79 126 139
FN                   : 177 178 179
FOR                  : 31
FUNCTION             : 174 180 273 282 283
GREATER_EQUALS_TO    : 102
GREATER_THAN         : 100 177 178 179 220 221 257 258 259 260 261 262 263 264 265 266
IDENTICAL            : 96
IDENTIFIER           : 43 44 61 72 78 146 163 165 174 255 256 267 268 269 270 273 274 278 279 282 283
IF                   : 15 16 17
IMPLEMENTS           : 276
INCREASE             : 32 34 155 157
INTEGER              : 36 46 69 76 124 138 189 190 222 232 246 246 248 249 267
INTERFACE            : 270
LEFT_BRACE           : 14 15 16 17 18 19 20 21 31 181 269 270 282 283
LEFT_BRACKET         : 219 232 233 234 241 242 243 246 246 247 247 248 248 249 249 252 267
LEFT_PAREN           : 14 15 16 17 18 19 20 31 42 43 44 62 73 80 105 106 141 164 165 166 174 177 178 179 180 182 183 184 185 186 195 196 197 198 199 200 201 202 206 207 208 209 217 218 240 244 245 256 273 282 283
LOGIC_AND            : 56
LOGIC_NOT            : 82 83
LOGIC_OR             : 57
LOGIC_XOR            : 58
MINUS                : 49 132 257 258 259 260 261 262 263 264 265 266
MODULE               : 52 136
MULTIPLY             : 50 134
NEW                  : 255 256
NOT_EQUALS           : 97
NOT_IDENTICAL        : 98
NULL                 : 81
NULL_FUSION          : 104
PHP_END_IDENTIFIER   : 1
PHP_IDENTIFIER       : 1
PLUS                 : 48 131
PLUS_EQUALS          : 36 160
POW                  : 53 137
PRINT                : 106 108
PRIVATE              : 289
PROTECTED            : 290
PUBLIC               : 288
READLINE             : 183
RETURN               : 23 24 27 29 30 297 298 299 300 301 302
RIGHT_BRACE          : 14 15 16 17 18 19 20 21 31 181 269 270 282 283
RIGHT_BRACKET        : 219 232 233 234 241 242 243 246 246 247 247 248 248 249 249 252 267
RIGHT_PAREN          : 14 15 16 17 18 19 20 31 42 43 44 62 73 80 105 106 141 164 165 166 174 177 178 179 180 182 183 184 185 186 195 196 197 198 199 200 201 202 206 207 208 209 217 218 240 244 245 256 273 282 283
SEMICOLON            : 4 5 23 24 25 27 28 29 30 31 31 237 238 240 241 273 285 286 287 295 297 298 299 300 301 302 304
SMALL_EQUALS_TO      : 101
SMALL_THAN           : 99
SPACECRAFT           : 103
STATIC               : 282
STDIN                : 182
STRING               : 68 75 115 125 142 164 183 187 192 223
STRING_CONCATENATION : 115 123
STRLEN               : 184 209
SUBSTR               : 185 186
TRUE                 : 67 128
VARIABLE             : 31 32 33 34 35 36 37 37 38 39 43 60 71 77 83 87 89 90 91 91 93 94 112 113 114 115 140 145 146 147 148 149 150 151 152 153 154 155 156 157 158 166 169 171 188 191 197 198 199 208 232 233 233 234 246 247 247 247 248 248 249 249 251 252 257 258 259 260 260 261 265 285 286
WHILE                : 14
error                : 200 201 202 234

Nonterminals, with rules where they appear

accessType           : 258 259 260 261 263 264 265 266
access_array_element : 44 88 89 90 92 92 216 230 261 262 263 264 265 266 266
access_array_stucture : 215
access_element_matrix : 93 94 237 250 251
access_method_object : 254 298 304
add_element_matrix   : 239
anonymous_functions  : 176
array_special_function : 193
array_special_function_structure : 150 302
arrow_function       : 175
assignment           : 5
assignment_operator  : 145 146 147 148 149 150 151 152 153 154
associative_array    : 214
body_statement       : 14 15 16 17 18 19 20 21 26 31 181
boolean              : 127
boolean_expression   : 54 55 55
classStatement       : 292 293 295 296
class_attribute      : 284
class_body           : 269 280
class_declaration    : 7
class_extends_opt    : 269 270
class_implements_opt : 269
class_member         : 280
codeblock            : 174 177 180
comparation          : 59
comparator_operator  : 38 84 85 86
condition_for        : 31
conditional          : 14 15 16 17 18 19 20 62 82 116 117 118 154
const_syntax         : 161
constant_assignment  : 144 287
control_structures   : 9
count_param          : 195 196 197 200 206 207 208
define_syntax        : 162
else_statement       : 17 20
elseif_statement     : 16 19
empty                : 168
expression           : 85 86 86 131 132 141 147 179 300
expression_for       : 31 38 41 41 42
factor               : 133 134 135 136 137
false_boolean_types  : 65 66
for_statement        : 13
function_declaration : 10
function_invocation  : 148 257 262
if_statement         : 11
increment_statement  : 31
indexed_array        : 213 228 229 252
inicial_program      : 0
input                : 152
int_param            : 185 186 186
interface_body       : 270 271
interface_declaration : 8
interface_list       : 276 279
interface_method     : 271
key                  : 220 221
length_operations    : 45
logic_expression     : 64
logic_not_sentence   : 63
logic_operator       : 55 65 66
matrix_firstform     : 235
matrix_secondform    : 236
method_body          : 282 283 296
modify_element_matrix : 238
number_values        : 37 40
object_creation      : 226 227 253
operator_aritmetic   : 37 41
params               : 165 166 174 177 178 179 180 256 273 282 283
print_statement      : 4 178
printable_dividers   : 110 113 117 120
printable_values     : 29 30 105 106 107 108 110 111 113 114 117 118 120 121
program              : 1 2
real_params          : 167 171 172
return_form          : 293 294
sentence             : 2 3 22 23 24 25 26 30 303
special_function     : 153
statement_access_array_element_error : 231
statement_array_special_function_error : 194
string_param         : 184 185 186 209
string_special_function : 149 301
structure_array      : 218 219 221
structure_array_principal : 195 206 210
structure_matrix_first : 240 245
structure_matrix_principal : 196 207 211
structure_matrix_second : 241 243
structure_object_principal : 119 120 121 212
term                 : 130 131 132 134 135 136 137
true_boolean_types   : 65 66
types_structure      : 6 151
values               : 23 27 73 84 84 85 87 88 109 110 111 145 163 164 170 172 220 221 224 225 242 243 244 245 250 259 264 285 297
values_array_indexed : 217 225 227 229
variable_assignment  : 143
visibility_opt       : 273 282 283 285 286 287
while_statement      : 12

Parsing method: LALR

state 0

    (0) S' -> . inicial_program
    (1) inicial_program -> . PHP_IDENTIFIER program PHP_END_IDENTIFIER

    PHP_IDENTIFIER  shift and go to state 2

    inicial_program                shift and go to state 1

state 1

    (0) S' -> inicial_program .



state 2

    (1) inicial_program -> PHP_IDENTIFIER . program PHP_END_IDENTIFIER
    (2) program -> . sentence program
    (3) program -> . sentence
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    program                        shift and go to state 3
    sentence                       shift and go to state 4
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 3

    (1) inicial_program -> PHP_IDENTIFIER program . PHP_END_IDENTIFIER

    PHP_END_IDENTIFIER shift and go to state 50


state 4

    (2) program -> sentence . program
    (3) program -> sentence .
    (2) program -> . sentence program
    (3) program -> . sentence
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    PHP_END_IDENTIFIER reduce using rule 3 (program -> sentence .)
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    sentence                       shift and go to state 4
    program                        shift and go to state 51
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 5

    (4) sentence -> print_statement . SEMICOLON

    SEMICOLON       shift and go to state 52


state 6

    (5) sentence -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 53


state 7

    (6) sentence -> types_structure .

    ECHO            reduce using rule 6 (sentence -> types_structure .)
    PRINT           reduce using rule 6 (sentence -> types_structure .)
    CLASS           reduce using rule 6 (sentence -> types_structure .)
    INTERFACE       reduce using rule 6 (sentence -> types_structure .)
    FUNCTION        reduce using rule 6 (sentence -> types_structure .)
    VARIABLE        reduce using rule 6 (sentence -> types_structure .)
    INCREASE        reduce using rule 6 (sentence -> types_structure .)
    DECREMENT       reduce using rule 6 (sentence -> types_structure .)
    IF              reduce using rule 6 (sentence -> types_structure .)
    WHILE           reduce using rule 6 (sentence -> types_structure .)
    FOR             reduce using rule 6 (sentence -> types_structure .)
    CONST           reduce using rule 6 (sentence -> types_structure .)
    DEFINE          reduce using rule 6 (sentence -> types_structure .)
    ARRAY           reduce using rule 6 (sentence -> types_structure .)
    LEFT_BRACKET    reduce using rule 6 (sentence -> types_structure .)
    NEW             reduce using rule 6 (sentence -> types_structure .)
    PHP_END_IDENTIFIER reduce using rule 6 (sentence -> types_structure .)
    RETURN          reduce using rule 6 (sentence -> types_structure .)
    BREAK           reduce using rule 6 (sentence -> types_structure .)
    RIGHT_BRACE     reduce using rule 6 (sentence -> types_structure .)


state 8

    (7) sentence -> class_declaration .

    ECHO            reduce using rule 7 (sentence -> class_declaration .)
    PRINT           reduce using rule 7 (sentence -> class_declaration .)
    CLASS           reduce using rule 7 (sentence -> class_declaration .)
    INTERFACE       reduce using rule 7 (sentence -> class_declaration .)
    FUNCTION        reduce using rule 7 (sentence -> class_declaration .)
    VARIABLE        reduce using rule 7 (sentence -> class_declaration .)
    INCREASE        reduce using rule 7 (sentence -> class_declaration .)
    DECREMENT       reduce using rule 7 (sentence -> class_declaration .)
    IF              reduce using rule 7 (sentence -> class_declaration .)
    WHILE           reduce using rule 7 (sentence -> class_declaration .)
    FOR             reduce using rule 7 (sentence -> class_declaration .)
    CONST           reduce using rule 7 (sentence -> class_declaration .)
    DEFINE          reduce using rule 7 (sentence -> class_declaration .)
    ARRAY           reduce using rule 7 (sentence -> class_declaration .)
    LEFT_BRACKET    reduce using rule 7 (sentence -> class_declaration .)
    NEW             reduce using rule 7 (sentence -> class_declaration .)
    PHP_END_IDENTIFIER reduce using rule 7 (sentence -> class_declaration .)
    RETURN          reduce using rule 7 (sentence -> class_declaration .)
    BREAK           reduce using rule 7 (sentence -> class_declaration .)
    RIGHT_BRACE     reduce using rule 7 (sentence -> class_declaration .)


state 9

    (8) sentence -> interface_declaration .

    ECHO            reduce using rule 8 (sentence -> interface_declaration .)
    PRINT           reduce using rule 8 (sentence -> interface_declaration .)
    CLASS           reduce using rule 8 (sentence -> interface_declaration .)
    INTERFACE       reduce using rule 8 (sentence -> interface_declaration .)
    FUNCTION        reduce using rule 8 (sentence -> interface_declaration .)
    VARIABLE        reduce using rule 8 (sentence -> interface_declaration .)
    INCREASE        reduce using rule 8 (sentence -> interface_declaration .)
    DECREMENT       reduce using rule 8 (sentence -> interface_declaration .)
    IF              reduce using rule 8 (sentence -> interface_declaration .)
    WHILE           reduce using rule 8 (sentence -> interface_declaration .)
    FOR             reduce using rule 8 (sentence -> interface_declaration .)
    CONST           reduce using rule 8 (sentence -> interface_declaration .)
    DEFINE          reduce using rule 8 (sentence -> interface_declaration .)
    ARRAY           reduce using rule 8 (sentence -> interface_declaration .)
    LEFT_BRACKET    reduce using rule 8 (sentence -> interface_declaration .)
    NEW             reduce using rule 8 (sentence -> interface_declaration .)
    PHP_END_IDENTIFIER reduce using rule 8 (sentence -> interface_declaration .)
    RETURN          reduce using rule 8 (sentence -> interface_declaration .)
    BREAK           reduce using rule 8 (sentence -> interface_declaration .)
    RIGHT_BRACE     reduce using rule 8 (sentence -> interface_declaration .)


state 10

    (9) sentence -> control_structures .

    ECHO            reduce using rule 9 (sentence -> control_structures .)
    PRINT           reduce using rule 9 (sentence -> control_structures .)
    CLASS           reduce using rule 9 (sentence -> control_structures .)
    INTERFACE       reduce using rule 9 (sentence -> control_structures .)
    FUNCTION        reduce using rule 9 (sentence -> control_structures .)
    VARIABLE        reduce using rule 9 (sentence -> control_structures .)
    INCREASE        reduce using rule 9 (sentence -> control_structures .)
    DECREMENT       reduce using rule 9 (sentence -> control_structures .)
    IF              reduce using rule 9 (sentence -> control_structures .)
    WHILE           reduce using rule 9 (sentence -> control_structures .)
    FOR             reduce using rule 9 (sentence -> control_structures .)
    CONST           reduce using rule 9 (sentence -> control_structures .)
    DEFINE          reduce using rule 9 (sentence -> control_structures .)
    ARRAY           reduce using rule 9 (sentence -> control_structures .)
    LEFT_BRACKET    reduce using rule 9 (sentence -> control_structures .)
    NEW             reduce using rule 9 (sentence -> control_structures .)
    PHP_END_IDENTIFIER reduce using rule 9 (sentence -> control_structures .)
    RETURN          reduce using rule 9 (sentence -> control_structures .)
    BREAK           reduce using rule 9 (sentence -> control_structures .)
    RIGHT_BRACE     reduce using rule 9 (sentence -> control_structures .)


state 11

    (10) sentence -> function_declaration .

    ECHO            reduce using rule 10 (sentence -> function_declaration .)
    PRINT           reduce using rule 10 (sentence -> function_declaration .)
    CLASS           reduce using rule 10 (sentence -> function_declaration .)
    INTERFACE       reduce using rule 10 (sentence -> function_declaration .)
    FUNCTION        reduce using rule 10 (sentence -> function_declaration .)
    VARIABLE        reduce using rule 10 (sentence -> function_declaration .)
    INCREASE        reduce using rule 10 (sentence -> function_declaration .)
    DECREMENT       reduce using rule 10 (sentence -> function_declaration .)
    IF              reduce using rule 10 (sentence -> function_declaration .)
    WHILE           reduce using rule 10 (sentence -> function_declaration .)
    FOR             reduce using rule 10 (sentence -> function_declaration .)
    CONST           reduce using rule 10 (sentence -> function_declaration .)
    DEFINE          reduce using rule 10 (sentence -> function_declaration .)
    ARRAY           reduce using rule 10 (sentence -> function_declaration .)
    LEFT_BRACKET    reduce using rule 10 (sentence -> function_declaration .)
    NEW             reduce using rule 10 (sentence -> function_declaration .)
    PHP_END_IDENTIFIER reduce using rule 10 (sentence -> function_declaration .)
    RETURN          reduce using rule 10 (sentence -> function_declaration .)
    BREAK           reduce using rule 10 (sentence -> function_declaration .)
    RIGHT_BRACE     reduce using rule 10 (sentence -> function_declaration .)


state 12

    (105) print_statement -> ECHO . LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> ECHO . printable_values
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    LEFT_PAREN      shift and go to state 54
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    printable_values               shift and go to state 55
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 13

    (106) print_statement -> PRINT . LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> PRINT . printable_values
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    LEFT_PAREN      shift and go to state 81
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    printable_values               shift and go to state 82
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 14

    (143) assignment -> variable_assignment .

    SEMICOLON       reduce using rule 143 (assignment -> variable_assignment .)


state 15

    (144) assignment -> constant_assignment .

    SEMICOLON       reduce using rule 144 (assignment -> constant_assignment .)


state 16

    (210) types_structure -> structure_array_principal .

    ECHO            reduce using rule 210 (types_structure -> structure_array_principal .)
    PRINT           reduce using rule 210 (types_structure -> structure_array_principal .)
    CLASS           reduce using rule 210 (types_structure -> structure_array_principal .)
    INTERFACE       reduce using rule 210 (types_structure -> structure_array_principal .)
    FUNCTION        reduce using rule 210 (types_structure -> structure_array_principal .)
    VARIABLE        reduce using rule 210 (types_structure -> structure_array_principal .)
    INCREASE        reduce using rule 210 (types_structure -> structure_array_principal .)
    DECREMENT       reduce using rule 210 (types_structure -> structure_array_principal .)
    IF              reduce using rule 210 (types_structure -> structure_array_principal .)
    WHILE           reduce using rule 210 (types_structure -> structure_array_principal .)
    FOR             reduce using rule 210 (types_structure -> structure_array_principal .)
    CONST           reduce using rule 210 (types_structure -> structure_array_principal .)
    DEFINE          reduce using rule 210 (types_structure -> structure_array_principal .)
    ARRAY           reduce using rule 210 (types_structure -> structure_array_principal .)
    LEFT_BRACKET    reduce using rule 210 (types_structure -> structure_array_principal .)
    NEW             reduce using rule 210 (types_structure -> structure_array_principal .)
    PHP_END_IDENTIFIER reduce using rule 210 (types_structure -> structure_array_principal .)
    SEMICOLON       reduce using rule 210 (types_structure -> structure_array_principal .)
    RETURN          reduce using rule 210 (types_structure -> structure_array_principal .)
    BREAK           reduce using rule 210 (types_structure -> structure_array_principal .)
    RIGHT_BRACE     reduce using rule 210 (types_structure -> structure_array_principal .)


state 17

    (211) types_structure -> structure_matrix_principal .

    ECHO            reduce using rule 211 (types_structure -> structure_matrix_principal .)
    PRINT           reduce using rule 211 (types_structure -> structure_matrix_principal .)
    CLASS           reduce using rule 211 (types_structure -> structure_matrix_principal .)
    INTERFACE       reduce using rule 211 (types_structure -> structure_matrix_principal .)
    FUNCTION        reduce using rule 211 (types_structure -> structure_matrix_principal .)
    VARIABLE        reduce using rule 211 (types_structure -> structure_matrix_principal .)
    INCREASE        reduce using rule 211 (types_structure -> structure_matrix_principal .)
    DECREMENT       reduce using rule 211 (types_structure -> structure_matrix_principal .)
    IF              reduce using rule 211 (types_structure -> structure_matrix_principal .)
    WHILE           reduce using rule 211 (types_structure -> structure_matrix_principal .)
    FOR             reduce using rule 211 (types_structure -> structure_matrix_principal .)
    CONST           reduce using rule 211 (types_structure -> structure_matrix_principal .)
    DEFINE          reduce using rule 211 (types_structure -> structure_matrix_principal .)
    ARRAY           reduce using rule 211 (types_structure -> structure_matrix_principal .)
    LEFT_BRACKET    reduce using rule 211 (types_structure -> structure_matrix_principal .)
    NEW             reduce using rule 211 (types_structure -> structure_matrix_principal .)
    PHP_END_IDENTIFIER reduce using rule 211 (types_structure -> structure_matrix_principal .)
    SEMICOLON       reduce using rule 211 (types_structure -> structure_matrix_principal .)
    RETURN          reduce using rule 211 (types_structure -> structure_matrix_principal .)
    BREAK           reduce using rule 211 (types_structure -> structure_matrix_principal .)
    RIGHT_BRACE     reduce using rule 211 (types_structure -> structure_matrix_principal .)


state 18

    (212) types_structure -> structure_object_principal .

    ECHO            reduce using rule 212 (types_structure -> structure_object_principal .)
    PRINT           reduce using rule 212 (types_structure -> structure_object_principal .)
    CLASS           reduce using rule 212 (types_structure -> structure_object_principal .)
    INTERFACE       reduce using rule 212 (types_structure -> structure_object_principal .)
    FUNCTION        reduce using rule 212 (types_structure -> structure_object_principal .)
    VARIABLE        reduce using rule 212 (types_structure -> structure_object_principal .)
    INCREASE        reduce using rule 212 (types_structure -> structure_object_principal .)
    DECREMENT       reduce using rule 212 (types_structure -> structure_object_principal .)
    IF              reduce using rule 212 (types_structure -> structure_object_principal .)
    WHILE           reduce using rule 212 (types_structure -> structure_object_principal .)
    FOR             reduce using rule 212 (types_structure -> structure_object_principal .)
    CONST           reduce using rule 212 (types_structure -> structure_object_principal .)
    DEFINE          reduce using rule 212 (types_structure -> structure_object_principal .)
    ARRAY           reduce using rule 212 (types_structure -> structure_object_principal .)
    LEFT_BRACKET    reduce using rule 212 (types_structure -> structure_object_principal .)
    NEW             reduce using rule 212 (types_structure -> structure_object_principal .)
    PHP_END_IDENTIFIER reduce using rule 212 (types_structure -> structure_object_principal .)
    SEMICOLON       reduce using rule 212 (types_structure -> structure_object_principal .)
    RETURN          reduce using rule 212 (types_structure -> structure_object_principal .)
    BREAK           reduce using rule 212 (types_structure -> structure_object_principal .)
    RIGHT_BRACE     reduce using rule 212 (types_structure -> structure_object_principal .)


state 19

    (269) class_declaration -> CLASS . IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE

    IDENTIFIER      shift and go to state 83


state 20

    (270) interface_declaration -> INTERFACE . IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE

    IDENTIFIER      shift and go to state 84


state 21

    (11) control_structures -> if_statement .

    ECHO            reduce using rule 11 (control_structures -> if_statement .)
    PRINT           reduce using rule 11 (control_structures -> if_statement .)
    CLASS           reduce using rule 11 (control_structures -> if_statement .)
    INTERFACE       reduce using rule 11 (control_structures -> if_statement .)
    FUNCTION        reduce using rule 11 (control_structures -> if_statement .)
    VARIABLE        reduce using rule 11 (control_structures -> if_statement .)
    INCREASE        reduce using rule 11 (control_structures -> if_statement .)
    DECREMENT       reduce using rule 11 (control_structures -> if_statement .)
    IF              reduce using rule 11 (control_structures -> if_statement .)
    WHILE           reduce using rule 11 (control_structures -> if_statement .)
    FOR             reduce using rule 11 (control_structures -> if_statement .)
    CONST           reduce using rule 11 (control_structures -> if_statement .)
    DEFINE          reduce using rule 11 (control_structures -> if_statement .)
    ARRAY           reduce using rule 11 (control_structures -> if_statement .)
    LEFT_BRACKET    reduce using rule 11 (control_structures -> if_statement .)
    NEW             reduce using rule 11 (control_structures -> if_statement .)
    PHP_END_IDENTIFIER reduce using rule 11 (control_structures -> if_statement .)
    RETURN          reduce using rule 11 (control_structures -> if_statement .)
    BREAK           reduce using rule 11 (control_structures -> if_statement .)
    RIGHT_BRACE     reduce using rule 11 (control_structures -> if_statement .)


state 22

    (12) control_structures -> while_statement .

    ECHO            reduce using rule 12 (control_structures -> while_statement .)
    PRINT           reduce using rule 12 (control_structures -> while_statement .)
    CLASS           reduce using rule 12 (control_structures -> while_statement .)
    INTERFACE       reduce using rule 12 (control_structures -> while_statement .)
    FUNCTION        reduce using rule 12 (control_structures -> while_statement .)
    VARIABLE        reduce using rule 12 (control_structures -> while_statement .)
    INCREASE        reduce using rule 12 (control_structures -> while_statement .)
    DECREMENT       reduce using rule 12 (control_structures -> while_statement .)
    IF              reduce using rule 12 (control_structures -> while_statement .)
    WHILE           reduce using rule 12 (control_structures -> while_statement .)
    FOR             reduce using rule 12 (control_structures -> while_statement .)
    CONST           reduce using rule 12 (control_structures -> while_statement .)
    DEFINE          reduce using rule 12 (control_structures -> while_statement .)
    ARRAY           reduce using rule 12 (control_structures -> while_statement .)
    LEFT_BRACKET    reduce using rule 12 (control_structures -> while_statement .)
    NEW             reduce using rule 12 (control_structures -> while_statement .)
    PHP_END_IDENTIFIER reduce using rule 12 (control_structures -> while_statement .)
    RETURN          reduce using rule 12 (control_structures -> while_statement .)
    BREAK           reduce using rule 12 (control_structures -> while_statement .)
    RIGHT_BRACE     reduce using rule 12 (control_structures -> while_statement .)


state 23

    (13) control_structures -> for_statement .

    ECHO            reduce using rule 13 (control_structures -> for_statement .)
    PRINT           reduce using rule 13 (control_structures -> for_statement .)
    CLASS           reduce using rule 13 (control_structures -> for_statement .)
    INTERFACE       reduce using rule 13 (control_structures -> for_statement .)
    FUNCTION        reduce using rule 13 (control_structures -> for_statement .)
    VARIABLE        reduce using rule 13 (control_structures -> for_statement .)
    INCREASE        reduce using rule 13 (control_structures -> for_statement .)
    DECREMENT       reduce using rule 13 (control_structures -> for_statement .)
    IF              reduce using rule 13 (control_structures -> for_statement .)
    WHILE           reduce using rule 13 (control_structures -> for_statement .)
    FOR             reduce using rule 13 (control_structures -> for_statement .)
    CONST           reduce using rule 13 (control_structures -> for_statement .)
    DEFINE          reduce using rule 13 (control_structures -> for_statement .)
    ARRAY           reduce using rule 13 (control_structures -> for_statement .)
    LEFT_BRACKET    reduce using rule 13 (control_structures -> for_statement .)
    NEW             reduce using rule 13 (control_structures -> for_statement .)
    PHP_END_IDENTIFIER reduce using rule 13 (control_structures -> for_statement .)
    RETURN          reduce using rule 13 (control_structures -> for_statement .)
    BREAK           reduce using rule 13 (control_structures -> for_statement .)
    RIGHT_BRACE     reduce using rule 13 (control_structures -> for_statement .)


state 24

    (174) function_declaration -> FUNCTION . IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock

    IDENTIFIER      shift and go to state 85


state 25

    (145) variable_assignment -> VARIABLE . assignment_operator values
    (146) variable_assignment -> VARIABLE . assignment_operator IDENTIFIER
    (147) variable_assignment -> VARIABLE . assignment_operator expression
    (148) variable_assignment -> VARIABLE . assignment_operator function_invocation
    (149) variable_assignment -> VARIABLE . assignment_operator string_special_function
    (150) variable_assignment -> VARIABLE . assignment_operator array_special_function_structure
    (151) variable_assignment -> VARIABLE . assignment_operator types_structure
    (152) variable_assignment -> VARIABLE . assignment_operator input
    (153) variable_assignment -> VARIABLE . assignment_operator special_function
    (154) variable_assignment -> VARIABLE . assignment_operator conditional
    (155) variable_assignment -> VARIABLE . INCREASE
    (156) variable_assignment -> VARIABLE . DECREMENT
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (257) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (258) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (259) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (159) assignment_operator -> . EQUALS
    (160) assignment_operator -> . PLUS_EQUALS

    INCREASE        shift and go to state 87
    DECREMENT       shift and go to state 88
    LEFT_BRACKET    shift and go to state 89
    MINUS           shift and go to state 91
    EQUALS          shift and go to state 90
    PLUS_EQUALS     shift and go to state 92

    assignment_operator            shift and go to state 86

state 26

    (157) variable_assignment -> INCREASE . VARIABLE

    VARIABLE        shift and go to state 93


state 27

    (158) variable_assignment -> DECREMENT . VARIABLE

    VARIABLE        shift and go to state 94


state 28

    (161) constant_assignment -> const_syntax .

    SEMICOLON       reduce using rule 161 (constant_assignment -> const_syntax .)


state 29

    (162) constant_assignment -> define_syntax .

    SEMICOLON       reduce using rule 162 (constant_assignment -> define_syntax .)


state 30

    (213) structure_array_principal -> indexed_array .

    ECHO            reduce using rule 213 (structure_array_principal -> indexed_array .)
    PRINT           reduce using rule 213 (structure_array_principal -> indexed_array .)
    CLASS           reduce using rule 213 (structure_array_principal -> indexed_array .)
    INTERFACE       reduce using rule 213 (structure_array_principal -> indexed_array .)
    FUNCTION        reduce using rule 213 (structure_array_principal -> indexed_array .)
    VARIABLE        reduce using rule 213 (structure_array_principal -> indexed_array .)
    INCREASE        reduce using rule 213 (structure_array_principal -> indexed_array .)
    DECREMENT       reduce using rule 213 (structure_array_principal -> indexed_array .)
    IF              reduce using rule 213 (structure_array_principal -> indexed_array .)
    WHILE           reduce using rule 213 (structure_array_principal -> indexed_array .)
    FOR             reduce using rule 213 (structure_array_principal -> indexed_array .)
    CONST           reduce using rule 213 (structure_array_principal -> indexed_array .)
    DEFINE          reduce using rule 213 (structure_array_principal -> indexed_array .)
    ARRAY           reduce using rule 213 (structure_array_principal -> indexed_array .)
    LEFT_BRACKET    reduce using rule 213 (structure_array_principal -> indexed_array .)
    NEW             reduce using rule 213 (structure_array_principal -> indexed_array .)
    PHP_END_IDENTIFIER reduce using rule 213 (structure_array_principal -> indexed_array .)
    SEMICOLON       reduce using rule 213 (structure_array_principal -> indexed_array .)
    COMMA           reduce using rule 213 (structure_array_principal -> indexed_array .)
    RIGHT_PAREN     reduce using rule 213 (structure_array_principal -> indexed_array .)
    RETURN          reduce using rule 213 (structure_array_principal -> indexed_array .)
    BREAK           reduce using rule 213 (structure_array_principal -> indexed_array .)
    RIGHT_BRACE     reduce using rule 213 (structure_array_principal -> indexed_array .)


state 31

    (214) structure_array_principal -> associative_array .

    ECHO            reduce using rule 214 (structure_array_principal -> associative_array .)
    PRINT           reduce using rule 214 (structure_array_principal -> associative_array .)
    CLASS           reduce using rule 214 (structure_array_principal -> associative_array .)
    INTERFACE       reduce using rule 214 (structure_array_principal -> associative_array .)
    FUNCTION        reduce using rule 214 (structure_array_principal -> associative_array .)
    VARIABLE        reduce using rule 214 (structure_array_principal -> associative_array .)
    INCREASE        reduce using rule 214 (structure_array_principal -> associative_array .)
    DECREMENT       reduce using rule 214 (structure_array_principal -> associative_array .)
    IF              reduce using rule 214 (structure_array_principal -> associative_array .)
    WHILE           reduce using rule 214 (structure_array_principal -> associative_array .)
    FOR             reduce using rule 214 (structure_array_principal -> associative_array .)
    CONST           reduce using rule 214 (structure_array_principal -> associative_array .)
    DEFINE          reduce using rule 214 (structure_array_principal -> associative_array .)
    ARRAY           reduce using rule 214 (structure_array_principal -> associative_array .)
    LEFT_BRACKET    reduce using rule 214 (structure_array_principal -> associative_array .)
    NEW             reduce using rule 214 (structure_array_principal -> associative_array .)
    PHP_END_IDENTIFIER reduce using rule 214 (structure_array_principal -> associative_array .)
    SEMICOLON       reduce using rule 214 (structure_array_principal -> associative_array .)
    COMMA           reduce using rule 214 (structure_array_principal -> associative_array .)
    RIGHT_PAREN     reduce using rule 214 (structure_array_principal -> associative_array .)
    RETURN          reduce using rule 214 (structure_array_principal -> associative_array .)
    BREAK           reduce using rule 214 (structure_array_principal -> associative_array .)
    RIGHT_BRACE     reduce using rule 214 (structure_array_principal -> associative_array .)


state 32

    (215) structure_array_principal -> access_array_stucture .

    ECHO            reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    PRINT           reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    CLASS           reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    INTERFACE       reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    FUNCTION        reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    VARIABLE        reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    INCREASE        reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    DECREMENT       reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    IF              reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    WHILE           reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    FOR             reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    CONST           reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    DEFINE          reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    ARRAY           reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    LEFT_BRACKET    reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    NEW             reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    PHP_END_IDENTIFIER reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    SEMICOLON       reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    COMMA           reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    RIGHT_PAREN     reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    RETURN          reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    BREAK           reduce using rule 215 (structure_array_principal -> access_array_stucture .)
    RIGHT_BRACE     reduce using rule 215 (structure_array_principal -> access_array_stucture .)


state 33

    (216) structure_array_principal -> access_array_element .
    (230) access_array_stucture -> access_array_element .
    (262) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (263) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (264) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element

  ! reduce/reduce conflict for ECHO resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for PRINT resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for CLASS resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for INCREASE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for IF resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for WHILE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for FOR resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for CONST resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for DEFINE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for ARRAY resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for NEW resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for PHP_END_IDENTIFIER resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RETURN resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for BREAK resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 216 (structure_array_principal -> access_array_element .)
    ECHO            reduce using rule 216 (structure_array_principal -> access_array_element .)
    PRINT           reduce using rule 216 (structure_array_principal -> access_array_element .)
    CLASS           reduce using rule 216 (structure_array_principal -> access_array_element .)
    INTERFACE       reduce using rule 216 (structure_array_principal -> access_array_element .)
    FUNCTION        reduce using rule 216 (structure_array_principal -> access_array_element .)
    VARIABLE        reduce using rule 216 (structure_array_principal -> access_array_element .)
    INCREASE        reduce using rule 216 (structure_array_principal -> access_array_element .)
    DECREMENT       reduce using rule 216 (structure_array_principal -> access_array_element .)
    IF              reduce using rule 216 (structure_array_principal -> access_array_element .)
    WHILE           reduce using rule 216 (structure_array_principal -> access_array_element .)
    FOR             reduce using rule 216 (structure_array_principal -> access_array_element .)
    CONST           reduce using rule 216 (structure_array_principal -> access_array_element .)
    DEFINE          reduce using rule 216 (structure_array_principal -> access_array_element .)
    ARRAY           reduce using rule 216 (structure_array_principal -> access_array_element .)
    LEFT_BRACKET    reduce using rule 216 (structure_array_principal -> access_array_element .)
    NEW             reduce using rule 216 (structure_array_principal -> access_array_element .)
    PHP_END_IDENTIFIER reduce using rule 216 (structure_array_principal -> access_array_element .)
    RETURN          reduce using rule 216 (structure_array_principal -> access_array_element .)
    BREAK           reduce using rule 216 (structure_array_principal -> access_array_element .)
    RIGHT_BRACE     reduce using rule 216 (structure_array_principal -> access_array_element .)
    MINUS           shift and go to state 95

  ! ECHO            [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! PRINT           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! CLASS           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! INTERFACE       [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! FUNCTION        [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! VARIABLE        [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! INCREASE        [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! DECREMENT       [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! IF              [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! WHILE           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! FOR             [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! CONST           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! DEFINE          [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! ARRAY           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! LEFT_BRACKET    [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! NEW             [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! PHP_END_IDENTIFIER [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! RETURN          [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! BREAK           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! RIGHT_BRACE     [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]


state 34

    (235) structure_matrix_principal -> matrix_firstform .

    ECHO            reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    PRINT           reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    CLASS           reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    INTERFACE       reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    FUNCTION        reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    VARIABLE        reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    INCREASE        reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    DECREMENT       reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    IF              reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    WHILE           reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    FOR             reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    CONST           reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    DEFINE          reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    ARRAY           reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    LEFT_BRACKET    reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    NEW             reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    PHP_END_IDENTIFIER reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    SEMICOLON       reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    COMMA           reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    RIGHT_PAREN     reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    RETURN          reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    BREAK           reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)
    RIGHT_BRACE     reduce using rule 235 (structure_matrix_principal -> matrix_firstform .)


state 35

    (236) structure_matrix_principal -> matrix_secondform .

    ECHO            reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    PRINT           reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    CLASS           reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    INTERFACE       reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    FUNCTION        reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    VARIABLE        reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    INCREASE        reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    DECREMENT       reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    IF              reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    WHILE           reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    FOR             reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    CONST           reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    DEFINE          reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    ARRAY           reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    LEFT_BRACKET    reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    NEW             reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    PHP_END_IDENTIFIER reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    SEMICOLON       reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    COMMA           reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    RIGHT_PAREN     reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    RETURN          reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    BREAK           reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)
    RIGHT_BRACE     reduce using rule 236 (structure_matrix_principal -> matrix_secondform .)


state 36

    (237) structure_matrix_principal -> access_element_matrix . SEMICOLON
    (250) modify_element_matrix -> access_element_matrix . EQUALS values
    (251) modify_element_matrix -> access_element_matrix . EQUALS VARIABLE

    SEMICOLON       shift and go to state 96
    EQUALS          shift and go to state 97


state 37

    (238) structure_matrix_principal -> modify_element_matrix . SEMICOLON

    SEMICOLON       shift and go to state 98


state 38

    (239) structure_matrix_principal -> add_element_matrix .

    ECHO            reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    PRINT           reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    CLASS           reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    INTERFACE       reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    FUNCTION        reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    VARIABLE        reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    INCREASE        reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    DECREMENT       reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    IF              reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    WHILE           reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    FOR             reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    CONST           reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    DEFINE          reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    ARRAY           reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    LEFT_BRACKET    reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    NEW             reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    PHP_END_IDENTIFIER reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    SEMICOLON       reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    COMMA           reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    RIGHT_PAREN     reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    RETURN          reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    BREAK           reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)
    RIGHT_BRACE     reduce using rule 239 (structure_matrix_principal -> add_element_matrix .)


state 39

    (253) structure_object_principal -> object_creation .

    ECHO            reduce using rule 253 (structure_object_principal -> object_creation .)
    PRINT           reduce using rule 253 (structure_object_principal -> object_creation .)
    CLASS           reduce using rule 253 (structure_object_principal -> object_creation .)
    INTERFACE       reduce using rule 253 (structure_object_principal -> object_creation .)
    FUNCTION        reduce using rule 253 (structure_object_principal -> object_creation .)
    VARIABLE        reduce using rule 253 (structure_object_principal -> object_creation .)
    INCREASE        reduce using rule 253 (structure_object_principal -> object_creation .)
    DECREMENT       reduce using rule 253 (structure_object_principal -> object_creation .)
    IF              reduce using rule 253 (structure_object_principal -> object_creation .)
    WHILE           reduce using rule 253 (structure_object_principal -> object_creation .)
    FOR             reduce using rule 253 (structure_object_principal -> object_creation .)
    CONST           reduce using rule 253 (structure_object_principal -> object_creation .)
    DEFINE          reduce using rule 253 (structure_object_principal -> object_creation .)
    ARRAY           reduce using rule 253 (structure_object_principal -> object_creation .)
    LEFT_BRACKET    reduce using rule 253 (structure_object_principal -> object_creation .)
    NEW             reduce using rule 253 (structure_object_principal -> object_creation .)
    PHP_END_IDENTIFIER reduce using rule 253 (structure_object_principal -> object_creation .)
    COMMA           reduce using rule 253 (structure_object_principal -> object_creation .)
    STRING_CONCATENATION reduce using rule 253 (structure_object_principal -> object_creation .)
    SEMICOLON       reduce using rule 253 (structure_object_principal -> object_creation .)
    RIGHT_PAREN     reduce using rule 253 (structure_object_principal -> object_creation .)
    RETURN          reduce using rule 253 (structure_object_principal -> object_creation .)
    BREAK           reduce using rule 253 (structure_object_principal -> object_creation .)
    RIGHT_BRACE     reduce using rule 253 (structure_object_principal -> object_creation .)


state 40

    (254) structure_object_principal -> access_method_object .

    ECHO            reduce using rule 254 (structure_object_principal -> access_method_object .)
    PRINT           reduce using rule 254 (structure_object_principal -> access_method_object .)
    CLASS           reduce using rule 254 (structure_object_principal -> access_method_object .)
    INTERFACE       reduce using rule 254 (structure_object_principal -> access_method_object .)
    FUNCTION        reduce using rule 254 (structure_object_principal -> access_method_object .)
    VARIABLE        reduce using rule 254 (structure_object_principal -> access_method_object .)
    INCREASE        reduce using rule 254 (structure_object_principal -> access_method_object .)
    DECREMENT       reduce using rule 254 (structure_object_principal -> access_method_object .)
    IF              reduce using rule 254 (structure_object_principal -> access_method_object .)
    WHILE           reduce using rule 254 (structure_object_principal -> access_method_object .)
    FOR             reduce using rule 254 (structure_object_principal -> access_method_object .)
    CONST           reduce using rule 254 (structure_object_principal -> access_method_object .)
    DEFINE          reduce using rule 254 (structure_object_principal -> access_method_object .)
    ARRAY           reduce using rule 254 (structure_object_principal -> access_method_object .)
    LEFT_BRACKET    reduce using rule 254 (structure_object_principal -> access_method_object .)
    NEW             reduce using rule 254 (structure_object_principal -> access_method_object .)
    PHP_END_IDENTIFIER reduce using rule 254 (structure_object_principal -> access_method_object .)
    COMMA           reduce using rule 254 (structure_object_principal -> access_method_object .)
    STRING_CONCATENATION reduce using rule 254 (structure_object_principal -> access_method_object .)
    SEMICOLON       reduce using rule 254 (structure_object_principal -> access_method_object .)
    RIGHT_PAREN     reduce using rule 254 (structure_object_principal -> access_method_object .)
    RETURN          reduce using rule 254 (structure_object_principal -> access_method_object .)
    BREAK           reduce using rule 254 (structure_object_principal -> access_method_object .)
    RIGHT_BRACE     reduce using rule 254 (structure_object_principal -> access_method_object .)


state 41

    (15) if_statement -> IF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> IF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement

    LEFT_PAREN      shift and go to state 99


state 42

    (14) while_statement -> WHILE . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_PAREN      shift and go to state 100


state 43

    (31) for_statement -> FOR . LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_PAREN      shift and go to state 101


state 44

    (163) const_syntax -> CONST . IDENTIFIER EQUALS values

    IDENTIFIER      shift and go to state 102


state 45

    (164) define_syntax -> DEFINE . LEFT_PAREN STRING COMMA values RIGHT_PAREN

    LEFT_PAREN      shift and go to state 103


state 46

    (217) indexed_array -> ARRAY . LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> ARRAY . LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> ARRAY . LEFT_BRACKET structure_array RIGHT_BRACKET
    (240) matrix_firstform -> ARRAY . LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON

    LEFT_PAREN      shift and go to state 104
    LEFT_BRACKET    shift and go to state 105


state 47

    (241) matrix_secondform -> LEFT_BRACKET . structure_matrix_second RIGHT_BRACKET SEMICOLON
    (242) structure_matrix_second -> . LEFT_BRACKET values RIGHT_BRACKET
    (243) structure_matrix_second -> . LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second

    LEFT_BRACKET    shift and go to state 106

    structure_matrix_second        shift and go to state 107

state 48

    (231) access_array_stucture -> statement_access_array_element_error .

    ECHO            reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    PRINT           reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    CLASS           reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    INTERFACE       reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    FUNCTION        reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    VARIABLE        reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    INCREASE        reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    DECREMENT       reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    IF              reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    WHILE           reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    FOR             reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    CONST           reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    DEFINE          reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    ARRAY           reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    LEFT_BRACKET    reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    NEW             reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    PHP_END_IDENTIFIER reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    SEMICOLON       reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    COMMA           reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    RIGHT_PAREN     reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    RETURN          reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    BREAK           reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)
    RIGHT_BRACE     reduce using rule 231 (access_array_stucture -> statement_access_array_element_error .)


state 49

    (255) object_creation -> NEW . IDENTIFIER
    (256) object_creation -> NEW . IDENTIFIER LEFT_PAREN params RIGHT_PAREN

    IDENTIFIER      shift and go to state 108


state 50

    (1) inicial_program -> PHP_IDENTIFIER program PHP_END_IDENTIFIER .

    $end            reduce using rule 1 (inicial_program -> PHP_IDENTIFIER program PHP_END_IDENTIFIER .)


state 51

    (2) program -> sentence program .

    PHP_END_IDENTIFIER reduce using rule 2 (program -> sentence program .)


state 52

    (4) sentence -> print_statement SEMICOLON .

    ECHO            reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    PRINT           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    CLASS           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    INTERFACE       reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    FUNCTION        reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    VARIABLE        reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    INCREASE        reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    DECREMENT       reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    IF              reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    WHILE           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    FOR             reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    CONST           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    DEFINE          reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    ARRAY           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    LEFT_BRACKET    reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    NEW             reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    RETURN          reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    BREAK           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    RIGHT_BRACE     reduce using rule 4 (sentence -> print_statement SEMICOLON .)


state 53

    (5) sentence -> assignment SEMICOLON .

    ECHO            reduce using rule 5 (sentence -> assignment SEMICOLON .)
    PRINT           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    CLASS           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    INTERFACE       reduce using rule 5 (sentence -> assignment SEMICOLON .)
    FUNCTION        reduce using rule 5 (sentence -> assignment SEMICOLON .)
    VARIABLE        reduce using rule 5 (sentence -> assignment SEMICOLON .)
    INCREASE        reduce using rule 5 (sentence -> assignment SEMICOLON .)
    DECREMENT       reduce using rule 5 (sentence -> assignment SEMICOLON .)
    IF              reduce using rule 5 (sentence -> assignment SEMICOLON .)
    WHILE           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    FOR             reduce using rule 5 (sentence -> assignment SEMICOLON .)
    CONST           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    DEFINE          reduce using rule 5 (sentence -> assignment SEMICOLON .)
    ARRAY           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    LEFT_BRACKET    reduce using rule 5 (sentence -> assignment SEMICOLON .)
    NEW             reduce using rule 5 (sentence -> assignment SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 5 (sentence -> assignment SEMICOLON .)
    RETURN          reduce using rule 5 (sentence -> assignment SEMICOLON .)
    BREAK           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    RIGHT_BRACE     reduce using rule 5 (sentence -> assignment SEMICOLON .)


state 54

    (105) print_statement -> ECHO LEFT_PAREN . printable_values RIGHT_PAREN
    (62) boolean_expression -> LEFT_PAREN . conditional RIGHT_PAREN
    (141) factor -> LEFT_PAREN . expression RIGHT_PAREN
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL

    VARIABLE        shift and go to state 113
    INTEGER         shift and go to state 115
    STRING          shift and go to state 114
    FLOAT           shift and go to state 116
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    printable_values               shift and go to state 110
    conditional                    shift and go to state 111
    expression                     shift and go to state 112
    values                         shift and go to state 56
    structure_object_principal     shift and go to state 60
    boolean_expression             shift and go to state 64
    term                           shift and go to state 77
    boolean                        shift and go to state 63
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    factor                         shift and go to state 80
    access_array_element           shift and go to state 71
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76

state 55

    (107) print_statement -> ECHO printable_values .

    SEMICOLON       reduce using rule 107 (print_statement -> ECHO printable_values .)


state 56

    (109) printable_values -> values .
    (110) printable_values -> values . printable_dividers printable_values
    (111) printable_values -> values . COMMA printable_values
    (84) comparation -> values . comparator_operator values
    (85) comparation -> values . comparator_operator expression
    (122) printable_dividers -> . COMMA
    (123) printable_dividers -> . STRING_CONCATENATION
    (95) comparator_operator -> . EQUALS_EQUALS
    (96) comparator_operator -> . IDENTICAL
    (97) comparator_operator -> . NOT_EQUALS
    (98) comparator_operator -> . NOT_IDENTICAL
    (99) comparator_operator -> . SMALL_THAN
    (100) comparator_operator -> . GREATER_THAN
    (101) comparator_operator -> . SMALL_EQUALS_TO
    (102) comparator_operator -> . GREATER_EQUALS_TO
    (103) comparator_operator -> . SPACECRAFT
    (104) comparator_operator -> . NULL_FUSION

    SEMICOLON       reduce using rule 109 (printable_values -> values .)
    RIGHT_PAREN     reduce using rule 109 (printable_values -> values .)
    COMMA           shift and go to state 118
    STRING_CONCATENATION shift and go to state 120
    EQUALS_EQUALS   shift and go to state 121
    IDENTICAL       shift and go to state 122
    NOT_EQUALS      shift and go to state 123
    NOT_IDENTICAL   shift and go to state 124
    SMALL_THAN      shift and go to state 125
    GREATER_THAN    shift and go to state 126
    SMALL_EQUALS_TO shift and go to state 127
    GREATER_EQUALS_TO shift and go to state 128
    SPACECRAFT      shift and go to state 129
    NULL_FUSION     shift and go to state 130

    printable_dividers             shift and go to state 117
    comparator_operator            shift and go to state 119

state 57

    (112) printable_values -> VARIABLE .
    (113) printable_values -> VARIABLE . printable_dividers printable_values
    (114) printable_values -> VARIABLE . COMMA printable_values
    (115) printable_values -> VARIABLE . STRING_CONCATENATION STRING
    (60) boolean_expression -> VARIABLE .
    (257) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (258) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (259) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (87) comparation -> VARIABLE . EQUALS_EQUALS values
    (90) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (91) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (94) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (71) true_boolean_types -> VARIABLE .
    (77) false_boolean_types -> VARIABLE .
    (140) factor -> VARIABLE .
    (122) printable_dividers -> . COMMA
    (123) printable_dividers -> . STRING_CONCATENATION

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for STRING_CONCATENATION resolved as shift
  ! reduce/reduce conflict for SEMICOLON resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
    COMMA           shift and go to state 132
    STRING_CONCATENATION shift and go to state 133
    LOGIC_AND       reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 60 (boolean_expression -> VARIABLE .)
    SEMICOLON       reduce using rule 60 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 60 (boolean_expression -> VARIABLE .)
    MINUS           shift and go to state 91
    EQUALS_EQUALS   shift and go to state 134
    LEFT_BRACKET    shift and go to state 135
    MULTIPLY        reduce using rule 140 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 140 (factor -> VARIABLE .)
    MODULE          reduce using rule 140 (factor -> VARIABLE .)
    POW             reduce using rule 140 (factor -> VARIABLE .)
    PLUS            reduce using rule 140 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 140 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 140 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 140 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 140 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 140 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 140 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 140 (factor -> VARIABLE .)

  ! SEMICOLON       [ reduce using rule 112 (printable_values -> VARIABLE .) ]
  ! RIGHT_PAREN     [ reduce using rule 112 (printable_values -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 60 (boolean_expression -> VARIABLE .) ]
  ! STRING_CONCATENATION [ reduce using rule 60 (boolean_expression -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 140 (factor -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 140 (factor -> VARIABLE .) ]

    printable_dividers             shift and go to state 131

state 58

    (125) values -> STRING .
    (68) true_boolean_types -> STRING .
    (75) false_boolean_types -> STRING .
    (142) factor -> STRING .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 68 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 68 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 68 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 125 (values -> STRING .)
    COMMA           reduce using rule 125 (values -> STRING .)
    STRING_CONCATENATION reduce using rule 125 (values -> STRING .)
    EQUALS_EQUALS   reduce using rule 125 (values -> STRING .)
    IDENTICAL       reduce using rule 125 (values -> STRING .)
    NOT_EQUALS      reduce using rule 125 (values -> STRING .)
    NOT_IDENTICAL   reduce using rule 125 (values -> STRING .)
    SMALL_THAN      reduce using rule 125 (values -> STRING .)
    GREATER_THAN    reduce using rule 125 (values -> STRING .)
    SMALL_EQUALS_TO reduce using rule 125 (values -> STRING .)
    GREATER_EQUALS_TO reduce using rule 125 (values -> STRING .)
    SPACECRAFT      reduce using rule 125 (values -> STRING .)
    NULL_FUSION     reduce using rule 125 (values -> STRING .)
    SEMICOLON       reduce using rule 125 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 125 (values -> STRING .)
    LOGIC_AND       reduce using rule 68 (true_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 68 (true_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 68 (true_boolean_types -> STRING .)
    MULTIPLY        reduce using rule 142 (factor -> STRING .)
    DIVIDE          reduce using rule 142 (factor -> STRING .)
    MODULE          reduce using rule 142 (factor -> STRING .)
    POW             reduce using rule 142 (factor -> STRING .)
    PLUS            reduce using rule 142 (factor -> STRING .)
    MINUS           reduce using rule 142 (factor -> STRING .)

  ! LOGIC_AND       [ reduce using rule 75 (false_boolean_types -> STRING .) ]
  ! LOGIC_OR        [ reduce using rule 75 (false_boolean_types -> STRING .) ]
  ! LOGIC_XOR       [ reduce using rule 75 (false_boolean_types -> STRING .) ]
  ! EQUALS_EQUALS   [ reduce using rule 142 (factor -> STRING .) ]
  ! IDENTICAL       [ reduce using rule 142 (factor -> STRING .) ]
  ! NOT_EQUALS      [ reduce using rule 142 (factor -> STRING .) ]
  ! NOT_IDENTICAL   [ reduce using rule 142 (factor -> STRING .) ]
  ! SMALL_THAN      [ reduce using rule 142 (factor -> STRING .) ]
  ! GREATER_THAN    [ reduce using rule 142 (factor -> STRING .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 142 (factor -> STRING .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 142 (factor -> STRING .) ]
  ! SPACECRAFT      [ reduce using rule 142 (factor -> STRING .) ]
  ! NULL_FUSION     [ reduce using rule 142 (factor -> STRING .) ]


state 59

    (116) printable_values -> conditional .
    (117) printable_values -> conditional . printable_dividers printable_values
    (118) printable_values -> conditional . COMMA printable_values
    (122) printable_dividers -> . COMMA
    (123) printable_dividers -> . STRING_CONCATENATION

    SEMICOLON       reduce using rule 116 (printable_values -> conditional .)
    RIGHT_PAREN     reduce using rule 116 (printable_values -> conditional .)
    COMMA           shift and go to state 137
    STRING_CONCATENATION shift and go to state 120

    printable_dividers             shift and go to state 136

state 60

    (119) printable_values -> structure_object_principal .
    (120) printable_values -> structure_object_principal . printable_dividers printable_values
    (121) printable_values -> structure_object_principal . COMMA printable_values
    (122) printable_dividers -> . COMMA
    (123) printable_dividers -> . STRING_CONCATENATION

    SEMICOLON       reduce using rule 119 (printable_values -> structure_object_principal .)
    RIGHT_PAREN     reduce using rule 119 (printable_values -> structure_object_principal .)
    COMMA           shift and go to state 139
    STRING_CONCATENATION shift and go to state 120

    printable_dividers             shift and go to state 138

state 61

    (124) values -> INTEGER .
    (69) true_boolean_types -> INTEGER .
    (76) false_boolean_types -> INTEGER .
    (138) factor -> INTEGER .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 69 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 69 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 69 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 124 (values -> INTEGER .)
    COMMA           reduce using rule 124 (values -> INTEGER .)
    STRING_CONCATENATION reduce using rule 124 (values -> INTEGER .)
    EQUALS_EQUALS   reduce using rule 124 (values -> INTEGER .)
    IDENTICAL       reduce using rule 124 (values -> INTEGER .)
    NOT_EQUALS      reduce using rule 124 (values -> INTEGER .)
    NOT_IDENTICAL   reduce using rule 124 (values -> INTEGER .)
    SMALL_THAN      reduce using rule 124 (values -> INTEGER .)
    GREATER_THAN    reduce using rule 124 (values -> INTEGER .)
    SMALL_EQUALS_TO reduce using rule 124 (values -> INTEGER .)
    GREATER_EQUALS_TO reduce using rule 124 (values -> INTEGER .)
    SPACECRAFT      reduce using rule 124 (values -> INTEGER .)
    NULL_FUSION     reduce using rule 124 (values -> INTEGER .)
    SEMICOLON       reduce using rule 124 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 124 (values -> INTEGER .)
    LOGIC_AND       reduce using rule 69 (true_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 69 (true_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 69 (true_boolean_types -> INTEGER .)
    MULTIPLY        reduce using rule 138 (factor -> INTEGER .)
    DIVIDE          reduce using rule 138 (factor -> INTEGER .)
    MODULE          reduce using rule 138 (factor -> INTEGER .)
    POW             reduce using rule 138 (factor -> INTEGER .)
    PLUS            reduce using rule 138 (factor -> INTEGER .)
    MINUS           reduce using rule 138 (factor -> INTEGER .)

  ! LOGIC_AND       [ reduce using rule 76 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_OR        [ reduce using rule 76 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_XOR       [ reduce using rule 76 (false_boolean_types -> INTEGER .) ]
  ! EQUALS_EQUALS   [ reduce using rule 138 (factor -> INTEGER .) ]
  ! IDENTICAL       [ reduce using rule 138 (factor -> INTEGER .) ]
  ! NOT_EQUALS      [ reduce using rule 138 (factor -> INTEGER .) ]
  ! NOT_IDENTICAL   [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SMALL_THAN      [ reduce using rule 138 (factor -> INTEGER .) ]
  ! GREATER_THAN    [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 138 (factor -> INTEGER .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SPACECRAFT      [ reduce using rule 138 (factor -> INTEGER .) ]
  ! NULL_FUSION     [ reduce using rule 138 (factor -> INTEGER .) ]


state 62

    (126) values -> FLOAT .
    (70) true_boolean_types -> FLOAT .
    (79) false_boolean_types -> FLOAT .
    (139) factor -> FLOAT .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 70 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 70 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 70 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 126 (values -> FLOAT .)
    COMMA           reduce using rule 126 (values -> FLOAT .)
    STRING_CONCATENATION reduce using rule 126 (values -> FLOAT .)
    EQUALS_EQUALS   reduce using rule 126 (values -> FLOAT .)
    IDENTICAL       reduce using rule 126 (values -> FLOAT .)
    NOT_EQUALS      reduce using rule 126 (values -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 126 (values -> FLOAT .)
    SMALL_THAN      reduce using rule 126 (values -> FLOAT .)
    GREATER_THAN    reduce using rule 126 (values -> FLOAT .)
    SMALL_EQUALS_TO reduce using rule 126 (values -> FLOAT .)
    GREATER_EQUALS_TO reduce using rule 126 (values -> FLOAT .)
    SPACECRAFT      reduce using rule 126 (values -> FLOAT .)
    NULL_FUSION     reduce using rule 126 (values -> FLOAT .)
    SEMICOLON       reduce using rule 126 (values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 126 (values -> FLOAT .)
    LOGIC_AND       reduce using rule 70 (true_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 70 (true_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 70 (true_boolean_types -> FLOAT .)
    MULTIPLY        reduce using rule 139 (factor -> FLOAT .)
    DIVIDE          reduce using rule 139 (factor -> FLOAT .)
    MODULE          reduce using rule 139 (factor -> FLOAT .)
    POW             reduce using rule 139 (factor -> FLOAT .)
    PLUS            reduce using rule 139 (factor -> FLOAT .)
    MINUS           reduce using rule 139 (factor -> FLOAT .)

  ! LOGIC_AND       [ reduce using rule 79 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_OR        [ reduce using rule 79 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_XOR       [ reduce using rule 79 (false_boolean_types -> FLOAT .) ]
  ! EQUALS_EQUALS   [ reduce using rule 139 (factor -> FLOAT .) ]
  ! IDENTICAL       [ reduce using rule 139 (factor -> FLOAT .) ]
  ! NOT_EQUALS      [ reduce using rule 139 (factor -> FLOAT .) ]
  ! NOT_IDENTICAL   [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SMALL_THAN      [ reduce using rule 139 (factor -> FLOAT .) ]
  ! GREATER_THAN    [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 139 (factor -> FLOAT .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SPACECRAFT      [ reduce using rule 139 (factor -> FLOAT .) ]
  ! NULL_FUSION     [ reduce using rule 139 (factor -> FLOAT .) ]


state 63

    (127) values -> boolean .

    COMMA           reduce using rule 127 (values -> boolean .)
    STRING_CONCATENATION reduce using rule 127 (values -> boolean .)
    EQUALS_EQUALS   reduce using rule 127 (values -> boolean .)
    IDENTICAL       reduce using rule 127 (values -> boolean .)
    NOT_EQUALS      reduce using rule 127 (values -> boolean .)
    NOT_IDENTICAL   reduce using rule 127 (values -> boolean .)
    SMALL_THAN      reduce using rule 127 (values -> boolean .)
    GREATER_THAN    reduce using rule 127 (values -> boolean .)
    SMALL_EQUALS_TO reduce using rule 127 (values -> boolean .)
    GREATER_EQUALS_TO reduce using rule 127 (values -> boolean .)
    SPACECRAFT      reduce using rule 127 (values -> boolean .)
    NULL_FUSION     reduce using rule 127 (values -> boolean .)
    SEMICOLON       reduce using rule 127 (values -> boolean .)
    RIGHT_PAREN     reduce using rule 127 (values -> boolean .)
    RIGHT_BRACKET   reduce using rule 127 (values -> boolean .)
    LOGIC_AND       reduce using rule 127 (values -> boolean .)
    LOGIC_OR        reduce using rule 127 (values -> boolean .)
    LOGIC_XOR       reduce using rule 127 (values -> boolean .)
    ECHO            reduce using rule 127 (values -> boolean .)
    PRINT           reduce using rule 127 (values -> boolean .)
    CLASS           reduce using rule 127 (values -> boolean .)
    INTERFACE       reduce using rule 127 (values -> boolean .)
    FUNCTION        reduce using rule 127 (values -> boolean .)
    VARIABLE        reduce using rule 127 (values -> boolean .)
    INCREASE        reduce using rule 127 (values -> boolean .)
    DECREMENT       reduce using rule 127 (values -> boolean .)
    IF              reduce using rule 127 (values -> boolean .)
    WHILE           reduce using rule 127 (values -> boolean .)
    FOR             reduce using rule 127 (values -> boolean .)
    CONST           reduce using rule 127 (values -> boolean .)
    DEFINE          reduce using rule 127 (values -> boolean .)
    ARRAY           reduce using rule 127 (values -> boolean .)
    LEFT_BRACKET    reduce using rule 127 (values -> boolean .)
    NEW             reduce using rule 127 (values -> boolean .)
    PHP_END_IDENTIFIER reduce using rule 127 (values -> boolean .)
    RETURN          reduce using rule 127 (values -> boolean .)
    BREAK           reduce using rule 127 (values -> boolean .)
    RIGHT_BRACE     reduce using rule 127 (values -> boolean .)


state 64

    (54) conditional -> boolean_expression .
    (55) conditional -> boolean_expression . logic_operator boolean_expression
    (56) logic_operator -> . LOGIC_AND
    (57) logic_operator -> . LOGIC_OR
    (58) logic_operator -> . LOGIC_XOR

  ! shift/reduce conflict for LOGIC_AND resolved as shift
  ! shift/reduce conflict for LOGIC_OR resolved as shift
  ! shift/reduce conflict for LOGIC_XOR resolved as shift
    COMMA           reduce using rule 54 (conditional -> boolean_expression .)
    STRING_CONCATENATION reduce using rule 54 (conditional -> boolean_expression .)
    SEMICOLON       reduce using rule 54 (conditional -> boolean_expression .)
    RIGHT_PAREN     reduce using rule 54 (conditional -> boolean_expression .)
    LOGIC_AND       shift and go to state 141
    LOGIC_OR        shift and go to state 142
    LOGIC_XOR       shift and go to state 143

  ! LOGIC_AND       [ reduce using rule 54 (conditional -> boolean_expression .) ]
  ! LOGIC_OR        [ reduce using rule 54 (conditional -> boolean_expression .) ]
  ! LOGIC_XOR       [ reduce using rule 54 (conditional -> boolean_expression .) ]

    logic_operator                 shift and go to state 140

state 65

    (128) boolean -> TRUE .
    (67) true_boolean_types -> TRUE .

    COMMA           reduce using rule 128 (boolean -> TRUE .)
    STRING_CONCATENATION reduce using rule 128 (boolean -> TRUE .)
    EQUALS_EQUALS   reduce using rule 128 (boolean -> TRUE .)
    IDENTICAL       reduce using rule 128 (boolean -> TRUE .)
    NOT_EQUALS      reduce using rule 128 (boolean -> TRUE .)
    NOT_IDENTICAL   reduce using rule 128 (boolean -> TRUE .)
    SMALL_THAN      reduce using rule 128 (boolean -> TRUE .)
    GREATER_THAN    reduce using rule 128 (boolean -> TRUE .)
    SMALL_EQUALS_TO reduce using rule 128 (boolean -> TRUE .)
    GREATER_EQUALS_TO reduce using rule 128 (boolean -> TRUE .)
    SPACECRAFT      reduce using rule 128 (boolean -> TRUE .)
    NULL_FUSION     reduce using rule 128 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 128 (boolean -> TRUE .)
    RIGHT_PAREN     reduce using rule 128 (boolean -> TRUE .)
    LOGIC_AND       reduce using rule 67 (true_boolean_types -> TRUE .)
    LOGIC_OR        reduce using rule 67 (true_boolean_types -> TRUE .)
    LOGIC_XOR       reduce using rule 67 (true_boolean_types -> TRUE .)


state 66

    (129) boolean -> FALSE .
    (74) false_boolean_types -> FALSE .

    COMMA           reduce using rule 129 (boolean -> FALSE .)
    STRING_CONCATENATION reduce using rule 129 (boolean -> FALSE .)
    EQUALS_EQUALS   reduce using rule 129 (boolean -> FALSE .)
    IDENTICAL       reduce using rule 129 (boolean -> FALSE .)
    NOT_EQUALS      reduce using rule 129 (boolean -> FALSE .)
    NOT_IDENTICAL   reduce using rule 129 (boolean -> FALSE .)
    SMALL_THAN      reduce using rule 129 (boolean -> FALSE .)
    GREATER_THAN    reduce using rule 129 (boolean -> FALSE .)
    SMALL_EQUALS_TO reduce using rule 129 (boolean -> FALSE .)
    GREATER_EQUALS_TO reduce using rule 129 (boolean -> FALSE .)
    SPACECRAFT      reduce using rule 129 (boolean -> FALSE .)
    NULL_FUSION     reduce using rule 129 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 129 (boolean -> FALSE .)
    RIGHT_PAREN     reduce using rule 129 (boolean -> FALSE .)
    LOGIC_AND       reduce using rule 74 (false_boolean_types -> FALSE .)
    LOGIC_OR        reduce using rule 74 (false_boolean_types -> FALSE .)
    LOGIC_XOR       reduce using rule 74 (false_boolean_types -> FALSE .)


state 67

    (59) boolean_expression -> comparation .

    LOGIC_AND       reduce using rule 59 (boolean_expression -> comparation .)
    LOGIC_OR        reduce using rule 59 (boolean_expression -> comparation .)
    LOGIC_XOR       reduce using rule 59 (boolean_expression -> comparation .)
    COMMA           reduce using rule 59 (boolean_expression -> comparation .)
    STRING_CONCATENATION reduce using rule 59 (boolean_expression -> comparation .)
    SEMICOLON       reduce using rule 59 (boolean_expression -> comparation .)
    RIGHT_PAREN     reduce using rule 59 (boolean_expression -> comparation .)


state 68

    (61) boolean_expression -> IDENTIFIER .
    (72) true_boolean_types -> IDENTIFIER .
    (78) false_boolean_types -> IDENTIFIER .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 61 (boolean_expression -> IDENTIFIER .)
    LOGIC_AND       reduce using rule 61 (boolean_expression -> IDENTIFIER .)
    LOGIC_OR        reduce using rule 61 (boolean_expression -> IDENTIFIER .)
    LOGIC_XOR       reduce using rule 61 (boolean_expression -> IDENTIFIER .)
    COMMA           reduce using rule 61 (boolean_expression -> IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 61 (boolean_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 61 (boolean_expression -> IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 61 (boolean_expression -> IDENTIFIER .)

  ! LOGIC_AND       [ reduce using rule 72 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_OR        [ reduce using rule 72 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_XOR       [ reduce using rule 72 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_AND       [ reduce using rule 78 (false_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_OR        [ reduce using rule 78 (false_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_XOR       [ reduce using rule 78 (false_boolean_types -> IDENTIFIER .) ]


state 69

    (63) boolean_expression -> logic_not_sentence .

    LOGIC_AND       reduce using rule 63 (boolean_expression -> logic_not_sentence .)
    LOGIC_OR        reduce using rule 63 (boolean_expression -> logic_not_sentence .)
    LOGIC_XOR       reduce using rule 63 (boolean_expression -> logic_not_sentence .)
    COMMA           reduce using rule 63 (boolean_expression -> logic_not_sentence .)
    STRING_CONCATENATION reduce using rule 63 (boolean_expression -> logic_not_sentence .)
    SEMICOLON       reduce using rule 63 (boolean_expression -> logic_not_sentence .)
    RIGHT_PAREN     reduce using rule 63 (boolean_expression -> logic_not_sentence .)


state 70

    (64) boolean_expression -> logic_expression .

    LOGIC_AND       reduce using rule 64 (boolean_expression -> logic_expression .)
    LOGIC_OR        reduce using rule 64 (boolean_expression -> logic_expression .)
    LOGIC_XOR       reduce using rule 64 (boolean_expression -> logic_expression .)
    COMMA           reduce using rule 64 (boolean_expression -> logic_expression .)
    STRING_CONCATENATION reduce using rule 64 (boolean_expression -> logic_expression .)
    SEMICOLON       reduce using rule 64 (boolean_expression -> logic_expression .)
    RIGHT_PAREN     reduce using rule 64 (boolean_expression -> logic_expression .)


state 71

    (262) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (263) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (264) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element
    (88) comparation -> access_array_element . EQUALS_EQUALS values
    (89) comparation -> access_array_element . EQUALS_EQUALS VARIABLE
    (92) comparation -> access_array_element . EQUALS_EQUALS access_array_element

    MINUS           shift and go to state 95
    EQUALS_EQUALS   shift and go to state 144


state 72

    (86) comparation -> expression . comparator_operator expression
    (95) comparator_operator -> . EQUALS_EQUALS
    (96) comparator_operator -> . IDENTICAL
    (97) comparator_operator -> . NOT_EQUALS
    (98) comparator_operator -> . NOT_IDENTICAL
    (99) comparator_operator -> . SMALL_THAN
    (100) comparator_operator -> . GREATER_THAN
    (101) comparator_operator -> . SMALL_EQUALS_TO
    (102) comparator_operator -> . GREATER_EQUALS_TO
    (103) comparator_operator -> . SPACECRAFT
    (104) comparator_operator -> . NULL_FUSION

    EQUALS_EQUALS   shift and go to state 121
    IDENTICAL       shift and go to state 122
    NOT_EQUALS      shift and go to state 123
    NOT_IDENTICAL   shift and go to state 124
    SMALL_THAN      shift and go to state 125
    GREATER_THAN    shift and go to state 126
    SMALL_EQUALS_TO shift and go to state 127
    GREATER_EQUALS_TO shift and go to state 128
    SPACECRAFT      shift and go to state 129
    NULL_FUSION     shift and go to state 130

    comparator_operator            shift and go to state 145

state 73

    (93) comparation -> access_element_matrix . EQUALS_EQUALS VARIABLE

    EQUALS_EQUALS   shift and go to state 146


state 74

    (82) logic_not_sentence -> LOGIC_NOT . conditional
    (83) logic_not_sentence -> LOGIC_NOT . VARIABLE
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    VARIABLE        shift and go to state 148
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    LOGIC_NOT       shift and go to state 74
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 151
    ARRAY           shift and go to state 78
    FALSE           shift and go to state 152
    NULL            shift and go to state 79

    conditional                    shift and go to state 147
    boolean_expression             shift and go to state 64
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    values                         shift and go to state 149
    expression                     shift and go to state 72
    access_array_element           shift and go to state 150
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    boolean                        shift and go to state 63
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 75

    (65) logic_expression -> true_boolean_types . logic_operator false_boolean_types
    (56) logic_operator -> . LOGIC_AND
    (57) logic_operator -> . LOGIC_OR
    (58) logic_operator -> . LOGIC_XOR

    LOGIC_AND       shift and go to state 141
    LOGIC_OR        shift and go to state 142
    LOGIC_XOR       shift and go to state 143

    logic_operator                 shift and go to state 153

state 76

    (66) logic_expression -> false_boolean_types . logic_operator true_boolean_types
    (56) logic_operator -> . LOGIC_AND
    (57) logic_operator -> . LOGIC_OR
    (58) logic_operator -> . LOGIC_XOR

    LOGIC_AND       shift and go to state 141
    LOGIC_OR        shift and go to state 142
    LOGIC_XOR       shift and go to state 143

    logic_operator                 shift and go to state 154

state 77

    (130) expression -> term .
    (131) expression -> term . PLUS expression
    (132) expression -> term . MINUS expression

    EQUALS_EQUALS   reduce using rule 130 (expression -> term .)
    IDENTICAL       reduce using rule 130 (expression -> term .)
    NOT_EQUALS      reduce using rule 130 (expression -> term .)
    NOT_IDENTICAL   reduce using rule 130 (expression -> term .)
    SMALL_THAN      reduce using rule 130 (expression -> term .)
    GREATER_THAN    reduce using rule 130 (expression -> term .)
    SMALL_EQUALS_TO reduce using rule 130 (expression -> term .)
    GREATER_EQUALS_TO reduce using rule 130 (expression -> term .)
    SPACECRAFT      reduce using rule 130 (expression -> term .)
    NULL_FUSION     reduce using rule 130 (expression -> term .)
    RIGHT_PAREN     reduce using rule 130 (expression -> term .)
    SEMICOLON       reduce using rule 130 (expression -> term .)
    LOGIC_AND       reduce using rule 130 (expression -> term .)
    LOGIC_OR        reduce using rule 130 (expression -> term .)
    LOGIC_XOR       reduce using rule 130 (expression -> term .)
    COMMA           reduce using rule 130 (expression -> term .)
    STRING_CONCATENATION reduce using rule 130 (expression -> term .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156


state 78

    (73) true_boolean_types -> ARRAY . LEFT_PAREN values RIGHT_PAREN
    (80) false_boolean_types -> ARRAY . LEFT_PAREN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 157


state 79

    (81) false_boolean_types -> NULL .

    LOGIC_AND       reduce using rule 81 (false_boolean_types -> NULL .)
    LOGIC_OR        reduce using rule 81 (false_boolean_types -> NULL .)
    LOGIC_XOR       reduce using rule 81 (false_boolean_types -> NULL .)
    COMMA           reduce using rule 81 (false_boolean_types -> NULL .)
    STRING_CONCATENATION reduce using rule 81 (false_boolean_types -> NULL .)
    SEMICOLON       reduce using rule 81 (false_boolean_types -> NULL .)
    RIGHT_PAREN     reduce using rule 81 (false_boolean_types -> NULL .)


state 80

    (133) term -> factor .
    (134) term -> factor . MULTIPLY term
    (135) term -> factor . DIVIDE term
    (136) term -> factor . MODULE term
    (137) term -> factor . POW term

    PLUS            reduce using rule 133 (term -> factor .)
    MINUS           reduce using rule 133 (term -> factor .)
    EQUALS_EQUALS   reduce using rule 133 (term -> factor .)
    IDENTICAL       reduce using rule 133 (term -> factor .)
    NOT_EQUALS      reduce using rule 133 (term -> factor .)
    NOT_IDENTICAL   reduce using rule 133 (term -> factor .)
    SMALL_THAN      reduce using rule 133 (term -> factor .)
    GREATER_THAN    reduce using rule 133 (term -> factor .)
    SMALL_EQUALS_TO reduce using rule 133 (term -> factor .)
    GREATER_EQUALS_TO reduce using rule 133 (term -> factor .)
    SPACECRAFT      reduce using rule 133 (term -> factor .)
    NULL_FUSION     reduce using rule 133 (term -> factor .)
    RIGHT_PAREN     reduce using rule 133 (term -> factor .)
    SEMICOLON       reduce using rule 133 (term -> factor .)
    LOGIC_AND       reduce using rule 133 (term -> factor .)
    LOGIC_OR        reduce using rule 133 (term -> factor .)
    LOGIC_XOR       reduce using rule 133 (term -> factor .)
    COMMA           reduce using rule 133 (term -> factor .)
    STRING_CONCATENATION reduce using rule 133 (term -> factor .)
    MULTIPLY        shift and go to state 158
    DIVIDE          shift and go to state 159
    MODULE          shift and go to state 160
    POW             shift and go to state 161


state 81

    (106) print_statement -> PRINT LEFT_PAREN . printable_values RIGHT_PAREN
    (62) boolean_expression -> LEFT_PAREN . conditional RIGHT_PAREN
    (141) factor -> LEFT_PAREN . expression RIGHT_PAREN
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL

    VARIABLE        shift and go to state 113
    INTEGER         shift and go to state 115
    STRING          shift and go to state 114
    FLOAT           shift and go to state 116
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    printable_values               shift and go to state 162
    conditional                    shift and go to state 111
    expression                     shift and go to state 112
    values                         shift and go to state 56
    structure_object_principal     shift and go to state 60
    boolean_expression             shift and go to state 64
    term                           shift and go to state 77
    boolean                        shift and go to state 63
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    factor                         shift and go to state 80
    access_array_element           shift and go to state 71
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76

state 82

    (108) print_statement -> PRINT printable_values .

    SEMICOLON       reduce using rule 108 (print_statement -> PRINT printable_values .)


state 83

    (269) class_declaration -> CLASS IDENTIFIER . class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (274) class_extends_opt -> . EXTENDS IDENTIFIER
    (275) class_extends_opt -> .

    EXTENDS         shift and go to state 164
    IMPLEMENTS      reduce using rule 275 (class_extends_opt -> .)
    LEFT_BRACE      reduce using rule 275 (class_extends_opt -> .)

    class_extends_opt              shift and go to state 163

state 84

    (270) interface_declaration -> INTERFACE IDENTIFIER . class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (274) class_extends_opt -> . EXTENDS IDENTIFIER
    (275) class_extends_opt -> .

    EXTENDS         shift and go to state 164
    LEFT_BRACE      reduce using rule 275 (class_extends_opt -> .)

    class_extends_opt              shift and go to state 165

state 85

    (174) function_declaration -> FUNCTION IDENTIFIER . LEFT_PAREN params RIGHT_PAREN codeblock

    LEFT_PAREN      shift and go to state 166


state 86

    (145) variable_assignment -> VARIABLE assignment_operator . values
    (146) variable_assignment -> VARIABLE assignment_operator . IDENTIFIER
    (147) variable_assignment -> VARIABLE assignment_operator . expression
    (148) variable_assignment -> VARIABLE assignment_operator . function_invocation
    (149) variable_assignment -> VARIABLE assignment_operator . string_special_function
    (150) variable_assignment -> VARIABLE assignment_operator . array_special_function_structure
    (151) variable_assignment -> VARIABLE assignment_operator . types_structure
    (152) variable_assignment -> VARIABLE assignment_operator . input
    (153) variable_assignment -> VARIABLE assignment_operator . special_function
    (154) variable_assignment -> VARIABLE assignment_operator . conditional
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (165) function_invocation -> . IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (166) function_invocation -> . VARIABLE LEFT_PAREN params RIGHT_PAREN
    (184) string_special_function -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN
    (185) string_special_function -> . SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN
    (186) string_special_function -> . SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN
    (193) array_special_function_structure -> . array_special_function
    (194) array_special_function_structure -> . statement_array_special_function_error
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (182) input -> . FEGTS LEFT_PAREN STDIN RIGHT_PAREN
    (183) input -> . READLINE LEFT_PAREN STRING RIGHT_PAREN
    (175) special_function -> . arrow_function
    (176) special_function -> . anonymous_functions
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (195) array_special_function -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (196) array_special_function -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (197) array_special_function -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (198) array_special_function -> . ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN
    (199) array_special_function -> . ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN
    (200) statement_array_special_function_error -> . COUNT LEFT_PAREN error count_param RIGHT_PAREN
    (201) statement_array_special_function_error -> . ARRAY_POP LEFT_PAREN error RIGHT_PAREN
    (202) statement_array_special_function_error -> . ARRAY_SUM LEFT_PAREN error RIGHT_PAREN
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (177) arrow_function -> . FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock
    (178) arrow_function -> . FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement
    (179) arrow_function -> . FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression
    (180) anonymous_functions -> . FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL

    IDENTIFIER      shift and go to state 169
    INTEGER         shift and go to state 115
    STRING          shift and go to state 114
    FLOAT           shift and go to state 116
    VARIABLE        shift and go to state 167
    STRLEN          shift and go to state 178
    SUBSTR          shift and go to state 179
    FEGTS           shift and go to state 182
    READLINE        shift and go to state 183
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    COUNT           shift and go to state 186
    ARRAY_POP       shift and go to state 187
    ARRAY_SUM       shift and go to state 188
    FN              shift and go to state 191
    FUNCTION        shift and go to state 192
    LEFT_PAREN      shift and go to state 109
    ARRAY           shift and go to state 193
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    NULL            shift and go to state 79

    values                         shift and go to state 168
    expression                     shift and go to state 170
    function_invocation            shift and go to state 171
    string_special_function        shift and go to state 172
    array_special_function_structure shift and go to state 173
    types_structure                shift and go to state 174
    input                          shift and go to state 175
    special_function               shift and go to state 176
    conditional                    shift and go to state 177
    boolean                        shift and go to state 63
    term                           shift and go to state 77
    array_special_function         shift and go to state 180
    statement_array_special_function_error shift and go to state 181
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    arrow_function                 shift and go to state 184
    anonymous_functions            shift and go to state 185
    boolean_expression             shift and go to state 64
    factor                         shift and go to state 80
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 189
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 190
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    statement_access_array_element_error shift and go to state 48
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76

state 87

    (155) variable_assignment -> VARIABLE INCREASE .

    SEMICOLON       reduce using rule 155 (variable_assignment -> VARIABLE INCREASE .)


state 88

    (156) variable_assignment -> VARIABLE DECREMENT .

    SEMICOLON       reduce using rule 156 (variable_assignment -> VARIABLE DECREMENT .)


state 89

    (232) access_array_element -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) add_element_matrix -> VARIABLE LEFT_BRACKET . RIGHT_BRACKET EQUALS indexed_array
    (234) statement_access_array_element_error -> VARIABLE LEFT_BRACKET . error RIGHT_BRACKET

    INTEGER         shift and go to state 195
    VARIABLE        shift and go to state 194
    RIGHT_BRACKET   shift and go to state 196
    error           shift and go to state 197


state 90

    (159) assignment_operator -> EQUALS .

    IDENTIFIER      reduce using rule 159 (assignment_operator -> EQUALS .)
    INTEGER         reduce using rule 159 (assignment_operator -> EQUALS .)
    STRING          reduce using rule 159 (assignment_operator -> EQUALS .)
    FLOAT           reduce using rule 159 (assignment_operator -> EQUALS .)
    VARIABLE        reduce using rule 159 (assignment_operator -> EQUALS .)
    STRLEN          reduce using rule 159 (assignment_operator -> EQUALS .)
    SUBSTR          reduce using rule 159 (assignment_operator -> EQUALS .)
    FEGTS           reduce using rule 159 (assignment_operator -> EQUALS .)
    READLINE        reduce using rule 159 (assignment_operator -> EQUALS .)
    TRUE            reduce using rule 159 (assignment_operator -> EQUALS .)
    FALSE           reduce using rule 159 (assignment_operator -> EQUALS .)
    COUNT           reduce using rule 159 (assignment_operator -> EQUALS .)
    ARRAY_POP       reduce using rule 159 (assignment_operator -> EQUALS .)
    ARRAY_SUM       reduce using rule 159 (assignment_operator -> EQUALS .)
    FN              reduce using rule 159 (assignment_operator -> EQUALS .)
    FUNCTION        reduce using rule 159 (assignment_operator -> EQUALS .)
    LEFT_PAREN      reduce using rule 159 (assignment_operator -> EQUALS .)
    ARRAY           reduce using rule 159 (assignment_operator -> EQUALS .)
    LEFT_BRACKET    reduce using rule 159 (assignment_operator -> EQUALS .)
    NEW             reduce using rule 159 (assignment_operator -> EQUALS .)
    LOGIC_NOT       reduce using rule 159 (assignment_operator -> EQUALS .)
    NULL            reduce using rule 159 (assignment_operator -> EQUALS .)


state 91

    (257) access_method_object -> VARIABLE MINUS . GREATER_THAN function_invocation
    (258) access_method_object -> VARIABLE MINUS . GREATER_THAN accessType
    (259) access_method_object -> VARIABLE MINUS . GREATER_THAN accessType EQUALS values
    (260) access_method_object -> VARIABLE MINUS . GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> VARIABLE MINUS . GREATER_THAN accessType EQUALS access_array_element

    GREATER_THAN    shift and go to state 198


state 92

    (160) assignment_operator -> PLUS_EQUALS .

    IDENTIFIER      reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    INTEGER         reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    STRING          reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    FLOAT           reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    VARIABLE        reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    STRLEN          reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    SUBSTR          reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    FEGTS           reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    READLINE        reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    TRUE            reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    FALSE           reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    COUNT           reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    ARRAY_POP       reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    ARRAY_SUM       reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    FN              reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    FUNCTION        reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    LEFT_PAREN      reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    ARRAY           reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    LEFT_BRACKET    reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    NEW             reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    LOGIC_NOT       reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)
    NULL            reduce using rule 160 (assignment_operator -> PLUS_EQUALS .)


state 93

    (157) variable_assignment -> INCREASE VARIABLE .

    SEMICOLON       reduce using rule 157 (variable_assignment -> INCREASE VARIABLE .)


state 94

    (158) variable_assignment -> DECREMENT VARIABLE .

    SEMICOLON       reduce using rule 158 (variable_assignment -> DECREMENT VARIABLE .)


state 95

    (262) access_method_object -> access_array_element MINUS . GREATER_THAN function_invocation
    (263) access_method_object -> access_array_element MINUS . GREATER_THAN accessType
    (264) access_method_object -> access_array_element MINUS . GREATER_THAN accessType EQUALS values
    (265) access_method_object -> access_array_element MINUS . GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> access_array_element MINUS . GREATER_THAN accessType EQUALS access_array_element

    GREATER_THAN    shift and go to state 199


state 96

    (237) structure_matrix_principal -> access_element_matrix SEMICOLON .

    ECHO            reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    PRINT           reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    CLASS           reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    INTERFACE       reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    FUNCTION        reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    VARIABLE        reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    INCREASE        reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    DECREMENT       reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    IF              reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    WHILE           reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    FOR             reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    CONST           reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    DEFINE          reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    ARRAY           reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    LEFT_BRACKET    reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    NEW             reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    SEMICOLON       reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    COMMA           reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    RIGHT_PAREN     reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    RETURN          reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    BREAK           reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    RIGHT_BRACE     reduce using rule 237 (structure_matrix_principal -> access_element_matrix SEMICOLON .)


state 97

    (250) modify_element_matrix -> access_element_matrix EQUALS . values
    (251) modify_element_matrix -> access_element_matrix EQUALS . VARIABLE
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 201
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 200
    boolean                        shift and go to state 63

state 98

    (238) structure_matrix_principal -> modify_element_matrix SEMICOLON .

    ECHO            reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    PRINT           reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    CLASS           reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    INTERFACE       reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    FUNCTION        reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    VARIABLE        reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    INCREASE        reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    DECREMENT       reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    IF              reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    WHILE           reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    FOR             reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    CONST           reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    DEFINE          reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    ARRAY           reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    LEFT_BRACKET    reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    NEW             reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    SEMICOLON       reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    COMMA           reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    RIGHT_PAREN     reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    RETURN          reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    BREAK           reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    RIGHT_BRACE     reduce using rule 238 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)


state 99

    (15) if_statement -> IF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    VARIABLE        shift and go to state 208
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    LOGIC_NOT       shift and go to state 74
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 151
    ARRAY           shift and go to state 78
    FALSE           shift and go to state 152
    NULL            shift and go to state 79

    conditional                    shift and go to state 207
    boolean_expression             shift and go to state 64
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    values                         shift and go to state 149
    expression                     shift and go to state 72
    access_array_element           shift and go to state 150
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    boolean                        shift and go to state 63
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 100

    (14) while_statement -> WHILE LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    VARIABLE        shift and go to state 208
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    LOGIC_NOT       shift and go to state 74
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 151
    ARRAY           shift and go to state 78
    FALSE           shift and go to state 152
    NULL            shift and go to state 79

    conditional                    shift and go to state 209
    boolean_expression             shift and go to state 64
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    values                         shift and go to state 149
    expression                     shift and go to state 72
    access_array_element           shift and go to state 150
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    boolean                        shift and go to state 63
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 101

    (31) for_statement -> FOR LEFT_PAREN . VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    VARIABLE        shift and go to state 210


state 102

    (163) const_syntax -> CONST IDENTIFIER . EQUALS values

    EQUALS          shift and go to state 211


state 103

    (164) define_syntax -> DEFINE LEFT_PAREN . STRING COMMA values RIGHT_PAREN

    STRING          shift and go to state 212


state 104

    (217) indexed_array -> ARRAY LEFT_PAREN . values_array_indexed RIGHT_PAREN
    (218) associative_array -> ARRAY LEFT_PAREN . structure_array RIGHT_PAREN
    (240) matrix_firstform -> ARRAY LEFT_PAREN . structure_matrix_first RIGHT_PAREN SEMICOLON
    (224) values_array_indexed -> . values
    (225) values_array_indexed -> . values COMMA values_array_indexed
    (226) values_array_indexed -> . object_creation
    (227) values_array_indexed -> . object_creation COMMA values_array_indexed
    (228) values_array_indexed -> . indexed_array
    (229) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (220) structure_array -> . key EQUALS GREATER_THAN values
    (221) structure_array -> . key EQUALS GREATER_THAN values COMMA structure_array
    (244) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (245) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (222) key -> . INTEGER
    (223) key -> . STRING
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    ARRAY           shift and go to state 213
    INTEGER         shift and go to state 221
    STRING          shift and go to state 222
    FLOAT           shift and go to state 204
    NEW             shift and go to state 49
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values_array_indexed           shift and go to state 214
    structure_array                shift and go to state 215
    structure_matrix_first         shift and go to state 216
    values                         shift and go to state 217
    object_creation                shift and go to state 218
    indexed_array                  shift and go to state 219
    key                            shift and go to state 220
    boolean                        shift and go to state 63

state 105

    (219) associative_array -> ARRAY LEFT_BRACKET . structure_array RIGHT_BRACKET
    (220) structure_array -> . key EQUALS GREATER_THAN values
    (221) structure_array -> . key EQUALS GREATER_THAN values COMMA structure_array
    (222) key -> . INTEGER
    (223) key -> . STRING

    INTEGER         shift and go to state 224
    STRING          shift and go to state 225

    structure_array                shift and go to state 223
    key                            shift and go to state 220

state 106

    (242) structure_matrix_second -> LEFT_BRACKET . values RIGHT_BRACKET
    (243) structure_matrix_second -> LEFT_BRACKET . values RIGHT_BRACKET COMMA structure_matrix_second
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 226
    boolean                        shift and go to state 63

state 107

    (241) matrix_secondform -> LEFT_BRACKET structure_matrix_second . RIGHT_BRACKET SEMICOLON

    RIGHT_BRACKET   shift and go to state 227


state 108

    (255) object_creation -> NEW IDENTIFIER .
    (256) object_creation -> NEW IDENTIFIER . LEFT_PAREN params RIGHT_PAREN

    ECHO            reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    PRINT           reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    CLASS           reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    INTERFACE       reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    FUNCTION        reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    VARIABLE        reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    INCREASE        reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    DECREMENT       reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    IF              reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    WHILE           reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    FOR             reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    CONST           reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    DEFINE          reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    ARRAY           reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    NEW             reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    PHP_END_IDENTIFIER reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    COMMA           reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    SEMICOLON       reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    RETURN          reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    BREAK           reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    RIGHT_BRACE     reduce using rule 255 (object_creation -> NEW IDENTIFIER .)
    LEFT_PAREN      shift and go to state 228


state 109

    (62) boolean_expression -> LEFT_PAREN . conditional RIGHT_PAREN
    (141) factor -> LEFT_PAREN . expression RIGHT_PAREN
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 230
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    LOGIC_NOT       shift and go to state 74
    INTEGER         shift and go to state 231
    FLOAT           shift and go to state 232
    STRING          shift and go to state 233
    TRUE            shift and go to state 151
    ARRAY           shift and go to state 78
    FALSE           shift and go to state 152
    NULL            shift and go to state 79

    conditional                    shift and go to state 229
    expression                     shift and go to state 112
    boolean_expression             shift and go to state 64
    term                           shift and go to state 77
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    factor                         shift and go to state 80
    values                         shift and go to state 149
    access_array_element           shift and go to state 150
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    boolean                        shift and go to state 63

state 110

    (105) print_statement -> ECHO LEFT_PAREN printable_values . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 234


state 111

    (62) boolean_expression -> LEFT_PAREN conditional . RIGHT_PAREN
    (116) printable_values -> conditional .
    (117) printable_values -> conditional . printable_dividers printable_values
    (118) printable_values -> conditional . COMMA printable_values
    (122) printable_dividers -> . COMMA
    (123) printable_dividers -> . STRING_CONCATENATION

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 235
    COMMA           shift and go to state 137
    STRING_CONCATENATION shift and go to state 120

  ! RIGHT_PAREN     [ reduce using rule 116 (printable_values -> conditional .) ]

    printable_dividers             shift and go to state 136

state 112

    (141) factor -> LEFT_PAREN expression . RIGHT_PAREN
    (86) comparation -> expression . comparator_operator expression
    (95) comparator_operator -> . EQUALS_EQUALS
    (96) comparator_operator -> . IDENTICAL
    (97) comparator_operator -> . NOT_EQUALS
    (98) comparator_operator -> . NOT_IDENTICAL
    (99) comparator_operator -> . SMALL_THAN
    (100) comparator_operator -> . GREATER_THAN
    (101) comparator_operator -> . SMALL_EQUALS_TO
    (102) comparator_operator -> . GREATER_EQUALS_TO
    (103) comparator_operator -> . SPACECRAFT
    (104) comparator_operator -> . NULL_FUSION

    RIGHT_PAREN     shift and go to state 236
    EQUALS_EQUALS   shift and go to state 121
    IDENTICAL       shift and go to state 122
    NOT_EQUALS      shift and go to state 123
    NOT_IDENTICAL   shift and go to state 124
    SMALL_THAN      shift and go to state 125
    GREATER_THAN    shift and go to state 126
    SMALL_EQUALS_TO shift and go to state 127
    GREATER_EQUALS_TO shift and go to state 128
    SPACECRAFT      shift and go to state 129
    NULL_FUSION     shift and go to state 130

    comparator_operator            shift and go to state 145

state 113

    (112) printable_values -> VARIABLE .
    (113) printable_values -> VARIABLE . printable_dividers printable_values
    (114) printable_values -> VARIABLE . COMMA printable_values
    (115) printable_values -> VARIABLE . STRING_CONCATENATION STRING
    (60) boolean_expression -> VARIABLE .
    (257) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (258) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (259) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (87) comparation -> VARIABLE . EQUALS_EQUALS values
    (90) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (91) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (94) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (140) factor -> VARIABLE .
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (71) true_boolean_types -> VARIABLE .
    (77) false_boolean_types -> VARIABLE .
    (122) printable_dividers -> . COMMA
    (123) printable_dividers -> . STRING_CONCATENATION

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for STRING_CONCATENATION resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
    COMMA           shift and go to state 132
    STRING_CONCATENATION shift and go to state 133
    LOGIC_AND       reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 60 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 60 (boolean_expression -> VARIABLE .)
    MINUS           shift and go to state 91
    EQUALS_EQUALS   shift and go to state 134
    MULTIPLY        reduce using rule 140 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 140 (factor -> VARIABLE .)
    MODULE          reduce using rule 140 (factor -> VARIABLE .)
    POW             reduce using rule 140 (factor -> VARIABLE .)
    PLUS            reduce using rule 140 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 140 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 140 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 140 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 140 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 140 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 140 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 140 (factor -> VARIABLE .)
    LEFT_BRACKET    shift and go to state 135

  ! RIGHT_PAREN     [ reduce using rule 112 (printable_values -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 60 (boolean_expression -> VARIABLE .) ]
  ! STRING_CONCATENATION [ reduce using rule 60 (boolean_expression -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 140 (factor -> VARIABLE .) ]
  ! RIGHT_PAREN     [ reduce using rule 140 (factor -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 140 (factor -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]

    printable_dividers             shift and go to state 131

state 114

    (125) values -> STRING .
    (142) factor -> STRING .
    (68) true_boolean_types -> STRING .
    (75) false_boolean_types -> STRING .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 68 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 68 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 68 (true_boolean_types -> STRING .)
    COMMA           reduce using rule 125 (values -> STRING .)
    STRING_CONCATENATION reduce using rule 125 (values -> STRING .)
    EQUALS_EQUALS   reduce using rule 125 (values -> STRING .)
    IDENTICAL       reduce using rule 125 (values -> STRING .)
    NOT_EQUALS      reduce using rule 125 (values -> STRING .)
    NOT_IDENTICAL   reduce using rule 125 (values -> STRING .)
    SMALL_THAN      reduce using rule 125 (values -> STRING .)
    GREATER_THAN    reduce using rule 125 (values -> STRING .)
    SMALL_EQUALS_TO reduce using rule 125 (values -> STRING .)
    GREATER_EQUALS_TO reduce using rule 125 (values -> STRING .)
    SPACECRAFT      reduce using rule 125 (values -> STRING .)
    NULL_FUSION     reduce using rule 125 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 125 (values -> STRING .)
    SEMICOLON       reduce using rule 125 (values -> STRING .)
    MULTIPLY        reduce using rule 142 (factor -> STRING .)
    DIVIDE          reduce using rule 142 (factor -> STRING .)
    MODULE          reduce using rule 142 (factor -> STRING .)
    POW             reduce using rule 142 (factor -> STRING .)
    PLUS            reduce using rule 142 (factor -> STRING .)
    MINUS           reduce using rule 142 (factor -> STRING .)
    LOGIC_AND       reduce using rule 68 (true_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 68 (true_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 68 (true_boolean_types -> STRING .)

  ! RIGHT_PAREN     [ reduce using rule 142 (factor -> STRING .) ]
  ! EQUALS_EQUALS   [ reduce using rule 142 (factor -> STRING .) ]
  ! IDENTICAL       [ reduce using rule 142 (factor -> STRING .) ]
  ! NOT_EQUALS      [ reduce using rule 142 (factor -> STRING .) ]
  ! NOT_IDENTICAL   [ reduce using rule 142 (factor -> STRING .) ]
  ! SMALL_THAN      [ reduce using rule 142 (factor -> STRING .) ]
  ! GREATER_THAN    [ reduce using rule 142 (factor -> STRING .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 142 (factor -> STRING .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 142 (factor -> STRING .) ]
  ! SPACECRAFT      [ reduce using rule 142 (factor -> STRING .) ]
  ! NULL_FUSION     [ reduce using rule 142 (factor -> STRING .) ]
  ! SEMICOLON       [ reduce using rule 142 (factor -> STRING .) ]
  ! LOGIC_AND       [ reduce using rule 75 (false_boolean_types -> STRING .) ]
  ! LOGIC_OR        [ reduce using rule 75 (false_boolean_types -> STRING .) ]
  ! LOGIC_XOR       [ reduce using rule 75 (false_boolean_types -> STRING .) ]


state 115

    (124) values -> INTEGER .
    (138) factor -> INTEGER .
    (69) true_boolean_types -> INTEGER .
    (76) false_boolean_types -> INTEGER .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 69 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 69 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 69 (true_boolean_types -> INTEGER .)
    COMMA           reduce using rule 124 (values -> INTEGER .)
    STRING_CONCATENATION reduce using rule 124 (values -> INTEGER .)
    EQUALS_EQUALS   reduce using rule 124 (values -> INTEGER .)
    IDENTICAL       reduce using rule 124 (values -> INTEGER .)
    NOT_EQUALS      reduce using rule 124 (values -> INTEGER .)
    NOT_IDENTICAL   reduce using rule 124 (values -> INTEGER .)
    SMALL_THAN      reduce using rule 124 (values -> INTEGER .)
    GREATER_THAN    reduce using rule 124 (values -> INTEGER .)
    SMALL_EQUALS_TO reduce using rule 124 (values -> INTEGER .)
    GREATER_EQUALS_TO reduce using rule 124 (values -> INTEGER .)
    SPACECRAFT      reduce using rule 124 (values -> INTEGER .)
    NULL_FUSION     reduce using rule 124 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 124 (values -> INTEGER .)
    SEMICOLON       reduce using rule 124 (values -> INTEGER .)
    MULTIPLY        reduce using rule 138 (factor -> INTEGER .)
    DIVIDE          reduce using rule 138 (factor -> INTEGER .)
    MODULE          reduce using rule 138 (factor -> INTEGER .)
    POW             reduce using rule 138 (factor -> INTEGER .)
    PLUS            reduce using rule 138 (factor -> INTEGER .)
    MINUS           reduce using rule 138 (factor -> INTEGER .)
    LOGIC_AND       reduce using rule 69 (true_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 69 (true_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 69 (true_boolean_types -> INTEGER .)

  ! RIGHT_PAREN     [ reduce using rule 138 (factor -> INTEGER .) ]
  ! EQUALS_EQUALS   [ reduce using rule 138 (factor -> INTEGER .) ]
  ! IDENTICAL       [ reduce using rule 138 (factor -> INTEGER .) ]
  ! NOT_EQUALS      [ reduce using rule 138 (factor -> INTEGER .) ]
  ! NOT_IDENTICAL   [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SMALL_THAN      [ reduce using rule 138 (factor -> INTEGER .) ]
  ! GREATER_THAN    [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 138 (factor -> INTEGER .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SPACECRAFT      [ reduce using rule 138 (factor -> INTEGER .) ]
  ! NULL_FUSION     [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 138 (factor -> INTEGER .) ]
  ! LOGIC_AND       [ reduce using rule 76 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_OR        [ reduce using rule 76 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_XOR       [ reduce using rule 76 (false_boolean_types -> INTEGER .) ]


state 116

    (126) values -> FLOAT .
    (139) factor -> FLOAT .
    (70) true_boolean_types -> FLOAT .
    (79) false_boolean_types -> FLOAT .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 70 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 70 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 70 (true_boolean_types -> FLOAT .)
    COMMA           reduce using rule 126 (values -> FLOAT .)
    STRING_CONCATENATION reduce using rule 126 (values -> FLOAT .)
    EQUALS_EQUALS   reduce using rule 126 (values -> FLOAT .)
    IDENTICAL       reduce using rule 126 (values -> FLOAT .)
    NOT_EQUALS      reduce using rule 126 (values -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 126 (values -> FLOAT .)
    SMALL_THAN      reduce using rule 126 (values -> FLOAT .)
    GREATER_THAN    reduce using rule 126 (values -> FLOAT .)
    SMALL_EQUALS_TO reduce using rule 126 (values -> FLOAT .)
    GREATER_EQUALS_TO reduce using rule 126 (values -> FLOAT .)
    SPACECRAFT      reduce using rule 126 (values -> FLOAT .)
    NULL_FUSION     reduce using rule 126 (values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 126 (values -> FLOAT .)
    SEMICOLON       reduce using rule 126 (values -> FLOAT .)
    MULTIPLY        reduce using rule 139 (factor -> FLOAT .)
    DIVIDE          reduce using rule 139 (factor -> FLOAT .)
    MODULE          reduce using rule 139 (factor -> FLOAT .)
    POW             reduce using rule 139 (factor -> FLOAT .)
    PLUS            reduce using rule 139 (factor -> FLOAT .)
    MINUS           reduce using rule 139 (factor -> FLOAT .)
    LOGIC_AND       reduce using rule 70 (true_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 70 (true_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 70 (true_boolean_types -> FLOAT .)

  ! RIGHT_PAREN     [ reduce using rule 139 (factor -> FLOAT .) ]
  ! EQUALS_EQUALS   [ reduce using rule 139 (factor -> FLOAT .) ]
  ! IDENTICAL       [ reduce using rule 139 (factor -> FLOAT .) ]
  ! NOT_EQUALS      [ reduce using rule 139 (factor -> FLOAT .) ]
  ! NOT_IDENTICAL   [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SMALL_THAN      [ reduce using rule 139 (factor -> FLOAT .) ]
  ! GREATER_THAN    [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 139 (factor -> FLOAT .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SPACECRAFT      [ reduce using rule 139 (factor -> FLOAT .) ]
  ! NULL_FUSION     [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SEMICOLON       [ reduce using rule 139 (factor -> FLOAT .) ]
  ! LOGIC_AND       [ reduce using rule 79 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_OR        [ reduce using rule 79 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_XOR       [ reduce using rule 79 (false_boolean_types -> FLOAT .) ]


state 117

    (110) printable_values -> values printable_dividers . printable_values
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    values                         shift and go to state 56
    printable_values               shift and go to state 237
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 118

    (111) printable_values -> values COMMA . printable_values
    (122) printable_dividers -> COMMA .
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for LEFT_PAREN resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for LOGIC_NOT resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

  ! VARIABLE        [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! INTEGER         [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! STRING          [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! FLOAT           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! TRUE            [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! FALSE           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! IDENTIFIER      [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! LEFT_PAREN      [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! NEW             [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! LOGIC_NOT       [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! ARRAY           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! NULL            [ reduce using rule 122 (printable_dividers -> COMMA .) ]

    values                         shift and go to state 56
    printable_values               shift and go to state 238
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 119

    (84) comparation -> values comparator_operator . values
    (85) comparation -> values comparator_operator . expression
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 241
    STRING          shift and go to state 242
    FLOAT           shift and go to state 243
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245

    values                         shift and go to state 239
    expression                     shift and go to state 240
    boolean                        shift and go to state 63
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 120

    (123) printable_dividers -> STRING_CONCATENATION .

    VARIABLE        reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    INTEGER         reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    STRING          reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    FLOAT           reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    TRUE            reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    FALSE           reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    IDENTIFIER      reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    LEFT_PAREN      reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    NEW             reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    LOGIC_NOT       reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    ARRAY           reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    NULL            reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)


state 121

    (95) comparator_operator -> EQUALS_EQUALS .

    INTEGER         reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)
    STRING          reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)
    FLOAT           reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)
    TRUE            reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)
    FALSE           reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)
    VARIABLE        reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)
    LEFT_PAREN      reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)
    IDENTIFIER      reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)
    COUNT           reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)
    STRLEN          reduce using rule 95 (comparator_operator -> EQUALS_EQUALS .)


state 122

    (96) comparator_operator -> IDENTICAL .

    INTEGER         reduce using rule 96 (comparator_operator -> IDENTICAL .)
    STRING          reduce using rule 96 (comparator_operator -> IDENTICAL .)
    FLOAT           reduce using rule 96 (comparator_operator -> IDENTICAL .)
    TRUE            reduce using rule 96 (comparator_operator -> IDENTICAL .)
    FALSE           reduce using rule 96 (comparator_operator -> IDENTICAL .)
    VARIABLE        reduce using rule 96 (comparator_operator -> IDENTICAL .)
    LEFT_PAREN      reduce using rule 96 (comparator_operator -> IDENTICAL .)
    IDENTIFIER      reduce using rule 96 (comparator_operator -> IDENTICAL .)
    COUNT           reduce using rule 96 (comparator_operator -> IDENTICAL .)
    STRLEN          reduce using rule 96 (comparator_operator -> IDENTICAL .)


state 123

    (97) comparator_operator -> NOT_EQUALS .

    INTEGER         reduce using rule 97 (comparator_operator -> NOT_EQUALS .)
    STRING          reduce using rule 97 (comparator_operator -> NOT_EQUALS .)
    FLOAT           reduce using rule 97 (comparator_operator -> NOT_EQUALS .)
    TRUE            reduce using rule 97 (comparator_operator -> NOT_EQUALS .)
    FALSE           reduce using rule 97 (comparator_operator -> NOT_EQUALS .)
    VARIABLE        reduce using rule 97 (comparator_operator -> NOT_EQUALS .)
    LEFT_PAREN      reduce using rule 97 (comparator_operator -> NOT_EQUALS .)
    IDENTIFIER      reduce using rule 97 (comparator_operator -> NOT_EQUALS .)
    COUNT           reduce using rule 97 (comparator_operator -> NOT_EQUALS .)
    STRLEN          reduce using rule 97 (comparator_operator -> NOT_EQUALS .)


state 124

    (98) comparator_operator -> NOT_IDENTICAL .

    INTEGER         reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)
    STRING          reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)
    FLOAT           reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)
    TRUE            reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)
    FALSE           reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)
    VARIABLE        reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)
    LEFT_PAREN      reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)
    IDENTIFIER      reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)
    COUNT           reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)
    STRLEN          reduce using rule 98 (comparator_operator -> NOT_IDENTICAL .)


state 125

    (99) comparator_operator -> SMALL_THAN .

    INTEGER         reduce using rule 99 (comparator_operator -> SMALL_THAN .)
    STRING          reduce using rule 99 (comparator_operator -> SMALL_THAN .)
    FLOAT           reduce using rule 99 (comparator_operator -> SMALL_THAN .)
    TRUE            reduce using rule 99 (comparator_operator -> SMALL_THAN .)
    FALSE           reduce using rule 99 (comparator_operator -> SMALL_THAN .)
    VARIABLE        reduce using rule 99 (comparator_operator -> SMALL_THAN .)
    LEFT_PAREN      reduce using rule 99 (comparator_operator -> SMALL_THAN .)
    IDENTIFIER      reduce using rule 99 (comparator_operator -> SMALL_THAN .)
    COUNT           reduce using rule 99 (comparator_operator -> SMALL_THAN .)
    STRLEN          reduce using rule 99 (comparator_operator -> SMALL_THAN .)


state 126

    (100) comparator_operator -> GREATER_THAN .

    INTEGER         reduce using rule 100 (comparator_operator -> GREATER_THAN .)
    STRING          reduce using rule 100 (comparator_operator -> GREATER_THAN .)
    FLOAT           reduce using rule 100 (comparator_operator -> GREATER_THAN .)
    TRUE            reduce using rule 100 (comparator_operator -> GREATER_THAN .)
    FALSE           reduce using rule 100 (comparator_operator -> GREATER_THAN .)
    VARIABLE        reduce using rule 100 (comparator_operator -> GREATER_THAN .)
    LEFT_PAREN      reduce using rule 100 (comparator_operator -> GREATER_THAN .)
    IDENTIFIER      reduce using rule 100 (comparator_operator -> GREATER_THAN .)
    COUNT           reduce using rule 100 (comparator_operator -> GREATER_THAN .)
    STRLEN          reduce using rule 100 (comparator_operator -> GREATER_THAN .)


state 127

    (101) comparator_operator -> SMALL_EQUALS_TO .

    INTEGER         reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)
    STRING          reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)
    FLOAT           reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)
    TRUE            reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)
    FALSE           reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)
    VARIABLE        reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)
    LEFT_PAREN      reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)
    IDENTIFIER      reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)
    COUNT           reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)
    STRLEN          reduce using rule 101 (comparator_operator -> SMALL_EQUALS_TO .)


state 128

    (102) comparator_operator -> GREATER_EQUALS_TO .

    INTEGER         reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)
    STRING          reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)
    FLOAT           reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)
    TRUE            reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)
    FALSE           reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)
    VARIABLE        reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)
    LEFT_PAREN      reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)
    IDENTIFIER      reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)
    COUNT           reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)
    STRLEN          reduce using rule 102 (comparator_operator -> GREATER_EQUALS_TO .)


state 129

    (103) comparator_operator -> SPACECRAFT .

    INTEGER         reduce using rule 103 (comparator_operator -> SPACECRAFT .)
    STRING          reduce using rule 103 (comparator_operator -> SPACECRAFT .)
    FLOAT           reduce using rule 103 (comparator_operator -> SPACECRAFT .)
    TRUE            reduce using rule 103 (comparator_operator -> SPACECRAFT .)
    FALSE           reduce using rule 103 (comparator_operator -> SPACECRAFT .)
    VARIABLE        reduce using rule 103 (comparator_operator -> SPACECRAFT .)
    LEFT_PAREN      reduce using rule 103 (comparator_operator -> SPACECRAFT .)
    IDENTIFIER      reduce using rule 103 (comparator_operator -> SPACECRAFT .)
    COUNT           reduce using rule 103 (comparator_operator -> SPACECRAFT .)
    STRLEN          reduce using rule 103 (comparator_operator -> SPACECRAFT .)


state 130

    (104) comparator_operator -> NULL_FUSION .

    INTEGER         reduce using rule 104 (comparator_operator -> NULL_FUSION .)
    STRING          reduce using rule 104 (comparator_operator -> NULL_FUSION .)
    FLOAT           reduce using rule 104 (comparator_operator -> NULL_FUSION .)
    TRUE            reduce using rule 104 (comparator_operator -> NULL_FUSION .)
    FALSE           reduce using rule 104 (comparator_operator -> NULL_FUSION .)
    VARIABLE        reduce using rule 104 (comparator_operator -> NULL_FUSION .)
    LEFT_PAREN      reduce using rule 104 (comparator_operator -> NULL_FUSION .)
    IDENTIFIER      reduce using rule 104 (comparator_operator -> NULL_FUSION .)
    COUNT           reduce using rule 104 (comparator_operator -> NULL_FUSION .)
    STRLEN          reduce using rule 104 (comparator_operator -> NULL_FUSION .)


state 131

    (113) printable_values -> VARIABLE printable_dividers . printable_values
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    printable_values               shift and go to state 246
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 132

    (114) printable_values -> VARIABLE COMMA . printable_values
    (122) printable_dividers -> COMMA .
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for LEFT_PAREN resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for LOGIC_NOT resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

  ! VARIABLE        [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! INTEGER         [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! STRING          [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! FLOAT           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! TRUE            [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! FALSE           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! IDENTIFIER      [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! LEFT_PAREN      [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! NEW             [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! LOGIC_NOT       [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! ARRAY           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! NULL            [ reduce using rule 122 (printable_dividers -> COMMA .) ]

    printable_values               shift and go to state 247
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 133

    (115) printable_values -> VARIABLE STRING_CONCATENATION . STRING
    (123) printable_dividers -> STRING_CONCATENATION .

  ! shift/reduce conflict for STRING resolved as shift
    STRING          shift and go to state 248
    VARIABLE        reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    INTEGER         reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    FLOAT           reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    TRUE            reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    FALSE           reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    IDENTIFIER      reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    LEFT_PAREN      reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    NEW             reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    LOGIC_NOT       reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    ARRAY           reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)
    NULL            reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .)

  ! STRING          [ reduce using rule 123 (printable_dividers -> STRING_CONCATENATION .) ]


state 134

    (87) comparation -> VARIABLE EQUALS_EQUALS . values
    (90) comparation -> VARIABLE EQUALS_EQUALS . access_array_element
    (91) comparation -> VARIABLE EQUALS_EQUALS . VARIABLE
    (94) comparation -> VARIABLE EQUALS_EQUALS . access_element_matrix
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 249
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 250
    access_array_element           shift and go to state 251
    access_element_matrix          shift and go to state 252
    boolean                        shift and go to state 63

state 135

    (232) access_array_element -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET

    INTEGER         shift and go to state 195
    VARIABLE        shift and go to state 194


state 136

    (117) printable_values -> conditional printable_dividers . printable_values
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    conditional                    shift and go to state 59
    printable_values               shift and go to state 253
    values                         shift and go to state 56
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 137

    (118) printable_values -> conditional COMMA . printable_values
    (122) printable_dividers -> COMMA .
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for LEFT_PAREN resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for LOGIC_NOT resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

  ! VARIABLE        [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! INTEGER         [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! STRING          [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! FLOAT           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! TRUE            [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! FALSE           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! IDENTIFIER      [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! LEFT_PAREN      [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! NEW             [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! LOGIC_NOT       [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! ARRAY           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! NULL            [ reduce using rule 122 (printable_dividers -> COMMA .) ]

    conditional                    shift and go to state 59
    printable_values               shift and go to state 254
    values                         shift and go to state 56
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 138

    (120) printable_values -> structure_object_principal printable_dividers . printable_values
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    structure_object_principal     shift and go to state 60
    printable_values               shift and go to state 255
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 139

    (121) printable_values -> structure_object_principal COMMA . printable_values
    (122) printable_dividers -> COMMA .
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for LEFT_PAREN resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for LOGIC_NOT resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

  ! VARIABLE        [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! INTEGER         [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! STRING          [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! FLOAT           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! TRUE            [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! FALSE           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! IDENTIFIER      [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! LEFT_PAREN      [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! NEW             [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! LOGIC_NOT       [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! ARRAY           [ reduce using rule 122 (printable_dividers -> COMMA .) ]
  ! NULL            [ reduce using rule 122 (printable_dividers -> COMMA .) ]

    structure_object_principal     shift and go to state 60
    printable_values               shift and go to state 256
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    boolean                        shift and go to state 63
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 140

    (55) conditional -> boolean_expression logic_operator . boolean_expression
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    VARIABLE        shift and go to state 208
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    LOGIC_NOT       shift and go to state 74
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 151
    ARRAY           shift and go to state 78
    FALSE           shift and go to state 152
    NULL            shift and go to state 79

    boolean_expression             shift and go to state 257
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    values                         shift and go to state 149
    expression                     shift and go to state 72
    access_array_element           shift and go to state 150
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    boolean                        shift and go to state 63
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 141

    (56) logic_operator -> LOGIC_AND .

    VARIABLE        reduce using rule 56 (logic_operator -> LOGIC_AND .)
    IDENTIFIER      reduce using rule 56 (logic_operator -> LOGIC_AND .)
    LEFT_PAREN      reduce using rule 56 (logic_operator -> LOGIC_AND .)
    LOGIC_NOT       reduce using rule 56 (logic_operator -> LOGIC_AND .)
    INTEGER         reduce using rule 56 (logic_operator -> LOGIC_AND .)
    STRING          reduce using rule 56 (logic_operator -> LOGIC_AND .)
    FLOAT           reduce using rule 56 (logic_operator -> LOGIC_AND .)
    TRUE            reduce using rule 56 (logic_operator -> LOGIC_AND .)
    ARRAY           reduce using rule 56 (logic_operator -> LOGIC_AND .)
    FALSE           reduce using rule 56 (logic_operator -> LOGIC_AND .)
    NULL            reduce using rule 56 (logic_operator -> LOGIC_AND .)


state 142

    (57) logic_operator -> LOGIC_OR .

    VARIABLE        reduce using rule 57 (logic_operator -> LOGIC_OR .)
    IDENTIFIER      reduce using rule 57 (logic_operator -> LOGIC_OR .)
    LEFT_PAREN      reduce using rule 57 (logic_operator -> LOGIC_OR .)
    LOGIC_NOT       reduce using rule 57 (logic_operator -> LOGIC_OR .)
    INTEGER         reduce using rule 57 (logic_operator -> LOGIC_OR .)
    STRING          reduce using rule 57 (logic_operator -> LOGIC_OR .)
    FLOAT           reduce using rule 57 (logic_operator -> LOGIC_OR .)
    TRUE            reduce using rule 57 (logic_operator -> LOGIC_OR .)
    ARRAY           reduce using rule 57 (logic_operator -> LOGIC_OR .)
    FALSE           reduce using rule 57 (logic_operator -> LOGIC_OR .)
    NULL            reduce using rule 57 (logic_operator -> LOGIC_OR .)


state 143

    (58) logic_operator -> LOGIC_XOR .

    VARIABLE        reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    IDENTIFIER      reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    LEFT_PAREN      reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    LOGIC_NOT       reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    INTEGER         reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    STRING          reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    FLOAT           reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    TRUE            reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    ARRAY           reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    FALSE           reduce using rule 58 (logic_operator -> LOGIC_XOR .)
    NULL            reduce using rule 58 (logic_operator -> LOGIC_XOR .)


state 144

    (88) comparation -> access_array_element EQUALS_EQUALS . values
    (89) comparation -> access_array_element EQUALS_EQUALS . VARIABLE
    (92) comparation -> access_array_element EQUALS_EQUALS . access_array_element
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 260
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    access_array_element           shift and go to state 258
    values                         shift and go to state 259
    boolean                        shift and go to state 63

state 145

    (86) comparation -> expression comparator_operator . expression
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 262
    FLOAT           shift and go to state 263
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245
    STRING          shift and go to state 264

    expression                     shift and go to state 261
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 146

    (93) comparation -> access_element_matrix EQUALS_EQUALS . VARIABLE

    VARIABLE        shift and go to state 265


state 147

    (82) logic_not_sentence -> LOGIC_NOT conditional .

    LOGIC_AND       reduce using rule 82 (logic_not_sentence -> LOGIC_NOT conditional .)
    LOGIC_OR        reduce using rule 82 (logic_not_sentence -> LOGIC_NOT conditional .)
    LOGIC_XOR       reduce using rule 82 (logic_not_sentence -> LOGIC_NOT conditional .)
    COMMA           reduce using rule 82 (logic_not_sentence -> LOGIC_NOT conditional .)
    STRING_CONCATENATION reduce using rule 82 (logic_not_sentence -> LOGIC_NOT conditional .)
    SEMICOLON       reduce using rule 82 (logic_not_sentence -> LOGIC_NOT conditional .)
    RIGHT_PAREN     reduce using rule 82 (logic_not_sentence -> LOGIC_NOT conditional .)


state 148

    (83) logic_not_sentence -> LOGIC_NOT VARIABLE .
    (60) boolean_expression -> VARIABLE .
    (87) comparation -> VARIABLE . EQUALS_EQUALS values
    (90) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (91) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (94) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (71) true_boolean_types -> VARIABLE .
    (77) false_boolean_types -> VARIABLE .
    (140) factor -> VARIABLE .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for STRING_CONCATENATION resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
    LOGIC_AND       reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 60 (boolean_expression -> VARIABLE .)
    COMMA           reduce using rule 60 (boolean_expression -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 60 (boolean_expression -> VARIABLE .)
    SEMICOLON       reduce using rule 60 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 60 (boolean_expression -> VARIABLE .)
    EQUALS_EQUALS   shift and go to state 134
    LEFT_BRACKET    shift and go to state 135
    MULTIPLY        reduce using rule 140 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 140 (factor -> VARIABLE .)
    MODULE          reduce using rule 140 (factor -> VARIABLE .)
    POW             reduce using rule 140 (factor -> VARIABLE .)
    PLUS            reduce using rule 140 (factor -> VARIABLE .)
    MINUS           reduce using rule 140 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 140 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 140 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 140 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 140 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 140 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 140 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 140 (factor -> VARIABLE .)

  ! LOGIC_AND       [ reduce using rule 83 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 83 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 83 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! COMMA           [ reduce using rule 83 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! STRING_CONCATENATION [ reduce using rule 83 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 83 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! RIGHT_PAREN     [ reduce using rule 83 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 140 (factor -> VARIABLE .) ]


state 149

    (84) comparation -> values . comparator_operator values
    (85) comparation -> values . comparator_operator expression
    (95) comparator_operator -> . EQUALS_EQUALS
    (96) comparator_operator -> . IDENTICAL
    (97) comparator_operator -> . NOT_EQUALS
    (98) comparator_operator -> . NOT_IDENTICAL
    (99) comparator_operator -> . SMALL_THAN
    (100) comparator_operator -> . GREATER_THAN
    (101) comparator_operator -> . SMALL_EQUALS_TO
    (102) comparator_operator -> . GREATER_EQUALS_TO
    (103) comparator_operator -> . SPACECRAFT
    (104) comparator_operator -> . NULL_FUSION

    EQUALS_EQUALS   shift and go to state 121
    IDENTICAL       shift and go to state 122
    NOT_EQUALS      shift and go to state 123
    NOT_IDENTICAL   shift and go to state 124
    SMALL_THAN      shift and go to state 125
    GREATER_THAN    shift and go to state 126
    SMALL_EQUALS_TO shift and go to state 127
    GREATER_EQUALS_TO shift and go to state 128
    SPACECRAFT      shift and go to state 129
    NULL_FUSION     shift and go to state 130

    comparator_operator            shift and go to state 119

state 150

    (88) comparation -> access_array_element . EQUALS_EQUALS values
    (89) comparation -> access_array_element . EQUALS_EQUALS VARIABLE
    (92) comparation -> access_array_element . EQUALS_EQUALS access_array_element

    EQUALS_EQUALS   shift and go to state 144


state 151

    (67) true_boolean_types -> TRUE .
    (128) boolean -> TRUE .

    LOGIC_AND       reduce using rule 67 (true_boolean_types -> TRUE .)
    LOGIC_OR        reduce using rule 67 (true_boolean_types -> TRUE .)
    LOGIC_XOR       reduce using rule 67 (true_boolean_types -> TRUE .)
    EQUALS_EQUALS   reduce using rule 128 (boolean -> TRUE .)
    IDENTICAL       reduce using rule 128 (boolean -> TRUE .)
    NOT_EQUALS      reduce using rule 128 (boolean -> TRUE .)
    NOT_IDENTICAL   reduce using rule 128 (boolean -> TRUE .)
    SMALL_THAN      reduce using rule 128 (boolean -> TRUE .)
    GREATER_THAN    reduce using rule 128 (boolean -> TRUE .)
    SMALL_EQUALS_TO reduce using rule 128 (boolean -> TRUE .)
    GREATER_EQUALS_TO reduce using rule 128 (boolean -> TRUE .)
    SPACECRAFT      reduce using rule 128 (boolean -> TRUE .)
    NULL_FUSION     reduce using rule 128 (boolean -> TRUE .)


state 152

    (74) false_boolean_types -> FALSE .
    (129) boolean -> FALSE .

    LOGIC_AND       reduce using rule 74 (false_boolean_types -> FALSE .)
    LOGIC_OR        reduce using rule 74 (false_boolean_types -> FALSE .)
    LOGIC_XOR       reduce using rule 74 (false_boolean_types -> FALSE .)
    EQUALS_EQUALS   reduce using rule 129 (boolean -> FALSE .)
    IDENTICAL       reduce using rule 129 (boolean -> FALSE .)
    NOT_EQUALS      reduce using rule 129 (boolean -> FALSE .)
    NOT_IDENTICAL   reduce using rule 129 (boolean -> FALSE .)
    SMALL_THAN      reduce using rule 129 (boolean -> FALSE .)
    GREATER_THAN    reduce using rule 129 (boolean -> FALSE .)
    SMALL_EQUALS_TO reduce using rule 129 (boolean -> FALSE .)
    GREATER_EQUALS_TO reduce using rule 129 (boolean -> FALSE .)
    SPACECRAFT      reduce using rule 129 (boolean -> FALSE .)
    NULL_FUSION     reduce using rule 129 (boolean -> FALSE .)


state 153

    (65) logic_expression -> true_boolean_types logic_operator . false_boolean_types
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL

    FALSE           shift and go to state 267
    STRING          shift and go to state 268
    INTEGER         shift and go to state 269
    VARIABLE        shift and go to state 270
    IDENTIFIER      shift and go to state 271
    FLOAT           shift and go to state 272
    ARRAY           shift and go to state 273
    NULL            shift and go to state 79

    false_boolean_types            shift and go to state 266

state 154

    (66) logic_expression -> false_boolean_types logic_operator . true_boolean_types
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN

    TRUE            shift and go to state 275
    STRING          shift and go to state 276
    INTEGER         shift and go to state 277
    FLOAT           shift and go to state 278
    VARIABLE        shift and go to state 279
    IDENTIFIER      shift and go to state 280
    ARRAY           shift and go to state 281

    true_boolean_types             shift and go to state 274

state 155

    (131) expression -> term PLUS . expression
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 262
    FLOAT           shift and go to state 263
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245
    STRING          shift and go to state 264

    term                           shift and go to state 77
    expression                     shift and go to state 282
    factor                         shift and go to state 80

state 156

    (132) expression -> term MINUS . expression
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 262
    FLOAT           shift and go to state 263
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245
    STRING          shift and go to state 264

    term                           shift and go to state 77
    expression                     shift and go to state 283
    factor                         shift and go to state 80

state 157

    (73) true_boolean_types -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (80) false_boolean_types -> ARRAY LEFT_PAREN . RIGHT_PAREN
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    RIGHT_PAREN     shift and go to state 285
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 284
    boolean                        shift and go to state 63

state 158

    (134) term -> factor MULTIPLY . term
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 262
    FLOAT           shift and go to state 263
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245
    STRING          shift and go to state 264

    factor                         shift and go to state 80
    term                           shift and go to state 286

state 159

    (135) term -> factor DIVIDE . term
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 262
    FLOAT           shift and go to state 263
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245
    STRING          shift and go to state 264

    factor                         shift and go to state 80
    term                           shift and go to state 287

state 160

    (136) term -> factor MODULE . term
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 262
    FLOAT           shift and go to state 263
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245
    STRING          shift and go to state 264

    factor                         shift and go to state 80
    term                           shift and go to state 288

state 161

    (137) term -> factor POW . term
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 262
    FLOAT           shift and go to state 263
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245
    STRING          shift and go to state 264

    factor                         shift and go to state 80
    term                           shift and go to state 289

state 162

    (106) print_statement -> PRINT LEFT_PAREN printable_values . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 290


state 163

    (269) class_declaration -> CLASS IDENTIFIER class_extends_opt . class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) class_implements_opt -> . IMPLEMENTS interface_list
    (277) class_implements_opt -> .

    IMPLEMENTS      shift and go to state 292
    LEFT_BRACE      reduce using rule 277 (class_implements_opt -> .)

    class_implements_opt           shift and go to state 291

state 164

    (274) class_extends_opt -> EXTENDS . IDENTIFIER

    IDENTIFIER      shift and go to state 293


state 165

    (270) interface_declaration -> INTERFACE IDENTIFIER class_extends_opt . LEFT_BRACE interface_body RIGHT_BRACE

    LEFT_BRACE      shift and go to state 294


state 166

    (174) function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN . params RIGHT_PAREN codeblock
    (167) params -> . real_params
    (168) params -> . empty
    (169) real_params -> . VARIABLE
    (170) real_params -> . values
    (171) real_params -> . real_params COMMA VARIABLE
    (172) real_params -> . real_params COMMA values
    (173) empty -> .
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 298
    RIGHT_PAREN     reduce using rule 173 (empty -> .)
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    params                         shift and go to state 295
    real_params                    shift and go to state 296
    empty                          shift and go to state 297
    values                         shift and go to state 299
    boolean                        shift and go to state 63

state 167

    (166) function_invocation -> VARIABLE . LEFT_PAREN params RIGHT_PAREN
    (60) boolean_expression -> VARIABLE .
    (140) factor -> VARIABLE .
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (257) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (258) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (259) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (87) comparation -> VARIABLE . EQUALS_EQUALS values
    (90) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (91) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (94) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (234) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (71) true_boolean_types -> VARIABLE .
    (77) false_boolean_types -> VARIABLE .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
    LEFT_PAREN      shift and go to state 300
    LOGIC_AND       reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 60 (boolean_expression -> VARIABLE .)
    SEMICOLON       reduce using rule 60 (boolean_expression -> VARIABLE .)
    MULTIPLY        reduce using rule 140 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 140 (factor -> VARIABLE .)
    MODULE          reduce using rule 140 (factor -> VARIABLE .)
    POW             reduce using rule 140 (factor -> VARIABLE .)
    PLUS            reduce using rule 140 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 140 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 140 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 140 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 140 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 140 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 140 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 140 (factor -> VARIABLE .)
    LEFT_BRACKET    shift and go to state 89
    MINUS           shift and go to state 91
    EQUALS_EQUALS   shift and go to state 134

  ! MINUS           [ reduce using rule 140 (factor -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 140 (factor -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 140 (factor -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]


state 168

    (145) variable_assignment -> VARIABLE assignment_operator values .
    (84) comparation -> values . comparator_operator values
    (85) comparation -> values . comparator_operator expression
    (95) comparator_operator -> . EQUALS_EQUALS
    (96) comparator_operator -> . IDENTICAL
    (97) comparator_operator -> . NOT_EQUALS
    (98) comparator_operator -> . NOT_IDENTICAL
    (99) comparator_operator -> . SMALL_THAN
    (100) comparator_operator -> . GREATER_THAN
    (101) comparator_operator -> . SMALL_EQUALS_TO
    (102) comparator_operator -> . GREATER_EQUALS_TO
    (103) comparator_operator -> . SPACECRAFT
    (104) comparator_operator -> . NULL_FUSION

    SEMICOLON       reduce using rule 145 (variable_assignment -> VARIABLE assignment_operator values .)
    EQUALS_EQUALS   shift and go to state 121
    IDENTICAL       shift and go to state 122
    NOT_EQUALS      shift and go to state 123
    NOT_IDENTICAL   shift and go to state 124
    SMALL_THAN      shift and go to state 125
    GREATER_THAN    shift and go to state 126
    SMALL_EQUALS_TO shift and go to state 127
    GREATER_EQUALS_TO shift and go to state 128
    SPACECRAFT      shift and go to state 129
    NULL_FUSION     shift and go to state 130

    comparator_operator            shift and go to state 119

state 169

    (146) variable_assignment -> VARIABLE assignment_operator IDENTIFIER .
    (165) function_invocation -> IDENTIFIER . LEFT_PAREN params RIGHT_PAREN
    (61) boolean_expression -> IDENTIFIER .
    (72) true_boolean_types -> IDENTIFIER .
    (78) false_boolean_types -> IDENTIFIER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 61 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 61 (boolean_expression -> IDENTIFIER .)
    LEFT_PAREN      shift and go to state 301
    LOGIC_AND       reduce using rule 61 (boolean_expression -> IDENTIFIER .)
    LOGIC_OR        reduce using rule 61 (boolean_expression -> IDENTIFIER .)
    LOGIC_XOR       reduce using rule 61 (boolean_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 61 (boolean_expression -> IDENTIFIER .)

  ! SEMICOLON       [ reduce using rule 146 (variable_assignment -> VARIABLE assignment_operator IDENTIFIER .) ]
  ! LOGIC_AND       [ reduce using rule 72 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_OR        [ reduce using rule 72 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_XOR       [ reduce using rule 72 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_AND       [ reduce using rule 78 (false_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_OR        [ reduce using rule 78 (false_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_XOR       [ reduce using rule 78 (false_boolean_types -> IDENTIFIER .) ]


state 170

    (147) variable_assignment -> VARIABLE assignment_operator expression .
    (86) comparation -> expression . comparator_operator expression
    (95) comparator_operator -> . EQUALS_EQUALS
    (96) comparator_operator -> . IDENTICAL
    (97) comparator_operator -> . NOT_EQUALS
    (98) comparator_operator -> . NOT_IDENTICAL
    (99) comparator_operator -> . SMALL_THAN
    (100) comparator_operator -> . GREATER_THAN
    (101) comparator_operator -> . SMALL_EQUALS_TO
    (102) comparator_operator -> . GREATER_EQUALS_TO
    (103) comparator_operator -> . SPACECRAFT
    (104) comparator_operator -> . NULL_FUSION

    SEMICOLON       reduce using rule 147 (variable_assignment -> VARIABLE assignment_operator expression .)
    EQUALS_EQUALS   shift and go to state 121
    IDENTICAL       shift and go to state 122
    NOT_EQUALS      shift and go to state 123
    NOT_IDENTICAL   shift and go to state 124
    SMALL_THAN      shift and go to state 125
    GREATER_THAN    shift and go to state 126
    SMALL_EQUALS_TO shift and go to state 127
    GREATER_EQUALS_TO shift and go to state 128
    SPACECRAFT      shift and go to state 129
    NULL_FUSION     shift and go to state 130

    comparator_operator            shift and go to state 145

state 171

    (148) variable_assignment -> VARIABLE assignment_operator function_invocation .

    SEMICOLON       reduce using rule 148 (variable_assignment -> VARIABLE assignment_operator function_invocation .)


state 172

    (149) variable_assignment -> VARIABLE assignment_operator string_special_function .

    SEMICOLON       reduce using rule 149 (variable_assignment -> VARIABLE assignment_operator string_special_function .)


state 173

    (150) variable_assignment -> VARIABLE assignment_operator array_special_function_structure .

    SEMICOLON       reduce using rule 150 (variable_assignment -> VARIABLE assignment_operator array_special_function_structure .)


state 174

    (151) variable_assignment -> VARIABLE assignment_operator types_structure .

    SEMICOLON       reduce using rule 151 (variable_assignment -> VARIABLE assignment_operator types_structure .)


state 175

    (152) variable_assignment -> VARIABLE assignment_operator input .

    SEMICOLON       reduce using rule 152 (variable_assignment -> VARIABLE assignment_operator input .)


state 176

    (153) variable_assignment -> VARIABLE assignment_operator special_function .

    SEMICOLON       reduce using rule 153 (variable_assignment -> VARIABLE assignment_operator special_function .)


state 177

    (154) variable_assignment -> VARIABLE assignment_operator conditional .

    SEMICOLON       reduce using rule 154 (variable_assignment -> VARIABLE assignment_operator conditional .)


state 178

    (184) string_special_function -> STRLEN . LEFT_PAREN string_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 302


state 179

    (185) string_special_function -> SUBSTR . LEFT_PAREN string_param COMMA int_param RIGHT_PAREN
    (186) string_special_function -> SUBSTR . LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 303


state 180

    (193) array_special_function_structure -> array_special_function .

    SEMICOLON       reduce using rule 193 (array_special_function_structure -> array_special_function .)


state 181

    (194) array_special_function_structure -> statement_array_special_function_error .

    SEMICOLON       reduce using rule 194 (array_special_function_structure -> statement_array_special_function_error .)


state 182

    (182) input -> FEGTS . LEFT_PAREN STDIN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 304


state 183

    (183) input -> READLINE . LEFT_PAREN STRING RIGHT_PAREN

    LEFT_PAREN      shift and go to state 305


state 184

    (175) special_function -> arrow_function .

    SEMICOLON       reduce using rule 175 (special_function -> arrow_function .)


state 185

    (176) special_function -> anonymous_functions .

    SEMICOLON       reduce using rule 176 (special_function -> anonymous_functions .)


state 186

    (195) array_special_function -> COUNT . LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (196) array_special_function -> COUNT . LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (197) array_special_function -> COUNT . LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (200) statement_array_special_function_error -> COUNT . LEFT_PAREN error count_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 306


state 187

    (198) array_special_function -> ARRAY_POP . LEFT_PAREN VARIABLE RIGHT_PAREN
    (201) statement_array_special_function_error -> ARRAY_POP . LEFT_PAREN error RIGHT_PAREN

    LEFT_PAREN      shift and go to state 307


state 188

    (199) array_special_function -> ARRAY_SUM . LEFT_PAREN VARIABLE RIGHT_PAREN
    (202) statement_array_special_function_error -> ARRAY_SUM . LEFT_PAREN error RIGHT_PAREN

    LEFT_PAREN      shift and go to state 308


state 189

    (216) structure_array_principal -> access_array_element .
    (230) access_array_stucture -> access_array_element .
    (262) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (263) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (264) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element
    (88) comparation -> access_array_element . EQUALS_EQUALS values
    (89) comparation -> access_array_element . EQUALS_EQUALS VARIABLE
    (92) comparation -> access_array_element . EQUALS_EQUALS access_array_element

  ! reduce/reduce conflict for SEMICOLON resolved using rule 216 (structure_array_principal -> access_array_element .)
    SEMICOLON       reduce using rule 216 (structure_array_principal -> access_array_element .)
    MINUS           shift and go to state 95
    EQUALS_EQUALS   shift and go to state 144

  ! SEMICOLON       [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]


state 190

    (237) structure_matrix_principal -> access_element_matrix . SEMICOLON
    (250) modify_element_matrix -> access_element_matrix . EQUALS values
    (251) modify_element_matrix -> access_element_matrix . EQUALS VARIABLE
    (93) comparation -> access_element_matrix . EQUALS_EQUALS VARIABLE

    SEMICOLON       shift and go to state 96
    EQUALS          shift and go to state 97
    EQUALS_EQUALS   shift and go to state 146


state 191

    (177) arrow_function -> FN . LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock
    (178) arrow_function -> FN . LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement
    (179) arrow_function -> FN . LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression

    LEFT_PAREN      shift and go to state 309


state 192

    (180) anonymous_functions -> FUNCTION . LEFT_PAREN params RIGHT_PAREN codeblock

    LEFT_PAREN      shift and go to state 310


state 193

    (217) indexed_array -> ARRAY . LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> ARRAY . LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> ARRAY . LEFT_BRACKET structure_array RIGHT_BRACKET
    (240) matrix_firstform -> ARRAY . LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (73) true_boolean_types -> ARRAY . LEFT_PAREN values RIGHT_PAREN
    (80) false_boolean_types -> ARRAY . LEFT_PAREN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 311
    LEFT_BRACKET    shift and go to state 105


state 194

    (233) access_array_element -> VARIABLE LEFT_BRACKET VARIABLE . RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE . RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE . RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 312


state 195

    (232) access_array_element -> VARIABLE LEFT_BRACKET INTEGER . RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER . RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER . RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 313


state 196

    (252) add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET . EQUALS indexed_array

    EQUALS          shift and go to state 314


state 197

    (234) statement_access_array_element_error -> VARIABLE LEFT_BRACKET error . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 315


state 198

    (257) access_method_object -> VARIABLE MINUS GREATER_THAN . function_invocation
    (258) access_method_object -> VARIABLE MINUS GREATER_THAN . accessType
    (259) access_method_object -> VARIABLE MINUS GREATER_THAN . accessType EQUALS values
    (260) access_method_object -> VARIABLE MINUS GREATER_THAN . accessType EQUALS VARIABLE
    (261) access_method_object -> VARIABLE MINUS GREATER_THAN . accessType EQUALS access_array_element
    (165) function_invocation -> . IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (166) function_invocation -> . VARIABLE LEFT_PAREN params RIGHT_PAREN
    (267) accessType -> . IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET
    (268) accessType -> . IDENTIFIER

    IDENTIFIER      shift and go to state 319
    VARIABLE        shift and go to state 316

    function_invocation            shift and go to state 317
    accessType                     shift and go to state 318

state 199

    (262) access_method_object -> access_array_element MINUS GREATER_THAN . function_invocation
    (263) access_method_object -> access_array_element MINUS GREATER_THAN . accessType
    (264) access_method_object -> access_array_element MINUS GREATER_THAN . accessType EQUALS values
    (265) access_method_object -> access_array_element MINUS GREATER_THAN . accessType EQUALS VARIABLE
    (266) access_method_object -> access_array_element MINUS GREATER_THAN . accessType EQUALS access_array_element
    (165) function_invocation -> . IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (166) function_invocation -> . VARIABLE LEFT_PAREN params RIGHT_PAREN
    (267) accessType -> . IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET
    (268) accessType -> . IDENTIFIER

    IDENTIFIER      shift and go to state 319
    VARIABLE        shift and go to state 316

    function_invocation            shift and go to state 320
    accessType                     shift and go to state 321

state 200

    (250) modify_element_matrix -> access_element_matrix EQUALS values .

    SEMICOLON       reduce using rule 250 (modify_element_matrix -> access_element_matrix EQUALS values .)


state 201

    (251) modify_element_matrix -> access_element_matrix EQUALS VARIABLE .

    SEMICOLON       reduce using rule 251 (modify_element_matrix -> access_element_matrix EQUALS VARIABLE .)


state 202

    (124) values -> INTEGER .

    SEMICOLON       reduce using rule 124 (values -> INTEGER .)
    RIGHT_BRACKET   reduce using rule 124 (values -> INTEGER .)
    LOGIC_AND       reduce using rule 124 (values -> INTEGER .)
    LOGIC_OR        reduce using rule 124 (values -> INTEGER .)
    LOGIC_XOR       reduce using rule 124 (values -> INTEGER .)
    COMMA           reduce using rule 124 (values -> INTEGER .)
    STRING_CONCATENATION reduce using rule 124 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 124 (values -> INTEGER .)
    ECHO            reduce using rule 124 (values -> INTEGER .)
    PRINT           reduce using rule 124 (values -> INTEGER .)
    CLASS           reduce using rule 124 (values -> INTEGER .)
    INTERFACE       reduce using rule 124 (values -> INTEGER .)
    FUNCTION        reduce using rule 124 (values -> INTEGER .)
    VARIABLE        reduce using rule 124 (values -> INTEGER .)
    INCREASE        reduce using rule 124 (values -> INTEGER .)
    DECREMENT       reduce using rule 124 (values -> INTEGER .)
    IF              reduce using rule 124 (values -> INTEGER .)
    WHILE           reduce using rule 124 (values -> INTEGER .)
    FOR             reduce using rule 124 (values -> INTEGER .)
    CONST           reduce using rule 124 (values -> INTEGER .)
    DEFINE          reduce using rule 124 (values -> INTEGER .)
    ARRAY           reduce using rule 124 (values -> INTEGER .)
    LEFT_BRACKET    reduce using rule 124 (values -> INTEGER .)
    NEW             reduce using rule 124 (values -> INTEGER .)
    PHP_END_IDENTIFIER reduce using rule 124 (values -> INTEGER .)
    RETURN          reduce using rule 124 (values -> INTEGER .)
    BREAK           reduce using rule 124 (values -> INTEGER .)
    RIGHT_BRACE     reduce using rule 124 (values -> INTEGER .)


state 203

    (125) values -> STRING .

    SEMICOLON       reduce using rule 125 (values -> STRING .)
    RIGHT_BRACKET   reduce using rule 125 (values -> STRING .)
    LOGIC_AND       reduce using rule 125 (values -> STRING .)
    LOGIC_OR        reduce using rule 125 (values -> STRING .)
    LOGIC_XOR       reduce using rule 125 (values -> STRING .)
    COMMA           reduce using rule 125 (values -> STRING .)
    STRING_CONCATENATION reduce using rule 125 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 125 (values -> STRING .)
    ECHO            reduce using rule 125 (values -> STRING .)
    PRINT           reduce using rule 125 (values -> STRING .)
    CLASS           reduce using rule 125 (values -> STRING .)
    INTERFACE       reduce using rule 125 (values -> STRING .)
    FUNCTION        reduce using rule 125 (values -> STRING .)
    VARIABLE        reduce using rule 125 (values -> STRING .)
    INCREASE        reduce using rule 125 (values -> STRING .)
    DECREMENT       reduce using rule 125 (values -> STRING .)
    IF              reduce using rule 125 (values -> STRING .)
    WHILE           reduce using rule 125 (values -> STRING .)
    FOR             reduce using rule 125 (values -> STRING .)
    CONST           reduce using rule 125 (values -> STRING .)
    DEFINE          reduce using rule 125 (values -> STRING .)
    ARRAY           reduce using rule 125 (values -> STRING .)
    LEFT_BRACKET    reduce using rule 125 (values -> STRING .)
    NEW             reduce using rule 125 (values -> STRING .)
    PHP_END_IDENTIFIER reduce using rule 125 (values -> STRING .)
    RETURN          reduce using rule 125 (values -> STRING .)
    BREAK           reduce using rule 125 (values -> STRING .)
    RIGHT_BRACE     reduce using rule 125 (values -> STRING .)


state 204

    (126) values -> FLOAT .

    SEMICOLON       reduce using rule 126 (values -> FLOAT .)
    COMMA           reduce using rule 126 (values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 126 (values -> FLOAT .)
    RIGHT_BRACKET   reduce using rule 126 (values -> FLOAT .)
    LOGIC_AND       reduce using rule 126 (values -> FLOAT .)
    LOGIC_OR        reduce using rule 126 (values -> FLOAT .)
    LOGIC_XOR       reduce using rule 126 (values -> FLOAT .)
    STRING_CONCATENATION reduce using rule 126 (values -> FLOAT .)
    ECHO            reduce using rule 126 (values -> FLOAT .)
    PRINT           reduce using rule 126 (values -> FLOAT .)
    CLASS           reduce using rule 126 (values -> FLOAT .)
    INTERFACE       reduce using rule 126 (values -> FLOAT .)
    FUNCTION        reduce using rule 126 (values -> FLOAT .)
    VARIABLE        reduce using rule 126 (values -> FLOAT .)
    INCREASE        reduce using rule 126 (values -> FLOAT .)
    DECREMENT       reduce using rule 126 (values -> FLOAT .)
    IF              reduce using rule 126 (values -> FLOAT .)
    WHILE           reduce using rule 126 (values -> FLOAT .)
    FOR             reduce using rule 126 (values -> FLOAT .)
    CONST           reduce using rule 126 (values -> FLOAT .)
    DEFINE          reduce using rule 126 (values -> FLOAT .)
    ARRAY           reduce using rule 126 (values -> FLOAT .)
    LEFT_BRACKET    reduce using rule 126 (values -> FLOAT .)
    NEW             reduce using rule 126 (values -> FLOAT .)
    PHP_END_IDENTIFIER reduce using rule 126 (values -> FLOAT .)
    RETURN          reduce using rule 126 (values -> FLOAT .)
    BREAK           reduce using rule 126 (values -> FLOAT .)
    RIGHT_BRACE     reduce using rule 126 (values -> FLOAT .)


state 205

    (128) boolean -> TRUE .

    SEMICOLON       reduce using rule 128 (boolean -> TRUE .)
    COMMA           reduce using rule 128 (boolean -> TRUE .)
    RIGHT_PAREN     reduce using rule 128 (boolean -> TRUE .)
    RIGHT_BRACKET   reduce using rule 128 (boolean -> TRUE .)
    LOGIC_AND       reduce using rule 128 (boolean -> TRUE .)
    LOGIC_OR        reduce using rule 128 (boolean -> TRUE .)
    LOGIC_XOR       reduce using rule 128 (boolean -> TRUE .)
    STRING_CONCATENATION reduce using rule 128 (boolean -> TRUE .)
    ECHO            reduce using rule 128 (boolean -> TRUE .)
    PRINT           reduce using rule 128 (boolean -> TRUE .)
    CLASS           reduce using rule 128 (boolean -> TRUE .)
    INTERFACE       reduce using rule 128 (boolean -> TRUE .)
    FUNCTION        reduce using rule 128 (boolean -> TRUE .)
    VARIABLE        reduce using rule 128 (boolean -> TRUE .)
    INCREASE        reduce using rule 128 (boolean -> TRUE .)
    DECREMENT       reduce using rule 128 (boolean -> TRUE .)
    IF              reduce using rule 128 (boolean -> TRUE .)
    WHILE           reduce using rule 128 (boolean -> TRUE .)
    FOR             reduce using rule 128 (boolean -> TRUE .)
    CONST           reduce using rule 128 (boolean -> TRUE .)
    DEFINE          reduce using rule 128 (boolean -> TRUE .)
    ARRAY           reduce using rule 128 (boolean -> TRUE .)
    LEFT_BRACKET    reduce using rule 128 (boolean -> TRUE .)
    NEW             reduce using rule 128 (boolean -> TRUE .)
    PHP_END_IDENTIFIER reduce using rule 128 (boolean -> TRUE .)
    RETURN          reduce using rule 128 (boolean -> TRUE .)
    BREAK           reduce using rule 128 (boolean -> TRUE .)
    RIGHT_BRACE     reduce using rule 128 (boolean -> TRUE .)


state 206

    (129) boolean -> FALSE .

    SEMICOLON       reduce using rule 129 (boolean -> FALSE .)
    COMMA           reduce using rule 129 (boolean -> FALSE .)
    RIGHT_PAREN     reduce using rule 129 (boolean -> FALSE .)
    RIGHT_BRACKET   reduce using rule 129 (boolean -> FALSE .)
    LOGIC_AND       reduce using rule 129 (boolean -> FALSE .)
    LOGIC_OR        reduce using rule 129 (boolean -> FALSE .)
    LOGIC_XOR       reduce using rule 129 (boolean -> FALSE .)
    STRING_CONCATENATION reduce using rule 129 (boolean -> FALSE .)
    ECHO            reduce using rule 129 (boolean -> FALSE .)
    PRINT           reduce using rule 129 (boolean -> FALSE .)
    CLASS           reduce using rule 129 (boolean -> FALSE .)
    INTERFACE       reduce using rule 129 (boolean -> FALSE .)
    FUNCTION        reduce using rule 129 (boolean -> FALSE .)
    VARIABLE        reduce using rule 129 (boolean -> FALSE .)
    INCREASE        reduce using rule 129 (boolean -> FALSE .)
    DECREMENT       reduce using rule 129 (boolean -> FALSE .)
    IF              reduce using rule 129 (boolean -> FALSE .)
    WHILE           reduce using rule 129 (boolean -> FALSE .)
    FOR             reduce using rule 129 (boolean -> FALSE .)
    CONST           reduce using rule 129 (boolean -> FALSE .)
    DEFINE          reduce using rule 129 (boolean -> FALSE .)
    ARRAY           reduce using rule 129 (boolean -> FALSE .)
    LEFT_BRACKET    reduce using rule 129 (boolean -> FALSE .)
    NEW             reduce using rule 129 (boolean -> FALSE .)
    PHP_END_IDENTIFIER reduce using rule 129 (boolean -> FALSE .)
    RETURN          reduce using rule 129 (boolean -> FALSE .)
    BREAK           reduce using rule 129 (boolean -> FALSE .)
    RIGHT_BRACE     reduce using rule 129 (boolean -> FALSE .)


state 207

    (15) if_statement -> IF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement

    RIGHT_PAREN     shift and go to state 322


state 208

    (60) boolean_expression -> VARIABLE .
    (87) comparation -> VARIABLE . EQUALS_EQUALS values
    (90) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (91) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (94) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (71) true_boolean_types -> VARIABLE .
    (77) false_boolean_types -> VARIABLE .
    (140) factor -> VARIABLE .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
    LOGIC_AND       reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 60 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 60 (boolean_expression -> VARIABLE .)
    COMMA           reduce using rule 60 (boolean_expression -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 60 (boolean_expression -> VARIABLE .)
    SEMICOLON       reduce using rule 60 (boolean_expression -> VARIABLE .)
    EQUALS_EQUALS   shift and go to state 134
    LEFT_BRACKET    shift and go to state 135
    MULTIPLY        reduce using rule 140 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 140 (factor -> VARIABLE .)
    MODULE          reduce using rule 140 (factor -> VARIABLE .)
    POW             reduce using rule 140 (factor -> VARIABLE .)
    PLUS            reduce using rule 140 (factor -> VARIABLE .)
    MINUS           reduce using rule 140 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 140 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 140 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 140 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 140 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 140 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 140 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 140 (factor -> VARIABLE .)

  ! LOGIC_AND       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 140 (factor -> VARIABLE .) ]


state 209

    (14) while_statement -> WHILE LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    RIGHT_PAREN     shift and go to state 323


state 210

    (31) for_statement -> FOR LEFT_PAREN VARIABLE . EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    EQUALS          shift and go to state 324


state 211

    (163) const_syntax -> CONST IDENTIFIER EQUALS . values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 325
    boolean                        shift and go to state 63

state 212

    (164) define_syntax -> DEFINE LEFT_PAREN STRING . COMMA values RIGHT_PAREN

    COMMA           shift and go to state 326


state 213

    (244) structure_matrix_first -> ARRAY . LEFT_PAREN values RIGHT_PAREN
    (245) structure_matrix_first -> ARRAY . LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first
    (217) indexed_array -> ARRAY . LEFT_PAREN values_array_indexed RIGHT_PAREN

    LEFT_PAREN      shift and go to state 327


state 214

    (217) indexed_array -> ARRAY LEFT_PAREN values_array_indexed . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 328


state 215

    (218) associative_array -> ARRAY LEFT_PAREN structure_array . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 329


state 216

    (240) matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first . RIGHT_PAREN SEMICOLON

    RIGHT_PAREN     shift and go to state 330


state 217

    (224) values_array_indexed -> values .
    (225) values_array_indexed -> values . COMMA values_array_indexed

    RIGHT_PAREN     reduce using rule 224 (values_array_indexed -> values .)
    COMMA           shift and go to state 331


state 218

    (226) values_array_indexed -> object_creation .
    (227) values_array_indexed -> object_creation . COMMA values_array_indexed

    RIGHT_PAREN     reduce using rule 226 (values_array_indexed -> object_creation .)
    COMMA           shift and go to state 332


state 219

    (228) values_array_indexed -> indexed_array .
    (229) values_array_indexed -> indexed_array . COMMA values_array_indexed

    RIGHT_PAREN     reduce using rule 228 (values_array_indexed -> indexed_array .)
    COMMA           shift and go to state 333


state 220

    (220) structure_array -> key . EQUALS GREATER_THAN values
    (221) structure_array -> key . EQUALS GREATER_THAN values COMMA structure_array

    EQUALS          shift and go to state 334


state 221

    (124) values -> INTEGER .
    (222) key -> INTEGER .

    COMMA           reduce using rule 124 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 124 (values -> INTEGER .)
    EQUALS          reduce using rule 222 (key -> INTEGER .)


state 222

    (125) values -> STRING .
    (223) key -> STRING .

    COMMA           reduce using rule 125 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 125 (values -> STRING .)
    EQUALS          reduce using rule 223 (key -> STRING .)


state 223

    (219) associative_array -> ARRAY LEFT_BRACKET structure_array . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 335


state 224

    (222) key -> INTEGER .

    EQUALS          reduce using rule 222 (key -> INTEGER .)


state 225

    (223) key -> STRING .

    EQUALS          reduce using rule 223 (key -> STRING .)


state 226

    (242) structure_matrix_second -> LEFT_BRACKET values . RIGHT_BRACKET
    (243) structure_matrix_second -> LEFT_BRACKET values . RIGHT_BRACKET COMMA structure_matrix_second

    RIGHT_BRACKET   shift and go to state 336


state 227

    (241) matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 337


state 228

    (256) object_creation -> NEW IDENTIFIER LEFT_PAREN . params RIGHT_PAREN
    (167) params -> . real_params
    (168) params -> . empty
    (169) real_params -> . VARIABLE
    (170) real_params -> . values
    (171) real_params -> . real_params COMMA VARIABLE
    (172) real_params -> . real_params COMMA values
    (173) empty -> .
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 298
    RIGHT_PAREN     reduce using rule 173 (empty -> .)
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    params                         shift and go to state 338
    real_params                    shift and go to state 296
    empty                          shift and go to state 297
    values                         shift and go to state 299
    boolean                        shift and go to state 63

state 229

    (62) boolean_expression -> LEFT_PAREN conditional . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 235


state 230

    (60) boolean_expression -> VARIABLE .
    (87) comparation -> VARIABLE . EQUALS_EQUALS values
    (90) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (91) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (94) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (140) factor -> VARIABLE .
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (71) true_boolean_types -> VARIABLE .
    (77) false_boolean_types -> VARIABLE .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 60 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_AND       reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 60 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 60 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 60 (boolean_expression -> VARIABLE .)
    EQUALS_EQUALS   shift and go to state 134
    MULTIPLY        reduce using rule 140 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 140 (factor -> VARIABLE .)
    MODULE          reduce using rule 140 (factor -> VARIABLE .)
    POW             reduce using rule 140 (factor -> VARIABLE .)
    PLUS            reduce using rule 140 (factor -> VARIABLE .)
    MINUS           reduce using rule 140 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 140 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 140 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 140 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 140 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 140 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 140 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 140 (factor -> VARIABLE .)
    LEFT_BRACKET    shift and go to state 135

  ! RIGHT_PAREN     [ reduce using rule 140 (factor -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 140 (factor -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 71 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 77 (false_boolean_types -> VARIABLE .) ]


state 231

    (138) factor -> INTEGER .
    (124) values -> INTEGER .
    (69) true_boolean_types -> INTEGER .
    (76) false_boolean_types -> INTEGER .

  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 69 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 69 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 69 (true_boolean_types -> INTEGER .)
    MULTIPLY        reduce using rule 138 (factor -> INTEGER .)
    DIVIDE          reduce using rule 138 (factor -> INTEGER .)
    MODULE          reduce using rule 138 (factor -> INTEGER .)
    POW             reduce using rule 138 (factor -> INTEGER .)
    PLUS            reduce using rule 138 (factor -> INTEGER .)
    MINUS           reduce using rule 138 (factor -> INTEGER .)
    RIGHT_PAREN     reduce using rule 138 (factor -> INTEGER .)
    EQUALS_EQUALS   reduce using rule 124 (values -> INTEGER .)
    IDENTICAL       reduce using rule 124 (values -> INTEGER .)
    NOT_EQUALS      reduce using rule 124 (values -> INTEGER .)
    NOT_IDENTICAL   reduce using rule 124 (values -> INTEGER .)
    SMALL_THAN      reduce using rule 124 (values -> INTEGER .)
    GREATER_THAN    reduce using rule 124 (values -> INTEGER .)
    SMALL_EQUALS_TO reduce using rule 124 (values -> INTEGER .)
    GREATER_EQUALS_TO reduce using rule 124 (values -> INTEGER .)
    SPACECRAFT      reduce using rule 124 (values -> INTEGER .)
    NULL_FUSION     reduce using rule 124 (values -> INTEGER .)
    LOGIC_AND       reduce using rule 69 (true_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 69 (true_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 69 (true_boolean_types -> INTEGER .)

  ! EQUALS_EQUALS   [ reduce using rule 138 (factor -> INTEGER .) ]
  ! IDENTICAL       [ reduce using rule 138 (factor -> INTEGER .) ]
  ! NOT_EQUALS      [ reduce using rule 138 (factor -> INTEGER .) ]
  ! NOT_IDENTICAL   [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SMALL_THAN      [ reduce using rule 138 (factor -> INTEGER .) ]
  ! GREATER_THAN    [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 138 (factor -> INTEGER .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SPACECRAFT      [ reduce using rule 138 (factor -> INTEGER .) ]
  ! NULL_FUSION     [ reduce using rule 138 (factor -> INTEGER .) ]
  ! LOGIC_AND       [ reduce using rule 76 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_OR        [ reduce using rule 76 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_XOR       [ reduce using rule 76 (false_boolean_types -> INTEGER .) ]


state 232

    (139) factor -> FLOAT .
    (126) values -> FLOAT .
    (70) true_boolean_types -> FLOAT .
    (79) false_boolean_types -> FLOAT .

  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 70 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 70 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 70 (true_boolean_types -> FLOAT .)
    MULTIPLY        reduce using rule 139 (factor -> FLOAT .)
    DIVIDE          reduce using rule 139 (factor -> FLOAT .)
    MODULE          reduce using rule 139 (factor -> FLOAT .)
    POW             reduce using rule 139 (factor -> FLOAT .)
    PLUS            reduce using rule 139 (factor -> FLOAT .)
    MINUS           reduce using rule 139 (factor -> FLOAT .)
    RIGHT_PAREN     reduce using rule 139 (factor -> FLOAT .)
    EQUALS_EQUALS   reduce using rule 126 (values -> FLOAT .)
    IDENTICAL       reduce using rule 126 (values -> FLOAT .)
    NOT_EQUALS      reduce using rule 126 (values -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 126 (values -> FLOAT .)
    SMALL_THAN      reduce using rule 126 (values -> FLOAT .)
    GREATER_THAN    reduce using rule 126 (values -> FLOAT .)
    SMALL_EQUALS_TO reduce using rule 126 (values -> FLOAT .)
    GREATER_EQUALS_TO reduce using rule 126 (values -> FLOAT .)
    SPACECRAFT      reduce using rule 126 (values -> FLOAT .)
    NULL_FUSION     reduce using rule 126 (values -> FLOAT .)
    LOGIC_AND       reduce using rule 70 (true_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 70 (true_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 70 (true_boolean_types -> FLOAT .)

  ! EQUALS_EQUALS   [ reduce using rule 139 (factor -> FLOAT .) ]
  ! IDENTICAL       [ reduce using rule 139 (factor -> FLOAT .) ]
  ! NOT_EQUALS      [ reduce using rule 139 (factor -> FLOAT .) ]
  ! NOT_IDENTICAL   [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SMALL_THAN      [ reduce using rule 139 (factor -> FLOAT .) ]
  ! GREATER_THAN    [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 139 (factor -> FLOAT .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SPACECRAFT      [ reduce using rule 139 (factor -> FLOAT .) ]
  ! NULL_FUSION     [ reduce using rule 139 (factor -> FLOAT .) ]
  ! LOGIC_AND       [ reduce using rule 79 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_OR        [ reduce using rule 79 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_XOR       [ reduce using rule 79 (false_boolean_types -> FLOAT .) ]


state 233

    (142) factor -> STRING .
    (125) values -> STRING .
    (68) true_boolean_types -> STRING .
    (75) false_boolean_types -> STRING .

  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 68 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 68 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 68 (true_boolean_types -> STRING .)
    MULTIPLY        reduce using rule 142 (factor -> STRING .)
    DIVIDE          reduce using rule 142 (factor -> STRING .)
    MODULE          reduce using rule 142 (factor -> STRING .)
    POW             reduce using rule 142 (factor -> STRING .)
    PLUS            reduce using rule 142 (factor -> STRING .)
    MINUS           reduce using rule 142 (factor -> STRING .)
    RIGHT_PAREN     reduce using rule 142 (factor -> STRING .)
    EQUALS_EQUALS   reduce using rule 125 (values -> STRING .)
    IDENTICAL       reduce using rule 125 (values -> STRING .)
    NOT_EQUALS      reduce using rule 125 (values -> STRING .)
    NOT_IDENTICAL   reduce using rule 125 (values -> STRING .)
    SMALL_THAN      reduce using rule 125 (values -> STRING .)
    GREATER_THAN    reduce using rule 125 (values -> STRING .)
    SMALL_EQUALS_TO reduce using rule 125 (values -> STRING .)
    GREATER_EQUALS_TO reduce using rule 125 (values -> STRING .)
    SPACECRAFT      reduce using rule 125 (values -> STRING .)
    NULL_FUSION     reduce using rule 125 (values -> STRING .)
    LOGIC_AND       reduce using rule 68 (true_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 68 (true_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 68 (true_boolean_types -> STRING .)

  ! EQUALS_EQUALS   [ reduce using rule 142 (factor -> STRING .) ]
  ! IDENTICAL       [ reduce using rule 142 (factor -> STRING .) ]
  ! NOT_EQUALS      [ reduce using rule 142 (factor -> STRING .) ]
  ! NOT_IDENTICAL   [ reduce using rule 142 (factor -> STRING .) ]
  ! SMALL_THAN      [ reduce using rule 142 (factor -> STRING .) ]
  ! GREATER_THAN    [ reduce using rule 142 (factor -> STRING .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 142 (factor -> STRING .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 142 (factor -> STRING .) ]
  ! SPACECRAFT      [ reduce using rule 142 (factor -> STRING .) ]
  ! NULL_FUSION     [ reduce using rule 142 (factor -> STRING .) ]
  ! LOGIC_AND       [ reduce using rule 75 (false_boolean_types -> STRING .) ]
  ! LOGIC_OR        [ reduce using rule 75 (false_boolean_types -> STRING .) ]
  ! LOGIC_XOR       [ reduce using rule 75 (false_boolean_types -> STRING .) ]


state 234

    (105) print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN .

    SEMICOLON       reduce using rule 105 (print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN .)


state 235

    (62) boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .

    LOGIC_AND       reduce using rule 62 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    LOGIC_OR        reduce using rule 62 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    LOGIC_XOR       reduce using rule 62 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    COMMA           reduce using rule 62 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 62 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    SEMICOLON       reduce using rule 62 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 62 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)


state 236

    (141) factor -> LEFT_PAREN expression RIGHT_PAREN .

    MULTIPLY        reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    DIVIDE          reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    MODULE          reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    POW             reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUALS_EQUALS   reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    IDENTICAL       reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_EQUALS      reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_IDENTICAL   reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    SMALL_THAN      reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_THAN    reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    SMALL_EQUALS_TO reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_EQUALS_TO reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    SPACECRAFT      reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    NULL_FUSION     reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    SEMICOLON       reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    LOGIC_AND       reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    LOGIC_OR        reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    LOGIC_XOR       reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    COMMA           reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 141 (factor -> LEFT_PAREN expression RIGHT_PAREN .)


state 237

    (110) printable_values -> values printable_dividers printable_values .

    SEMICOLON       reduce using rule 110 (printable_values -> values printable_dividers printable_values .)
    RIGHT_PAREN     reduce using rule 110 (printable_values -> values printable_dividers printable_values .)


state 238

    (111) printable_values -> values COMMA printable_values .

    SEMICOLON       reduce using rule 111 (printable_values -> values COMMA printable_values .)
    RIGHT_PAREN     reduce using rule 111 (printable_values -> values COMMA printable_values .)


state 239

    (84) comparation -> values comparator_operator values .

    LOGIC_AND       reduce using rule 84 (comparation -> values comparator_operator values .)
    LOGIC_OR        reduce using rule 84 (comparation -> values comparator_operator values .)
    LOGIC_XOR       reduce using rule 84 (comparation -> values comparator_operator values .)
    COMMA           reduce using rule 84 (comparation -> values comparator_operator values .)
    STRING_CONCATENATION reduce using rule 84 (comparation -> values comparator_operator values .)
    SEMICOLON       reduce using rule 84 (comparation -> values comparator_operator values .)
    RIGHT_PAREN     reduce using rule 84 (comparation -> values comparator_operator values .)


state 240

    (85) comparation -> values comparator_operator expression .

    LOGIC_AND       reduce using rule 85 (comparation -> values comparator_operator expression .)
    LOGIC_OR        reduce using rule 85 (comparation -> values comparator_operator expression .)
    LOGIC_XOR       reduce using rule 85 (comparation -> values comparator_operator expression .)
    COMMA           reduce using rule 85 (comparation -> values comparator_operator expression .)
    STRING_CONCATENATION reduce using rule 85 (comparation -> values comparator_operator expression .)
    SEMICOLON       reduce using rule 85 (comparation -> values comparator_operator expression .)
    RIGHT_PAREN     reduce using rule 85 (comparation -> values comparator_operator expression .)


state 241

    (124) values -> INTEGER .
    (138) factor -> INTEGER .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for STRING_CONCATENATION resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 124 (values -> INTEGER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 124 (values -> INTEGER .)
    LOGIC_AND       reduce using rule 124 (values -> INTEGER .)
    LOGIC_OR        reduce using rule 124 (values -> INTEGER .)
    LOGIC_XOR       reduce using rule 124 (values -> INTEGER .)
    COMMA           reduce using rule 124 (values -> INTEGER .)
    STRING_CONCATENATION reduce using rule 124 (values -> INTEGER .)
    SEMICOLON       reduce using rule 124 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 124 (values -> INTEGER .)
    MULTIPLY        reduce using rule 138 (factor -> INTEGER .)
    DIVIDE          reduce using rule 138 (factor -> INTEGER .)
    MODULE          reduce using rule 138 (factor -> INTEGER .)
    POW             reduce using rule 138 (factor -> INTEGER .)
    PLUS            reduce using rule 138 (factor -> INTEGER .)
    MINUS           reduce using rule 138 (factor -> INTEGER .)

  ! LOGIC_AND       [ reduce using rule 138 (factor -> INTEGER .) ]
  ! LOGIC_OR        [ reduce using rule 138 (factor -> INTEGER .) ]
  ! LOGIC_XOR       [ reduce using rule 138 (factor -> INTEGER .) ]
  ! COMMA           [ reduce using rule 138 (factor -> INTEGER .) ]
  ! STRING_CONCATENATION [ reduce using rule 138 (factor -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 138 (factor -> INTEGER .) ]
  ! RIGHT_PAREN     [ reduce using rule 138 (factor -> INTEGER .) ]


state 242

    (125) values -> STRING .
    (142) factor -> STRING .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for STRING_CONCATENATION resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 125 (values -> STRING .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 125 (values -> STRING .)
    LOGIC_AND       reduce using rule 125 (values -> STRING .)
    LOGIC_OR        reduce using rule 125 (values -> STRING .)
    LOGIC_XOR       reduce using rule 125 (values -> STRING .)
    COMMA           reduce using rule 125 (values -> STRING .)
    STRING_CONCATENATION reduce using rule 125 (values -> STRING .)
    SEMICOLON       reduce using rule 125 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 125 (values -> STRING .)
    MULTIPLY        reduce using rule 142 (factor -> STRING .)
    DIVIDE          reduce using rule 142 (factor -> STRING .)
    MODULE          reduce using rule 142 (factor -> STRING .)
    POW             reduce using rule 142 (factor -> STRING .)
    PLUS            reduce using rule 142 (factor -> STRING .)
    MINUS           reduce using rule 142 (factor -> STRING .)

  ! LOGIC_AND       [ reduce using rule 142 (factor -> STRING .) ]
  ! LOGIC_OR        [ reduce using rule 142 (factor -> STRING .) ]
  ! LOGIC_XOR       [ reduce using rule 142 (factor -> STRING .) ]
  ! COMMA           [ reduce using rule 142 (factor -> STRING .) ]
  ! STRING_CONCATENATION [ reduce using rule 142 (factor -> STRING .) ]
  ! SEMICOLON       [ reduce using rule 142 (factor -> STRING .) ]
  ! RIGHT_PAREN     [ reduce using rule 142 (factor -> STRING .) ]


state 243

    (126) values -> FLOAT .
    (139) factor -> FLOAT .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for COMMA resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for STRING_CONCATENATION resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 126 (values -> FLOAT .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 126 (values -> FLOAT .)
    LOGIC_AND       reduce using rule 126 (values -> FLOAT .)
    LOGIC_OR        reduce using rule 126 (values -> FLOAT .)
    LOGIC_XOR       reduce using rule 126 (values -> FLOAT .)
    COMMA           reduce using rule 126 (values -> FLOAT .)
    STRING_CONCATENATION reduce using rule 126 (values -> FLOAT .)
    SEMICOLON       reduce using rule 126 (values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 126 (values -> FLOAT .)
    MULTIPLY        reduce using rule 139 (factor -> FLOAT .)
    DIVIDE          reduce using rule 139 (factor -> FLOAT .)
    MODULE          reduce using rule 139 (factor -> FLOAT .)
    POW             reduce using rule 139 (factor -> FLOAT .)
    PLUS            reduce using rule 139 (factor -> FLOAT .)
    MINUS           reduce using rule 139 (factor -> FLOAT .)

  ! LOGIC_AND       [ reduce using rule 139 (factor -> FLOAT .) ]
  ! LOGIC_OR        [ reduce using rule 139 (factor -> FLOAT .) ]
  ! LOGIC_XOR       [ reduce using rule 139 (factor -> FLOAT .) ]
  ! COMMA           [ reduce using rule 139 (factor -> FLOAT .) ]
  ! STRING_CONCATENATION [ reduce using rule 139 (factor -> FLOAT .) ]
  ! SEMICOLON       [ reduce using rule 139 (factor -> FLOAT .) ]
  ! RIGHT_PAREN     [ reduce using rule 139 (factor -> FLOAT .) ]


state 244

    (140) factor -> VARIABLE .

    MULTIPLY        reduce using rule 140 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 140 (factor -> VARIABLE .)
    MODULE          reduce using rule 140 (factor -> VARIABLE .)
    POW             reduce using rule 140 (factor -> VARIABLE .)
    PLUS            reduce using rule 140 (factor -> VARIABLE .)
    MINUS           reduce using rule 140 (factor -> VARIABLE .)
    LOGIC_AND       reduce using rule 140 (factor -> VARIABLE .)
    LOGIC_OR        reduce using rule 140 (factor -> VARIABLE .)
    LOGIC_XOR       reduce using rule 140 (factor -> VARIABLE .)
    COMMA           reduce using rule 140 (factor -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 140 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 140 (factor -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 140 (factor -> VARIABLE .)
    EQUALS_EQUALS   reduce using rule 140 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 140 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 140 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 140 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 140 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 140 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 140 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 140 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 140 (factor -> VARIABLE .)


state 245

    (141) factor -> LEFT_PAREN . expression RIGHT_PAREN
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 262
    FLOAT           shift and go to state 263
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245
    STRING          shift and go to state 264

    expression                     shift and go to state 339
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 246

    (113) printable_values -> VARIABLE printable_dividers printable_values .

    SEMICOLON       reduce using rule 113 (printable_values -> VARIABLE printable_dividers printable_values .)
    RIGHT_PAREN     reduce using rule 113 (printable_values -> VARIABLE printable_dividers printable_values .)


state 247

    (114) printable_values -> VARIABLE COMMA printable_values .

    SEMICOLON       reduce using rule 114 (printable_values -> VARIABLE COMMA printable_values .)
    RIGHT_PAREN     reduce using rule 114 (printable_values -> VARIABLE COMMA printable_values .)


state 248

    (115) printable_values -> VARIABLE STRING_CONCATENATION STRING .

    SEMICOLON       reduce using rule 115 (printable_values -> VARIABLE STRING_CONCATENATION STRING .)
    RIGHT_PAREN     reduce using rule 115 (printable_values -> VARIABLE STRING_CONCATENATION STRING .)


state 249

    (91) comparation -> VARIABLE EQUALS_EQUALS VARIABLE .
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET

    LOGIC_AND       reduce using rule 91 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    LOGIC_OR        reduce using rule 91 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    LOGIC_XOR       reduce using rule 91 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    COMMA           reduce using rule 91 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 91 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 91 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 91 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    LEFT_BRACKET    shift and go to state 135


state 250

    (87) comparation -> VARIABLE EQUALS_EQUALS values .

    LOGIC_AND       reduce using rule 87 (comparation -> VARIABLE EQUALS_EQUALS values .)
    LOGIC_OR        reduce using rule 87 (comparation -> VARIABLE EQUALS_EQUALS values .)
    LOGIC_XOR       reduce using rule 87 (comparation -> VARIABLE EQUALS_EQUALS values .)
    COMMA           reduce using rule 87 (comparation -> VARIABLE EQUALS_EQUALS values .)
    STRING_CONCATENATION reduce using rule 87 (comparation -> VARIABLE EQUALS_EQUALS values .)
    SEMICOLON       reduce using rule 87 (comparation -> VARIABLE EQUALS_EQUALS values .)
    RIGHT_PAREN     reduce using rule 87 (comparation -> VARIABLE EQUALS_EQUALS values .)


state 251

    (90) comparation -> VARIABLE EQUALS_EQUALS access_array_element .

    LOGIC_AND       reduce using rule 90 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    LOGIC_OR        reduce using rule 90 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    LOGIC_XOR       reduce using rule 90 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    COMMA           reduce using rule 90 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    STRING_CONCATENATION reduce using rule 90 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    SEMICOLON       reduce using rule 90 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    RIGHT_PAREN     reduce using rule 90 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)


state 252

    (94) comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .

    LOGIC_AND       reduce using rule 94 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    LOGIC_OR        reduce using rule 94 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    LOGIC_XOR       reduce using rule 94 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    COMMA           reduce using rule 94 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    STRING_CONCATENATION reduce using rule 94 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    SEMICOLON       reduce using rule 94 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    RIGHT_PAREN     reduce using rule 94 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)


state 253

    (117) printable_values -> conditional printable_dividers printable_values .

    SEMICOLON       reduce using rule 117 (printable_values -> conditional printable_dividers printable_values .)
    RIGHT_PAREN     reduce using rule 117 (printable_values -> conditional printable_dividers printable_values .)


state 254

    (118) printable_values -> conditional COMMA printable_values .

    SEMICOLON       reduce using rule 118 (printable_values -> conditional COMMA printable_values .)
    RIGHT_PAREN     reduce using rule 118 (printable_values -> conditional COMMA printable_values .)


state 255

    (120) printable_values -> structure_object_principal printable_dividers printable_values .

    SEMICOLON       reduce using rule 120 (printable_values -> structure_object_principal printable_dividers printable_values .)
    RIGHT_PAREN     reduce using rule 120 (printable_values -> structure_object_principal printable_dividers printable_values .)


state 256

    (121) printable_values -> structure_object_principal COMMA printable_values .

    SEMICOLON       reduce using rule 121 (printable_values -> structure_object_principal COMMA printable_values .)
    RIGHT_PAREN     reduce using rule 121 (printable_values -> structure_object_principal COMMA printable_values .)


state 257

    (55) conditional -> boolean_expression logic_operator boolean_expression .

    COMMA           reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    STRING_CONCATENATION reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    SEMICOLON       reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    RIGHT_PAREN     reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    LOGIC_AND       reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    LOGIC_OR        reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    LOGIC_XOR       reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)


state 258

    (92) comparation -> access_array_element EQUALS_EQUALS access_array_element .

    LOGIC_AND       reduce using rule 92 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    LOGIC_OR        reduce using rule 92 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    LOGIC_XOR       reduce using rule 92 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    COMMA           reduce using rule 92 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    STRING_CONCATENATION reduce using rule 92 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    SEMICOLON       reduce using rule 92 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    RIGHT_PAREN     reduce using rule 92 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)


state 259

    (88) comparation -> access_array_element EQUALS_EQUALS values .

    LOGIC_AND       reduce using rule 88 (comparation -> access_array_element EQUALS_EQUALS values .)
    LOGIC_OR        reduce using rule 88 (comparation -> access_array_element EQUALS_EQUALS values .)
    LOGIC_XOR       reduce using rule 88 (comparation -> access_array_element EQUALS_EQUALS values .)
    COMMA           reduce using rule 88 (comparation -> access_array_element EQUALS_EQUALS values .)
    STRING_CONCATENATION reduce using rule 88 (comparation -> access_array_element EQUALS_EQUALS values .)
    SEMICOLON       reduce using rule 88 (comparation -> access_array_element EQUALS_EQUALS values .)
    RIGHT_PAREN     reduce using rule 88 (comparation -> access_array_element EQUALS_EQUALS values .)


state 260

    (89) comparation -> access_array_element EQUALS_EQUALS VARIABLE .
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET

    LOGIC_AND       reduce using rule 89 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    LOGIC_OR        reduce using rule 89 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    LOGIC_XOR       reduce using rule 89 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    COMMA           reduce using rule 89 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 89 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 89 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 89 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    LEFT_BRACKET    shift and go to state 340


state 261

    (86) comparation -> expression comparator_operator expression .

    LOGIC_AND       reduce using rule 86 (comparation -> expression comparator_operator expression .)
    LOGIC_OR        reduce using rule 86 (comparation -> expression comparator_operator expression .)
    LOGIC_XOR       reduce using rule 86 (comparation -> expression comparator_operator expression .)
    COMMA           reduce using rule 86 (comparation -> expression comparator_operator expression .)
    STRING_CONCATENATION reduce using rule 86 (comparation -> expression comparator_operator expression .)
    SEMICOLON       reduce using rule 86 (comparation -> expression comparator_operator expression .)
    RIGHT_PAREN     reduce using rule 86 (comparation -> expression comparator_operator expression .)


state 262

    (138) factor -> INTEGER .

    MULTIPLY        reduce using rule 138 (factor -> INTEGER .)
    DIVIDE          reduce using rule 138 (factor -> INTEGER .)
    MODULE          reduce using rule 138 (factor -> INTEGER .)
    POW             reduce using rule 138 (factor -> INTEGER .)
    PLUS            reduce using rule 138 (factor -> INTEGER .)
    MINUS           reduce using rule 138 (factor -> INTEGER .)
    LOGIC_AND       reduce using rule 138 (factor -> INTEGER .)
    LOGIC_OR        reduce using rule 138 (factor -> INTEGER .)
    LOGIC_XOR       reduce using rule 138 (factor -> INTEGER .)
    COMMA           reduce using rule 138 (factor -> INTEGER .)
    STRING_CONCATENATION reduce using rule 138 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 138 (factor -> INTEGER .)
    RIGHT_PAREN     reduce using rule 138 (factor -> INTEGER .)
    EQUALS_EQUALS   reduce using rule 138 (factor -> INTEGER .)
    IDENTICAL       reduce using rule 138 (factor -> INTEGER .)
    NOT_EQUALS      reduce using rule 138 (factor -> INTEGER .)
    NOT_IDENTICAL   reduce using rule 138 (factor -> INTEGER .)
    SMALL_THAN      reduce using rule 138 (factor -> INTEGER .)
    GREATER_THAN    reduce using rule 138 (factor -> INTEGER .)
    SMALL_EQUALS_TO reduce using rule 138 (factor -> INTEGER .)
    GREATER_EQUALS_TO reduce using rule 138 (factor -> INTEGER .)
    SPACECRAFT      reduce using rule 138 (factor -> INTEGER .)
    NULL_FUSION     reduce using rule 138 (factor -> INTEGER .)


state 263

    (139) factor -> FLOAT .

    MULTIPLY        reduce using rule 139 (factor -> FLOAT .)
    DIVIDE          reduce using rule 139 (factor -> FLOAT .)
    MODULE          reduce using rule 139 (factor -> FLOAT .)
    POW             reduce using rule 139 (factor -> FLOAT .)
    PLUS            reduce using rule 139 (factor -> FLOAT .)
    MINUS           reduce using rule 139 (factor -> FLOAT .)
    LOGIC_AND       reduce using rule 139 (factor -> FLOAT .)
    LOGIC_OR        reduce using rule 139 (factor -> FLOAT .)
    LOGIC_XOR       reduce using rule 139 (factor -> FLOAT .)
    COMMA           reduce using rule 139 (factor -> FLOAT .)
    STRING_CONCATENATION reduce using rule 139 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 139 (factor -> FLOAT .)
    RIGHT_PAREN     reduce using rule 139 (factor -> FLOAT .)
    EQUALS_EQUALS   reduce using rule 139 (factor -> FLOAT .)
    IDENTICAL       reduce using rule 139 (factor -> FLOAT .)
    NOT_EQUALS      reduce using rule 139 (factor -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 139 (factor -> FLOAT .)
    SMALL_THAN      reduce using rule 139 (factor -> FLOAT .)
    GREATER_THAN    reduce using rule 139 (factor -> FLOAT .)
    SMALL_EQUALS_TO reduce using rule 139 (factor -> FLOAT .)
    GREATER_EQUALS_TO reduce using rule 139 (factor -> FLOAT .)
    SPACECRAFT      reduce using rule 139 (factor -> FLOAT .)
    NULL_FUSION     reduce using rule 139 (factor -> FLOAT .)


state 264

    (142) factor -> STRING .

    MULTIPLY        reduce using rule 142 (factor -> STRING .)
    DIVIDE          reduce using rule 142 (factor -> STRING .)
    MODULE          reduce using rule 142 (factor -> STRING .)
    POW             reduce using rule 142 (factor -> STRING .)
    PLUS            reduce using rule 142 (factor -> STRING .)
    MINUS           reduce using rule 142 (factor -> STRING .)
    LOGIC_AND       reduce using rule 142 (factor -> STRING .)
    LOGIC_OR        reduce using rule 142 (factor -> STRING .)
    LOGIC_XOR       reduce using rule 142 (factor -> STRING .)
    COMMA           reduce using rule 142 (factor -> STRING .)
    STRING_CONCATENATION reduce using rule 142 (factor -> STRING .)
    SEMICOLON       reduce using rule 142 (factor -> STRING .)
    RIGHT_PAREN     reduce using rule 142 (factor -> STRING .)
    EQUALS_EQUALS   reduce using rule 142 (factor -> STRING .)
    IDENTICAL       reduce using rule 142 (factor -> STRING .)
    NOT_EQUALS      reduce using rule 142 (factor -> STRING .)
    NOT_IDENTICAL   reduce using rule 142 (factor -> STRING .)
    SMALL_THAN      reduce using rule 142 (factor -> STRING .)
    GREATER_THAN    reduce using rule 142 (factor -> STRING .)
    SMALL_EQUALS_TO reduce using rule 142 (factor -> STRING .)
    GREATER_EQUALS_TO reduce using rule 142 (factor -> STRING .)
    SPACECRAFT      reduce using rule 142 (factor -> STRING .)
    NULL_FUSION     reduce using rule 142 (factor -> STRING .)


state 265

    (93) comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .

    LOGIC_AND       reduce using rule 93 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    LOGIC_OR        reduce using rule 93 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    LOGIC_XOR       reduce using rule 93 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    COMMA           reduce using rule 93 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 93 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 93 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 93 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)


state 266

    (65) logic_expression -> true_boolean_types logic_operator false_boolean_types .

    LOGIC_AND       reduce using rule 65 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    LOGIC_OR        reduce using rule 65 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    LOGIC_XOR       reduce using rule 65 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    COMMA           reduce using rule 65 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    STRING_CONCATENATION reduce using rule 65 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    SEMICOLON       reduce using rule 65 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    RIGHT_PAREN     reduce using rule 65 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)


state 267

    (74) false_boolean_types -> FALSE .

    LOGIC_AND       reduce using rule 74 (false_boolean_types -> FALSE .)
    LOGIC_OR        reduce using rule 74 (false_boolean_types -> FALSE .)
    LOGIC_XOR       reduce using rule 74 (false_boolean_types -> FALSE .)
    COMMA           reduce using rule 74 (false_boolean_types -> FALSE .)
    STRING_CONCATENATION reduce using rule 74 (false_boolean_types -> FALSE .)
    SEMICOLON       reduce using rule 74 (false_boolean_types -> FALSE .)
    RIGHT_PAREN     reduce using rule 74 (false_boolean_types -> FALSE .)


state 268

    (75) false_boolean_types -> STRING .

    LOGIC_AND       reduce using rule 75 (false_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 75 (false_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 75 (false_boolean_types -> STRING .)
    COMMA           reduce using rule 75 (false_boolean_types -> STRING .)
    STRING_CONCATENATION reduce using rule 75 (false_boolean_types -> STRING .)
    SEMICOLON       reduce using rule 75 (false_boolean_types -> STRING .)
    RIGHT_PAREN     reduce using rule 75 (false_boolean_types -> STRING .)


state 269

    (76) false_boolean_types -> INTEGER .

    LOGIC_AND       reduce using rule 76 (false_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 76 (false_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 76 (false_boolean_types -> INTEGER .)
    COMMA           reduce using rule 76 (false_boolean_types -> INTEGER .)
    STRING_CONCATENATION reduce using rule 76 (false_boolean_types -> INTEGER .)
    SEMICOLON       reduce using rule 76 (false_boolean_types -> INTEGER .)
    RIGHT_PAREN     reduce using rule 76 (false_boolean_types -> INTEGER .)


state 270

    (77) false_boolean_types -> VARIABLE .

    LOGIC_AND       reduce using rule 77 (false_boolean_types -> VARIABLE .)
    LOGIC_OR        reduce using rule 77 (false_boolean_types -> VARIABLE .)
    LOGIC_XOR       reduce using rule 77 (false_boolean_types -> VARIABLE .)
    COMMA           reduce using rule 77 (false_boolean_types -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 77 (false_boolean_types -> VARIABLE .)
    SEMICOLON       reduce using rule 77 (false_boolean_types -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 77 (false_boolean_types -> VARIABLE .)


state 271

    (78) false_boolean_types -> IDENTIFIER .

    LOGIC_AND       reduce using rule 78 (false_boolean_types -> IDENTIFIER .)
    LOGIC_OR        reduce using rule 78 (false_boolean_types -> IDENTIFIER .)
    LOGIC_XOR       reduce using rule 78 (false_boolean_types -> IDENTIFIER .)
    COMMA           reduce using rule 78 (false_boolean_types -> IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 78 (false_boolean_types -> IDENTIFIER .)
    SEMICOLON       reduce using rule 78 (false_boolean_types -> IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 78 (false_boolean_types -> IDENTIFIER .)


state 272

    (79) false_boolean_types -> FLOAT .

    LOGIC_AND       reduce using rule 79 (false_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 79 (false_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 79 (false_boolean_types -> FLOAT .)
    COMMA           reduce using rule 79 (false_boolean_types -> FLOAT .)
    STRING_CONCATENATION reduce using rule 79 (false_boolean_types -> FLOAT .)
    SEMICOLON       reduce using rule 79 (false_boolean_types -> FLOAT .)
    RIGHT_PAREN     reduce using rule 79 (false_boolean_types -> FLOAT .)


state 273

    (80) false_boolean_types -> ARRAY . LEFT_PAREN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 341


state 274

    (66) logic_expression -> false_boolean_types logic_operator true_boolean_types .

    LOGIC_AND       reduce using rule 66 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    LOGIC_OR        reduce using rule 66 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    LOGIC_XOR       reduce using rule 66 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    COMMA           reduce using rule 66 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    STRING_CONCATENATION reduce using rule 66 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    SEMICOLON       reduce using rule 66 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    RIGHT_PAREN     reduce using rule 66 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)


state 275

    (67) true_boolean_types -> TRUE .

    LOGIC_AND       reduce using rule 67 (true_boolean_types -> TRUE .)
    LOGIC_OR        reduce using rule 67 (true_boolean_types -> TRUE .)
    LOGIC_XOR       reduce using rule 67 (true_boolean_types -> TRUE .)
    COMMA           reduce using rule 67 (true_boolean_types -> TRUE .)
    STRING_CONCATENATION reduce using rule 67 (true_boolean_types -> TRUE .)
    SEMICOLON       reduce using rule 67 (true_boolean_types -> TRUE .)
    RIGHT_PAREN     reduce using rule 67 (true_boolean_types -> TRUE .)


state 276

    (68) true_boolean_types -> STRING .

    LOGIC_AND       reduce using rule 68 (true_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 68 (true_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 68 (true_boolean_types -> STRING .)
    COMMA           reduce using rule 68 (true_boolean_types -> STRING .)
    STRING_CONCATENATION reduce using rule 68 (true_boolean_types -> STRING .)
    SEMICOLON       reduce using rule 68 (true_boolean_types -> STRING .)
    RIGHT_PAREN     reduce using rule 68 (true_boolean_types -> STRING .)


state 277

    (69) true_boolean_types -> INTEGER .

    LOGIC_AND       reduce using rule 69 (true_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 69 (true_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 69 (true_boolean_types -> INTEGER .)
    COMMA           reduce using rule 69 (true_boolean_types -> INTEGER .)
    STRING_CONCATENATION reduce using rule 69 (true_boolean_types -> INTEGER .)
    SEMICOLON       reduce using rule 69 (true_boolean_types -> INTEGER .)
    RIGHT_PAREN     reduce using rule 69 (true_boolean_types -> INTEGER .)


state 278

    (70) true_boolean_types -> FLOAT .

    LOGIC_AND       reduce using rule 70 (true_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 70 (true_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 70 (true_boolean_types -> FLOAT .)
    COMMA           reduce using rule 70 (true_boolean_types -> FLOAT .)
    STRING_CONCATENATION reduce using rule 70 (true_boolean_types -> FLOAT .)
    SEMICOLON       reduce using rule 70 (true_boolean_types -> FLOAT .)
    RIGHT_PAREN     reduce using rule 70 (true_boolean_types -> FLOAT .)


state 279

    (71) true_boolean_types -> VARIABLE .

    LOGIC_AND       reduce using rule 71 (true_boolean_types -> VARIABLE .)
    LOGIC_OR        reduce using rule 71 (true_boolean_types -> VARIABLE .)
    LOGIC_XOR       reduce using rule 71 (true_boolean_types -> VARIABLE .)
    COMMA           reduce using rule 71 (true_boolean_types -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 71 (true_boolean_types -> VARIABLE .)
    SEMICOLON       reduce using rule 71 (true_boolean_types -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 71 (true_boolean_types -> VARIABLE .)


state 280

    (72) true_boolean_types -> IDENTIFIER .

    LOGIC_AND       reduce using rule 72 (true_boolean_types -> IDENTIFIER .)
    LOGIC_OR        reduce using rule 72 (true_boolean_types -> IDENTIFIER .)
    LOGIC_XOR       reduce using rule 72 (true_boolean_types -> IDENTIFIER .)
    COMMA           reduce using rule 72 (true_boolean_types -> IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 72 (true_boolean_types -> IDENTIFIER .)
    SEMICOLON       reduce using rule 72 (true_boolean_types -> IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 72 (true_boolean_types -> IDENTIFIER .)


state 281

    (73) true_boolean_types -> ARRAY . LEFT_PAREN values RIGHT_PAREN

    LEFT_PAREN      shift and go to state 342


state 282

    (131) expression -> term PLUS expression .

    EQUALS_EQUALS   reduce using rule 131 (expression -> term PLUS expression .)
    IDENTICAL       reduce using rule 131 (expression -> term PLUS expression .)
    NOT_EQUALS      reduce using rule 131 (expression -> term PLUS expression .)
    NOT_IDENTICAL   reduce using rule 131 (expression -> term PLUS expression .)
    SMALL_THAN      reduce using rule 131 (expression -> term PLUS expression .)
    GREATER_THAN    reduce using rule 131 (expression -> term PLUS expression .)
    SMALL_EQUALS_TO reduce using rule 131 (expression -> term PLUS expression .)
    GREATER_EQUALS_TO reduce using rule 131 (expression -> term PLUS expression .)
    SPACECRAFT      reduce using rule 131 (expression -> term PLUS expression .)
    NULL_FUSION     reduce using rule 131 (expression -> term PLUS expression .)
    RIGHT_PAREN     reduce using rule 131 (expression -> term PLUS expression .)
    SEMICOLON       reduce using rule 131 (expression -> term PLUS expression .)
    LOGIC_AND       reduce using rule 131 (expression -> term PLUS expression .)
    LOGIC_OR        reduce using rule 131 (expression -> term PLUS expression .)
    LOGIC_XOR       reduce using rule 131 (expression -> term PLUS expression .)
    COMMA           reduce using rule 131 (expression -> term PLUS expression .)
    STRING_CONCATENATION reduce using rule 131 (expression -> term PLUS expression .)


state 283

    (132) expression -> term MINUS expression .

    EQUALS_EQUALS   reduce using rule 132 (expression -> term MINUS expression .)
    IDENTICAL       reduce using rule 132 (expression -> term MINUS expression .)
    NOT_EQUALS      reduce using rule 132 (expression -> term MINUS expression .)
    NOT_IDENTICAL   reduce using rule 132 (expression -> term MINUS expression .)
    SMALL_THAN      reduce using rule 132 (expression -> term MINUS expression .)
    GREATER_THAN    reduce using rule 132 (expression -> term MINUS expression .)
    SMALL_EQUALS_TO reduce using rule 132 (expression -> term MINUS expression .)
    GREATER_EQUALS_TO reduce using rule 132 (expression -> term MINUS expression .)
    SPACECRAFT      reduce using rule 132 (expression -> term MINUS expression .)
    NULL_FUSION     reduce using rule 132 (expression -> term MINUS expression .)
    RIGHT_PAREN     reduce using rule 132 (expression -> term MINUS expression .)
    SEMICOLON       reduce using rule 132 (expression -> term MINUS expression .)
    LOGIC_AND       reduce using rule 132 (expression -> term MINUS expression .)
    LOGIC_OR        reduce using rule 132 (expression -> term MINUS expression .)
    LOGIC_XOR       reduce using rule 132 (expression -> term MINUS expression .)
    COMMA           reduce using rule 132 (expression -> term MINUS expression .)
    STRING_CONCATENATION reduce using rule 132 (expression -> term MINUS expression .)


state 284

    (73) true_boolean_types -> ARRAY LEFT_PAREN values . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 343


state 285

    (80) false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .

    LOGIC_AND       reduce using rule 80 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    LOGIC_OR        reduce using rule 80 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    LOGIC_XOR       reduce using rule 80 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    COMMA           reduce using rule 80 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 80 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    SEMICOLON       reduce using rule 80 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 80 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)


state 286

    (134) term -> factor MULTIPLY term .

    PLUS            reduce using rule 134 (term -> factor MULTIPLY term .)
    MINUS           reduce using rule 134 (term -> factor MULTIPLY term .)
    EQUALS_EQUALS   reduce using rule 134 (term -> factor MULTIPLY term .)
    IDENTICAL       reduce using rule 134 (term -> factor MULTIPLY term .)
    NOT_EQUALS      reduce using rule 134 (term -> factor MULTIPLY term .)
    NOT_IDENTICAL   reduce using rule 134 (term -> factor MULTIPLY term .)
    SMALL_THAN      reduce using rule 134 (term -> factor MULTIPLY term .)
    GREATER_THAN    reduce using rule 134 (term -> factor MULTIPLY term .)
    SMALL_EQUALS_TO reduce using rule 134 (term -> factor MULTIPLY term .)
    GREATER_EQUALS_TO reduce using rule 134 (term -> factor MULTIPLY term .)
    SPACECRAFT      reduce using rule 134 (term -> factor MULTIPLY term .)
    NULL_FUSION     reduce using rule 134 (term -> factor MULTIPLY term .)
    RIGHT_PAREN     reduce using rule 134 (term -> factor MULTIPLY term .)
    SEMICOLON       reduce using rule 134 (term -> factor MULTIPLY term .)
    LOGIC_AND       reduce using rule 134 (term -> factor MULTIPLY term .)
    LOGIC_OR        reduce using rule 134 (term -> factor MULTIPLY term .)
    LOGIC_XOR       reduce using rule 134 (term -> factor MULTIPLY term .)
    COMMA           reduce using rule 134 (term -> factor MULTIPLY term .)
    STRING_CONCATENATION reduce using rule 134 (term -> factor MULTIPLY term .)


state 287

    (135) term -> factor DIVIDE term .

    PLUS            reduce using rule 135 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 135 (term -> factor DIVIDE term .)
    EQUALS_EQUALS   reduce using rule 135 (term -> factor DIVIDE term .)
    IDENTICAL       reduce using rule 135 (term -> factor DIVIDE term .)
    NOT_EQUALS      reduce using rule 135 (term -> factor DIVIDE term .)
    NOT_IDENTICAL   reduce using rule 135 (term -> factor DIVIDE term .)
    SMALL_THAN      reduce using rule 135 (term -> factor DIVIDE term .)
    GREATER_THAN    reduce using rule 135 (term -> factor DIVIDE term .)
    SMALL_EQUALS_TO reduce using rule 135 (term -> factor DIVIDE term .)
    GREATER_EQUALS_TO reduce using rule 135 (term -> factor DIVIDE term .)
    SPACECRAFT      reduce using rule 135 (term -> factor DIVIDE term .)
    NULL_FUSION     reduce using rule 135 (term -> factor DIVIDE term .)
    RIGHT_PAREN     reduce using rule 135 (term -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 135 (term -> factor DIVIDE term .)
    LOGIC_AND       reduce using rule 135 (term -> factor DIVIDE term .)
    LOGIC_OR        reduce using rule 135 (term -> factor DIVIDE term .)
    LOGIC_XOR       reduce using rule 135 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 135 (term -> factor DIVIDE term .)
    STRING_CONCATENATION reduce using rule 135 (term -> factor DIVIDE term .)


state 288

    (136) term -> factor MODULE term .

    PLUS            reduce using rule 136 (term -> factor MODULE term .)
    MINUS           reduce using rule 136 (term -> factor MODULE term .)
    EQUALS_EQUALS   reduce using rule 136 (term -> factor MODULE term .)
    IDENTICAL       reduce using rule 136 (term -> factor MODULE term .)
    NOT_EQUALS      reduce using rule 136 (term -> factor MODULE term .)
    NOT_IDENTICAL   reduce using rule 136 (term -> factor MODULE term .)
    SMALL_THAN      reduce using rule 136 (term -> factor MODULE term .)
    GREATER_THAN    reduce using rule 136 (term -> factor MODULE term .)
    SMALL_EQUALS_TO reduce using rule 136 (term -> factor MODULE term .)
    GREATER_EQUALS_TO reduce using rule 136 (term -> factor MODULE term .)
    SPACECRAFT      reduce using rule 136 (term -> factor MODULE term .)
    NULL_FUSION     reduce using rule 136 (term -> factor MODULE term .)
    RIGHT_PAREN     reduce using rule 136 (term -> factor MODULE term .)
    SEMICOLON       reduce using rule 136 (term -> factor MODULE term .)
    LOGIC_AND       reduce using rule 136 (term -> factor MODULE term .)
    LOGIC_OR        reduce using rule 136 (term -> factor MODULE term .)
    LOGIC_XOR       reduce using rule 136 (term -> factor MODULE term .)
    COMMA           reduce using rule 136 (term -> factor MODULE term .)
    STRING_CONCATENATION reduce using rule 136 (term -> factor MODULE term .)


state 289

    (137) term -> factor POW term .

    PLUS            reduce using rule 137 (term -> factor POW term .)
    MINUS           reduce using rule 137 (term -> factor POW term .)
    EQUALS_EQUALS   reduce using rule 137 (term -> factor POW term .)
    IDENTICAL       reduce using rule 137 (term -> factor POW term .)
    NOT_EQUALS      reduce using rule 137 (term -> factor POW term .)
    NOT_IDENTICAL   reduce using rule 137 (term -> factor POW term .)
    SMALL_THAN      reduce using rule 137 (term -> factor POW term .)
    GREATER_THAN    reduce using rule 137 (term -> factor POW term .)
    SMALL_EQUALS_TO reduce using rule 137 (term -> factor POW term .)
    GREATER_EQUALS_TO reduce using rule 137 (term -> factor POW term .)
    SPACECRAFT      reduce using rule 137 (term -> factor POW term .)
    NULL_FUSION     reduce using rule 137 (term -> factor POW term .)
    RIGHT_PAREN     reduce using rule 137 (term -> factor POW term .)
    SEMICOLON       reduce using rule 137 (term -> factor POW term .)
    LOGIC_AND       reduce using rule 137 (term -> factor POW term .)
    LOGIC_OR        reduce using rule 137 (term -> factor POW term .)
    LOGIC_XOR       reduce using rule 137 (term -> factor POW term .)
    COMMA           reduce using rule 137 (term -> factor POW term .)
    STRING_CONCATENATION reduce using rule 137 (term -> factor POW term .)


state 290

    (106) print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN .

    SEMICOLON       reduce using rule 106 (print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN .)


state 291

    (269) class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt . LEFT_BRACE class_body RIGHT_BRACE

    LEFT_BRACE      shift and go to state 344


state 292

    (276) class_implements_opt -> IMPLEMENTS . interface_list
    (278) interface_list -> . IDENTIFIER
    (279) interface_list -> . interface_list COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 346

    interface_list                 shift and go to state 345

state 293

    (274) class_extends_opt -> EXTENDS IDENTIFIER .

    IMPLEMENTS      reduce using rule 274 (class_extends_opt -> EXTENDS IDENTIFIER .)
    LEFT_BRACE      reduce using rule 274 (class_extends_opt -> EXTENDS IDENTIFIER .)


state 294

    (270) interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE . interface_body RIGHT_BRACE
    (271) interface_body -> . interface_body interface_method
    (272) interface_body -> .

    RIGHT_BRACE     reduce using rule 272 (interface_body -> .)
    PUBLIC          reduce using rule 272 (interface_body -> .)
    PRIVATE         reduce using rule 272 (interface_body -> .)
    PROTECTED       reduce using rule 272 (interface_body -> .)
    FUNCTION        reduce using rule 272 (interface_body -> .)

    interface_body                 shift and go to state 347

state 295

    (174) function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params . RIGHT_PAREN codeblock

    RIGHT_PAREN     shift and go to state 348


state 296

    (167) params -> real_params .
    (171) real_params -> real_params . COMMA VARIABLE
    (172) real_params -> real_params . COMMA values

    RIGHT_PAREN     reduce using rule 167 (params -> real_params .)
    COMMA           shift and go to state 349


state 297

    (168) params -> empty .

    RIGHT_PAREN     reduce using rule 168 (params -> empty .)


state 298

    (169) real_params -> VARIABLE .

    COMMA           reduce using rule 169 (real_params -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 169 (real_params -> VARIABLE .)


state 299

    (170) real_params -> values .

    COMMA           reduce using rule 170 (real_params -> values .)
    RIGHT_PAREN     reduce using rule 170 (real_params -> values .)


state 300

    (166) function_invocation -> VARIABLE LEFT_PAREN . params RIGHT_PAREN
    (167) params -> . real_params
    (168) params -> . empty
    (169) real_params -> . VARIABLE
    (170) real_params -> . values
    (171) real_params -> . real_params COMMA VARIABLE
    (172) real_params -> . real_params COMMA values
    (173) empty -> .
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 298
    RIGHT_PAREN     reduce using rule 173 (empty -> .)
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    params                         shift and go to state 350
    real_params                    shift and go to state 296
    empty                          shift and go to state 297
    values                         shift and go to state 299
    boolean                        shift and go to state 63

state 301

    (165) function_invocation -> IDENTIFIER LEFT_PAREN . params RIGHT_PAREN
    (167) params -> . real_params
    (168) params -> . empty
    (169) real_params -> . VARIABLE
    (170) real_params -> . values
    (171) real_params -> . real_params COMMA VARIABLE
    (172) real_params -> . real_params COMMA values
    (173) empty -> .
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 298
    RIGHT_PAREN     reduce using rule 173 (empty -> .)
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    params                         shift and go to state 351
    real_params                    shift and go to state 296
    empty                          shift and go to state 297
    values                         shift and go to state 299
    boolean                        shift and go to state 63

state 302

    (184) string_special_function -> STRLEN LEFT_PAREN . string_param RIGHT_PAREN
    (187) string_param -> . STRING
    (188) string_param -> . VARIABLE
    (189) string_param -> . INTEGER

    STRING          shift and go to state 353
    VARIABLE        shift and go to state 354
    INTEGER         shift and go to state 355

    string_param                   shift and go to state 352

state 303

    (185) string_special_function -> SUBSTR LEFT_PAREN . string_param COMMA int_param RIGHT_PAREN
    (186) string_special_function -> SUBSTR LEFT_PAREN . string_param COMMA int_param COMMA int_param RIGHT_PAREN
    (187) string_param -> . STRING
    (188) string_param -> . VARIABLE
    (189) string_param -> . INTEGER

    STRING          shift and go to state 353
    VARIABLE        shift and go to state 354
    INTEGER         shift and go to state 355

    string_param                   shift and go to state 356

state 304

    (182) input -> FEGTS LEFT_PAREN . STDIN RIGHT_PAREN

    STDIN           shift and go to state 357


state 305

    (183) input -> READLINE LEFT_PAREN . STRING RIGHT_PAREN

    STRING          shift and go to state 358


state 306

    (195) array_special_function -> COUNT LEFT_PAREN . structure_array_principal count_param RIGHT_PAREN
    (196) array_special_function -> COUNT LEFT_PAREN . structure_matrix_principal count_param RIGHT_PAREN
    (197) array_special_function -> COUNT LEFT_PAREN . VARIABLE count_param RIGHT_PAREN
    (200) statement_array_special_function_error -> COUNT LEFT_PAREN . error count_param RIGHT_PAREN
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    VARIABLE        shift and go to state 361
    error           shift and go to state 362
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47

    structure_array_principal      shift and go to state 359
    structure_matrix_principal     shift and go to state 360
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 363
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    statement_access_array_element_error shift and go to state 48

state 307

    (198) array_special_function -> ARRAY_POP LEFT_PAREN . VARIABLE RIGHT_PAREN
    (201) statement_array_special_function_error -> ARRAY_POP LEFT_PAREN . error RIGHT_PAREN

    VARIABLE        shift and go to state 364
    error           shift and go to state 365


state 308

    (199) array_special_function -> ARRAY_SUM LEFT_PAREN . VARIABLE RIGHT_PAREN
    (202) statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN . error RIGHT_PAREN

    VARIABLE        shift and go to state 366
    error           shift and go to state 367


state 309

    (177) arrow_function -> FN LEFT_PAREN . params RIGHT_PAREN EQUALS GREATER_THAN codeblock
    (178) arrow_function -> FN LEFT_PAREN . params RIGHT_PAREN EQUALS GREATER_THAN print_statement
    (179) arrow_function -> FN LEFT_PAREN . params RIGHT_PAREN EQUALS GREATER_THAN expression
    (167) params -> . real_params
    (168) params -> . empty
    (169) real_params -> . VARIABLE
    (170) real_params -> . values
    (171) real_params -> . real_params COMMA VARIABLE
    (172) real_params -> . real_params COMMA values
    (173) empty -> .
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 298
    RIGHT_PAREN     reduce using rule 173 (empty -> .)
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    params                         shift and go to state 368
    real_params                    shift and go to state 296
    empty                          shift and go to state 297
    values                         shift and go to state 299
    boolean                        shift and go to state 63

state 310

    (180) anonymous_functions -> FUNCTION LEFT_PAREN . params RIGHT_PAREN codeblock
    (167) params -> . real_params
    (168) params -> . empty
    (169) real_params -> . VARIABLE
    (170) real_params -> . values
    (171) real_params -> . real_params COMMA VARIABLE
    (172) real_params -> . real_params COMMA values
    (173) empty -> .
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 298
    RIGHT_PAREN     reduce using rule 173 (empty -> .)
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    params                         shift and go to state 369
    real_params                    shift and go to state 296
    empty                          shift and go to state 297
    values                         shift and go to state 299
    boolean                        shift and go to state 63

state 311

    (217) indexed_array -> ARRAY LEFT_PAREN . values_array_indexed RIGHT_PAREN
    (218) associative_array -> ARRAY LEFT_PAREN . structure_array RIGHT_PAREN
    (240) matrix_firstform -> ARRAY LEFT_PAREN . structure_matrix_first RIGHT_PAREN SEMICOLON
    (73) true_boolean_types -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (80) false_boolean_types -> ARRAY LEFT_PAREN . RIGHT_PAREN
    (224) values_array_indexed -> . values
    (225) values_array_indexed -> . values COMMA values_array_indexed
    (226) values_array_indexed -> . object_creation
    (227) values_array_indexed -> . object_creation COMMA values_array_indexed
    (228) values_array_indexed -> . indexed_array
    (229) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (220) structure_array -> . key EQUALS GREATER_THAN values
    (221) structure_array -> . key EQUALS GREATER_THAN values COMMA structure_array
    (244) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (245) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (222) key -> . INTEGER
    (223) key -> . STRING
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    RIGHT_PAREN     shift and go to state 285
    ARRAY           shift and go to state 213
    INTEGER         shift and go to state 221
    STRING          shift and go to state 222
    FLOAT           shift and go to state 204
    NEW             shift and go to state 49
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values_array_indexed           shift and go to state 214
    structure_array                shift and go to state 215
    structure_matrix_first         shift and go to state 216
    values                         shift and go to state 370
    object_creation                shift and go to state 218
    indexed_array                  shift and go to state 219
    key                            shift and go to state 220
    boolean                        shift and go to state 63

state 312

    (233) access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .
    (247) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET . LEFT_BRACKET INTEGER RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    MINUS           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    ECHO            reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    PRINT           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    CLASS           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    INTERFACE       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    FUNCTION        reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    VARIABLE        reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    INCREASE        reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    DECREMENT       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    IF              reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    WHILE           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    FOR             reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    CONST           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    DEFINE          reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    ARRAY           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    NEW             reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    COMMA           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RETURN          reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    BREAK           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LEFT_BRACKET    shift and go to state 371

  ! LEFT_BRACKET    [ reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .) ]


state 313

    (232) access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .
    (246) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET . LEFT_BRACKET VARIABLE RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    MINUS           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ECHO            reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PRINT           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CLASS           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INTERFACE       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FUNCTION        reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    VARIABLE        reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INCREASE        reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DECREMENT       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    IF              reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    WHILE           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FOR             reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CONST           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DEFINE          reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ARRAY           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    NEW             reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RETURN          reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    BREAK           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LEFT_BRACKET    shift and go to state 372

  ! LEFT_BRACKET    [ reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .) ]


state 314

    (252) add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS . indexed_array
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN

    ARRAY           shift and go to state 374

    indexed_array                  shift and go to state 373

state 315

    (234) statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .

    ECHO            reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    PRINT           reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    CLASS           reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    INTERFACE       reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    FUNCTION        reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    VARIABLE        reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    INCREASE        reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    DECREMENT       reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    IF              reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    WHILE           reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    FOR             reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    CONST           reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    DEFINE          reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    ARRAY           reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    NEW             reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    COMMA           reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    RETURN          reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    BREAK           reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 234 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)


state 316

    (166) function_invocation -> VARIABLE . LEFT_PAREN params RIGHT_PAREN

    LEFT_PAREN      shift and go to state 300


state 317

    (257) access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .

    ECHO            reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    PRINT           reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    CLASS           reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    INTERFACE       reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    FUNCTION        reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    VARIABLE        reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    INCREASE        reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    DECREMENT       reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    IF              reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    WHILE           reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    FOR             reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    CONST           reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    DEFINE          reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    ARRAY           reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    LEFT_BRACKET    reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    NEW             reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    PHP_END_IDENTIFIER reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    COMMA           reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    STRING_CONCATENATION reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    SEMICOLON       reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    RIGHT_PAREN     reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    RETURN          reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    BREAK           reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    RIGHT_BRACE     reduce using rule 257 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)


state 318

    (258) access_method_object -> VARIABLE MINUS GREATER_THAN accessType .
    (259) access_method_object -> VARIABLE MINUS GREATER_THAN accessType . EQUALS values
    (260) access_method_object -> VARIABLE MINUS GREATER_THAN accessType . EQUALS VARIABLE
    (261) access_method_object -> VARIABLE MINUS GREATER_THAN accessType . EQUALS access_array_element

    ECHO            reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    PRINT           reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    CLASS           reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    INTERFACE       reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    FUNCTION        reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    VARIABLE        reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    INCREASE        reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    DECREMENT       reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    IF              reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    WHILE           reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    FOR             reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    CONST           reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    DEFINE          reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    ARRAY           reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    LEFT_BRACKET    reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    NEW             reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    PHP_END_IDENTIFIER reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    COMMA           reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    STRING_CONCATENATION reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    SEMICOLON       reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    RIGHT_PAREN     reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    RETURN          reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    BREAK           reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    RIGHT_BRACE     reduce using rule 258 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    EQUALS          shift and go to state 375


state 319

    (165) function_invocation -> IDENTIFIER . LEFT_PAREN params RIGHT_PAREN
    (267) accessType -> IDENTIFIER . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (268) accessType -> IDENTIFIER .

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    LEFT_PAREN      shift and go to state 301
    LEFT_BRACKET    shift and go to state 376
    EQUALS          reduce using rule 268 (accessType -> IDENTIFIER .)
    ECHO            reduce using rule 268 (accessType -> IDENTIFIER .)
    PRINT           reduce using rule 268 (accessType -> IDENTIFIER .)
    CLASS           reduce using rule 268 (accessType -> IDENTIFIER .)
    INTERFACE       reduce using rule 268 (accessType -> IDENTIFIER .)
    FUNCTION        reduce using rule 268 (accessType -> IDENTIFIER .)
    VARIABLE        reduce using rule 268 (accessType -> IDENTIFIER .)
    INCREASE        reduce using rule 268 (accessType -> IDENTIFIER .)
    DECREMENT       reduce using rule 268 (accessType -> IDENTIFIER .)
    IF              reduce using rule 268 (accessType -> IDENTIFIER .)
    WHILE           reduce using rule 268 (accessType -> IDENTIFIER .)
    FOR             reduce using rule 268 (accessType -> IDENTIFIER .)
    CONST           reduce using rule 268 (accessType -> IDENTIFIER .)
    DEFINE          reduce using rule 268 (accessType -> IDENTIFIER .)
    ARRAY           reduce using rule 268 (accessType -> IDENTIFIER .)
    NEW             reduce using rule 268 (accessType -> IDENTIFIER .)
    PHP_END_IDENTIFIER reduce using rule 268 (accessType -> IDENTIFIER .)
    COMMA           reduce using rule 268 (accessType -> IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 268 (accessType -> IDENTIFIER .)
    SEMICOLON       reduce using rule 268 (accessType -> IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 268 (accessType -> IDENTIFIER .)
    RETURN          reduce using rule 268 (accessType -> IDENTIFIER .)
    BREAK           reduce using rule 268 (accessType -> IDENTIFIER .)
    RIGHT_BRACE     reduce using rule 268 (accessType -> IDENTIFIER .)

  ! LEFT_BRACKET    [ reduce using rule 268 (accessType -> IDENTIFIER .) ]


state 320

    (262) access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .

    ECHO            reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    PRINT           reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    CLASS           reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    INTERFACE       reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    FUNCTION        reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    VARIABLE        reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    INCREASE        reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    DECREMENT       reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    IF              reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    WHILE           reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    FOR             reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    CONST           reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    DEFINE          reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    ARRAY           reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    LEFT_BRACKET    reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    NEW             reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    PHP_END_IDENTIFIER reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    COMMA           reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    STRING_CONCATENATION reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    SEMICOLON       reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    RIGHT_PAREN     reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    RETURN          reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    BREAK           reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    RIGHT_BRACE     reduce using rule 262 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)


state 321

    (263) access_method_object -> access_array_element MINUS GREATER_THAN accessType .
    (264) access_method_object -> access_array_element MINUS GREATER_THAN accessType . EQUALS values
    (265) access_method_object -> access_array_element MINUS GREATER_THAN accessType . EQUALS VARIABLE
    (266) access_method_object -> access_array_element MINUS GREATER_THAN accessType . EQUALS access_array_element

    ECHO            reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    PRINT           reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    CLASS           reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    INTERFACE       reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    FUNCTION        reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    VARIABLE        reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    INCREASE        reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    DECREMENT       reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    IF              reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    WHILE           reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    FOR             reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    CONST           reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    DEFINE          reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    ARRAY           reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    LEFT_BRACKET    reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    NEW             reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    PHP_END_IDENTIFIER reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    COMMA           reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    STRING_CONCATENATION reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    SEMICOLON       reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    RIGHT_PAREN     reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    RETURN          reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    BREAK           reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    RIGHT_BRACE     reduce using rule 263 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    EQUALS          shift and go to state 377


state 322

    (15) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE else_statement

    LEFT_BRACE      shift and go to state 378


state 323

    (14) while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 379


state 324

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS . expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (39) expression_for -> . VARIABLE
    (40) expression_for -> . number_values
    (41) expression_for -> . expression_for operator_aritmetic expression_for
    (42) expression_for -> . LEFT_PAREN expression_for RIGHT_PAREN
    (43) expression_for -> . IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> . IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
    (45) expression_for -> . length_operations
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT
    (206) length_operations -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (207) length_operations -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (208) length_operations -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (209) length_operations -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN

    VARIABLE        shift and go to state 381
    LEFT_PAREN      shift and go to state 380
    IDENTIFIER      shift and go to state 384
    INTEGER         shift and go to state 386
    FLOAT           shift and go to state 387
    COUNT           shift and go to state 388
    STRLEN          shift and go to state 389

    expression_for                 shift and go to state 382
    number_values                  shift and go to state 383
    length_operations              shift and go to state 385

state 325

    (163) const_syntax -> CONST IDENTIFIER EQUALS values .

    SEMICOLON       reduce using rule 163 (const_syntax -> CONST IDENTIFIER EQUALS values .)


state 326

    (164) define_syntax -> DEFINE LEFT_PAREN STRING COMMA . values RIGHT_PAREN
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 390
    boolean                        shift and go to state 63

state 327

    (244) structure_matrix_first -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (245) structure_matrix_first -> ARRAY LEFT_PAREN . values RIGHT_PAREN COMMA structure_matrix_first
    (217) indexed_array -> ARRAY LEFT_PAREN . values_array_indexed RIGHT_PAREN
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (224) values_array_indexed -> . values
    (225) values_array_indexed -> . values COMMA values_array_indexed
    (226) values_array_indexed -> . object_creation
    (227) values_array_indexed -> . object_creation COMMA values_array_indexed
    (228) values_array_indexed -> . indexed_array
    (229) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206
    NEW             shift and go to state 49
    ARRAY           shift and go to state 374

    values                         shift and go to state 391
    values_array_indexed           shift and go to state 214
    boolean                        shift and go to state 63
    object_creation                shift and go to state 218
    indexed_array                  shift and go to state 219

state 328

    (217) indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .

    ECHO            reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    PRINT           reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    CLASS           reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    INTERFACE       reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    FUNCTION        reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    VARIABLE        reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    INCREASE        reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    DECREMENT       reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    IF              reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    WHILE           reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    FOR             reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    CONST           reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    DEFINE          reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    ARRAY           reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    NEW             reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    SEMICOLON       reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    COMMA           reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    RETURN          reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    BREAK           reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 217 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)


state 329

    (218) associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .

    ECHO            reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    PRINT           reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    CLASS           reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    INTERFACE       reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    FUNCTION        reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    VARIABLE        reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    INCREASE        reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    DECREMENT       reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    IF              reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    WHILE           reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    FOR             reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    CONST           reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    DEFINE          reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    ARRAY           reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    NEW             reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    SEMICOLON       reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    COMMA           reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    RETURN          reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    BREAK           reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 218 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)


state 330

    (240) matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN . SEMICOLON

    SEMICOLON       shift and go to state 392


state 331

    (225) values_array_indexed -> values COMMA . values_array_indexed
    (224) values_array_indexed -> . values
    (225) values_array_indexed -> . values COMMA values_array_indexed
    (226) values_array_indexed -> . object_creation
    (227) values_array_indexed -> . object_creation COMMA values_array_indexed
    (228) values_array_indexed -> . indexed_array
    (229) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    NEW             shift and go to state 49
    ARRAY           shift and go to state 374
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 217
    values_array_indexed           shift and go to state 393
    object_creation                shift and go to state 218
    indexed_array                  shift and go to state 219
    boolean                        shift and go to state 63

state 332

    (227) values_array_indexed -> object_creation COMMA . values_array_indexed
    (224) values_array_indexed -> . values
    (225) values_array_indexed -> . values COMMA values_array_indexed
    (226) values_array_indexed -> . object_creation
    (227) values_array_indexed -> . object_creation COMMA values_array_indexed
    (228) values_array_indexed -> . indexed_array
    (229) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    NEW             shift and go to state 49
    ARRAY           shift and go to state 374
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    object_creation                shift and go to state 218
    values_array_indexed           shift and go to state 394
    values                         shift and go to state 217
    indexed_array                  shift and go to state 219
    boolean                        shift and go to state 63

state 333

    (229) values_array_indexed -> indexed_array COMMA . values_array_indexed
    (224) values_array_indexed -> . values
    (225) values_array_indexed -> . values COMMA values_array_indexed
    (226) values_array_indexed -> . object_creation
    (227) values_array_indexed -> . object_creation COMMA values_array_indexed
    (228) values_array_indexed -> . indexed_array
    (229) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    NEW             shift and go to state 49
    ARRAY           shift and go to state 374
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    indexed_array                  shift and go to state 219
    values_array_indexed           shift and go to state 395
    values                         shift and go to state 217
    object_creation                shift and go to state 218
    boolean                        shift and go to state 63

state 334

    (220) structure_array -> key EQUALS . GREATER_THAN values
    (221) structure_array -> key EQUALS . GREATER_THAN values COMMA structure_array

    GREATER_THAN    shift and go to state 396


state 335

    (219) associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .

    ECHO            reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    PRINT           reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    CLASS           reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    INTERFACE       reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    FUNCTION        reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    VARIABLE        reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    INCREASE        reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    DECREMENT       reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    IF              reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    WHILE           reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    FOR             reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    CONST           reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    DEFINE          reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    ARRAY           reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    NEW             reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    COMMA           reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    RETURN          reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    BREAK           reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 219 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)


state 336

    (242) structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET .
    (243) structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET . COMMA structure_matrix_second

    RIGHT_BRACKET   reduce using rule 242 (structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET .)
    COMMA           shift and go to state 397


state 337

    (241) matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .

    ECHO            reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    PRINT           reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    CLASS           reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    INTERFACE       reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    FUNCTION        reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    VARIABLE        reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    INCREASE        reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    DECREMENT       reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    IF              reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    WHILE           reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    FOR             reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    CONST           reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    DEFINE          reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    ARRAY           reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    LEFT_BRACKET    reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    NEW             reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    COMMA           reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    RIGHT_PAREN     reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    RETURN          reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    BREAK           reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    RIGHT_BRACE     reduce using rule 241 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)


state 338

    (256) object_creation -> NEW IDENTIFIER LEFT_PAREN params . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 398


state 339

    (141) factor -> LEFT_PAREN expression . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 236


state 340

    (232) access_array_element -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET

    INTEGER         shift and go to state 400
    VARIABLE        shift and go to state 399


state 341

    (80) false_boolean_types -> ARRAY LEFT_PAREN . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 285


state 342

    (73) true_boolean_types -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 284
    boolean                        shift and go to state 63

state 343

    (73) true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .

    LOGIC_AND       reduce using rule 73 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    LOGIC_OR        reduce using rule 73 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    LOGIC_XOR       reduce using rule 73 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    COMMA           reduce using rule 73 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 73 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    SEMICOLON       reduce using rule 73 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 73 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)


state 344

    (269) class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE . class_body RIGHT_BRACE
    (280) class_body -> . class_body class_member
    (281) class_body -> .

    RIGHT_BRACE     reduce using rule 281 (class_body -> .)
    PUBLIC          reduce using rule 281 (class_body -> .)
    PRIVATE         reduce using rule 281 (class_body -> .)
    PROTECTED       reduce using rule 281 (class_body -> .)
    STATIC          reduce using rule 281 (class_body -> .)
    FUNCTION        reduce using rule 281 (class_body -> .)
    VARIABLE        reduce using rule 281 (class_body -> .)
    CONST           reduce using rule 281 (class_body -> .)
    DEFINE          reduce using rule 281 (class_body -> .)

    class_body                     shift and go to state 401

state 345

    (276) class_implements_opt -> IMPLEMENTS interface_list .
    (279) interface_list -> interface_list . COMMA IDENTIFIER

    LEFT_BRACE      reduce using rule 276 (class_implements_opt -> IMPLEMENTS interface_list .)
    COMMA           shift and go to state 402


state 346

    (278) interface_list -> IDENTIFIER .

    COMMA           reduce using rule 278 (interface_list -> IDENTIFIER .)
    LEFT_BRACE      reduce using rule 278 (interface_list -> IDENTIFIER .)


state 347

    (270) interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body . RIGHT_BRACE
    (271) interface_body -> interface_body . interface_method
    (273) interface_method -> . visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON
    (288) visibility_opt -> . PUBLIC
    (289) visibility_opt -> . PRIVATE
    (290) visibility_opt -> . PROTECTED
    (291) visibility_opt -> .

    RIGHT_BRACE     shift and go to state 403
    PUBLIC          shift and go to state 406
    PRIVATE         shift and go to state 407
    PROTECTED       shift and go to state 408
    FUNCTION        reduce using rule 291 (visibility_opt -> .)

    interface_method               shift and go to state 404
    visibility_opt                 shift and go to state 405

state 348

    (174) function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN . codeblock
    (181) codeblock -> . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 410

    codeblock                      shift and go to state 409

state 349

    (171) real_params -> real_params COMMA . VARIABLE
    (172) real_params -> real_params COMMA . values
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 411
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 412
    boolean                        shift and go to state 63

state 350

    (166) function_invocation -> VARIABLE LEFT_PAREN params . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 413


state 351

    (165) function_invocation -> IDENTIFIER LEFT_PAREN params . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 414


state 352

    (184) string_special_function -> STRLEN LEFT_PAREN string_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 415


state 353

    (187) string_param -> STRING .

    RIGHT_PAREN     reduce using rule 187 (string_param -> STRING .)
    COMMA           reduce using rule 187 (string_param -> STRING .)


state 354

    (188) string_param -> VARIABLE .

    RIGHT_PAREN     reduce using rule 188 (string_param -> VARIABLE .)
    COMMA           reduce using rule 188 (string_param -> VARIABLE .)


state 355

    (189) string_param -> INTEGER .

    RIGHT_PAREN     reduce using rule 189 (string_param -> INTEGER .)
    COMMA           reduce using rule 189 (string_param -> INTEGER .)


state 356

    (185) string_special_function -> SUBSTR LEFT_PAREN string_param . COMMA int_param RIGHT_PAREN
    (186) string_special_function -> SUBSTR LEFT_PAREN string_param . COMMA int_param COMMA int_param RIGHT_PAREN

    COMMA           shift and go to state 416


state 357

    (182) input -> FEGTS LEFT_PAREN STDIN . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 417


state 358

    (183) input -> READLINE LEFT_PAREN STRING . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 418


state 359

    (195) array_special_function -> COUNT LEFT_PAREN structure_array_principal . count_param RIGHT_PAREN
    (203) count_param -> . COMMA COUNT_NORMAL
    (204) count_param -> . COMMA COUNT_RECURSIVE
    (205) count_param -> .

    COMMA           shift and go to state 420
    RIGHT_PAREN     reduce using rule 205 (count_param -> .)

    count_param                    shift and go to state 419

state 360

    (196) array_special_function -> COUNT LEFT_PAREN structure_matrix_principal . count_param RIGHT_PAREN
    (203) count_param -> . COMMA COUNT_NORMAL
    (204) count_param -> . COMMA COUNT_RECURSIVE
    (205) count_param -> .

    COMMA           shift and go to state 420
    RIGHT_PAREN     reduce using rule 205 (count_param -> .)

    count_param                    shift and go to state 421

state 361

    (197) array_special_function -> COUNT LEFT_PAREN VARIABLE . count_param RIGHT_PAREN
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (234) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (203) count_param -> . COMMA COUNT_NORMAL
    (204) count_param -> . COMMA COUNT_RECURSIVE
    (205) count_param -> .

    LEFT_BRACKET    shift and go to state 89
    COMMA           shift and go to state 420
    RIGHT_PAREN     reduce using rule 205 (count_param -> .)

    count_param                    shift and go to state 422

state 362

    (200) statement_array_special_function_error -> COUNT LEFT_PAREN error . count_param RIGHT_PAREN
    (203) count_param -> . COMMA COUNT_NORMAL
    (204) count_param -> . COMMA COUNT_RECURSIVE
    (205) count_param -> .

    COMMA           shift and go to state 420
    RIGHT_PAREN     reduce using rule 205 (count_param -> .)

    count_param                    shift and go to state 423

state 363

    (216) structure_array_principal -> access_array_element .
    (230) access_array_stucture -> access_array_element .

  ! reduce/reduce conflict for COMMA resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 216 (structure_array_principal -> access_array_element .)
    COMMA           reduce using rule 216 (structure_array_principal -> access_array_element .)
    RIGHT_PAREN     reduce using rule 216 (structure_array_principal -> access_array_element .)

  ! COMMA           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! RIGHT_PAREN     [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]


state 364

    (198) array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 424


state 365

    (201) statement_array_special_function_error -> ARRAY_POP LEFT_PAREN error . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 425


state 366

    (199) array_special_function -> ARRAY_SUM LEFT_PAREN VARIABLE . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 426


state 367

    (202) statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN error . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 427


state 368

    (177) arrow_function -> FN LEFT_PAREN params . RIGHT_PAREN EQUALS GREATER_THAN codeblock
    (178) arrow_function -> FN LEFT_PAREN params . RIGHT_PAREN EQUALS GREATER_THAN print_statement
    (179) arrow_function -> FN LEFT_PAREN params . RIGHT_PAREN EQUALS GREATER_THAN expression

    RIGHT_PAREN     shift and go to state 428


state 369

    (180) anonymous_functions -> FUNCTION LEFT_PAREN params . RIGHT_PAREN codeblock

    RIGHT_PAREN     shift and go to state 429


state 370

    (73) true_boolean_types -> ARRAY LEFT_PAREN values . RIGHT_PAREN
    (224) values_array_indexed -> values .
    (225) values_array_indexed -> values . COMMA values_array_indexed

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 343
    COMMA           shift and go to state 331

  ! RIGHT_PAREN     [ reduce using rule 224 (values_array_indexed -> values .) ]


state 371

    (247) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET . VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET . INTEGER RIGHT_BRACKET

    VARIABLE        shift and go to state 430
    INTEGER         shift and go to state 431


state 372

    (246) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET . INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET . VARIABLE RIGHT_BRACKET

    INTEGER         shift and go to state 433
    VARIABLE        shift and go to state 432


state 373

    (252) add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .

    ECHO            reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    PRINT           reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    CLASS           reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    INTERFACE       reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    FUNCTION        reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    VARIABLE        reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    INCREASE        reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    DECREMENT       reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    IF              reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    WHILE           reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    FOR             reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    CONST           reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    DEFINE          reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    ARRAY           reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    LEFT_BRACKET    reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    NEW             reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    PHP_END_IDENTIFIER reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    SEMICOLON       reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    COMMA           reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    RIGHT_PAREN     reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    RETURN          reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    BREAK           reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    RIGHT_BRACE     reduce using rule 252 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)


state 374

    (217) indexed_array -> ARRAY . LEFT_PAREN values_array_indexed RIGHT_PAREN

    LEFT_PAREN      shift and go to state 434


state 375

    (259) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS . values
    (260) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS . VARIABLE
    (261) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS . access_array_element
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 435
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 436
    access_array_element           shift and go to state 437
    boolean                        shift and go to state 63

state 376

    (267) accessType -> IDENTIFIER LEFT_BRACKET . INTEGER RIGHT_BRACKET

    INTEGER         shift and go to state 438


state 377

    (264) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS . values
    (265) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS . VARIABLE
    (266) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS . access_array_element
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 441
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    access_array_element           shift and go to state 439
    values                         shift and go to state 440
    boolean                        shift and go to state 63

state 378

    (15) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE else_statement
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 444
    BREAK           shift and go to state 445
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 442
    sentence                       shift and go to state 443
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 379

    (14) while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 444
    BREAK           shift and go to state 445
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 446
    sentence                       shift and go to state 443
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 380

    (42) expression_for -> LEFT_PAREN . expression_for RIGHT_PAREN
    (39) expression_for -> . VARIABLE
    (40) expression_for -> . number_values
    (41) expression_for -> . expression_for operator_aritmetic expression_for
    (42) expression_for -> . LEFT_PAREN expression_for RIGHT_PAREN
    (43) expression_for -> . IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> . IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
    (45) expression_for -> . length_operations
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT
    (206) length_operations -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (207) length_operations -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (208) length_operations -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (209) length_operations -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN

    VARIABLE        shift and go to state 381
    LEFT_PAREN      shift and go to state 380
    IDENTIFIER      shift and go to state 384
    INTEGER         shift and go to state 386
    FLOAT           shift and go to state 387
    COUNT           shift and go to state 388
    STRLEN          shift and go to state 389

    expression_for                 shift and go to state 447
    number_values                  shift and go to state 383
    length_operations              shift and go to state 385

state 381

    (39) expression_for -> VARIABLE .

    SEMICOLON       reduce using rule 39 (expression_for -> VARIABLE .)
    PLUS            reduce using rule 39 (expression_for -> VARIABLE .)
    MINUS           reduce using rule 39 (expression_for -> VARIABLE .)
    MULTIPLY        reduce using rule 39 (expression_for -> VARIABLE .)
    DIVIDE          reduce using rule 39 (expression_for -> VARIABLE .)
    MODULE          reduce using rule 39 (expression_for -> VARIABLE .)
    POW             reduce using rule 39 (expression_for -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 39 (expression_for -> VARIABLE .)


state 382

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for . SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (41) expression_for -> expression_for . operator_aritmetic expression_for
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

    SEMICOLON       shift and go to state 448
    PLUS            shift and go to state 450
    MINUS           shift and go to state 451
    MULTIPLY        shift and go to state 452
    DIVIDE          shift and go to state 453
    MODULE          shift and go to state 454
    POW             shift and go to state 455

    operator_aritmetic             shift and go to state 449

state 383

    (40) expression_for -> number_values .

    SEMICOLON       reduce using rule 40 (expression_for -> number_values .)
    PLUS            reduce using rule 40 (expression_for -> number_values .)
    MINUS           reduce using rule 40 (expression_for -> number_values .)
    MULTIPLY        reduce using rule 40 (expression_for -> number_values .)
    DIVIDE          reduce using rule 40 (expression_for -> number_values .)
    MODULE          reduce using rule 40 (expression_for -> number_values .)
    POW             reduce using rule 40 (expression_for -> number_values .)
    RIGHT_PAREN     reduce using rule 40 (expression_for -> number_values .)


state 384

    (43) expression_for -> IDENTIFIER . LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> IDENTIFIER . LEFT_PAREN access_array_element RIGHT_PAREN

    LEFT_PAREN      shift and go to state 456


state 385

    (45) expression_for -> length_operations .

    SEMICOLON       reduce using rule 45 (expression_for -> length_operations .)
    PLUS            reduce using rule 45 (expression_for -> length_operations .)
    MINUS           reduce using rule 45 (expression_for -> length_operations .)
    MULTIPLY        reduce using rule 45 (expression_for -> length_operations .)
    DIVIDE          reduce using rule 45 (expression_for -> length_operations .)
    MODULE          reduce using rule 45 (expression_for -> length_operations .)
    POW             reduce using rule 45 (expression_for -> length_operations .)
    RIGHT_PAREN     reduce using rule 45 (expression_for -> length_operations .)


state 386

    (46) number_values -> INTEGER .

    SEMICOLON       reduce using rule 46 (number_values -> INTEGER .)
    PLUS            reduce using rule 46 (number_values -> INTEGER .)
    MINUS           reduce using rule 46 (number_values -> INTEGER .)
    MULTIPLY        reduce using rule 46 (number_values -> INTEGER .)
    DIVIDE          reduce using rule 46 (number_values -> INTEGER .)
    MODULE          reduce using rule 46 (number_values -> INTEGER .)
    POW             reduce using rule 46 (number_values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 46 (number_values -> INTEGER .)


state 387

    (47) number_values -> FLOAT .

    SEMICOLON       reduce using rule 47 (number_values -> FLOAT .)
    PLUS            reduce using rule 47 (number_values -> FLOAT .)
    MINUS           reduce using rule 47 (number_values -> FLOAT .)
    MULTIPLY        reduce using rule 47 (number_values -> FLOAT .)
    DIVIDE          reduce using rule 47 (number_values -> FLOAT .)
    MODULE          reduce using rule 47 (number_values -> FLOAT .)
    POW             reduce using rule 47 (number_values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 47 (number_values -> FLOAT .)


state 388

    (206) length_operations -> COUNT . LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (207) length_operations -> COUNT . LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (208) length_operations -> COUNT . LEFT_PAREN VARIABLE count_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 457


state 389

    (209) length_operations -> STRLEN . LEFT_PAREN string_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 458


state 390

    (164) define_syntax -> DEFINE LEFT_PAREN STRING COMMA values . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 459


state 391

    (244) structure_matrix_first -> ARRAY LEFT_PAREN values . RIGHT_PAREN
    (245) structure_matrix_first -> ARRAY LEFT_PAREN values . RIGHT_PAREN COMMA structure_matrix_first
    (224) values_array_indexed -> values .
    (225) values_array_indexed -> values . COMMA values_array_indexed

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 460
    COMMA           shift and go to state 331

  ! RIGHT_PAREN     [ reduce using rule 224 (values_array_indexed -> values .) ]


state 392

    (240) matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .

    ECHO            reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    PRINT           reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    CLASS           reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    INTERFACE       reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    FUNCTION        reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    VARIABLE        reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    INCREASE        reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    DECREMENT       reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    IF              reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    WHILE           reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    FOR             reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    CONST           reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    DEFINE          reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    ARRAY           reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    LEFT_BRACKET    reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    NEW             reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    SEMICOLON       reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    COMMA           reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    RIGHT_PAREN     reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    RETURN          reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    BREAK           reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    RIGHT_BRACE     reduce using rule 240 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)


state 393

    (225) values_array_indexed -> values COMMA values_array_indexed .

    RIGHT_PAREN     reduce using rule 225 (values_array_indexed -> values COMMA values_array_indexed .)


state 394

    (227) values_array_indexed -> object_creation COMMA values_array_indexed .

    RIGHT_PAREN     reduce using rule 227 (values_array_indexed -> object_creation COMMA values_array_indexed .)


state 395

    (229) values_array_indexed -> indexed_array COMMA values_array_indexed .

    RIGHT_PAREN     reduce using rule 229 (values_array_indexed -> indexed_array COMMA values_array_indexed .)


state 396

    (220) structure_array -> key EQUALS GREATER_THAN . values
    (221) structure_array -> key EQUALS GREATER_THAN . values COMMA structure_array
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 461
    boolean                        shift and go to state 63

state 397

    (243) structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA . structure_matrix_second
    (242) structure_matrix_second -> . LEFT_BRACKET values RIGHT_BRACKET
    (243) structure_matrix_second -> . LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second

    LEFT_BRACKET    shift and go to state 106

    structure_matrix_second        shift and go to state 462

state 398

    (256) object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .

    ECHO            reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    PRINT           reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    CLASS           reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    INTERFACE       reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    FUNCTION        reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    VARIABLE        reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    INCREASE        reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    DECREMENT       reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    IF              reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    WHILE           reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    FOR             reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    CONST           reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    DEFINE          reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    ARRAY           reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    NEW             reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    COMMA           reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    SEMICOLON       reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RETURN          reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    BREAK           reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 256 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)


state 399

    (233) access_array_element -> VARIABLE LEFT_BRACKET VARIABLE . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 463


state 400

    (232) access_array_element -> VARIABLE LEFT_BRACKET INTEGER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 464


state 401

    (269) class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body . RIGHT_BRACE
    (280) class_body -> class_body . class_member
    (282) class_member -> . visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (283) class_member -> . visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (284) class_member -> . class_attribute
    (288) visibility_opt -> . PUBLIC
    (289) visibility_opt -> . PRIVATE
    (290) visibility_opt -> . PROTECTED
    (291) visibility_opt -> .
    (285) class_attribute -> . visibility_opt VARIABLE EQUALS values SEMICOLON
    (286) class_attribute -> . visibility_opt VARIABLE SEMICOLON
    (287) class_attribute -> . visibility_opt constant_assignment SEMICOLON

    RIGHT_BRACE     shift and go to state 465
    PUBLIC          shift and go to state 406
    PRIVATE         shift and go to state 407
    PROTECTED       shift and go to state 408
    STATIC          reduce using rule 291 (visibility_opt -> .)
    FUNCTION        reduce using rule 291 (visibility_opt -> .)
    VARIABLE        reduce using rule 291 (visibility_opt -> .)
    CONST           reduce using rule 291 (visibility_opt -> .)
    DEFINE          reduce using rule 291 (visibility_opt -> .)

    class_member                   shift and go to state 466
    visibility_opt                 shift and go to state 467
    class_attribute                shift and go to state 468

state 402

    (279) interface_list -> interface_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 469


state 403

    (270) interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .

    ECHO            reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    PRINT           reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    CLASS           reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    INTERFACE       reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    FUNCTION        reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    VARIABLE        reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    INCREASE        reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    DECREMENT       reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    IF              reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    WHILE           reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    FOR             reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    CONST           reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    DEFINE          reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    ARRAY           reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    NEW             reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    RETURN          reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    BREAK           reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 270 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)


state 404

    (271) interface_body -> interface_body interface_method .

    RIGHT_BRACE     reduce using rule 271 (interface_body -> interface_body interface_method .)
    PUBLIC          reduce using rule 271 (interface_body -> interface_body interface_method .)
    PRIVATE         reduce using rule 271 (interface_body -> interface_body interface_method .)
    PROTECTED       reduce using rule 271 (interface_body -> interface_body interface_method .)
    FUNCTION        reduce using rule 271 (interface_body -> interface_body interface_method .)


state 405

    (273) interface_method -> visibility_opt . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON

    FUNCTION        shift and go to state 470


state 406

    (288) visibility_opt -> PUBLIC .

    FUNCTION        reduce using rule 288 (visibility_opt -> PUBLIC .)
    STATIC          reduce using rule 288 (visibility_opt -> PUBLIC .)
    VARIABLE        reduce using rule 288 (visibility_opt -> PUBLIC .)
    CONST           reduce using rule 288 (visibility_opt -> PUBLIC .)
    DEFINE          reduce using rule 288 (visibility_opt -> PUBLIC .)


state 407

    (289) visibility_opt -> PRIVATE .

    FUNCTION        reduce using rule 289 (visibility_opt -> PRIVATE .)
    STATIC          reduce using rule 289 (visibility_opt -> PRIVATE .)
    VARIABLE        reduce using rule 289 (visibility_opt -> PRIVATE .)
    CONST           reduce using rule 289 (visibility_opt -> PRIVATE .)
    DEFINE          reduce using rule 289 (visibility_opt -> PRIVATE .)


state 408

    (290) visibility_opt -> PROTECTED .

    FUNCTION        reduce using rule 290 (visibility_opt -> PROTECTED .)
    STATIC          reduce using rule 290 (visibility_opt -> PROTECTED .)
    VARIABLE        reduce using rule 290 (visibility_opt -> PROTECTED .)
    CONST           reduce using rule 290 (visibility_opt -> PROTECTED .)
    DEFINE          reduce using rule 290 (visibility_opt -> PROTECTED .)


state 409

    (174) function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .

    ECHO            reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    PRINT           reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    CLASS           reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    INTERFACE       reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    FUNCTION        reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    VARIABLE        reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    INCREASE        reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    DECREMENT       reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    IF              reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    WHILE           reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    FOR             reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    CONST           reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    DEFINE          reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    ARRAY           reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    LEFT_BRACKET    reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    NEW             reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    PHP_END_IDENTIFIER reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    RETURN          reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    BREAK           reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    RIGHT_BRACE     reduce using rule 174 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)


state 410

    (181) codeblock -> LEFT_BRACE . body_statement RIGHT_BRACE
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 444
    BREAK           shift and go to state 445
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 471
    sentence                       shift and go to state 443
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 411

    (171) real_params -> real_params COMMA VARIABLE .

    COMMA           reduce using rule 171 (real_params -> real_params COMMA VARIABLE .)
    RIGHT_PAREN     reduce using rule 171 (real_params -> real_params COMMA VARIABLE .)


state 412

    (172) real_params -> real_params COMMA values .

    COMMA           reduce using rule 172 (real_params -> real_params COMMA values .)
    RIGHT_PAREN     reduce using rule 172 (real_params -> real_params COMMA values .)


state 413

    (166) function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .

    SEMICOLON       reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    ECHO            reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    PRINT           reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    CLASS           reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    INTERFACE       reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    FUNCTION        reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    VARIABLE        reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    INCREASE        reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    DECREMENT       reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    IF              reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    WHILE           reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    FOR             reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    CONST           reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    DEFINE          reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    ARRAY           reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    NEW             reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    COMMA           reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    RETURN          reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    BREAK           reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 166 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)


state 414

    (165) function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .

    SEMICOLON       reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    ECHO            reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    PRINT           reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    CLASS           reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    INTERFACE       reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    FUNCTION        reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    VARIABLE        reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    INCREASE        reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    DECREMENT       reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    IF              reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    WHILE           reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    FOR             reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    CONST           reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    DEFINE          reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    ARRAY           reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    NEW             reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    COMMA           reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RETURN          reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    BREAK           reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 165 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)


state 415

    (184) string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 184 (string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)


state 416

    (185) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA . int_param RIGHT_PAREN
    (186) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA . int_param COMMA int_param RIGHT_PAREN
    (190) int_param -> . INTEGER
    (191) int_param -> . VARIABLE
    (192) int_param -> . STRING

    INTEGER         shift and go to state 473
    VARIABLE        shift and go to state 474
    STRING          shift and go to state 475

    int_param                      shift and go to state 472

state 417

    (182) input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN .

    SEMICOLON       reduce using rule 182 (input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN .)


state 418

    (183) input -> READLINE LEFT_PAREN STRING RIGHT_PAREN .

    SEMICOLON       reduce using rule 183 (input -> READLINE LEFT_PAREN STRING RIGHT_PAREN .)


state 419

    (195) array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 476


state 420

    (203) count_param -> COMMA . COUNT_NORMAL
    (204) count_param -> COMMA . COUNT_RECURSIVE

    COUNT_NORMAL    shift and go to state 477
    COUNT_RECURSIVE shift and go to state 478


state 421

    (196) array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 479


state 422

    (197) array_special_function -> COUNT LEFT_PAREN VARIABLE count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 480


state 423

    (200) statement_array_special_function_error -> COUNT LEFT_PAREN error count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 481


state 424

    (198) array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN .

    SEMICOLON       reduce using rule 198 (array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN .)


state 425

    (201) statement_array_special_function_error -> ARRAY_POP LEFT_PAREN error RIGHT_PAREN .

    SEMICOLON       reduce using rule 201 (statement_array_special_function_error -> ARRAY_POP LEFT_PAREN error RIGHT_PAREN .)


state 426

    (199) array_special_function -> ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN .

    SEMICOLON       reduce using rule 199 (array_special_function -> ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN .)


state 427

    (202) statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN error RIGHT_PAREN .

    SEMICOLON       reduce using rule 202 (statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN error RIGHT_PAREN .)


state 428

    (177) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN . EQUALS GREATER_THAN codeblock
    (178) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN . EQUALS GREATER_THAN print_statement
    (179) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN . EQUALS GREATER_THAN expression

    EQUALS          shift and go to state 482


state 429

    (180) anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN . codeblock
    (181) codeblock -> . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 410

    codeblock                      shift and go to state 483

state 430

    (247) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 484


state 431

    (248) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 485


state 432

    (249) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 486


state 433

    (246) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 487


state 434

    (217) indexed_array -> ARRAY LEFT_PAREN . values_array_indexed RIGHT_PAREN
    (224) values_array_indexed -> . values
    (225) values_array_indexed -> . values COMMA values_array_indexed
    (226) values_array_indexed -> . object_creation
    (227) values_array_indexed -> . object_creation COMMA values_array_indexed
    (228) values_array_indexed -> . indexed_array
    (229) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    NEW             shift and go to state 49
    ARRAY           shift and go to state 374
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values_array_indexed           shift and go to state 214
    values                         shift and go to state 217
    object_creation                shift and go to state 218
    indexed_array                  shift and go to state 219
    boolean                        shift and go to state 63

state 435

    (260) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    ECHO            reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    PRINT           reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    CLASS           reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    INTERFACE       reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    FUNCTION        reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    VARIABLE        reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    INCREASE        reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    DECREMENT       reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    IF              reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    WHILE           reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    FOR             reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    CONST           reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    DEFINE          reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    ARRAY           reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    NEW             reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    PHP_END_IDENTIFIER reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    COMMA           reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RETURN          reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    BREAK           reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RIGHT_BRACE     reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    LEFT_BRACKET    shift and go to state 340

  ! LEFT_BRACKET    [ reduce using rule 260 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .) ]


state 436

    (259) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .

    ECHO            reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    PRINT           reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    CLASS           reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    INTERFACE       reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    FUNCTION        reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    VARIABLE        reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    INCREASE        reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    DECREMENT       reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    IF              reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    WHILE           reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    FOR             reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    CONST           reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    DEFINE          reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    ARRAY           reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    LEFT_BRACKET    reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    NEW             reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    PHP_END_IDENTIFIER reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    COMMA           reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    STRING_CONCATENATION reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    SEMICOLON       reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    RIGHT_PAREN     reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    RETURN          reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    BREAK           reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    RIGHT_BRACE     reduce using rule 259 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)


state 437

    (261) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .

    ECHO            reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    PRINT           reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    CLASS           reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    INTERFACE       reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    FUNCTION        reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    VARIABLE        reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    INCREASE        reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    DECREMENT       reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    IF              reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    WHILE           reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    FOR             reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    CONST           reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    DEFINE          reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    ARRAY           reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    LEFT_BRACKET    reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    NEW             reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    PHP_END_IDENTIFIER reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    COMMA           reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    STRING_CONCATENATION reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    SEMICOLON       reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RIGHT_PAREN     reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RETURN          reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    BREAK           reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RIGHT_BRACE     reduce using rule 261 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)


state 438

    (267) accessType -> IDENTIFIER LEFT_BRACKET INTEGER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 488


state 439

    (266) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .

    ECHO            reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    PRINT           reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    CLASS           reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    INTERFACE       reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    FUNCTION        reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    VARIABLE        reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    INCREASE        reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    DECREMENT       reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    IF              reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    WHILE           reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    FOR             reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    CONST           reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    DEFINE          reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    ARRAY           reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    LEFT_BRACKET    reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    NEW             reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    PHP_END_IDENTIFIER reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    COMMA           reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    STRING_CONCATENATION reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    SEMICOLON       reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RIGHT_PAREN     reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RETURN          reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    BREAK           reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RIGHT_BRACE     reduce using rule 266 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)


state 440

    (264) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .

    ECHO            reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    PRINT           reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    CLASS           reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    INTERFACE       reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    FUNCTION        reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    VARIABLE        reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    INCREASE        reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    DECREMENT       reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    IF              reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    WHILE           reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    FOR             reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    CONST           reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    DEFINE          reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    ARRAY           reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    LEFT_BRACKET    reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    NEW             reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    PHP_END_IDENTIFIER reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    COMMA           reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    STRING_CONCATENATION reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    SEMICOLON       reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    RIGHT_PAREN     reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    RETURN          reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    BREAK           reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    RIGHT_BRACE     reduce using rule 264 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)


state 441

    (265) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    ECHO            reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    PRINT           reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    CLASS           reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    INTERFACE       reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    FUNCTION        reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    VARIABLE        reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    INCREASE        reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    DECREMENT       reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    IF              reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    WHILE           reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    FOR             reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    CONST           reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    DEFINE          reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    ARRAY           reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    NEW             reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    PHP_END_IDENTIFIER reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    COMMA           reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RETURN          reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    BREAK           reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RIGHT_BRACE     reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    LEFT_BRACKET    shift and go to state 340

  ! LEFT_BRACKET    [ reduce using rule 265 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .) ]


state 442

    (15) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE else_statement

    RIGHT_BRACE     shift and go to state 489


state 443

    (22) body_statement -> sentence .
    (23) body_statement -> sentence . RETURN values SEMICOLON
    (24) body_statement -> sentence . RETURN SEMICOLON
    (25) body_statement -> sentence . BREAK SEMICOLON
    (26) body_statement -> sentence . body_statement
    (30) body_statement -> sentence . RETURN printable_values SEMICOLON
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RIGHT_BRACE     reduce using rule 22 (body_statement -> sentence .)
    RETURN          shift and go to state 490
    BREAK           shift and go to state 491
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    sentence                       shift and go to state 443
    body_statement                 shift and go to state 492
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 444

    (27) body_statement -> RETURN . values SEMICOLON
    (29) body_statement -> RETURN . printable_values SEMICOLON
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    VARIABLE        shift and go to state 57
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    values                         shift and go to state 493
    printable_values               shift and go to state 494
    boolean                        shift and go to state 63
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 445

    (28) body_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 495


state 446

    (14) while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 496


state 447

    (42) expression_for -> LEFT_PAREN expression_for . RIGHT_PAREN
    (41) expression_for -> expression_for . operator_aritmetic expression_for
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

    RIGHT_PAREN     shift and go to state 497
    PLUS            shift and go to state 450
    MINUS           shift and go to state 451
    MULTIPLY        shift and go to state 452
    DIVIDE          shift and go to state 453
    MODULE          shift and go to state 454
    POW             shift and go to state 455

    operator_aritmetic             shift and go to state 449

state 448

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON . condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (38) condition_for -> . VARIABLE comparator_operator expression_for

    VARIABLE        shift and go to state 498

    condition_for                  shift and go to state 499

state 449

    (41) expression_for -> expression_for operator_aritmetic . expression_for
    (39) expression_for -> . VARIABLE
    (40) expression_for -> . number_values
    (41) expression_for -> . expression_for operator_aritmetic expression_for
    (42) expression_for -> . LEFT_PAREN expression_for RIGHT_PAREN
    (43) expression_for -> . IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> . IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
    (45) expression_for -> . length_operations
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT
    (206) length_operations -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (207) length_operations -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (208) length_operations -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (209) length_operations -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN

    VARIABLE        shift and go to state 381
    LEFT_PAREN      shift and go to state 380
    IDENTIFIER      shift and go to state 384
    INTEGER         shift and go to state 386
    FLOAT           shift and go to state 387
    COUNT           shift and go to state 388
    STRLEN          shift and go to state 389

    expression_for                 shift and go to state 500
    number_values                  shift and go to state 383
    length_operations              shift and go to state 385

state 450

    (48) operator_aritmetic -> PLUS .

    VARIABLE        reduce using rule 48 (operator_aritmetic -> PLUS .)
    LEFT_PAREN      reduce using rule 48 (operator_aritmetic -> PLUS .)
    IDENTIFIER      reduce using rule 48 (operator_aritmetic -> PLUS .)
    INTEGER         reduce using rule 48 (operator_aritmetic -> PLUS .)
    FLOAT           reduce using rule 48 (operator_aritmetic -> PLUS .)
    COUNT           reduce using rule 48 (operator_aritmetic -> PLUS .)
    STRLEN          reduce using rule 48 (operator_aritmetic -> PLUS .)


state 451

    (49) operator_aritmetic -> MINUS .

    VARIABLE        reduce using rule 49 (operator_aritmetic -> MINUS .)
    LEFT_PAREN      reduce using rule 49 (operator_aritmetic -> MINUS .)
    IDENTIFIER      reduce using rule 49 (operator_aritmetic -> MINUS .)
    INTEGER         reduce using rule 49 (operator_aritmetic -> MINUS .)
    FLOAT           reduce using rule 49 (operator_aritmetic -> MINUS .)
    COUNT           reduce using rule 49 (operator_aritmetic -> MINUS .)
    STRLEN          reduce using rule 49 (operator_aritmetic -> MINUS .)


state 452

    (50) operator_aritmetic -> MULTIPLY .

    VARIABLE        reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    LEFT_PAREN      reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    IDENTIFIER      reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    INTEGER         reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    FLOAT           reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    COUNT           reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    STRLEN          reduce using rule 50 (operator_aritmetic -> MULTIPLY .)


state 453

    (51) operator_aritmetic -> DIVIDE .

    VARIABLE        reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    LEFT_PAREN      reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    IDENTIFIER      reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    INTEGER         reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    FLOAT           reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    COUNT           reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    STRLEN          reduce using rule 51 (operator_aritmetic -> DIVIDE .)


state 454

    (52) operator_aritmetic -> MODULE .

    VARIABLE        reduce using rule 52 (operator_aritmetic -> MODULE .)
    LEFT_PAREN      reduce using rule 52 (operator_aritmetic -> MODULE .)
    IDENTIFIER      reduce using rule 52 (operator_aritmetic -> MODULE .)
    INTEGER         reduce using rule 52 (operator_aritmetic -> MODULE .)
    FLOAT           reduce using rule 52 (operator_aritmetic -> MODULE .)
    COUNT           reduce using rule 52 (operator_aritmetic -> MODULE .)
    STRLEN          reduce using rule 52 (operator_aritmetic -> MODULE .)


state 455

    (53) operator_aritmetic -> POW .

    VARIABLE        reduce using rule 53 (operator_aritmetic -> POW .)
    LEFT_PAREN      reduce using rule 53 (operator_aritmetic -> POW .)
    IDENTIFIER      reduce using rule 53 (operator_aritmetic -> POW .)
    INTEGER         reduce using rule 53 (operator_aritmetic -> POW .)
    FLOAT           reduce using rule 53 (operator_aritmetic -> POW .)
    COUNT           reduce using rule 53 (operator_aritmetic -> POW .)
    STRLEN          reduce using rule 53 (operator_aritmetic -> POW .)


state 456

    (43) expression_for -> IDENTIFIER LEFT_PAREN . VARIABLE RIGHT_PAREN
    (44) expression_for -> IDENTIFIER LEFT_PAREN . access_array_element RIGHT_PAREN
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET

    VARIABLE        shift and go to state 501

    access_array_element           shift and go to state 502

state 457

    (206) length_operations -> COUNT LEFT_PAREN . structure_array_principal count_param RIGHT_PAREN
    (207) length_operations -> COUNT LEFT_PAREN . structure_matrix_principal count_param RIGHT_PAREN
    (208) length_operations -> COUNT LEFT_PAREN . VARIABLE count_param RIGHT_PAREN
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    VARIABLE        shift and go to state 505
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47

    structure_array_principal      shift and go to state 503
    structure_matrix_principal     shift and go to state 504
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 363
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    statement_access_array_element_error shift and go to state 48

state 458

    (209) length_operations -> STRLEN LEFT_PAREN . string_param RIGHT_PAREN
    (187) string_param -> . STRING
    (188) string_param -> . VARIABLE
    (189) string_param -> . INTEGER

    STRING          shift and go to state 353
    VARIABLE        shift and go to state 354
    INTEGER         shift and go to state 355

    string_param                   shift and go to state 506

state 459

    (164) define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN .

    SEMICOLON       reduce using rule 164 (define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN .)


state 460

    (244) structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN .
    (245) structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN . COMMA structure_matrix_first

    RIGHT_PAREN     reduce using rule 244 (structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    COMMA           shift and go to state 507


state 461

    (220) structure_array -> key EQUALS GREATER_THAN values .
    (221) structure_array -> key EQUALS GREATER_THAN values . COMMA structure_array

    RIGHT_PAREN     reduce using rule 220 (structure_array -> key EQUALS GREATER_THAN values .)
    RIGHT_BRACKET   reduce using rule 220 (structure_array -> key EQUALS GREATER_THAN values .)
    COMMA           shift and go to state 508


state 462

    (243) structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second .

    RIGHT_BRACKET   reduce using rule 243 (structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second .)


state 463

    (233) access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .

    LOGIC_AND       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    COMMA           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    ECHO            reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    PRINT           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    CLASS           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    INTERFACE       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    FUNCTION        reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    VARIABLE        reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    INCREASE        reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    DECREMENT       reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    IF              reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    WHILE           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    FOR             reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    CONST           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    DEFINE          reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    ARRAY           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    NEW             reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RETURN          reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    BREAK           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    MINUS           reduce using rule 233 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)


state 464

    (232) access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .

    LOGIC_AND       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ECHO            reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PRINT           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CLASS           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INTERFACE       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FUNCTION        reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    VARIABLE        reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INCREASE        reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DECREMENT       reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    IF              reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    WHILE           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FOR             reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CONST           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DEFINE          reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ARRAY           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    NEW             reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RETURN          reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    BREAK           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    MINUS           reduce using rule 232 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)


state 465

    (269) class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .

    ECHO            reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    PRINT           reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    CLASS           reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    INTERFACE       reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    FUNCTION        reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    VARIABLE        reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    INCREASE        reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    DECREMENT       reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    IF              reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    WHILE           reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    FOR             reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    CONST           reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    DEFINE          reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    ARRAY           reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    NEW             reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    RETURN          reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    BREAK           reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 269 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)


state 466

    (280) class_body -> class_body class_member .

    RIGHT_BRACE     reduce using rule 280 (class_body -> class_body class_member .)
    PUBLIC          reduce using rule 280 (class_body -> class_body class_member .)
    PRIVATE         reduce using rule 280 (class_body -> class_body class_member .)
    PROTECTED       reduce using rule 280 (class_body -> class_body class_member .)
    STATIC          reduce using rule 280 (class_body -> class_body class_member .)
    FUNCTION        reduce using rule 280 (class_body -> class_body class_member .)
    VARIABLE        reduce using rule 280 (class_body -> class_body class_member .)
    CONST           reduce using rule 280 (class_body -> class_body class_member .)
    DEFINE          reduce using rule 280 (class_body -> class_body class_member .)


state 467

    (282) class_member -> visibility_opt . STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (283) class_member -> visibility_opt . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (285) class_attribute -> visibility_opt . VARIABLE EQUALS values SEMICOLON
    (286) class_attribute -> visibility_opt . VARIABLE SEMICOLON
    (287) class_attribute -> visibility_opt . constant_assignment SEMICOLON
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN

    STATIC          shift and go to state 509
    FUNCTION        shift and go to state 510
    VARIABLE        shift and go to state 511
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45

    constant_assignment            shift and go to state 512
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29

state 468

    (284) class_member -> class_attribute .

    RIGHT_BRACE     reduce using rule 284 (class_member -> class_attribute .)
    PUBLIC          reduce using rule 284 (class_member -> class_attribute .)
    PRIVATE         reduce using rule 284 (class_member -> class_attribute .)
    PROTECTED       reduce using rule 284 (class_member -> class_attribute .)
    STATIC          reduce using rule 284 (class_member -> class_attribute .)
    FUNCTION        reduce using rule 284 (class_member -> class_attribute .)
    VARIABLE        reduce using rule 284 (class_member -> class_attribute .)
    CONST           reduce using rule 284 (class_member -> class_attribute .)
    DEFINE          reduce using rule 284 (class_member -> class_attribute .)


state 469

    (279) interface_list -> interface_list COMMA IDENTIFIER .

    COMMA           reduce using rule 279 (interface_list -> interface_list COMMA IDENTIFIER .)
    LEFT_BRACE      reduce using rule 279 (interface_list -> interface_list COMMA IDENTIFIER .)


state 470

    (273) interface_method -> visibility_opt FUNCTION . IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON

    IDENTIFIER      shift and go to state 513


state 471

    (181) codeblock -> LEFT_BRACE body_statement . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 514


state 472

    (185) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param . RIGHT_PAREN
    (186) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param . COMMA int_param RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 516
    COMMA           shift and go to state 515


state 473

    (190) int_param -> INTEGER .

    RIGHT_PAREN     reduce using rule 190 (int_param -> INTEGER .)
    COMMA           reduce using rule 190 (int_param -> INTEGER .)


state 474

    (191) int_param -> VARIABLE .

    RIGHT_PAREN     reduce using rule 191 (int_param -> VARIABLE .)
    COMMA           reduce using rule 191 (int_param -> VARIABLE .)


state 475

    (192) int_param -> STRING .

    RIGHT_PAREN     reduce using rule 192 (int_param -> STRING .)
    COMMA           reduce using rule 192 (int_param -> STRING .)


state 476

    (195) array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 195 (array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)


state 477

    (203) count_param -> COMMA COUNT_NORMAL .

    RIGHT_PAREN     reduce using rule 203 (count_param -> COMMA COUNT_NORMAL .)


state 478

    (204) count_param -> COMMA COUNT_RECURSIVE .

    RIGHT_PAREN     reduce using rule 204 (count_param -> COMMA COUNT_RECURSIVE .)


state 479

    (196) array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 196 (array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)


state 480

    (197) array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 197 (array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)


state 481

    (200) statement_array_special_function_error -> COUNT LEFT_PAREN error count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 200 (statement_array_special_function_error -> COUNT LEFT_PAREN error count_param RIGHT_PAREN .)


state 482

    (177) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS . GREATER_THAN codeblock
    (178) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS . GREATER_THAN print_statement
    (179) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS . GREATER_THAN expression

    GREATER_THAN    shift and go to state 517


state 483

    (180) anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock .

    SEMICOLON       reduce using rule 180 (anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock .)


state 484

    (247) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .

    SEMICOLON       reduce using rule 247 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS          reduce using rule 247 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 247 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 247 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 247 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 247 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    COMMA           reduce using rule 247 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 247 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 247 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)


state 485

    (248) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .

    SEMICOLON       reduce using rule 248 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS          reduce using rule 248 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 248 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 248 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 248 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 248 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 248 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 248 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 248 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)


state 486

    (249) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .

    SEMICOLON       reduce using rule 249 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS          reduce using rule 249 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 249 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 249 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 249 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 249 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    COMMA           reduce using rule 249 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 249 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 249 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)


state 487

    (246) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .

    SEMICOLON       reduce using rule 246 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS          reduce using rule 246 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 246 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 246 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 246 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 246 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 246 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 246 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 246 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)


state 488

    (267) accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .

    EQUALS          reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ECHO            reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PRINT           reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CLASS           reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INTERFACE       reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FUNCTION        reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    VARIABLE        reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INCREASE        reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DECREMENT       reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    IF              reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    WHILE           reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FOR             reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CONST           reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DEFINE          reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ARRAY           reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    NEW             reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RETURN          reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    BREAK           reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 267 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)


state 489

    (15) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .
    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE . elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE . else_statement
    (18) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (21) else_statement -> . ELSE LEFT_BRACE body_statement RIGHT_BRACE

    ECHO            reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ELSEIF          shift and go to state 520
    ELSE            shift and go to state 521

    elseif_statement               shift and go to state 518
    else_statement                 shift and go to state 519

state 490

    (23) body_statement -> sentence RETURN . values SEMICOLON
    (24) body_statement -> sentence RETURN . SEMICOLON
    (30) body_statement -> sentence RETURN . printable_values SEMICOLON
    (27) body_statement -> RETURN . values SEMICOLON
    (29) body_statement -> RETURN . printable_values SEMICOLON
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (109) printable_values -> . values
    (110) printable_values -> . values printable_dividers printable_values
    (111) printable_values -> . values COMMA printable_values
    (112) printable_values -> . VARIABLE
    (113) printable_values -> . VARIABLE printable_dividers printable_values
    (114) printable_values -> . VARIABLE COMMA printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . conditional COMMA printable_values
    (119) printable_values -> . structure_object_principal
    (120) printable_values -> . structure_object_principal printable_dividers printable_values
    (121) printable_values -> . structure_object_principal COMMA printable_values
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    SEMICOLON       shift and go to state 523
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    VARIABLE        shift and go to state 57
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 74
    ARRAY           shift and go to state 78
    NULL            shift and go to state 79

    values                         shift and go to state 522
    printable_values               shift and go to state 524
    boolean                        shift and go to state 63
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean_expression             shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    access_array_element           shift and go to state 71
    expression                     shift and go to state 72
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 491

    (25) body_statement -> sentence BREAK . SEMICOLON
    (28) body_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 525


state 492

    (26) body_statement -> sentence body_statement .

    RIGHT_BRACE     reduce using rule 26 (body_statement -> sentence body_statement .)


state 493

    (27) body_statement -> RETURN values . SEMICOLON
    (109) printable_values -> values .
    (110) printable_values -> values . printable_dividers printable_values
    (111) printable_values -> values . COMMA printable_values
    (84) comparation -> values . comparator_operator values
    (85) comparation -> values . comparator_operator expression
    (122) printable_dividers -> . COMMA
    (123) printable_dividers -> . STRING_CONCATENATION
    (95) comparator_operator -> . EQUALS_EQUALS
    (96) comparator_operator -> . IDENTICAL
    (97) comparator_operator -> . NOT_EQUALS
    (98) comparator_operator -> . NOT_IDENTICAL
    (99) comparator_operator -> . SMALL_THAN
    (100) comparator_operator -> . GREATER_THAN
    (101) comparator_operator -> . SMALL_EQUALS_TO
    (102) comparator_operator -> . GREATER_EQUALS_TO
    (103) comparator_operator -> . SPACECRAFT
    (104) comparator_operator -> . NULL_FUSION

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 526
    COMMA           shift and go to state 118
    STRING_CONCATENATION shift and go to state 120
    EQUALS_EQUALS   shift and go to state 121
    IDENTICAL       shift and go to state 122
    NOT_EQUALS      shift and go to state 123
    NOT_IDENTICAL   shift and go to state 124
    SMALL_THAN      shift and go to state 125
    GREATER_THAN    shift and go to state 126
    SMALL_EQUALS_TO shift and go to state 127
    GREATER_EQUALS_TO shift and go to state 128
    SPACECRAFT      shift and go to state 129
    NULL_FUSION     shift and go to state 130

  ! SEMICOLON       [ reduce using rule 109 (printable_values -> values .) ]

    printable_dividers             shift and go to state 117
    comparator_operator            shift and go to state 119

state 494

    (29) body_statement -> RETURN printable_values . SEMICOLON

    SEMICOLON       shift and go to state 527


state 495

    (28) body_statement -> BREAK SEMICOLON .

    RIGHT_BRACE     reduce using rule 28 (body_statement -> BREAK SEMICOLON .)


state 496

    (14) while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .

    ECHO            reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)


state 497

    (42) expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .

    SEMICOLON       reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    PLUS            reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    MINUS           reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    MULTIPLY        reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    DIVIDE          reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    MODULE          reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    POW             reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)


state 498

    (38) condition_for -> VARIABLE . comparator_operator expression_for
    (95) comparator_operator -> . EQUALS_EQUALS
    (96) comparator_operator -> . IDENTICAL
    (97) comparator_operator -> . NOT_EQUALS
    (98) comparator_operator -> . NOT_IDENTICAL
    (99) comparator_operator -> . SMALL_THAN
    (100) comparator_operator -> . GREATER_THAN
    (101) comparator_operator -> . SMALL_EQUALS_TO
    (102) comparator_operator -> . GREATER_EQUALS_TO
    (103) comparator_operator -> . SPACECRAFT
    (104) comparator_operator -> . NULL_FUSION

    EQUALS_EQUALS   shift and go to state 121
    IDENTICAL       shift and go to state 122
    NOT_EQUALS      shift and go to state 123
    NOT_IDENTICAL   shift and go to state 124
    SMALL_THAN      shift and go to state 125
    GREATER_THAN    shift and go to state 126
    SMALL_EQUALS_TO shift and go to state 127
    GREATER_EQUALS_TO shift and go to state 128
    SPACECRAFT      shift and go to state 129
    NULL_FUSION     shift and go to state 130

    comparator_operator            shift and go to state 528

state 499

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for . SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    SEMICOLON       shift and go to state 529


state 500

    (41) expression_for -> expression_for operator_aritmetic expression_for .
    (41) expression_for -> expression_for . operator_aritmetic expression_for
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    SEMICOLON       reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .)
    RIGHT_PAREN     reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .)
    PLUS            shift and go to state 450
    MINUS           shift and go to state 451
    MULTIPLY        shift and go to state 452
    DIVIDE          shift and go to state 453
    MODULE          shift and go to state 454
    POW             shift and go to state 455

  ! PLUS            [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! MINUS           [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! MULTIPLY        [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! DIVIDE          [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! MODULE          [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! POW             [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]

    operator_aritmetic             shift and go to state 449

state 501

    (43) expression_for -> IDENTIFIER LEFT_PAREN VARIABLE . RIGHT_PAREN
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET

    RIGHT_PAREN     shift and go to state 530
    LEFT_BRACKET    shift and go to state 340


state 502

    (44) expression_for -> IDENTIFIER LEFT_PAREN access_array_element . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 531


state 503

    (206) length_operations -> COUNT LEFT_PAREN structure_array_principal . count_param RIGHT_PAREN
    (203) count_param -> . COMMA COUNT_NORMAL
    (204) count_param -> . COMMA COUNT_RECURSIVE
    (205) count_param -> .

    COMMA           shift and go to state 420
    RIGHT_PAREN     reduce using rule 205 (count_param -> .)

    count_param                    shift and go to state 532

state 504

    (207) length_operations -> COUNT LEFT_PAREN structure_matrix_principal . count_param RIGHT_PAREN
    (203) count_param -> . COMMA COUNT_NORMAL
    (204) count_param -> . COMMA COUNT_RECURSIVE
    (205) count_param -> .

    COMMA           shift and go to state 420
    RIGHT_PAREN     reduce using rule 205 (count_param -> .)

    count_param                    shift and go to state 533

state 505

    (208) length_operations -> COUNT LEFT_PAREN VARIABLE . count_param RIGHT_PAREN
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (234) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (203) count_param -> . COMMA COUNT_NORMAL
    (204) count_param -> . COMMA COUNT_RECURSIVE
    (205) count_param -> .

    LEFT_BRACKET    shift and go to state 89
    COMMA           shift and go to state 420
    RIGHT_PAREN     reduce using rule 205 (count_param -> .)

    count_param                    shift and go to state 534

state 506

    (209) length_operations -> STRLEN LEFT_PAREN string_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 535


state 507

    (245) structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA . structure_matrix_first
    (244) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (245) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first

    ARRAY           shift and go to state 536

    structure_matrix_first         shift and go to state 537

state 508

    (221) structure_array -> key EQUALS GREATER_THAN values COMMA . structure_array
    (220) structure_array -> . key EQUALS GREATER_THAN values
    (221) structure_array -> . key EQUALS GREATER_THAN values COMMA structure_array
    (222) key -> . INTEGER
    (223) key -> . STRING

    INTEGER         shift and go to state 224
    STRING          shift and go to state 225

    key                            shift and go to state 220
    structure_array                shift and go to state 538

state 509

    (282) class_member -> visibility_opt STATIC . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    FUNCTION        shift and go to state 539


state 510

    (283) class_member -> visibility_opt FUNCTION . IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    IDENTIFIER      shift and go to state 540


state 511

    (285) class_attribute -> visibility_opt VARIABLE . EQUALS values SEMICOLON
    (286) class_attribute -> visibility_opt VARIABLE . SEMICOLON

    EQUALS          shift and go to state 541
    SEMICOLON       shift and go to state 542


state 512

    (287) class_attribute -> visibility_opt constant_assignment . SEMICOLON

    SEMICOLON       shift and go to state 543


state 513

    (273) interface_method -> visibility_opt FUNCTION IDENTIFIER . LEFT_PAREN params RIGHT_PAREN SEMICOLON

    LEFT_PAREN      shift and go to state 544


state 514

    (181) codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .

    ECHO            reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    SEMICOLON       reduce using rule 181 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)


state 515

    (186) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA . int_param RIGHT_PAREN
    (190) int_param -> . INTEGER
    (191) int_param -> . VARIABLE
    (192) int_param -> . STRING

    INTEGER         shift and go to state 473
    VARIABLE        shift and go to state 474
    STRING          shift and go to state 475

    int_param                      shift and go to state 545

state 516

    (185) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 185 (string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN .)


state 517

    (177) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN . codeblock
    (178) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN . print_statement
    (179) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN . expression
    (181) codeblock -> . LEFT_BRACE body_statement RIGHT_BRACE
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    LEFT_BRACE      shift and go to state 410
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    INTEGER         shift and go to state 262
    FLOAT           shift and go to state 263
    VARIABLE        shift and go to state 244
    LEFT_PAREN      shift and go to state 245
    STRING          shift and go to state 264

    codeblock                      shift and go to state 546
    print_statement                shift and go to state 547
    expression                     shift and go to state 548
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 518

    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .

    ECHO            reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    PRINT           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    CLASS           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    INTERFACE       reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    FUNCTION        reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    VARIABLE        reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    INCREASE        reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    DECREMENT       reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    IF              reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    WHILE           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    FOR             reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    CONST           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    DEFINE          reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    ARRAY           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    LEFT_BRACKET    reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    NEW             reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    PHP_END_IDENTIFIER reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    RETURN          reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    BREAK           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    RIGHT_BRACE     reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)


state 519

    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .

    ECHO            reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    PRINT           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    CLASS           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    INTERFACE       reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    FUNCTION        reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    VARIABLE        reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    INCREASE        reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    DECREMENT       reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    IF              reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    WHILE           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    FOR             reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    CONST           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    DEFINE          reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    ARRAY           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    LEFT_BRACKET    reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    NEW             reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    PHP_END_IDENTIFIER reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    RETURN          reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    BREAK           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    RIGHT_BRACE     reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)


state 520

    (18) elseif_statement -> ELSEIF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement

    LEFT_PAREN      shift and go to state 549


state 521

    (21) else_statement -> ELSE . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 550


state 522

    (23) body_statement -> sentence RETURN values . SEMICOLON
    (27) body_statement -> RETURN values . SEMICOLON
    (109) printable_values -> values .
    (110) printable_values -> values . printable_dividers printable_values
    (111) printable_values -> values . COMMA printable_values
    (84) comparation -> values . comparator_operator values
    (85) comparation -> values . comparator_operator expression
    (122) printable_dividers -> . COMMA
    (123) printable_dividers -> . STRING_CONCATENATION
    (95) comparator_operator -> . EQUALS_EQUALS
    (96) comparator_operator -> . IDENTICAL
    (97) comparator_operator -> . NOT_EQUALS
    (98) comparator_operator -> . NOT_IDENTICAL
    (99) comparator_operator -> . SMALL_THAN
    (100) comparator_operator -> . GREATER_THAN
    (101) comparator_operator -> . SMALL_EQUALS_TO
    (102) comparator_operator -> . GREATER_EQUALS_TO
    (103) comparator_operator -> . SPACECRAFT
    (104) comparator_operator -> . NULL_FUSION

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 551
    COMMA           shift and go to state 118
    STRING_CONCATENATION shift and go to state 120
    EQUALS_EQUALS   shift and go to state 121
    IDENTICAL       shift and go to state 122
    NOT_EQUALS      shift and go to state 123
    NOT_IDENTICAL   shift and go to state 124
    SMALL_THAN      shift and go to state 125
    GREATER_THAN    shift and go to state 126
    SMALL_EQUALS_TO shift and go to state 127
    GREATER_EQUALS_TO shift and go to state 128
    SPACECRAFT      shift and go to state 129
    NULL_FUSION     shift and go to state 130

  ! SEMICOLON       [ reduce using rule 109 (printable_values -> values .) ]

    printable_dividers             shift and go to state 117
    comparator_operator            shift and go to state 119

state 523

    (24) body_statement -> sentence RETURN SEMICOLON .

    RIGHT_BRACE     reduce using rule 24 (body_statement -> sentence RETURN SEMICOLON .)


state 524

    (30) body_statement -> sentence RETURN printable_values . SEMICOLON
    (29) body_statement -> RETURN printable_values . SEMICOLON

    SEMICOLON       shift and go to state 552


state 525

    (25) body_statement -> sentence BREAK SEMICOLON .
    (28) body_statement -> BREAK SEMICOLON .

  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 25 (body_statement -> sentence BREAK SEMICOLON .)
    RIGHT_BRACE     reduce using rule 25 (body_statement -> sentence BREAK SEMICOLON .)

  ! RIGHT_BRACE     [ reduce using rule 28 (body_statement -> BREAK SEMICOLON .) ]


state 526

    (27) body_statement -> RETURN values SEMICOLON .

    RIGHT_BRACE     reduce using rule 27 (body_statement -> RETURN values SEMICOLON .)


state 527

    (29) body_statement -> RETURN printable_values SEMICOLON .

    RIGHT_BRACE     reduce using rule 29 (body_statement -> RETURN printable_values SEMICOLON .)


state 528

    (38) condition_for -> VARIABLE comparator_operator . expression_for
    (39) expression_for -> . VARIABLE
    (40) expression_for -> . number_values
    (41) expression_for -> . expression_for operator_aritmetic expression_for
    (42) expression_for -> . LEFT_PAREN expression_for RIGHT_PAREN
    (43) expression_for -> . IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> . IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
    (45) expression_for -> . length_operations
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT
    (206) length_operations -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (207) length_operations -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (208) length_operations -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (209) length_operations -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN

    VARIABLE        shift and go to state 381
    LEFT_PAREN      shift and go to state 380
    IDENTIFIER      shift and go to state 384
    INTEGER         shift and go to state 386
    FLOAT           shift and go to state 387
    COUNT           shift and go to state 388
    STRLEN          shift and go to state 389

    expression_for                 shift and go to state 553
    number_values                  shift and go to state 383
    length_operations              shift and go to state 385

state 529

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON . increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (32) increment_statement -> . VARIABLE INCREASE
    (33) increment_statement -> . VARIABLE DECREMENT
    (34) increment_statement -> . INCREASE VARIABLE
    (35) increment_statement -> . DECREMENT VARIABLE
    (36) increment_statement -> . VARIABLE PLUS_EQUALS INTEGER
    (37) increment_statement -> . VARIABLE EQUALS VARIABLE operator_aritmetic number_values

    VARIABLE        shift and go to state 554
    INCREASE        shift and go to state 556
    DECREMENT       shift and go to state 557

    increment_statement            shift and go to state 555

state 530

    (43) expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .

    SEMICOLON       reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    PLUS            reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    MINUS           reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    MULTIPLY        reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    DIVIDE          reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    MODULE          reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    POW             reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)


state 531

    (44) expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .

    SEMICOLON       reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    PLUS            reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    MINUS           reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    MULTIPLY        reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    DIVIDE          reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    MODULE          reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    POW             reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)


state 532

    (206) length_operations -> COUNT LEFT_PAREN structure_array_principal count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 558


state 533

    (207) length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 559


state 534

    (208) length_operations -> COUNT LEFT_PAREN VARIABLE count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 560


state 535

    (209) length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 209 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    PLUS            reduce using rule 209 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    MINUS           reduce using rule 209 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    MULTIPLY        reduce using rule 209 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    DIVIDE          reduce using rule 209 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    MODULE          reduce using rule 209 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    POW             reduce using rule 209 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 209 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)


state 536

    (244) structure_matrix_first -> ARRAY . LEFT_PAREN values RIGHT_PAREN
    (245) structure_matrix_first -> ARRAY . LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first

    LEFT_PAREN      shift and go to state 561


state 537

    (245) structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first .

    RIGHT_PAREN     reduce using rule 245 (structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first .)


state 538

    (221) structure_array -> key EQUALS GREATER_THAN values COMMA structure_array .

    RIGHT_PAREN     reduce using rule 221 (structure_array -> key EQUALS GREATER_THAN values COMMA structure_array .)
    RIGHT_BRACKET   reduce using rule 221 (structure_array -> key EQUALS GREATER_THAN values COMMA structure_array .)


state 539

    (282) class_member -> visibility_opt STATIC FUNCTION . IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    IDENTIFIER      shift and go to state 562


state 540

    (283) class_member -> visibility_opt FUNCTION IDENTIFIER . LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    LEFT_PAREN      shift and go to state 563


state 541

    (285) class_attribute -> visibility_opt VARIABLE EQUALS . values SEMICOLON
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 564
    boolean                        shift and go to state 63

state 542

    (286) class_attribute -> visibility_opt VARIABLE SEMICOLON .

    RIGHT_BRACE     reduce using rule 286 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    PUBLIC          reduce using rule 286 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    PRIVATE         reduce using rule 286 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    PROTECTED       reduce using rule 286 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    STATIC          reduce using rule 286 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    FUNCTION        reduce using rule 286 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 286 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    CONST           reduce using rule 286 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    DEFINE          reduce using rule 286 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)


state 543

    (287) class_attribute -> visibility_opt constant_assignment SEMICOLON .

    RIGHT_BRACE     reduce using rule 287 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    PUBLIC          reduce using rule 287 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    PRIVATE         reduce using rule 287 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    PROTECTED       reduce using rule 287 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    STATIC          reduce using rule 287 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    FUNCTION        reduce using rule 287 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    VARIABLE        reduce using rule 287 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    CONST           reduce using rule 287 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    DEFINE          reduce using rule 287 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)


state 544

    (273) interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN . params RIGHT_PAREN SEMICOLON
    (167) params -> . real_params
    (168) params -> . empty
    (169) real_params -> . VARIABLE
    (170) real_params -> . values
    (171) real_params -> . real_params COMMA VARIABLE
    (172) real_params -> . real_params COMMA values
    (173) empty -> .
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 298
    RIGHT_PAREN     reduce using rule 173 (empty -> .)
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    params                         shift and go to state 565
    real_params                    shift and go to state 296
    empty                          shift and go to state 297
    values                         shift and go to state 299
    boolean                        shift and go to state 63

state 545

    (186) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 566


state 546

    (177) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock .

    SEMICOLON       reduce using rule 177 (arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock .)


state 547

    (178) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement .

    SEMICOLON       reduce using rule 178 (arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement .)


state 548

    (179) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression .

    SEMICOLON       reduce using rule 179 (arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression .)


state 549

    (18) elseif_statement -> ELSEIF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (59) boolean_expression -> . comparation
    (60) boolean_expression -> . VARIABLE
    (61) boolean_expression -> . IDENTIFIER
    (62) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (63) boolean_expression -> . logic_not_sentence
    (64) boolean_expression -> . logic_expression
    (84) comparation -> . values comparator_operator values
    (85) comparation -> . values comparator_operator expression
    (86) comparation -> . expression comparator_operator expression
    (87) comparation -> . VARIABLE EQUALS_EQUALS values
    (88) comparation -> . access_array_element EQUALS_EQUALS values
    (89) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (90) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (91) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (92) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (93) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (94) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (82) logic_not_sentence -> . LOGIC_NOT conditional
    (83) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (65) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (66) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (67) true_boolean_types -> . TRUE
    (68) true_boolean_types -> . STRING
    (69) true_boolean_types -> . INTEGER
    (70) true_boolean_types -> . FLOAT
    (71) true_boolean_types -> . VARIABLE
    (72) true_boolean_types -> . IDENTIFIER
    (73) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (74) false_boolean_types -> . FALSE
    (75) false_boolean_types -> . STRING
    (76) false_boolean_types -> . INTEGER
    (77) false_boolean_types -> . VARIABLE
    (78) false_boolean_types -> . IDENTIFIER
    (79) false_boolean_types -> . FLOAT
    (80) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (81) false_boolean_types -> . NULL
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    VARIABLE        shift and go to state 208
    IDENTIFIER      shift and go to state 68
    LEFT_PAREN      shift and go to state 109
    LOGIC_NOT       shift and go to state 74
    INTEGER         shift and go to state 61
    STRING          shift and go to state 58
    FLOAT           shift and go to state 62
    TRUE            shift and go to state 151
    ARRAY           shift and go to state 78
    FALSE           shift and go to state 152
    NULL            shift and go to state 79

    conditional                    shift and go to state 567
    boolean_expression             shift and go to state 64
    comparation                    shift and go to state 67
    logic_not_sentence             shift and go to state 69
    logic_expression               shift and go to state 70
    values                         shift and go to state 149
    expression                     shift and go to state 72
    access_array_element           shift and go to state 150
    access_element_matrix          shift and go to state 73
    true_boolean_types             shift and go to state 75
    false_boolean_types            shift and go to state 76
    boolean                        shift and go to state 63
    term                           shift and go to state 77
    factor                         shift and go to state 80

state 550

    (21) else_statement -> ELSE LEFT_BRACE . body_statement RIGHT_BRACE
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 444
    BREAK           shift and go to state 445
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 568
    sentence                       shift and go to state 443
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 551

    (23) body_statement -> sentence RETURN values SEMICOLON .
    (27) body_statement -> RETURN values SEMICOLON .

  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 23 (body_statement -> sentence RETURN values SEMICOLON .)
    RIGHT_BRACE     reduce using rule 23 (body_statement -> sentence RETURN values SEMICOLON .)

  ! RIGHT_BRACE     [ reduce using rule 27 (body_statement -> RETURN values SEMICOLON .) ]


state 552

    (30) body_statement -> sentence RETURN printable_values SEMICOLON .
    (29) body_statement -> RETURN printable_values SEMICOLON .

  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 29 (body_statement -> RETURN printable_values SEMICOLON .)
    RIGHT_BRACE     reduce using rule 29 (body_statement -> RETURN printable_values SEMICOLON .)

  ! RIGHT_BRACE     [ reduce using rule 30 (body_statement -> sentence RETURN printable_values SEMICOLON .) ]


state 553

    (38) condition_for -> VARIABLE comparator_operator expression_for .
    (41) expression_for -> expression_for . operator_aritmetic expression_for
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

    SEMICOLON       reduce using rule 38 (condition_for -> VARIABLE comparator_operator expression_for .)
    PLUS            shift and go to state 450
    MINUS           shift and go to state 451
    MULTIPLY        shift and go to state 452
    DIVIDE          shift and go to state 453
    MODULE          shift and go to state 454
    POW             shift and go to state 455

    operator_aritmetic             shift and go to state 449

state 554

    (32) increment_statement -> VARIABLE . INCREASE
    (33) increment_statement -> VARIABLE . DECREMENT
    (36) increment_statement -> VARIABLE . PLUS_EQUALS INTEGER
    (37) increment_statement -> VARIABLE . EQUALS VARIABLE operator_aritmetic number_values

    INCREASE        shift and go to state 569
    DECREMENT       shift and go to state 570
    PLUS_EQUALS     shift and go to state 571
    EQUALS          shift and go to state 572


state 555

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    RIGHT_PAREN     shift and go to state 573


state 556

    (34) increment_statement -> INCREASE . VARIABLE

    VARIABLE        shift and go to state 574


state 557

    (35) increment_statement -> DECREMENT . VARIABLE

    VARIABLE        shift and go to state 575


state 558

    (206) length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 206 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    PLUS            reduce using rule 206 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    MINUS           reduce using rule 206 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    MULTIPLY        reduce using rule 206 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    DIVIDE          reduce using rule 206 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    MODULE          reduce using rule 206 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    POW             reduce using rule 206 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 206 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)


state 559

    (207) length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 207 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    PLUS            reduce using rule 207 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    MINUS           reduce using rule 207 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    MULTIPLY        reduce using rule 207 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    DIVIDE          reduce using rule 207 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    MODULE          reduce using rule 207 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    POW             reduce using rule 207 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 207 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)


state 560

    (208) length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 208 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    PLUS            reduce using rule 208 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    MINUS           reduce using rule 208 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    MULTIPLY        reduce using rule 208 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    DIVIDE          reduce using rule 208 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    MODULE          reduce using rule 208 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    POW             reduce using rule 208 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 208 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)


state 561

    (244) structure_matrix_first -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (245) structure_matrix_first -> ARRAY LEFT_PAREN . values RIGHT_PAREN COMMA structure_matrix_first
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    values                         shift and go to state 576
    boolean                        shift and go to state 63

state 562

    (282) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER . LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    LEFT_PAREN      shift and go to state 577


state 563

    (283) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN . params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (167) params -> . real_params
    (168) params -> . empty
    (169) real_params -> . VARIABLE
    (170) real_params -> . values
    (171) real_params -> . real_params COMMA VARIABLE
    (172) real_params -> . real_params COMMA values
    (173) empty -> .
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 298
    RIGHT_PAREN     reduce using rule 173 (empty -> .)
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    params                         shift and go to state 578
    real_params                    shift and go to state 296
    empty                          shift and go to state 297
    values                         shift and go to state 299
    boolean                        shift and go to state 63

state 564

    (285) class_attribute -> visibility_opt VARIABLE EQUALS values . SEMICOLON

    SEMICOLON       shift and go to state 579


state 565

    (273) interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params . RIGHT_PAREN SEMICOLON

    RIGHT_PAREN     shift and go to state 580


state 566

    (186) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 186 (string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN .)


state 567

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement

    RIGHT_PAREN     shift and go to state 581


state 568

    (21) else_statement -> ELSE LEFT_BRACE body_statement . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 582


state 569

    (32) increment_statement -> VARIABLE INCREASE .

    RIGHT_PAREN     reduce using rule 32 (increment_statement -> VARIABLE INCREASE .)


state 570

    (33) increment_statement -> VARIABLE DECREMENT .

    RIGHT_PAREN     reduce using rule 33 (increment_statement -> VARIABLE DECREMENT .)


state 571

    (36) increment_statement -> VARIABLE PLUS_EQUALS . INTEGER

    INTEGER         shift and go to state 583


state 572

    (37) increment_statement -> VARIABLE EQUALS . VARIABLE operator_aritmetic number_values

    VARIABLE        shift and go to state 584


state 573

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 585


state 574

    (34) increment_statement -> INCREASE VARIABLE .

    RIGHT_PAREN     reduce using rule 34 (increment_statement -> INCREASE VARIABLE .)


state 575

    (35) increment_statement -> DECREMENT VARIABLE .

    RIGHT_PAREN     reduce using rule 35 (increment_statement -> DECREMENT VARIABLE .)


state 576

    (244) structure_matrix_first -> ARRAY LEFT_PAREN values . RIGHT_PAREN
    (245) structure_matrix_first -> ARRAY LEFT_PAREN values . RIGHT_PAREN COMMA structure_matrix_first

    RIGHT_PAREN     shift and go to state 460


state 577

    (282) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN . params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (167) params -> . real_params
    (168) params -> . empty
    (169) real_params -> . VARIABLE
    (170) real_params -> . values
    (171) real_params -> . real_params COMMA VARIABLE
    (172) real_params -> . real_params COMMA values
    (173) empty -> .
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE

    VARIABLE        shift and go to state 298
    RIGHT_PAREN     reduce using rule 173 (empty -> .)
    INTEGER         shift and go to state 202
    STRING          shift and go to state 203
    FLOAT           shift and go to state 204
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206

    params                         shift and go to state 586
    real_params                    shift and go to state 296
    empty                          shift and go to state 297
    values                         shift and go to state 299
    boolean                        shift and go to state 63

state 578

    (283) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params . RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    RIGHT_PAREN     shift and go to state 587


state 579

    (285) class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .

    RIGHT_BRACE     reduce using rule 285 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    PUBLIC          reduce using rule 285 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    PRIVATE         reduce using rule 285 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    PROTECTED       reduce using rule 285 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    STATIC          reduce using rule 285 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    FUNCTION        reduce using rule 285 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    VARIABLE        reduce using rule 285 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    CONST           reduce using rule 285 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    DEFINE          reduce using rule 285 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)


state 580

    (273) interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN . SEMICOLON

    SEMICOLON       shift and go to state 588


state 581

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE else_statement

    LEFT_BRACE      shift and go to state 589


state 582

    (21) else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .

    ECHO            reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)


state 583

    (36) increment_statement -> VARIABLE PLUS_EQUALS INTEGER .

    RIGHT_PAREN     reduce using rule 36 (increment_statement -> VARIABLE PLUS_EQUALS INTEGER .)


state 584

    (37) increment_statement -> VARIABLE EQUALS VARIABLE . operator_aritmetic number_values
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

    PLUS            shift and go to state 450
    MINUS           shift and go to state 451
    MULTIPLY        shift and go to state 452
    DIVIDE          shift and go to state 453
    MODULE          shift and go to state 454
    POW             shift and go to state 455

    operator_aritmetic             shift and go to state 590

state 585

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 444
    BREAK           shift and go to state 445
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 591
    sentence                       shift and go to state 443
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 586

    (282) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params . RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    RIGHT_PAREN     shift and go to state 592


state 587

    (283) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN . LEFT_BRACE method_body RIGHT_BRACE

    LEFT_BRACE      shift and go to state 593


state 588

    (273) interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .

    RIGHT_BRACE     reduce using rule 273 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)
    PUBLIC          reduce using rule 273 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)
    PRIVATE         reduce using rule 273 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)
    PROTECTED       reduce using rule 273 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)
    FUNCTION        reduce using rule 273 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)


state 589

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE else_statement
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 444
    BREAK           shift and go to state 445
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 594
    sentence                       shift and go to state 443
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 590

    (37) increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic . number_values
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT

    INTEGER         shift and go to state 386
    FLOAT           shift and go to state 387

    number_values                  shift and go to state 595

state 591

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 596


state 592

    (282) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN . LEFT_BRACE method_body RIGHT_BRACE

    LEFT_BRACE      shift and go to state 597


state 593

    (283) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE . method_body RIGHT_BRACE
    (292) method_body -> . classStatement
    (293) method_body -> . classStatement return_form
    (294) method_body -> . return_form
    (295) method_body -> . classStatement BREAK SEMICOLON
    (296) method_body -> . classStatement method_body
    (303) classStatement -> . sentence
    (304) classStatement -> . access_method_object SEMICOLON
    (297) return_form -> . RETURN values SEMICOLON
    (298) return_form -> . RETURN access_method_object SEMICOLON
    (299) return_form -> . RETURN SEMICOLON
    (300) return_form -> . RETURN expression SEMICOLON
    (301) return_form -> . RETURN string_special_function SEMICOLON
    (302) return_form -> . RETURN array_special_function_structure SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 603
    VARIABLE        shift and go to state 604
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    method_body                    shift and go to state 598
    classStatement                 shift and go to state 599
    return_form                    shift and go to state 600
    sentence                       shift and go to state 601
    access_method_object           shift and go to state 602
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    access_array_element           shift and go to state 605
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    statement_access_array_element_error shift and go to state 48

state 594

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE else_statement

    RIGHT_BRACE     shift and go to state 606


state 595

    (37) increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values .

    RIGHT_PAREN     reduce using rule 37 (increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values .)


state 596

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .

    ECHO            reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)


state 597

    (282) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE . method_body RIGHT_BRACE
    (292) method_body -> . classStatement
    (293) method_body -> . classStatement return_form
    (294) method_body -> . return_form
    (295) method_body -> . classStatement BREAK SEMICOLON
    (296) method_body -> . classStatement method_body
    (303) classStatement -> . sentence
    (304) classStatement -> . access_method_object SEMICOLON
    (297) return_form -> . RETURN values SEMICOLON
    (298) return_form -> . RETURN access_method_object SEMICOLON
    (299) return_form -> . RETURN SEMICOLON
    (300) return_form -> . RETURN expression SEMICOLON
    (301) return_form -> . RETURN string_special_function SEMICOLON
    (302) return_form -> . RETURN array_special_function_structure SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 603
    VARIABLE        shift and go to state 604
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    method_body                    shift and go to state 607
    classStatement                 shift and go to state 599
    return_form                    shift and go to state 600
    sentence                       shift and go to state 601
    access_method_object           shift and go to state 602
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    access_array_element           shift and go to state 605
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    statement_access_array_element_error shift and go to state 48

state 598

    (283) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 608


state 599

    (292) method_body -> classStatement .
    (293) method_body -> classStatement . return_form
    (295) method_body -> classStatement . BREAK SEMICOLON
    (296) method_body -> classStatement . method_body
    (297) return_form -> . RETURN values SEMICOLON
    (298) return_form -> . RETURN access_method_object SEMICOLON
    (299) return_form -> . RETURN SEMICOLON
    (300) return_form -> . RETURN expression SEMICOLON
    (301) return_form -> . RETURN string_special_function SEMICOLON
    (302) return_form -> . RETURN array_special_function_structure SEMICOLON
    (292) method_body -> . classStatement
    (293) method_body -> . classStatement return_form
    (294) method_body -> . return_form
    (295) method_body -> . classStatement BREAK SEMICOLON
    (296) method_body -> . classStatement method_body
    (303) classStatement -> . sentence
    (304) classStatement -> . access_method_object SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (105) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (106) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (107) print_statement -> . ECHO printable_values
    (108) print_statement -> . PRINT printable_values
    (143) assignment -> . variable_assignment
    (144) assignment -> . constant_assignment
    (210) types_structure -> . structure_array_principal
    (211) types_structure -> . structure_matrix_principal
    (212) types_structure -> . structure_object_principal
    (269) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (270) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (174) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (145) variable_assignment -> . VARIABLE assignment_operator values
    (146) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (147) variable_assignment -> . VARIABLE assignment_operator expression
    (148) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (149) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (150) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (151) variable_assignment -> . VARIABLE assignment_operator types_structure
    (152) variable_assignment -> . VARIABLE assignment_operator input
    (153) variable_assignment -> . VARIABLE assignment_operator special_function
    (154) variable_assignment -> . VARIABLE assignment_operator conditional
    (155) variable_assignment -> . VARIABLE INCREASE
    (156) variable_assignment -> . VARIABLE DECREMENT
    (157) variable_assignment -> . INCREASE VARIABLE
    (158) variable_assignment -> . DECREMENT VARIABLE
    (161) constant_assignment -> . const_syntax
    (162) constant_assignment -> . define_syntax
    (213) structure_array_principal -> . indexed_array
    (214) structure_array_principal -> . associative_array
    (215) structure_array_principal -> . access_array_stucture
    (216) structure_array_principal -> . access_array_element
    (235) structure_matrix_principal -> . matrix_firstform
    (236) structure_matrix_principal -> . matrix_secondform
    (237) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (238) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (239) structure_matrix_principal -> . add_element_matrix
    (253) structure_object_principal -> . object_creation
    (254) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (163) const_syntax -> . CONST IDENTIFIER EQUALS values
    (164) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (217) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (218) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (219) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (230) access_array_stucture -> . access_array_element
    (231) access_array_stucture -> . statement_access_array_element_error
    (240) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (241) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (246) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (250) modify_element_matrix -> . access_element_matrix EQUALS values
    (251) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (252) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (255) object_creation -> . NEW IDENTIFIER
    (256) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (234) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RIGHT_BRACE     reduce using rule 292 (method_body -> classStatement .)
    BREAK           shift and go to state 610
    RETURN          shift and go to state 603
    VARIABLE        shift and go to state 604
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    classStatement                 shift and go to state 599
    return_form                    shift and go to state 609
    method_body                    shift and go to state 611
    access_method_object           shift and go to state 602
    sentence                       shift and go to state 601
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    access_array_element           shift and go to state 605
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    statement_access_array_element_error shift and go to state 48

state 600

    (294) method_body -> return_form .

    RIGHT_BRACE     reduce using rule 294 (method_body -> return_form .)


state 601

    (303) classStatement -> sentence .

    BREAK           reduce using rule 303 (classStatement -> sentence .)
    RETURN          reduce using rule 303 (classStatement -> sentence .)
    VARIABLE        reduce using rule 303 (classStatement -> sentence .)
    ECHO            reduce using rule 303 (classStatement -> sentence .)
    PRINT           reduce using rule 303 (classStatement -> sentence .)
    CLASS           reduce using rule 303 (classStatement -> sentence .)
    INTERFACE       reduce using rule 303 (classStatement -> sentence .)
    FUNCTION        reduce using rule 303 (classStatement -> sentence .)
    INCREASE        reduce using rule 303 (classStatement -> sentence .)
    DECREMENT       reduce using rule 303 (classStatement -> sentence .)
    IF              reduce using rule 303 (classStatement -> sentence .)
    WHILE           reduce using rule 303 (classStatement -> sentence .)
    FOR             reduce using rule 303 (classStatement -> sentence .)
    CONST           reduce using rule 303 (classStatement -> sentence .)
    DEFINE          reduce using rule 303 (classStatement -> sentence .)
    ARRAY           reduce using rule 303 (classStatement -> sentence .)
    LEFT_BRACKET    reduce using rule 303 (classStatement -> sentence .)
    NEW             reduce using rule 303 (classStatement -> sentence .)
    RIGHT_BRACE     reduce using rule 303 (classStatement -> sentence .)


state 602

    (304) classStatement -> access_method_object . SEMICOLON
    (254) structure_object_principal -> access_method_object .

    SEMICOLON       shift and go to state 612
    BREAK           reduce using rule 254 (structure_object_principal -> access_method_object .)
    RETURN          reduce using rule 254 (structure_object_principal -> access_method_object .)
    VARIABLE        reduce using rule 254 (structure_object_principal -> access_method_object .)
    ECHO            reduce using rule 254 (structure_object_principal -> access_method_object .)
    PRINT           reduce using rule 254 (structure_object_principal -> access_method_object .)
    CLASS           reduce using rule 254 (structure_object_principal -> access_method_object .)
    INTERFACE       reduce using rule 254 (structure_object_principal -> access_method_object .)
    FUNCTION        reduce using rule 254 (structure_object_principal -> access_method_object .)
    INCREASE        reduce using rule 254 (structure_object_principal -> access_method_object .)
    DECREMENT       reduce using rule 254 (structure_object_principal -> access_method_object .)
    IF              reduce using rule 254 (structure_object_principal -> access_method_object .)
    WHILE           reduce using rule 254 (structure_object_principal -> access_method_object .)
    FOR             reduce using rule 254 (structure_object_principal -> access_method_object .)
    CONST           reduce using rule 254 (structure_object_principal -> access_method_object .)
    DEFINE          reduce using rule 254 (structure_object_principal -> access_method_object .)
    ARRAY           reduce using rule 254 (structure_object_principal -> access_method_object .)
    LEFT_BRACKET    reduce using rule 254 (structure_object_principal -> access_method_object .)
    NEW             reduce using rule 254 (structure_object_principal -> access_method_object .)
    RIGHT_BRACE     reduce using rule 254 (structure_object_principal -> access_method_object .)


state 603

    (297) return_form -> RETURN . values SEMICOLON
    (298) return_form -> RETURN . access_method_object SEMICOLON
    (299) return_form -> RETURN . SEMICOLON
    (300) return_form -> RETURN . expression SEMICOLON
    (301) return_form -> RETURN . string_special_function SEMICOLON
    (302) return_form -> RETURN . array_special_function_structure SEMICOLON
    (124) values -> . INTEGER
    (125) values -> . STRING
    (126) values -> . FLOAT
    (127) values -> . boolean
    (257) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (258) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (259) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (262) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (263) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (264) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (130) expression -> . term
    (131) expression -> . term PLUS expression
    (132) expression -> . term MINUS expression
    (184) string_special_function -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN
    (185) string_special_function -> . SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN
    (186) string_special_function -> . SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN
    (193) array_special_function_structure -> . array_special_function
    (194) array_special_function_structure -> . statement_array_special_function_error
    (128) boolean -> . TRUE
    (129) boolean -> . FALSE
    (232) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (133) term -> . factor
    (134) term -> . factor MULTIPLY term
    (135) term -> . factor DIVIDE term
    (136) term -> . factor MODULE term
    (137) term -> . factor POW term
    (195) array_special_function -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (196) array_special_function -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (197) array_special_function -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (198) array_special_function -> . ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN
    (199) array_special_function -> . ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN
    (200) statement_array_special_function_error -> . COUNT LEFT_PAREN error count_param RIGHT_PAREN
    (201) statement_array_special_function_error -> . ARRAY_POP LEFT_PAREN error RIGHT_PAREN
    (202) statement_array_special_function_error -> . ARRAY_SUM LEFT_PAREN error RIGHT_PAREN
    (138) factor -> . INTEGER
    (139) factor -> . FLOAT
    (140) factor -> . VARIABLE
    (141) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (142) factor -> . STRING

    SEMICOLON       shift and go to state 614
    INTEGER         shift and go to state 241
    STRING          shift and go to state 242
    FLOAT           shift and go to state 243
    VARIABLE        shift and go to state 619
    STRLEN          shift and go to state 178
    SUBSTR          shift and go to state 179
    TRUE            shift and go to state 205
    FALSE           shift and go to state 206
    COUNT           shift and go to state 186
    ARRAY_POP       shift and go to state 187
    ARRAY_SUM       shift and go to state 188
    LEFT_PAREN      shift and go to state 245

    values                         shift and go to state 613
    access_method_object           shift and go to state 615
    expression                     shift and go to state 616
    string_special_function        shift and go to state 617
    array_special_function_structure shift and go to state 618
    boolean                        shift and go to state 63
    access_array_element           shift and go to state 620
    term                           shift and go to state 77
    array_special_function         shift and go to state 180
    statement_array_special_function_error shift and go to state 181
    factor                         shift and go to state 80

state 604

    (257) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (258) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (259) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (145) variable_assignment -> VARIABLE . assignment_operator values
    (146) variable_assignment -> VARIABLE . assignment_operator IDENTIFIER
    (147) variable_assignment -> VARIABLE . assignment_operator expression
    (148) variable_assignment -> VARIABLE . assignment_operator function_invocation
    (149) variable_assignment -> VARIABLE . assignment_operator string_special_function
    (150) variable_assignment -> VARIABLE . assignment_operator array_special_function_structure
    (151) variable_assignment -> VARIABLE . assignment_operator types_structure
    (152) variable_assignment -> VARIABLE . assignment_operator input
    (153) variable_assignment -> VARIABLE . assignment_operator special_function
    (154) variable_assignment -> VARIABLE . assignment_operator conditional
    (155) variable_assignment -> VARIABLE . INCREASE
    (156) variable_assignment -> VARIABLE . DECREMENT
    (246) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (247) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (248) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (249) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (234) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (159) assignment_operator -> . EQUALS
    (160) assignment_operator -> . PLUS_EQUALS

    MINUS           shift and go to state 91
    LEFT_BRACKET    shift and go to state 89
    INCREASE        shift and go to state 87
    DECREMENT       shift and go to state 88
    EQUALS          shift and go to state 90
    PLUS_EQUALS     shift and go to state 92

    assignment_operator            shift and go to state 86

state 605

    (262) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (263) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (264) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element
    (216) structure_array_principal -> access_array_element .
    (230) access_array_stucture -> access_array_element .

  ! reduce/reduce conflict for BREAK resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RETURN resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for ECHO resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for PRINT resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for CLASS resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for INCREASE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for IF resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for WHILE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for FOR resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for CONST resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for DEFINE resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for ARRAY resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for NEW resolved using rule 216 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 216 (structure_array_principal -> access_array_element .)
    MINUS           shift and go to state 95
    BREAK           reduce using rule 216 (structure_array_principal -> access_array_element .)
    RETURN          reduce using rule 216 (structure_array_principal -> access_array_element .)
    VARIABLE        reduce using rule 216 (structure_array_principal -> access_array_element .)
    ECHO            reduce using rule 216 (structure_array_principal -> access_array_element .)
    PRINT           reduce using rule 216 (structure_array_principal -> access_array_element .)
    CLASS           reduce using rule 216 (structure_array_principal -> access_array_element .)
    INTERFACE       reduce using rule 216 (structure_array_principal -> access_array_element .)
    FUNCTION        reduce using rule 216 (structure_array_principal -> access_array_element .)
    INCREASE        reduce using rule 216 (structure_array_principal -> access_array_element .)
    DECREMENT       reduce using rule 216 (structure_array_principal -> access_array_element .)
    IF              reduce using rule 216 (structure_array_principal -> access_array_element .)
    WHILE           reduce using rule 216 (structure_array_principal -> access_array_element .)
    FOR             reduce using rule 216 (structure_array_principal -> access_array_element .)
    CONST           reduce using rule 216 (structure_array_principal -> access_array_element .)
    DEFINE          reduce using rule 216 (structure_array_principal -> access_array_element .)
    ARRAY           reduce using rule 216 (structure_array_principal -> access_array_element .)
    LEFT_BRACKET    reduce using rule 216 (structure_array_principal -> access_array_element .)
    NEW             reduce using rule 216 (structure_array_principal -> access_array_element .)
    RIGHT_BRACE     reduce using rule 216 (structure_array_principal -> access_array_element .)

  ! BREAK           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! RETURN          [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! VARIABLE        [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! ECHO            [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! PRINT           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! CLASS           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! INTERFACE       [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! FUNCTION        [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! INCREASE        [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! DECREMENT       [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! IF              [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! WHILE           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! FOR             [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! CONST           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! DEFINE          [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! ARRAY           [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! LEFT_BRACKET    [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! NEW             [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]
  ! RIGHT_BRACE     [ reduce using rule 230 (access_array_stucture -> access_array_element .) ]


state 606

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE . elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE . else_statement
    (18) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (21) else_statement -> . ELSE LEFT_BRACE body_statement RIGHT_BRACE

    ECHO            reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ELSEIF          shift and go to state 520
    ELSE            shift and go to state 521

    elseif_statement               shift and go to state 621
    else_statement                 shift and go to state 622

state 607

    (282) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 623


state 608

    (283) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .

    RIGHT_BRACE     reduce using rule 283 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PUBLIC          reduce using rule 283 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PRIVATE         reduce using rule 283 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PROTECTED       reduce using rule 283 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    STATIC          reduce using rule 283 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    FUNCTION        reduce using rule 283 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    VARIABLE        reduce using rule 283 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    CONST           reduce using rule 283 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    DEFINE          reduce using rule 283 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)


state 609

    (293) method_body -> classStatement return_form .
    (294) method_body -> return_form .

  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 293 (method_body -> classStatement return_form .)
    RIGHT_BRACE     reduce using rule 293 (method_body -> classStatement return_form .)

  ! RIGHT_BRACE     [ reduce using rule 294 (method_body -> return_form .) ]


state 610

    (295) method_body -> classStatement BREAK . SEMICOLON

    SEMICOLON       shift and go to state 624


state 611

    (296) method_body -> classStatement method_body .

    RIGHT_BRACE     reduce using rule 296 (method_body -> classStatement method_body .)


state 612

    (304) classStatement -> access_method_object SEMICOLON .

    BREAK           reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    RETURN          reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    VARIABLE        reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    ECHO            reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    PRINT           reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    CLASS           reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    INTERFACE       reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    FUNCTION        reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    INCREASE        reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    DECREMENT       reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    IF              reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    WHILE           reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    FOR             reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    CONST           reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    DEFINE          reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    ARRAY           reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    LEFT_BRACKET    reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    NEW             reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)
    RIGHT_BRACE     reduce using rule 304 (classStatement -> access_method_object SEMICOLON .)


state 613

    (297) return_form -> RETURN values . SEMICOLON

    SEMICOLON       shift and go to state 625


state 614

    (299) return_form -> RETURN SEMICOLON .

    RIGHT_BRACE     reduce using rule 299 (return_form -> RETURN SEMICOLON .)


state 615

    (298) return_form -> RETURN access_method_object . SEMICOLON

    SEMICOLON       shift and go to state 626


state 616

    (300) return_form -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 627


state 617

    (301) return_form -> RETURN string_special_function . SEMICOLON

    SEMICOLON       shift and go to state 628


state 618

    (302) return_form -> RETURN array_special_function_structure . SEMICOLON

    SEMICOLON       shift and go to state 629


state 619

    (257) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (258) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (259) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (260) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (261) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (232) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (233) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (140) factor -> VARIABLE .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 91
    LEFT_BRACKET    shift and go to state 340
    MULTIPLY        reduce using rule 140 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 140 (factor -> VARIABLE .)
    MODULE          reduce using rule 140 (factor -> VARIABLE .)
    POW             reduce using rule 140 (factor -> VARIABLE .)
    PLUS            reduce using rule 140 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 140 (factor -> VARIABLE .)

  ! MINUS           [ reduce using rule 140 (factor -> VARIABLE .) ]


state 620

    (262) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (263) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (264) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (265) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (266) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element

    MINUS           shift and go to state 95


state 621

    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .

    ECHO            reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    PRINT           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    CLASS           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    INTERFACE       reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    FUNCTION        reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    VARIABLE        reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    INCREASE        reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    DECREMENT       reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    IF              reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    WHILE           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    FOR             reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    CONST           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    DEFINE          reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    ARRAY           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    LEFT_BRACKET    reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    NEW             reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    PHP_END_IDENTIFIER reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    RETURN          reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    BREAK           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    RIGHT_BRACE     reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)


state 622

    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .

    ECHO            reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    PRINT           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    CLASS           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    INTERFACE       reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    FUNCTION        reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    VARIABLE        reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    INCREASE        reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    DECREMENT       reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    IF              reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    WHILE           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    FOR             reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    CONST           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    DEFINE          reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    ARRAY           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    LEFT_BRACKET    reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    NEW             reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    PHP_END_IDENTIFIER reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    RETURN          reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    BREAK           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    RIGHT_BRACE     reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)


state 623

    (282) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .

    RIGHT_BRACE     reduce using rule 282 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PUBLIC          reduce using rule 282 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PRIVATE         reduce using rule 282 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PROTECTED       reduce using rule 282 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    STATIC          reduce using rule 282 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    FUNCTION        reduce using rule 282 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    VARIABLE        reduce using rule 282 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    CONST           reduce using rule 282 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    DEFINE          reduce using rule 282 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)


state 624

    (295) method_body -> classStatement BREAK SEMICOLON .

    RIGHT_BRACE     reduce using rule 295 (method_body -> classStatement BREAK SEMICOLON .)


state 625

    (297) return_form -> RETURN values SEMICOLON .

    RIGHT_BRACE     reduce using rule 297 (return_form -> RETURN values SEMICOLON .)


state 626

    (298) return_form -> RETURN access_method_object SEMICOLON .

    RIGHT_BRACE     reduce using rule 298 (return_form -> RETURN access_method_object SEMICOLON .)


state 627

    (300) return_form -> RETURN expression SEMICOLON .

    RIGHT_BRACE     reduce using rule 300 (return_form -> RETURN expression SEMICOLON .)


state 628

    (301) return_form -> RETURN string_special_function SEMICOLON .

    RIGHT_BRACE     reduce using rule 301 (return_form -> RETURN string_special_function SEMICOLON .)


state 629

    (302) return_form -> RETURN array_special_function_structure SEMICOLON .

    RIGHT_BRACE     reduce using rule 302 (return_form -> RETURN array_special_function_structure SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING_CONCATENATION in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 57 resolved as shift
WARNING: shift/reduce conflict for LOGIC_AND in state 64 resolved as shift
WARNING: shift/reduce conflict for LOGIC_OR in state 64 resolved as shift
WARNING: shift/reduce conflict for LOGIC_XOR in state 64 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 111 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 113 resolved as shift
WARNING: shift/reduce conflict for STRING_CONCATENATION in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 113 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 118 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 118 resolved as shift
WARNING: shift/reduce conflict for STRING in state 118 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 118 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 118 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 118 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 118 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 118 resolved as shift
WARNING: shift/reduce conflict for NEW in state 118 resolved as shift
WARNING: shift/reduce conflict for LOGIC_NOT in state 118 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 118 resolved as shift
WARNING: shift/reduce conflict for NULL in state 118 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 132 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 132 resolved as shift
WARNING: shift/reduce conflict for STRING in state 132 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 132 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 132 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 132 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 132 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 132 resolved as shift
WARNING: shift/reduce conflict for NEW in state 132 resolved as shift
WARNING: shift/reduce conflict for LOGIC_NOT in state 132 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 132 resolved as shift
WARNING: shift/reduce conflict for NULL in state 132 resolved as shift
WARNING: shift/reduce conflict for STRING in state 133 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 137 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 137 resolved as shift
WARNING: shift/reduce conflict for STRING in state 137 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 137 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 137 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 137 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 137 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 137 resolved as shift
WARNING: shift/reduce conflict for NEW in state 137 resolved as shift
WARNING: shift/reduce conflict for LOGIC_NOT in state 137 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 137 resolved as shift
WARNING: shift/reduce conflict for NULL in state 137 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 139 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 139 resolved as shift
WARNING: shift/reduce conflict for STRING in state 139 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 139 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 139 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 139 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 139 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 139 resolved as shift
WARNING: shift/reduce conflict for NEW in state 139 resolved as shift
WARNING: shift/reduce conflict for LOGIC_NOT in state 139 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 139 resolved as shift
WARNING: shift/reduce conflict for NULL in state 139 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 148 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 167 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 167 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 208 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 230 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 312 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 313 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 319 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 370 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 391 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 435 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 441 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 493 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 500 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 500 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 500 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 500 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 500 resolved as shift
WARNING: shift/reduce conflict for POW in state 500 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 522 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 619 resolved as shift
WARNING: reduce/reduce conflict in state 33 resolved using rule (structure_array_principal -> access_array_element)
WARNING: rejected rule (access_array_stucture -> access_array_element) in state 33
WARNING: reduce/reduce conflict in state 57 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (printable_values -> VARIABLE) in state 57
WARNING: reduce/reduce conflict in state 57 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 57
WARNING: reduce/reduce conflict in state 57 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 57
WARNING: reduce/reduce conflict in state 58 resolved using rule (true_boolean_types -> STRING)
WARNING: rejected rule (false_boolean_types -> STRING) in state 58
WARNING: reduce/reduce conflict in state 58 resolved using rule (values -> STRING)
WARNING: rejected rule (factor -> STRING) in state 58
WARNING: reduce/reduce conflict in state 61 resolved using rule (true_boolean_types -> INTEGER)
WARNING: rejected rule (false_boolean_types -> INTEGER) in state 61
WARNING: reduce/reduce conflict in state 61 resolved using rule (values -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 61
WARNING: reduce/reduce conflict in state 62 resolved using rule (true_boolean_types -> FLOAT)
WARNING: rejected rule (false_boolean_types -> FLOAT) in state 62
WARNING: reduce/reduce conflict in state 62 resolved using rule (values -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 62
WARNING: reduce/reduce conflict in state 68 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (true_boolean_types -> IDENTIFIER) in state 68
WARNING: reduce/reduce conflict in state 68 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (false_boolean_types -> IDENTIFIER) in state 68
WARNING: reduce/reduce conflict in state 113 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (printable_values -> VARIABLE) in state 113
WARNING: reduce/reduce conflict in state 113 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 113
WARNING: reduce/reduce conflict in state 113 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 113
WARNING: reduce/reduce conflict in state 113 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 113
WARNING: reduce/reduce conflict in state 114 resolved using rule (values -> STRING)
WARNING: rejected rule (factor -> STRING) in state 114
WARNING: reduce/reduce conflict in state 114 resolved using rule (true_boolean_types -> STRING)
WARNING: rejected rule (false_boolean_types -> STRING) in state 114
WARNING: reduce/reduce conflict in state 115 resolved using rule (values -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 115
WARNING: reduce/reduce conflict in state 115 resolved using rule (true_boolean_types -> INTEGER)
WARNING: rejected rule (false_boolean_types -> INTEGER) in state 115
WARNING: reduce/reduce conflict in state 116 resolved using rule (values -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 116
WARNING: reduce/reduce conflict in state 116 resolved using rule (true_boolean_types -> FLOAT)
WARNING: rejected rule (false_boolean_types -> FLOAT) in state 116
WARNING: reduce/reduce conflict in state 148 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (logic_not_sentence -> LOGIC_NOT VARIABLE) in state 148
WARNING: reduce/reduce conflict in state 148 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 148
WARNING: reduce/reduce conflict in state 148 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 148
WARNING: reduce/reduce conflict in state 167 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 167
WARNING: reduce/reduce conflict in state 167 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 167
WARNING: reduce/reduce conflict in state 167 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 167
WARNING: reduce/reduce conflict in state 169 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (variable_assignment -> VARIABLE assignment_operator IDENTIFIER) in state 169
WARNING: reduce/reduce conflict in state 169 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (true_boolean_types -> IDENTIFIER) in state 169
WARNING: reduce/reduce conflict in state 169 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (false_boolean_types -> IDENTIFIER) in state 169
WARNING: reduce/reduce conflict in state 189 resolved using rule (structure_array_principal -> access_array_element)
WARNING: rejected rule (access_array_stucture -> access_array_element) in state 189
WARNING: reduce/reduce conflict in state 208 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 208
WARNING: reduce/reduce conflict in state 208 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 208
WARNING: reduce/reduce conflict in state 230 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 230
WARNING: reduce/reduce conflict in state 230 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 230
WARNING: reduce/reduce conflict in state 230 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 230
WARNING: reduce/reduce conflict in state 231 resolved using rule (values -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (true_boolean_types -> INTEGER)
WARNING: rejected rule (false_boolean_types -> INTEGER) in state 231
WARNING: reduce/reduce conflict in state 232 resolved using rule (values -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 232
WARNING: reduce/reduce conflict in state 232 resolved using rule (true_boolean_types -> FLOAT)
WARNING: rejected rule (false_boolean_types -> FLOAT) in state 232
WARNING: reduce/reduce conflict in state 233 resolved using rule (values -> STRING)
WARNING: rejected rule (factor -> STRING) in state 233
WARNING: reduce/reduce conflict in state 233 resolved using rule (true_boolean_types -> STRING)
WARNING: rejected rule (false_boolean_types -> STRING) in state 233
WARNING: reduce/reduce conflict in state 241 resolved using rule (values -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 241
WARNING: reduce/reduce conflict in state 242 resolved using rule (values -> STRING)
WARNING: rejected rule (factor -> STRING) in state 242
WARNING: reduce/reduce conflict in state 243 resolved using rule (values -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 243
WARNING: reduce/reduce conflict in state 363 resolved using rule (structure_array_principal -> access_array_element)
WARNING: rejected rule (access_array_stucture -> access_array_element) in state 363
WARNING: reduce/reduce conflict in state 525 resolved using rule (body_statement -> sentence BREAK SEMICOLON)
WARNING: rejected rule (body_statement -> BREAK SEMICOLON) in state 525
WARNING: reduce/reduce conflict in state 551 resolved using rule (body_statement -> sentence RETURN values SEMICOLON)
WARNING: rejected rule (body_statement -> RETURN values SEMICOLON) in state 551
WARNING: reduce/reduce conflict in state 552 resolved using rule (body_statement -> RETURN printable_values SEMICOLON)
WARNING: rejected rule (body_statement -> sentence RETURN printable_values SEMICOLON) in state 552
WARNING: reduce/reduce conflict in state 605 resolved using rule (structure_array_principal -> access_array_element)
WARNING: rejected rule (access_array_stucture -> access_array_element) in state 605
WARNING: reduce/reduce conflict in state 609 resolved using rule (method_body -> classStatement return_form)
WARNING: rejected rule (method_body -> return_form) in state 609
WARNING: Rule (access_array_stucture -> access_array_element) is never reduced
WARNING: Rule (printable_values -> VARIABLE) is never reduced
WARNING: Rule (logic_not_sentence -> LOGIC_NOT VARIABLE) is never reduced
WARNING: Rule (variable_assignment -> VARIABLE assignment_operator IDENTIFIER) is never reduced
WARNING: Rule (body_statement -> sentence RETURN printable_values SEMICOLON) is never reduced
