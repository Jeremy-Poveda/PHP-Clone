Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT

Grammar

Rule 0     S' -> inicial_program
Rule 1     inicial_program -> PHP_IDENTIFIER program PHP_END_IDENTIFIER
Rule 2     program -> sentence program
Rule 3     program -> sentence
Rule 4     sentence -> print_statement SEMICOLON
Rule 5     sentence -> assignment SEMICOLON
Rule 6     sentence -> types_structure
Rule 7     sentence -> class_declaration
Rule 8     sentence -> interface_declaration
Rule 9     sentence -> control_structures
Rule 10    sentence -> function_declaration
Rule 11    control_structures -> if_statement
Rule 12    control_structures -> while_statement
Rule 13    control_structures -> for_statement
Rule 14    while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
Rule 15    if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
Rule 16    if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
Rule 17    if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
Rule 18    elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
Rule 19    elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
Rule 20    elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
Rule 21    else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE
Rule 22    body_statement -> sentence
Rule 23    body_statement -> sentence RETURN values SEMICOLON
Rule 24    body_statement -> sentence RETURN SEMICOLON
Rule 25    body_statement -> sentence BREAK SEMICOLON
Rule 26    body_statement -> sentence body_statement
Rule 27    body_statement -> RETURN values SEMICOLON
Rule 28    body_statement -> BREAK SEMICOLON
Rule 29    body_statement -> RETURN printable_values SEMICOLON
Rule 30    body_statement -> sentence RETURN printable_values SEMICOLON
Rule 31    for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
Rule 32    increment_statement -> VARIABLE INCREASE
Rule 33    increment_statement -> VARIABLE DECREMENT
Rule 34    increment_statement -> INCREASE VARIABLE
Rule 35    increment_statement -> DECREMENT VARIABLE
Rule 36    increment_statement -> VARIABLE PLUS_EQUALS INTEGER
Rule 37    increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values
Rule 38    condition_for -> VARIABLE comparator_operator expression_for
Rule 39    expression_for -> VARIABLE
Rule 40    expression_for -> number_values
Rule 41    expression_for -> expression_for operator_aritmetic expression_for
Rule 42    expression_for -> LEFT_PAREN expression_for RIGHT_PAREN
Rule 43    expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
Rule 44    expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
Rule 45    expression_for -> length_operations
Rule 46    number_values -> INTEGER
Rule 47    number_values -> FLOAT
Rule 48    operator_aritmetic -> PLUS
Rule 49    operator_aritmetic -> MINUS
Rule 50    operator_aritmetic -> MULTIPLY
Rule 51    operator_aritmetic -> DIVIDE
Rule 52    operator_aritmetic -> MODULE
Rule 53    operator_aritmetic -> POW
Rule 54    conditional -> boolean_expression
Rule 55    conditional -> boolean_expression logic_operator boolean_expression
Rule 56    conditional -> boolean_expression logic_operator error
Rule 57    conditional -> error logic_operator boolean_expression
Rule 58    logic_operator -> LOGIC_AND
Rule 59    logic_operator -> LOGIC_OR
Rule 60    logic_operator -> LOGIC_XOR
Rule 61    boolean_expression -> comparation
Rule 62    boolean_expression -> VARIABLE
Rule 63    boolean_expression -> IDENTIFIER
Rule 64    boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN
Rule 65    boolean_expression -> logic_not_sentence
Rule 66    boolean_expression -> logic_expression
Rule 67    logic_expression -> true_boolean_types logic_operator false_boolean_types
Rule 68    logic_expression -> false_boolean_types logic_operator true_boolean_types
Rule 69    true_boolean_types -> TRUE
Rule 70    true_boolean_types -> STRING
Rule 71    true_boolean_types -> INTEGER
Rule 72    true_boolean_types -> FLOAT
Rule 73    true_boolean_types -> VARIABLE
Rule 74    true_boolean_types -> IDENTIFIER
Rule 75    true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN
Rule 76    false_boolean_types -> FALSE
Rule 77    false_boolean_types -> STRING
Rule 78    false_boolean_types -> INTEGER
Rule 79    false_boolean_types -> VARIABLE
Rule 80    false_boolean_types -> IDENTIFIER
Rule 81    false_boolean_types -> FLOAT
Rule 82    false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN
Rule 83    false_boolean_types -> NULL
Rule 84    logic_not_sentence -> LOGIC_NOT conditional
Rule 85    logic_not_sentence -> LOGIC_NOT VARIABLE
Rule 86    comparation -> values comparator_operator values
Rule 87    comparation -> values comparator_operator expression
Rule 88    comparation -> expression comparator_operator expression
Rule 89    comparation -> VARIABLE EQUALS_EQUALS values
Rule 90    comparation -> access_array_element EQUALS_EQUALS values
Rule 91    comparation -> access_array_element EQUALS_EQUALS VARIABLE
Rule 92    comparation -> VARIABLE EQUALS_EQUALS access_array_element
Rule 93    comparation -> VARIABLE EQUALS_EQUALS VARIABLE
Rule 94    comparation -> access_array_element EQUALS_EQUALS access_array_element
Rule 95    comparation -> access_element_matrix EQUALS_EQUALS VARIABLE
Rule 96    comparation -> VARIABLE EQUALS_EQUALS access_element_matrix
Rule 97    comparator_operator -> EQUALS_EQUALS
Rule 98    comparator_operator -> IDENTICAL
Rule 99    comparator_operator -> NOT_EQUALS
Rule 100   comparator_operator -> NOT_IDENTICAL
Rule 101   comparator_operator -> SMALL_THAN
Rule 102   comparator_operator -> GREATER_THAN
Rule 103   comparator_operator -> SMALL_EQUALS_TO
Rule 104   comparator_operator -> GREATER_EQUALS_TO
Rule 105   comparator_operator -> SPACECRAFT
Rule 106   comparator_operator -> NULL_FUSION
Rule 107   print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN
Rule 108   print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN
Rule 109   print_statement -> ECHO printable_values
Rule 110   print_statement -> PRINT printable_values
Rule 111   printable_values -> values
Rule 112   printable_values -> values printable_dividers printable_values
Rule 113   printable_values -> VARIABLE
Rule 114   printable_values -> VARIABLE printable_dividers printable_values
Rule 115   printable_values -> VARIABLE STRING_CONCATENATION STRING
Rule 116   printable_values -> conditional
Rule 117   printable_values -> conditional printable_dividers printable_values
Rule 118   printable_values -> structure_object_principal
Rule 119   printable_values -> structure_object_principal printable_dividers printable_values
Rule 120   printable_values -> values printable_dividers error
Rule 121   printable_values -> VARIABLE printable_dividers error
Rule 122   printable_values -> conditional printable_dividers error
Rule 123   printable_values -> structure_object_principal printable_dividers error
Rule 124   printable_dividers -> COMMA
Rule 125   printable_dividers -> STRING_CONCATENATION
Rule 126   values -> INTEGER
Rule 127   values -> STRING
Rule 128   values -> FLOAT
Rule 129   values -> boolean
Rule 130   boolean -> TRUE
Rule 131   boolean -> FALSE
Rule 132   expression -> term
Rule 133   expression -> term PLUS expression
Rule 134   expression -> term MINUS expression
Rule 135   term -> factor
Rule 136   term -> factor MULTIPLY term
Rule 137   term -> factor DIVIDE term
Rule 138   term -> factor MODULE term
Rule 139   term -> factor POW term
Rule 140   factor -> INTEGER
Rule 141   factor -> FLOAT
Rule 142   factor -> VARIABLE
Rule 143   factor -> LEFT_PAREN expression RIGHT_PAREN
Rule 144   factor -> STRING
Rule 145   assignment -> variable_assignment
Rule 146   assignment -> constant_assignment
Rule 147   variable_assignment -> VARIABLE assignment_operator values
Rule 148   variable_assignment -> VARIABLE assignment_operator IDENTIFIER
Rule 149   variable_assignment -> VARIABLE assignment_operator expression
Rule 150   variable_assignment -> VARIABLE assignment_operator function_invocation
Rule 151   variable_assignment -> VARIABLE assignment_operator string_special_function
Rule 152   variable_assignment -> VARIABLE assignment_operator array_special_function_structure
Rule 153   variable_assignment -> VARIABLE assignment_operator types_structure
Rule 154   variable_assignment -> VARIABLE assignment_operator input
Rule 155   variable_assignment -> VARIABLE assignment_operator special_function
Rule 156   variable_assignment -> VARIABLE assignment_operator conditional
Rule 157   variable_assignment -> VARIABLE INCREASE
Rule 158   variable_assignment -> VARIABLE DECREMENT
Rule 159   variable_assignment -> INCREASE VARIABLE
Rule 160   variable_assignment -> DECREMENT VARIABLE
Rule 161   assignment_operator -> EQUALS
Rule 162   assignment_operator -> PLUS_EQUALS
Rule 163   constant_assignment -> const_syntax
Rule 164   constant_assignment -> define_syntax
Rule 165   const_syntax -> CONST IDENTIFIER EQUALS values
Rule 166   define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
Rule 167   function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN
Rule 168   function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN
Rule 169   params -> real_params
Rule 170   params -> empty
Rule 171   real_params -> VARIABLE
Rule 172   real_params -> values
Rule 173   real_params -> real_params COMMA VARIABLE
Rule 174   real_params -> real_params COMMA values
Rule 175   empty -> <empty>
Rule 176   function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
Rule 177   special_function -> arrow_function
Rule 178   special_function -> anonymous_functions
Rule 179   arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock
Rule 180   arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement
Rule 181   arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression
Rule 182   anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock
Rule 183   codeblock -> LEFT_BRACE body_statement RIGHT_BRACE
Rule 184   input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN
Rule 185   input -> READLINE LEFT_PAREN STRING RIGHT_PAREN
Rule 186   string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN
Rule 187   string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN
Rule 188   string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN
Rule 189   string_param -> STRING
Rule 190   string_param -> VARIABLE
Rule 191   string_param -> INTEGER
Rule 192   int_param -> INTEGER
Rule 193   int_param -> VARIABLE
Rule 194   int_param -> STRING
Rule 195   array_special_function_structure -> array_special_function
Rule 196   array_special_function_structure -> statement_array_special_function_error
Rule 197   array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
Rule 198   array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
Rule 199   array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
Rule 200   array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN
Rule 201   array_special_function -> ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN
Rule 202   statement_array_special_function_error -> COUNT LEFT_PAREN error count_param RIGHT_PAREN
Rule 203   statement_array_special_function_error -> ARRAY_POP LEFT_PAREN error RIGHT_PAREN
Rule 204   statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN error RIGHT_PAREN
Rule 205   values_array_special -> values
Rule 206   values_array_special -> values COMMA values_array_special
Rule 207   values_array_special -> object_creation
Rule 208   values_array_special -> object_creation COMMA values_array_special
Rule 209   count_param -> COMMA COUNT_NORMAL
Rule 210   count_param -> COMMA COUNT_RECURSIVE
Rule 211   count_param -> <empty>
Rule 212   length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
Rule 213   length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
Rule 214   length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
Rule 215   length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN
Rule 216   types_structure -> structure_array_principal
Rule 217   types_structure -> structure_matrix_principal
Rule 218   types_structure -> structure_object_principal
Rule 219   structure_array_principal -> indexed_array
Rule 220   structure_array_principal -> associative_array
Rule 221   structure_array_principal -> access_array_stucture
Rule 222   structure_array_principal -> access_array_element
Rule 223   indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
Rule 224   associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN
Rule 225   associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
Rule 226   structure_array -> key EQUALS GREATER_THAN values
Rule 227   structure_array -> key EQUALS GREATER_THAN values COMMA structure_array
Rule 228   key -> INTEGER
Rule 229   key -> STRING
Rule 230   values_array_indexed -> values
Rule 231   values_array_indexed -> values COMMA values_array_indexed
Rule 232   values_array_indexed -> object_creation
Rule 233   values_array_indexed -> object_creation COMMA values_array_indexed
Rule 234   values_array_indexed -> indexed_array
Rule 235   values_array_indexed -> indexed_array COMMA values_array_indexed
Rule 236   access_array_stucture -> access_array_element
Rule 237   access_array_stucture -> statement_access_array_element_error
Rule 238   access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
Rule 239   access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
Rule 240   statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET
Rule 241   structure_matrix_principal -> matrix_firstform
Rule 242   structure_matrix_principal -> matrix_secondform
Rule 243   structure_matrix_principal -> access_element_matrix SEMICOLON
Rule 244   structure_matrix_principal -> modify_element_matrix SEMICOLON
Rule 245   structure_matrix_principal -> add_element_matrix
Rule 246   matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
Rule 247   matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
Rule 248   structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET
Rule 249   structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second
Rule 250   structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN
Rule 251   structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first
Rule 252   access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
Rule 253   access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
Rule 254   access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
Rule 255   access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
Rule 256   modify_element_matrix -> access_element_matrix EQUALS values
Rule 257   modify_element_matrix -> access_element_matrix EQUALS VARIABLE
Rule 258   add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
Rule 259   structure_object_principal -> object_creation
Rule 260   structure_object_principal -> access_method_object
Rule 261   object_creation -> NEW IDENTIFIER
Rule 262   object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
Rule 263   access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation
Rule 264   access_method_object -> VARIABLE MINUS GREATER_THAN accessType
Rule 265   access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values
Rule 266   access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
Rule 267   access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
Rule 268   access_method_object -> access_array_element MINUS GREATER_THAN function_invocation
Rule 269   access_method_object -> access_array_element MINUS GREATER_THAN accessType
Rule 270   access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values
Rule 271   access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
Rule 272   access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
Rule 273   accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET
Rule 274   accessType -> IDENTIFIER
Rule 275   class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
Rule 276   interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
Rule 277   interface_body -> interface_body interface_method
Rule 278   interface_body -> <empty>
Rule 279   interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON
Rule 280   class_extends_opt -> EXTENDS IDENTIFIER
Rule 281   class_extends_opt -> <empty>
Rule 282   class_implements_opt -> IMPLEMENTS interface_list
Rule 283   class_implements_opt -> <empty>
Rule 284   interface_list -> IDENTIFIER
Rule 285   interface_list -> interface_list COMMA IDENTIFIER
Rule 286   class_body -> class_body class_member
Rule 287   class_body -> <empty>
Rule 288   class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
Rule 289   class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
Rule 290   class_member -> class_attribute
Rule 291   class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON
Rule 292   class_attribute -> visibility_opt VARIABLE SEMICOLON
Rule 293   class_attribute -> visibility_opt constant_assignment SEMICOLON
Rule 294   visibility_opt -> PUBLIC
Rule 295   visibility_opt -> PRIVATE
Rule 296   visibility_opt -> PROTECTED
Rule 297   visibility_opt -> <empty>
Rule 298   method_body -> classStatement
Rule 299   method_body -> classStatement return_form
Rule 300   method_body -> return_form
Rule 301   method_body -> classStatement BREAK SEMICOLON
Rule 302   method_body -> classStatement method_body
Rule 303   return_form -> RETURN values SEMICOLON
Rule 304   return_form -> RETURN access_method_object SEMICOLON
Rule 305   return_form -> RETURN SEMICOLON
Rule 306   return_form -> RETURN expression SEMICOLON
Rule 307   return_form -> RETURN string_special_function SEMICOLON
Rule 308   return_form -> RETURN array_special_function_structure SEMICOLON
Rule 309   classStatement -> sentence
Rule 310   classStatement -> access_method_object SEMICOLON

Terminals, with rules where they appear

ARRAY                : 75 82 223 224 225 246 250 251
ARRAY_POP            : 200 203
ARRAY_SUM            : 201 204
BREAK                : 25 28 301
CLASS                : 275
COLON                : 
COMMA                : 124 166 173 174 187 188 188 206 208 209 210 227 231 233 235 249 251 285
COMMENT              : 
CONST                : 165
COUNT                : 197 198 199 202 212 213 214
COUNT_NORMAL         : 209
COUNT_RECURSIVE      : 210
DECREMENT            : 33 35 158 160
DEFINE               : 166
DIVIDE               : 51 137
ECHO                 : 107 109
ELSE                 : 21
ELSEIF               : 18 19 20
EQUALS               : 31 37 161 165 179 180 181 226 227 256 257 258 265 266 267 270 271 272 291
EQUALS_EQUALS        : 89 90 91 92 93 94 95 96 97
EXTENDS              : 280
FALSE                : 76 131
FEGTS                : 184
FLOAT                : 47 72 81 128 141
FN                   : 179 180 181
FOR                  : 31
FUNCTION             : 176 182 279 288 289
GREATER_EQUALS_TO    : 104
GREATER_THAN         : 102 179 180 181 226 227 263 264 265 266 267 268 269 270 271 272
IDENTICAL            : 98
IDENTIFIER           : 43 44 63 74 80 148 165 167 176 261 262 273 274 275 276 279 280 284 285 288 289
IF                   : 15 16 17
IMPLEMENTS           : 282
INCREASE             : 32 34 157 159
INTEGER              : 36 46 71 78 126 140 191 192 228 238 252 252 254 255 273
INTERFACE            : 276
LEFT_BRACE           : 14 15 16 17 18 19 20 21 31 183 275 276 288 289
LEFT_BRACKET         : 225 238 239 240 247 248 249 252 252 253 253 254 254 255 255 258 273
LEFT_PAREN           : 14 15 16 17 18 19 20 31 42 43 44 64 75 82 107 108 143 166 167 168 176 179 180 181 182 184 185 186 187 188 197 198 199 200 201 202 203 204 212 213 214 215 223 224 246 250 251 262 279 288 289
LOGIC_AND            : 58
LOGIC_NOT            : 84 85
LOGIC_OR             : 59
LOGIC_XOR            : 60
MINUS                : 49 134 263 264 265 266 267 268 269 270 271 272
MODULE               : 52 138
MULTIPLY             : 50 136
NEW                  : 261 262
NOT_EQUALS           : 99
NOT_IDENTICAL        : 100
NULL                 : 83
NULL_FUSION          : 106
PHP_END_IDENTIFIER   : 1
PHP_IDENTIFIER       : 1
PLUS                 : 48 133
PLUS_EQUALS          : 36 162
POW                  : 53 139
PRINT                : 108 110
PRIVATE              : 295
PROTECTED            : 296
PUBLIC               : 294
READLINE             : 185
RETURN               : 23 24 27 29 30 303 304 305 306 307 308
RIGHT_BRACE          : 14 15 16 17 18 19 20 21 31 183 275 276 288 289
RIGHT_BRACKET        : 225 238 239 240 247 248 249 252 252 253 253 254 254 255 255 258 273
RIGHT_PAREN          : 14 15 16 17 18 19 20 31 42 43 44 64 75 82 107 108 143 166 167 168 176 179 180 181 182 184 185 186 187 188 197 198 199 200 201 202 203 204 212 213 214 215 223 224 246 250 251 262 279 288 289
SEMICOLON            : 4 5 23 24 25 27 28 29 30 31 31 243 244 246 247 279 291 292 293 301 303 304 305 306 307 308 310
SMALL_EQUALS_TO      : 103
SMALL_THAN           : 101
SPACECRAFT           : 105
STATIC               : 288
STDIN                : 184
STRING               : 70 77 115 127 144 166 185 189 194 229
STRING_CONCATENATION : 115 125
STRLEN               : 186 215
SUBSTR               : 187 188
TRUE                 : 69 130
VARIABLE             : 31 32 33 34 35 36 37 37 38 39 43 62 73 79 85 89 91 92 93 93 95 96 113 114 115 121 142 147 148 149 150 151 152 153 154 155 156 157 158 159 160 168 171 173 190 193 199 200 201 214 238 239 239 240 252 253 253 253 254 254 255 255 257 258 263 264 265 266 266 267 271 291 292
WHILE                : 14
error                : 56 57 120 121 122 123 202 203 204 240

Nonterminals, with rules where they appear

accessType           : 264 265 266 267 269 270 271 272
access_array_element : 44 90 91 92 94 94 222 236 267 268 269 270 271 272 272
access_array_stucture : 221
access_element_matrix : 95 96 243 256 257
access_method_object : 260 304 310
add_element_matrix   : 245
anonymous_functions  : 178
array_special_function : 195
array_special_function_structure : 152 308
arrow_function       : 177
assignment           : 5
assignment_operator  : 147 148 149 150 151 152 153 154 155 156
associative_array    : 220
body_statement       : 14 15 16 17 18 19 20 21 26 31 183
boolean              : 129
boolean_expression   : 54 55 55 56 57
classStatement       : 298 299 301 302
class_attribute      : 290
class_body           : 275 286
class_declaration    : 7
class_extends_opt    : 275 276
class_implements_opt : 275
class_member         : 286
codeblock            : 176 179 182
comparation          : 61
comparator_operator  : 38 86 87 88
condition_for        : 31
conditional          : 14 15 16 17 18 19 20 64 84 116 117 122 156
const_syntax         : 163
constant_assignment  : 146 293
control_structures   : 9
count_param          : 197 198 199 202 212 213 214
define_syntax        : 164
else_statement       : 17 20
elseif_statement     : 16 19
empty                : 170
expression           : 87 88 88 133 134 143 149 181 306
expression_for       : 31 38 41 41 42
factor               : 135 136 137 138 139
false_boolean_types  : 67 68
for_statement        : 13
function_declaration : 10
function_invocation  : 150 263 268
if_statement         : 11
increment_statement  : 31
indexed_array        : 219 234 235 258
inicial_program      : 0
input                : 154
int_param            : 187 188 188
interface_body       : 276 277
interface_declaration : 8
interface_list       : 282 285
interface_method     : 277
key                  : 226 227
length_operations    : 45
logic_expression     : 66
logic_not_sentence   : 65
logic_operator       : 55 56 57 67 68
matrix_firstform     : 241
matrix_secondform    : 242
method_body          : 288 289 302
modify_element_matrix : 244
number_values        : 37 40
object_creation      : 207 208 232 233 259
operator_aritmetic   : 37 41
params               : 167 168 176 179 180 181 182 262 279 288 289
print_statement      : 4 180
printable_dividers   : 112 114 117 119 120 121 122 123
printable_values     : 29 30 107 108 109 110 112 114 117 119
program              : 1 2
real_params          : 169 173 174
return_form          : 299 300
sentence             : 2 3 22 23 24 25 26 30 309
special_function     : 155
statement_access_array_element_error : 237
statement_array_special_function_error : 196
string_param         : 186 187 188 215
string_special_function : 151 307
structure_array      : 224 225 227
structure_array_principal : 197 212 216
structure_matrix_first : 246 251
structure_matrix_principal : 198 213 217
structure_matrix_second : 247 249
structure_object_principal : 118 119 123 218
term                 : 132 133 134 136 137 138 139
true_boolean_types   : 67 68
types_structure      : 6 153
values               : 23 27 75 86 86 87 89 90 111 112 120 147 165 166 172 174 205 206 226 227 230 231 248 249 250 251 256 265 270 291 303
values_array_indexed : 223 231 233 235
values_array_special : 206 208
variable_assignment  : 145
visibility_opt       : 279 288 289 291 292 293
while_statement      : 12

Parsing method: LALR

state 0

    (0) S' -> . inicial_program
    (1) inicial_program -> . PHP_IDENTIFIER program PHP_END_IDENTIFIER

    PHP_IDENTIFIER  shift and go to state 2

    inicial_program                shift and go to state 1

state 1

    (0) S' -> inicial_program .



state 2

    (1) inicial_program -> PHP_IDENTIFIER . program PHP_END_IDENTIFIER
    (2) program -> . sentence program
    (3) program -> . sentence
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    program                        shift and go to state 3
    sentence                       shift and go to state 4
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 3

    (1) inicial_program -> PHP_IDENTIFIER program . PHP_END_IDENTIFIER

    PHP_END_IDENTIFIER shift and go to state 50


state 4

    (2) program -> sentence . program
    (3) program -> sentence .
    (2) program -> . sentence program
    (3) program -> . sentence
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    PHP_END_IDENTIFIER reduce using rule 3 (program -> sentence .)
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    sentence                       shift and go to state 4
    program                        shift and go to state 51
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 5

    (4) sentence -> print_statement . SEMICOLON

    SEMICOLON       shift and go to state 52


state 6

    (5) sentence -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 53


state 7

    (6) sentence -> types_structure .

    ECHO            reduce using rule 6 (sentence -> types_structure .)
    PRINT           reduce using rule 6 (sentence -> types_structure .)
    CLASS           reduce using rule 6 (sentence -> types_structure .)
    INTERFACE       reduce using rule 6 (sentence -> types_structure .)
    FUNCTION        reduce using rule 6 (sentence -> types_structure .)
    VARIABLE        reduce using rule 6 (sentence -> types_structure .)
    INCREASE        reduce using rule 6 (sentence -> types_structure .)
    DECREMENT       reduce using rule 6 (sentence -> types_structure .)
    IF              reduce using rule 6 (sentence -> types_structure .)
    WHILE           reduce using rule 6 (sentence -> types_structure .)
    FOR             reduce using rule 6 (sentence -> types_structure .)
    CONST           reduce using rule 6 (sentence -> types_structure .)
    DEFINE          reduce using rule 6 (sentence -> types_structure .)
    ARRAY           reduce using rule 6 (sentence -> types_structure .)
    LEFT_BRACKET    reduce using rule 6 (sentence -> types_structure .)
    NEW             reduce using rule 6 (sentence -> types_structure .)
    PHP_END_IDENTIFIER reduce using rule 6 (sentence -> types_structure .)
    RETURN          reduce using rule 6 (sentence -> types_structure .)
    BREAK           reduce using rule 6 (sentence -> types_structure .)
    RIGHT_BRACE     reduce using rule 6 (sentence -> types_structure .)


state 8

    (7) sentence -> class_declaration .

    ECHO            reduce using rule 7 (sentence -> class_declaration .)
    PRINT           reduce using rule 7 (sentence -> class_declaration .)
    CLASS           reduce using rule 7 (sentence -> class_declaration .)
    INTERFACE       reduce using rule 7 (sentence -> class_declaration .)
    FUNCTION        reduce using rule 7 (sentence -> class_declaration .)
    VARIABLE        reduce using rule 7 (sentence -> class_declaration .)
    INCREASE        reduce using rule 7 (sentence -> class_declaration .)
    DECREMENT       reduce using rule 7 (sentence -> class_declaration .)
    IF              reduce using rule 7 (sentence -> class_declaration .)
    WHILE           reduce using rule 7 (sentence -> class_declaration .)
    FOR             reduce using rule 7 (sentence -> class_declaration .)
    CONST           reduce using rule 7 (sentence -> class_declaration .)
    DEFINE          reduce using rule 7 (sentence -> class_declaration .)
    ARRAY           reduce using rule 7 (sentence -> class_declaration .)
    LEFT_BRACKET    reduce using rule 7 (sentence -> class_declaration .)
    NEW             reduce using rule 7 (sentence -> class_declaration .)
    PHP_END_IDENTIFIER reduce using rule 7 (sentence -> class_declaration .)
    RETURN          reduce using rule 7 (sentence -> class_declaration .)
    BREAK           reduce using rule 7 (sentence -> class_declaration .)
    RIGHT_BRACE     reduce using rule 7 (sentence -> class_declaration .)


state 9

    (8) sentence -> interface_declaration .

    ECHO            reduce using rule 8 (sentence -> interface_declaration .)
    PRINT           reduce using rule 8 (sentence -> interface_declaration .)
    CLASS           reduce using rule 8 (sentence -> interface_declaration .)
    INTERFACE       reduce using rule 8 (sentence -> interface_declaration .)
    FUNCTION        reduce using rule 8 (sentence -> interface_declaration .)
    VARIABLE        reduce using rule 8 (sentence -> interface_declaration .)
    INCREASE        reduce using rule 8 (sentence -> interface_declaration .)
    DECREMENT       reduce using rule 8 (sentence -> interface_declaration .)
    IF              reduce using rule 8 (sentence -> interface_declaration .)
    WHILE           reduce using rule 8 (sentence -> interface_declaration .)
    FOR             reduce using rule 8 (sentence -> interface_declaration .)
    CONST           reduce using rule 8 (sentence -> interface_declaration .)
    DEFINE          reduce using rule 8 (sentence -> interface_declaration .)
    ARRAY           reduce using rule 8 (sentence -> interface_declaration .)
    LEFT_BRACKET    reduce using rule 8 (sentence -> interface_declaration .)
    NEW             reduce using rule 8 (sentence -> interface_declaration .)
    PHP_END_IDENTIFIER reduce using rule 8 (sentence -> interface_declaration .)
    RETURN          reduce using rule 8 (sentence -> interface_declaration .)
    BREAK           reduce using rule 8 (sentence -> interface_declaration .)
    RIGHT_BRACE     reduce using rule 8 (sentence -> interface_declaration .)


state 10

    (9) sentence -> control_structures .

    ECHO            reduce using rule 9 (sentence -> control_structures .)
    PRINT           reduce using rule 9 (sentence -> control_structures .)
    CLASS           reduce using rule 9 (sentence -> control_structures .)
    INTERFACE       reduce using rule 9 (sentence -> control_structures .)
    FUNCTION        reduce using rule 9 (sentence -> control_structures .)
    VARIABLE        reduce using rule 9 (sentence -> control_structures .)
    INCREASE        reduce using rule 9 (sentence -> control_structures .)
    DECREMENT       reduce using rule 9 (sentence -> control_structures .)
    IF              reduce using rule 9 (sentence -> control_structures .)
    WHILE           reduce using rule 9 (sentence -> control_structures .)
    FOR             reduce using rule 9 (sentence -> control_structures .)
    CONST           reduce using rule 9 (sentence -> control_structures .)
    DEFINE          reduce using rule 9 (sentence -> control_structures .)
    ARRAY           reduce using rule 9 (sentence -> control_structures .)
    LEFT_BRACKET    reduce using rule 9 (sentence -> control_structures .)
    NEW             reduce using rule 9 (sentence -> control_structures .)
    PHP_END_IDENTIFIER reduce using rule 9 (sentence -> control_structures .)
    RETURN          reduce using rule 9 (sentence -> control_structures .)
    BREAK           reduce using rule 9 (sentence -> control_structures .)
    RIGHT_BRACE     reduce using rule 9 (sentence -> control_structures .)


state 11

    (10) sentence -> function_declaration .

    ECHO            reduce using rule 10 (sentence -> function_declaration .)
    PRINT           reduce using rule 10 (sentence -> function_declaration .)
    CLASS           reduce using rule 10 (sentence -> function_declaration .)
    INTERFACE       reduce using rule 10 (sentence -> function_declaration .)
    FUNCTION        reduce using rule 10 (sentence -> function_declaration .)
    VARIABLE        reduce using rule 10 (sentence -> function_declaration .)
    INCREASE        reduce using rule 10 (sentence -> function_declaration .)
    DECREMENT       reduce using rule 10 (sentence -> function_declaration .)
    IF              reduce using rule 10 (sentence -> function_declaration .)
    WHILE           reduce using rule 10 (sentence -> function_declaration .)
    FOR             reduce using rule 10 (sentence -> function_declaration .)
    CONST           reduce using rule 10 (sentence -> function_declaration .)
    DEFINE          reduce using rule 10 (sentence -> function_declaration .)
    ARRAY           reduce using rule 10 (sentence -> function_declaration .)
    LEFT_BRACKET    reduce using rule 10 (sentence -> function_declaration .)
    NEW             reduce using rule 10 (sentence -> function_declaration .)
    PHP_END_IDENTIFIER reduce using rule 10 (sentence -> function_declaration .)
    RETURN          reduce using rule 10 (sentence -> function_declaration .)
    BREAK           reduce using rule 10 (sentence -> function_declaration .)
    RIGHT_BRACE     reduce using rule 10 (sentence -> function_declaration .)


state 12

    (107) print_statement -> ECHO . LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> ECHO . printable_values
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    LEFT_PAREN      shift and go to state 54
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    error           shift and go to state 61
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    IDENTIFIER      shift and go to state 69
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    printable_values               shift and go to state 55
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 64
    boolean_expression             shift and go to state 65
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    access_array_element           shift and go to state 72
    expression                     shift and go to state 73
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 13

    (108) print_statement -> PRINT . LEFT_PAREN printable_values RIGHT_PAREN
    (110) print_statement -> PRINT . printable_values
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    LEFT_PAREN      shift and go to state 82
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    error           shift and go to state 61
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    IDENTIFIER      shift and go to state 69
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    printable_values               shift and go to state 83
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 64
    boolean_expression             shift and go to state 65
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    access_array_element           shift and go to state 72
    expression                     shift and go to state 73
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 14

    (145) assignment -> variable_assignment .

    SEMICOLON       reduce using rule 145 (assignment -> variable_assignment .)


state 15

    (146) assignment -> constant_assignment .

    SEMICOLON       reduce using rule 146 (assignment -> constant_assignment .)


state 16

    (216) types_structure -> structure_array_principal .

    ECHO            reduce using rule 216 (types_structure -> structure_array_principal .)
    PRINT           reduce using rule 216 (types_structure -> structure_array_principal .)
    CLASS           reduce using rule 216 (types_structure -> structure_array_principal .)
    INTERFACE       reduce using rule 216 (types_structure -> structure_array_principal .)
    FUNCTION        reduce using rule 216 (types_structure -> structure_array_principal .)
    VARIABLE        reduce using rule 216 (types_structure -> structure_array_principal .)
    INCREASE        reduce using rule 216 (types_structure -> structure_array_principal .)
    DECREMENT       reduce using rule 216 (types_structure -> structure_array_principal .)
    IF              reduce using rule 216 (types_structure -> structure_array_principal .)
    WHILE           reduce using rule 216 (types_structure -> structure_array_principal .)
    FOR             reduce using rule 216 (types_structure -> structure_array_principal .)
    CONST           reduce using rule 216 (types_structure -> structure_array_principal .)
    DEFINE          reduce using rule 216 (types_structure -> structure_array_principal .)
    ARRAY           reduce using rule 216 (types_structure -> structure_array_principal .)
    LEFT_BRACKET    reduce using rule 216 (types_structure -> structure_array_principal .)
    NEW             reduce using rule 216 (types_structure -> structure_array_principal .)
    PHP_END_IDENTIFIER reduce using rule 216 (types_structure -> structure_array_principal .)
    SEMICOLON       reduce using rule 216 (types_structure -> structure_array_principal .)
    RETURN          reduce using rule 216 (types_structure -> structure_array_principal .)
    BREAK           reduce using rule 216 (types_structure -> structure_array_principal .)
    RIGHT_BRACE     reduce using rule 216 (types_structure -> structure_array_principal .)


state 17

    (217) types_structure -> structure_matrix_principal .

    ECHO            reduce using rule 217 (types_structure -> structure_matrix_principal .)
    PRINT           reduce using rule 217 (types_structure -> structure_matrix_principal .)
    CLASS           reduce using rule 217 (types_structure -> structure_matrix_principal .)
    INTERFACE       reduce using rule 217 (types_structure -> structure_matrix_principal .)
    FUNCTION        reduce using rule 217 (types_structure -> structure_matrix_principal .)
    VARIABLE        reduce using rule 217 (types_structure -> structure_matrix_principal .)
    INCREASE        reduce using rule 217 (types_structure -> structure_matrix_principal .)
    DECREMENT       reduce using rule 217 (types_structure -> structure_matrix_principal .)
    IF              reduce using rule 217 (types_structure -> structure_matrix_principal .)
    WHILE           reduce using rule 217 (types_structure -> structure_matrix_principal .)
    FOR             reduce using rule 217 (types_structure -> structure_matrix_principal .)
    CONST           reduce using rule 217 (types_structure -> structure_matrix_principal .)
    DEFINE          reduce using rule 217 (types_structure -> structure_matrix_principal .)
    ARRAY           reduce using rule 217 (types_structure -> structure_matrix_principal .)
    LEFT_BRACKET    reduce using rule 217 (types_structure -> structure_matrix_principal .)
    NEW             reduce using rule 217 (types_structure -> structure_matrix_principal .)
    PHP_END_IDENTIFIER reduce using rule 217 (types_structure -> structure_matrix_principal .)
    SEMICOLON       reduce using rule 217 (types_structure -> structure_matrix_principal .)
    RETURN          reduce using rule 217 (types_structure -> structure_matrix_principal .)
    BREAK           reduce using rule 217 (types_structure -> structure_matrix_principal .)
    RIGHT_BRACE     reduce using rule 217 (types_structure -> structure_matrix_principal .)


state 18

    (218) types_structure -> structure_object_principal .

    ECHO            reduce using rule 218 (types_structure -> structure_object_principal .)
    PRINT           reduce using rule 218 (types_structure -> structure_object_principal .)
    CLASS           reduce using rule 218 (types_structure -> structure_object_principal .)
    INTERFACE       reduce using rule 218 (types_structure -> structure_object_principal .)
    FUNCTION        reduce using rule 218 (types_structure -> structure_object_principal .)
    VARIABLE        reduce using rule 218 (types_structure -> structure_object_principal .)
    INCREASE        reduce using rule 218 (types_structure -> structure_object_principal .)
    DECREMENT       reduce using rule 218 (types_structure -> structure_object_principal .)
    IF              reduce using rule 218 (types_structure -> structure_object_principal .)
    WHILE           reduce using rule 218 (types_structure -> structure_object_principal .)
    FOR             reduce using rule 218 (types_structure -> structure_object_principal .)
    CONST           reduce using rule 218 (types_structure -> structure_object_principal .)
    DEFINE          reduce using rule 218 (types_structure -> structure_object_principal .)
    ARRAY           reduce using rule 218 (types_structure -> structure_object_principal .)
    LEFT_BRACKET    reduce using rule 218 (types_structure -> structure_object_principal .)
    NEW             reduce using rule 218 (types_structure -> structure_object_principal .)
    PHP_END_IDENTIFIER reduce using rule 218 (types_structure -> structure_object_principal .)
    SEMICOLON       reduce using rule 218 (types_structure -> structure_object_principal .)
    RETURN          reduce using rule 218 (types_structure -> structure_object_principal .)
    BREAK           reduce using rule 218 (types_structure -> structure_object_principal .)
    RIGHT_BRACE     reduce using rule 218 (types_structure -> structure_object_principal .)


state 19

    (275) class_declaration -> CLASS . IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE

    IDENTIFIER      shift and go to state 84


state 20

    (276) interface_declaration -> INTERFACE . IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE

    IDENTIFIER      shift and go to state 85


state 21

    (11) control_structures -> if_statement .

    ECHO            reduce using rule 11 (control_structures -> if_statement .)
    PRINT           reduce using rule 11 (control_structures -> if_statement .)
    CLASS           reduce using rule 11 (control_structures -> if_statement .)
    INTERFACE       reduce using rule 11 (control_structures -> if_statement .)
    FUNCTION        reduce using rule 11 (control_structures -> if_statement .)
    VARIABLE        reduce using rule 11 (control_structures -> if_statement .)
    INCREASE        reduce using rule 11 (control_structures -> if_statement .)
    DECREMENT       reduce using rule 11 (control_structures -> if_statement .)
    IF              reduce using rule 11 (control_structures -> if_statement .)
    WHILE           reduce using rule 11 (control_structures -> if_statement .)
    FOR             reduce using rule 11 (control_structures -> if_statement .)
    CONST           reduce using rule 11 (control_structures -> if_statement .)
    DEFINE          reduce using rule 11 (control_structures -> if_statement .)
    ARRAY           reduce using rule 11 (control_structures -> if_statement .)
    LEFT_BRACKET    reduce using rule 11 (control_structures -> if_statement .)
    NEW             reduce using rule 11 (control_structures -> if_statement .)
    PHP_END_IDENTIFIER reduce using rule 11 (control_structures -> if_statement .)
    RETURN          reduce using rule 11 (control_structures -> if_statement .)
    BREAK           reduce using rule 11 (control_structures -> if_statement .)
    RIGHT_BRACE     reduce using rule 11 (control_structures -> if_statement .)


state 22

    (12) control_structures -> while_statement .

    ECHO            reduce using rule 12 (control_structures -> while_statement .)
    PRINT           reduce using rule 12 (control_structures -> while_statement .)
    CLASS           reduce using rule 12 (control_structures -> while_statement .)
    INTERFACE       reduce using rule 12 (control_structures -> while_statement .)
    FUNCTION        reduce using rule 12 (control_structures -> while_statement .)
    VARIABLE        reduce using rule 12 (control_structures -> while_statement .)
    INCREASE        reduce using rule 12 (control_structures -> while_statement .)
    DECREMENT       reduce using rule 12 (control_structures -> while_statement .)
    IF              reduce using rule 12 (control_structures -> while_statement .)
    WHILE           reduce using rule 12 (control_structures -> while_statement .)
    FOR             reduce using rule 12 (control_structures -> while_statement .)
    CONST           reduce using rule 12 (control_structures -> while_statement .)
    DEFINE          reduce using rule 12 (control_structures -> while_statement .)
    ARRAY           reduce using rule 12 (control_structures -> while_statement .)
    LEFT_BRACKET    reduce using rule 12 (control_structures -> while_statement .)
    NEW             reduce using rule 12 (control_structures -> while_statement .)
    PHP_END_IDENTIFIER reduce using rule 12 (control_structures -> while_statement .)
    RETURN          reduce using rule 12 (control_structures -> while_statement .)
    BREAK           reduce using rule 12 (control_structures -> while_statement .)
    RIGHT_BRACE     reduce using rule 12 (control_structures -> while_statement .)


state 23

    (13) control_structures -> for_statement .

    ECHO            reduce using rule 13 (control_structures -> for_statement .)
    PRINT           reduce using rule 13 (control_structures -> for_statement .)
    CLASS           reduce using rule 13 (control_structures -> for_statement .)
    INTERFACE       reduce using rule 13 (control_structures -> for_statement .)
    FUNCTION        reduce using rule 13 (control_structures -> for_statement .)
    VARIABLE        reduce using rule 13 (control_structures -> for_statement .)
    INCREASE        reduce using rule 13 (control_structures -> for_statement .)
    DECREMENT       reduce using rule 13 (control_structures -> for_statement .)
    IF              reduce using rule 13 (control_structures -> for_statement .)
    WHILE           reduce using rule 13 (control_structures -> for_statement .)
    FOR             reduce using rule 13 (control_structures -> for_statement .)
    CONST           reduce using rule 13 (control_structures -> for_statement .)
    DEFINE          reduce using rule 13 (control_structures -> for_statement .)
    ARRAY           reduce using rule 13 (control_structures -> for_statement .)
    LEFT_BRACKET    reduce using rule 13 (control_structures -> for_statement .)
    NEW             reduce using rule 13 (control_structures -> for_statement .)
    PHP_END_IDENTIFIER reduce using rule 13 (control_structures -> for_statement .)
    RETURN          reduce using rule 13 (control_structures -> for_statement .)
    BREAK           reduce using rule 13 (control_structures -> for_statement .)
    RIGHT_BRACE     reduce using rule 13 (control_structures -> for_statement .)


state 24

    (176) function_declaration -> FUNCTION . IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock

    IDENTIFIER      shift and go to state 86


state 25

    (147) variable_assignment -> VARIABLE . assignment_operator values
    (148) variable_assignment -> VARIABLE . assignment_operator IDENTIFIER
    (149) variable_assignment -> VARIABLE . assignment_operator expression
    (150) variable_assignment -> VARIABLE . assignment_operator function_invocation
    (151) variable_assignment -> VARIABLE . assignment_operator string_special_function
    (152) variable_assignment -> VARIABLE . assignment_operator array_special_function_structure
    (153) variable_assignment -> VARIABLE . assignment_operator types_structure
    (154) variable_assignment -> VARIABLE . assignment_operator input
    (155) variable_assignment -> VARIABLE . assignment_operator special_function
    (156) variable_assignment -> VARIABLE . assignment_operator conditional
    (157) variable_assignment -> VARIABLE . INCREASE
    (158) variable_assignment -> VARIABLE . DECREMENT
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (258) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (263) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (264) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (265) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (161) assignment_operator -> . EQUALS
    (162) assignment_operator -> . PLUS_EQUALS

    INCREASE        shift and go to state 88
    DECREMENT       shift and go to state 89
    LEFT_BRACKET    shift and go to state 90
    MINUS           shift and go to state 92
    EQUALS          shift and go to state 91
    PLUS_EQUALS     shift and go to state 93

    assignment_operator            shift and go to state 87

state 26

    (159) variable_assignment -> INCREASE . VARIABLE

    VARIABLE        shift and go to state 94


state 27

    (160) variable_assignment -> DECREMENT . VARIABLE

    VARIABLE        shift and go to state 95


state 28

    (163) constant_assignment -> const_syntax .

    SEMICOLON       reduce using rule 163 (constant_assignment -> const_syntax .)


state 29

    (164) constant_assignment -> define_syntax .

    SEMICOLON       reduce using rule 164 (constant_assignment -> define_syntax .)


state 30

    (219) structure_array_principal -> indexed_array .

    ECHO            reduce using rule 219 (structure_array_principal -> indexed_array .)
    PRINT           reduce using rule 219 (structure_array_principal -> indexed_array .)
    CLASS           reduce using rule 219 (structure_array_principal -> indexed_array .)
    INTERFACE       reduce using rule 219 (structure_array_principal -> indexed_array .)
    FUNCTION        reduce using rule 219 (structure_array_principal -> indexed_array .)
    VARIABLE        reduce using rule 219 (structure_array_principal -> indexed_array .)
    INCREASE        reduce using rule 219 (structure_array_principal -> indexed_array .)
    DECREMENT       reduce using rule 219 (structure_array_principal -> indexed_array .)
    IF              reduce using rule 219 (structure_array_principal -> indexed_array .)
    WHILE           reduce using rule 219 (structure_array_principal -> indexed_array .)
    FOR             reduce using rule 219 (structure_array_principal -> indexed_array .)
    CONST           reduce using rule 219 (structure_array_principal -> indexed_array .)
    DEFINE          reduce using rule 219 (structure_array_principal -> indexed_array .)
    ARRAY           reduce using rule 219 (structure_array_principal -> indexed_array .)
    LEFT_BRACKET    reduce using rule 219 (structure_array_principal -> indexed_array .)
    NEW             reduce using rule 219 (structure_array_principal -> indexed_array .)
    PHP_END_IDENTIFIER reduce using rule 219 (structure_array_principal -> indexed_array .)
    SEMICOLON       reduce using rule 219 (structure_array_principal -> indexed_array .)
    COMMA           reduce using rule 219 (structure_array_principal -> indexed_array .)
    RIGHT_PAREN     reduce using rule 219 (structure_array_principal -> indexed_array .)
    RETURN          reduce using rule 219 (structure_array_principal -> indexed_array .)
    BREAK           reduce using rule 219 (structure_array_principal -> indexed_array .)
    RIGHT_BRACE     reduce using rule 219 (structure_array_principal -> indexed_array .)


state 31

    (220) structure_array_principal -> associative_array .

    ECHO            reduce using rule 220 (structure_array_principal -> associative_array .)
    PRINT           reduce using rule 220 (structure_array_principal -> associative_array .)
    CLASS           reduce using rule 220 (structure_array_principal -> associative_array .)
    INTERFACE       reduce using rule 220 (structure_array_principal -> associative_array .)
    FUNCTION        reduce using rule 220 (structure_array_principal -> associative_array .)
    VARIABLE        reduce using rule 220 (structure_array_principal -> associative_array .)
    INCREASE        reduce using rule 220 (structure_array_principal -> associative_array .)
    DECREMENT       reduce using rule 220 (structure_array_principal -> associative_array .)
    IF              reduce using rule 220 (structure_array_principal -> associative_array .)
    WHILE           reduce using rule 220 (structure_array_principal -> associative_array .)
    FOR             reduce using rule 220 (structure_array_principal -> associative_array .)
    CONST           reduce using rule 220 (structure_array_principal -> associative_array .)
    DEFINE          reduce using rule 220 (structure_array_principal -> associative_array .)
    ARRAY           reduce using rule 220 (structure_array_principal -> associative_array .)
    LEFT_BRACKET    reduce using rule 220 (structure_array_principal -> associative_array .)
    NEW             reduce using rule 220 (structure_array_principal -> associative_array .)
    PHP_END_IDENTIFIER reduce using rule 220 (structure_array_principal -> associative_array .)
    SEMICOLON       reduce using rule 220 (structure_array_principal -> associative_array .)
    COMMA           reduce using rule 220 (structure_array_principal -> associative_array .)
    RIGHT_PAREN     reduce using rule 220 (structure_array_principal -> associative_array .)
    RETURN          reduce using rule 220 (structure_array_principal -> associative_array .)
    BREAK           reduce using rule 220 (structure_array_principal -> associative_array .)
    RIGHT_BRACE     reduce using rule 220 (structure_array_principal -> associative_array .)


state 32

    (221) structure_array_principal -> access_array_stucture .

    ECHO            reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    PRINT           reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    CLASS           reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    INTERFACE       reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    FUNCTION        reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    VARIABLE        reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    INCREASE        reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    DECREMENT       reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    IF              reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    WHILE           reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    FOR             reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    CONST           reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    DEFINE          reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    ARRAY           reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    LEFT_BRACKET    reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    NEW             reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    PHP_END_IDENTIFIER reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    SEMICOLON       reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    COMMA           reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    RIGHT_PAREN     reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    RETURN          reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    BREAK           reduce using rule 221 (structure_array_principal -> access_array_stucture .)
    RIGHT_BRACE     reduce using rule 221 (structure_array_principal -> access_array_stucture .)


state 33

    (222) structure_array_principal -> access_array_element .
    (236) access_array_stucture -> access_array_element .
    (268) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (269) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (270) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element

  ! reduce/reduce conflict for ECHO resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for PRINT resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for CLASS resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for INCREASE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for IF resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for WHILE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for FOR resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for CONST resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for DEFINE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for ARRAY resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for NEW resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for PHP_END_IDENTIFIER resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RETURN resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for BREAK resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 222 (structure_array_principal -> access_array_element .)
    ECHO            reduce using rule 222 (structure_array_principal -> access_array_element .)
    PRINT           reduce using rule 222 (structure_array_principal -> access_array_element .)
    CLASS           reduce using rule 222 (structure_array_principal -> access_array_element .)
    INTERFACE       reduce using rule 222 (structure_array_principal -> access_array_element .)
    FUNCTION        reduce using rule 222 (structure_array_principal -> access_array_element .)
    VARIABLE        reduce using rule 222 (structure_array_principal -> access_array_element .)
    INCREASE        reduce using rule 222 (structure_array_principal -> access_array_element .)
    DECREMENT       reduce using rule 222 (structure_array_principal -> access_array_element .)
    IF              reduce using rule 222 (structure_array_principal -> access_array_element .)
    WHILE           reduce using rule 222 (structure_array_principal -> access_array_element .)
    FOR             reduce using rule 222 (structure_array_principal -> access_array_element .)
    CONST           reduce using rule 222 (structure_array_principal -> access_array_element .)
    DEFINE          reduce using rule 222 (structure_array_principal -> access_array_element .)
    ARRAY           reduce using rule 222 (structure_array_principal -> access_array_element .)
    LEFT_BRACKET    reduce using rule 222 (structure_array_principal -> access_array_element .)
    NEW             reduce using rule 222 (structure_array_principal -> access_array_element .)
    PHP_END_IDENTIFIER reduce using rule 222 (structure_array_principal -> access_array_element .)
    RETURN          reduce using rule 222 (structure_array_principal -> access_array_element .)
    BREAK           reduce using rule 222 (structure_array_principal -> access_array_element .)
    RIGHT_BRACE     reduce using rule 222 (structure_array_principal -> access_array_element .)
    MINUS           shift and go to state 96

  ! ECHO            [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! PRINT           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! CLASS           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! INTERFACE       [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! FUNCTION        [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! VARIABLE        [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! INCREASE        [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! DECREMENT       [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! IF              [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! WHILE           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! FOR             [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! CONST           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! DEFINE          [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! ARRAY           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! LEFT_BRACKET    [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! NEW             [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! PHP_END_IDENTIFIER [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! RETURN          [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! BREAK           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! RIGHT_BRACE     [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]


state 34

    (241) structure_matrix_principal -> matrix_firstform .

    ECHO            reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    PRINT           reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    CLASS           reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    INTERFACE       reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    FUNCTION        reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    VARIABLE        reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    INCREASE        reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    DECREMENT       reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    IF              reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    WHILE           reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    FOR             reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    CONST           reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    DEFINE          reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    ARRAY           reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    LEFT_BRACKET    reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    NEW             reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    PHP_END_IDENTIFIER reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    SEMICOLON       reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    COMMA           reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    RIGHT_PAREN     reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    RETURN          reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    BREAK           reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)
    RIGHT_BRACE     reduce using rule 241 (structure_matrix_principal -> matrix_firstform .)


state 35

    (242) structure_matrix_principal -> matrix_secondform .

    ECHO            reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    PRINT           reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    CLASS           reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    INTERFACE       reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    FUNCTION        reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    VARIABLE        reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    INCREASE        reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    DECREMENT       reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    IF              reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    WHILE           reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    FOR             reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    CONST           reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    DEFINE          reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    ARRAY           reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    LEFT_BRACKET    reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    NEW             reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    PHP_END_IDENTIFIER reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    SEMICOLON       reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    COMMA           reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    RIGHT_PAREN     reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    RETURN          reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    BREAK           reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)
    RIGHT_BRACE     reduce using rule 242 (structure_matrix_principal -> matrix_secondform .)


state 36

    (243) structure_matrix_principal -> access_element_matrix . SEMICOLON
    (256) modify_element_matrix -> access_element_matrix . EQUALS values
    (257) modify_element_matrix -> access_element_matrix . EQUALS VARIABLE

    SEMICOLON       shift and go to state 97
    EQUALS          shift and go to state 98


state 37

    (244) structure_matrix_principal -> modify_element_matrix . SEMICOLON

    SEMICOLON       shift and go to state 99


state 38

    (245) structure_matrix_principal -> add_element_matrix .

    ECHO            reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    PRINT           reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    CLASS           reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    INTERFACE       reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    FUNCTION        reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    VARIABLE        reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    INCREASE        reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    DECREMENT       reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    IF              reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    WHILE           reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    FOR             reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    CONST           reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    DEFINE          reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    ARRAY           reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    LEFT_BRACKET    reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    NEW             reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    PHP_END_IDENTIFIER reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    SEMICOLON       reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    COMMA           reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    RIGHT_PAREN     reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    RETURN          reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    BREAK           reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)
    RIGHT_BRACE     reduce using rule 245 (structure_matrix_principal -> add_element_matrix .)


state 39

    (259) structure_object_principal -> object_creation .

    ECHO            reduce using rule 259 (structure_object_principal -> object_creation .)
    PRINT           reduce using rule 259 (structure_object_principal -> object_creation .)
    CLASS           reduce using rule 259 (structure_object_principal -> object_creation .)
    INTERFACE       reduce using rule 259 (structure_object_principal -> object_creation .)
    FUNCTION        reduce using rule 259 (structure_object_principal -> object_creation .)
    VARIABLE        reduce using rule 259 (structure_object_principal -> object_creation .)
    INCREASE        reduce using rule 259 (structure_object_principal -> object_creation .)
    DECREMENT       reduce using rule 259 (structure_object_principal -> object_creation .)
    IF              reduce using rule 259 (structure_object_principal -> object_creation .)
    WHILE           reduce using rule 259 (structure_object_principal -> object_creation .)
    FOR             reduce using rule 259 (structure_object_principal -> object_creation .)
    CONST           reduce using rule 259 (structure_object_principal -> object_creation .)
    DEFINE          reduce using rule 259 (structure_object_principal -> object_creation .)
    ARRAY           reduce using rule 259 (structure_object_principal -> object_creation .)
    LEFT_BRACKET    reduce using rule 259 (structure_object_principal -> object_creation .)
    NEW             reduce using rule 259 (structure_object_principal -> object_creation .)
    PHP_END_IDENTIFIER reduce using rule 259 (structure_object_principal -> object_creation .)
    COMMA           reduce using rule 259 (structure_object_principal -> object_creation .)
    STRING_CONCATENATION reduce using rule 259 (structure_object_principal -> object_creation .)
    SEMICOLON       reduce using rule 259 (structure_object_principal -> object_creation .)
    RIGHT_PAREN     reduce using rule 259 (structure_object_principal -> object_creation .)
    RETURN          reduce using rule 259 (structure_object_principal -> object_creation .)
    BREAK           reduce using rule 259 (structure_object_principal -> object_creation .)
    RIGHT_BRACE     reduce using rule 259 (structure_object_principal -> object_creation .)


state 40

    (260) structure_object_principal -> access_method_object .

    ECHO            reduce using rule 260 (structure_object_principal -> access_method_object .)
    PRINT           reduce using rule 260 (structure_object_principal -> access_method_object .)
    CLASS           reduce using rule 260 (structure_object_principal -> access_method_object .)
    INTERFACE       reduce using rule 260 (structure_object_principal -> access_method_object .)
    FUNCTION        reduce using rule 260 (structure_object_principal -> access_method_object .)
    VARIABLE        reduce using rule 260 (structure_object_principal -> access_method_object .)
    INCREASE        reduce using rule 260 (structure_object_principal -> access_method_object .)
    DECREMENT       reduce using rule 260 (structure_object_principal -> access_method_object .)
    IF              reduce using rule 260 (structure_object_principal -> access_method_object .)
    WHILE           reduce using rule 260 (structure_object_principal -> access_method_object .)
    FOR             reduce using rule 260 (structure_object_principal -> access_method_object .)
    CONST           reduce using rule 260 (structure_object_principal -> access_method_object .)
    DEFINE          reduce using rule 260 (structure_object_principal -> access_method_object .)
    ARRAY           reduce using rule 260 (structure_object_principal -> access_method_object .)
    LEFT_BRACKET    reduce using rule 260 (structure_object_principal -> access_method_object .)
    NEW             reduce using rule 260 (structure_object_principal -> access_method_object .)
    PHP_END_IDENTIFIER reduce using rule 260 (structure_object_principal -> access_method_object .)
    COMMA           reduce using rule 260 (structure_object_principal -> access_method_object .)
    STRING_CONCATENATION reduce using rule 260 (structure_object_principal -> access_method_object .)
    SEMICOLON       reduce using rule 260 (structure_object_principal -> access_method_object .)
    RIGHT_PAREN     reduce using rule 260 (structure_object_principal -> access_method_object .)
    RETURN          reduce using rule 260 (structure_object_principal -> access_method_object .)
    BREAK           reduce using rule 260 (structure_object_principal -> access_method_object .)
    RIGHT_BRACE     reduce using rule 260 (structure_object_principal -> access_method_object .)


state 41

    (15) if_statement -> IF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> IF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement

    LEFT_PAREN      shift and go to state 100


state 42

    (14) while_statement -> WHILE . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_PAREN      shift and go to state 101


state 43

    (31) for_statement -> FOR . LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_PAREN      shift and go to state 102


state 44

    (165) const_syntax -> CONST . IDENTIFIER EQUALS values

    IDENTIFIER      shift and go to state 103


state 45

    (166) define_syntax -> DEFINE . LEFT_PAREN STRING COMMA values RIGHT_PAREN

    LEFT_PAREN      shift and go to state 104


state 46

    (223) indexed_array -> ARRAY . LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> ARRAY . LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> ARRAY . LEFT_BRACKET structure_array RIGHT_BRACKET
    (246) matrix_firstform -> ARRAY . LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON

    LEFT_PAREN      shift and go to state 105
    LEFT_BRACKET    shift and go to state 106


state 47

    (247) matrix_secondform -> LEFT_BRACKET . structure_matrix_second RIGHT_BRACKET SEMICOLON
    (248) structure_matrix_second -> . LEFT_BRACKET values RIGHT_BRACKET
    (249) structure_matrix_second -> . LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second

    LEFT_BRACKET    shift and go to state 107

    structure_matrix_second        shift and go to state 108

state 48

    (237) access_array_stucture -> statement_access_array_element_error .

    ECHO            reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    PRINT           reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    CLASS           reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    INTERFACE       reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    FUNCTION        reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    VARIABLE        reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    INCREASE        reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    DECREMENT       reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    IF              reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    WHILE           reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    FOR             reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    CONST           reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    DEFINE          reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    ARRAY           reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    LEFT_BRACKET    reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    NEW             reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    PHP_END_IDENTIFIER reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    SEMICOLON       reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    COMMA           reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    RIGHT_PAREN     reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    RETURN          reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    BREAK           reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)
    RIGHT_BRACE     reduce using rule 237 (access_array_stucture -> statement_access_array_element_error .)


state 49

    (261) object_creation -> NEW . IDENTIFIER
    (262) object_creation -> NEW . IDENTIFIER LEFT_PAREN params RIGHT_PAREN

    IDENTIFIER      shift and go to state 109


state 50

    (1) inicial_program -> PHP_IDENTIFIER program PHP_END_IDENTIFIER .

    $end            reduce using rule 1 (inicial_program -> PHP_IDENTIFIER program PHP_END_IDENTIFIER .)


state 51

    (2) program -> sentence program .

    PHP_END_IDENTIFIER reduce using rule 2 (program -> sentence program .)


state 52

    (4) sentence -> print_statement SEMICOLON .

    ECHO            reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    PRINT           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    CLASS           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    INTERFACE       reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    FUNCTION        reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    VARIABLE        reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    INCREASE        reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    DECREMENT       reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    IF              reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    WHILE           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    FOR             reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    CONST           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    DEFINE          reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    ARRAY           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    LEFT_BRACKET    reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    NEW             reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    RETURN          reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    BREAK           reduce using rule 4 (sentence -> print_statement SEMICOLON .)
    RIGHT_BRACE     reduce using rule 4 (sentence -> print_statement SEMICOLON .)


state 53

    (5) sentence -> assignment SEMICOLON .

    ECHO            reduce using rule 5 (sentence -> assignment SEMICOLON .)
    PRINT           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    CLASS           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    INTERFACE       reduce using rule 5 (sentence -> assignment SEMICOLON .)
    FUNCTION        reduce using rule 5 (sentence -> assignment SEMICOLON .)
    VARIABLE        reduce using rule 5 (sentence -> assignment SEMICOLON .)
    INCREASE        reduce using rule 5 (sentence -> assignment SEMICOLON .)
    DECREMENT       reduce using rule 5 (sentence -> assignment SEMICOLON .)
    IF              reduce using rule 5 (sentence -> assignment SEMICOLON .)
    WHILE           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    FOR             reduce using rule 5 (sentence -> assignment SEMICOLON .)
    CONST           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    DEFINE          reduce using rule 5 (sentence -> assignment SEMICOLON .)
    ARRAY           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    LEFT_BRACKET    reduce using rule 5 (sentence -> assignment SEMICOLON .)
    NEW             reduce using rule 5 (sentence -> assignment SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 5 (sentence -> assignment SEMICOLON .)
    RETURN          reduce using rule 5 (sentence -> assignment SEMICOLON .)
    BREAK           reduce using rule 5 (sentence -> assignment SEMICOLON .)
    RIGHT_BRACE     reduce using rule 5 (sentence -> assignment SEMICOLON .)


state 54

    (107) print_statement -> ECHO LEFT_PAREN . printable_values RIGHT_PAREN
    (64) boolean_expression -> LEFT_PAREN . conditional RIGHT_PAREN
    (143) factor -> LEFT_PAREN . expression RIGHT_PAREN
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL

    VARIABLE        shift and go to state 114
    error           shift and go to state 61
    INTEGER         shift and go to state 116
    STRING          shift and go to state 115
    FLOAT           shift and go to state 117
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    printable_values               shift and go to state 111
    conditional                    shift and go to state 112
    expression                     shift and go to state 113
    values                         shift and go to state 56
    structure_object_principal     shift and go to state 60
    boolean_expression             shift and go to state 65
    term                           shift and go to state 78
    boolean                        shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    factor                         shift and go to state 81
    access_array_element           shift and go to state 72
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77

state 55

    (109) print_statement -> ECHO printable_values .

    SEMICOLON       reduce using rule 109 (print_statement -> ECHO printable_values .)


state 56

    (111) printable_values -> values .
    (112) printable_values -> values . printable_dividers printable_values
    (120) printable_values -> values . printable_dividers error
    (86) comparation -> values . comparator_operator values
    (87) comparation -> values . comparator_operator expression
    (124) printable_dividers -> . COMMA
    (125) printable_dividers -> . STRING_CONCATENATION
    (97) comparator_operator -> . EQUALS_EQUALS
    (98) comparator_operator -> . IDENTICAL
    (99) comparator_operator -> . NOT_EQUALS
    (100) comparator_operator -> . NOT_IDENTICAL
    (101) comparator_operator -> . SMALL_THAN
    (102) comparator_operator -> . GREATER_THAN
    (103) comparator_operator -> . SMALL_EQUALS_TO
    (104) comparator_operator -> . GREATER_EQUALS_TO
    (105) comparator_operator -> . SPACECRAFT
    (106) comparator_operator -> . NULL_FUSION

    SEMICOLON       reduce using rule 111 (printable_values -> values .)
    RIGHT_PAREN     reduce using rule 111 (printable_values -> values .)
    COMMA           shift and go to state 120
    STRING_CONCATENATION shift and go to state 121
    EQUALS_EQUALS   shift and go to state 122
    IDENTICAL       shift and go to state 123
    NOT_EQUALS      shift and go to state 124
    NOT_IDENTICAL   shift and go to state 125
    SMALL_THAN      shift and go to state 126
    GREATER_THAN    shift and go to state 127
    SMALL_EQUALS_TO shift and go to state 128
    GREATER_EQUALS_TO shift and go to state 129
    SPACECRAFT      shift and go to state 130
    NULL_FUSION     shift and go to state 131

    printable_dividers             shift and go to state 118
    comparator_operator            shift and go to state 119

state 57

    (113) printable_values -> VARIABLE .
    (114) printable_values -> VARIABLE . printable_dividers printable_values
    (115) printable_values -> VARIABLE . STRING_CONCATENATION STRING
    (121) printable_values -> VARIABLE . printable_dividers error
    (62) boolean_expression -> VARIABLE .
    (263) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (264) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (265) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (89) comparation -> VARIABLE . EQUALS_EQUALS values
    (92) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (93) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (96) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (73) true_boolean_types -> VARIABLE .
    (79) false_boolean_types -> VARIABLE .
    (142) factor -> VARIABLE .
    (124) printable_dividers -> . COMMA
    (125) printable_dividers -> . STRING_CONCATENATION

  ! shift/reduce conflict for STRING_CONCATENATION resolved as shift
  ! reduce/reduce conflict for SEMICOLON resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    STRING_CONCATENATION shift and go to state 133
    LOGIC_AND       reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 62 (boolean_expression -> VARIABLE .)
    SEMICOLON       reduce using rule 62 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 62 (boolean_expression -> VARIABLE .)
    MINUS           shift and go to state 92
    EQUALS_EQUALS   shift and go to state 134
    LEFT_BRACKET    shift and go to state 135
    MULTIPLY        reduce using rule 142 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 142 (factor -> VARIABLE .)
    MODULE          reduce using rule 142 (factor -> VARIABLE .)
    POW             reduce using rule 142 (factor -> VARIABLE .)
    PLUS            reduce using rule 142 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 142 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 142 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 142 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 142 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 142 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 142 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 142 (factor -> VARIABLE .)
    COMMA           shift and go to state 120

  ! SEMICOLON       [ reduce using rule 113 (printable_values -> VARIABLE .) ]
  ! RIGHT_PAREN     [ reduce using rule 113 (printable_values -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 62 (boolean_expression -> VARIABLE .) ]
  ! STRING_CONCATENATION [ reduce using rule 62 (boolean_expression -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 142 (factor -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 142 (factor -> VARIABLE .) ]

    printable_dividers             shift and go to state 132

state 58

    (127) values -> STRING .
    (70) true_boolean_types -> STRING .
    (77) false_boolean_types -> STRING .
    (144) factor -> STRING .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 70 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 70 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 70 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 127 (values -> STRING .)
    COMMA           reduce using rule 127 (values -> STRING .)
    STRING_CONCATENATION reduce using rule 127 (values -> STRING .)
    EQUALS_EQUALS   reduce using rule 127 (values -> STRING .)
    IDENTICAL       reduce using rule 127 (values -> STRING .)
    NOT_EQUALS      reduce using rule 127 (values -> STRING .)
    NOT_IDENTICAL   reduce using rule 127 (values -> STRING .)
    SMALL_THAN      reduce using rule 127 (values -> STRING .)
    GREATER_THAN    reduce using rule 127 (values -> STRING .)
    SMALL_EQUALS_TO reduce using rule 127 (values -> STRING .)
    GREATER_EQUALS_TO reduce using rule 127 (values -> STRING .)
    SPACECRAFT      reduce using rule 127 (values -> STRING .)
    NULL_FUSION     reduce using rule 127 (values -> STRING .)
    SEMICOLON       reduce using rule 127 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 127 (values -> STRING .)
    LOGIC_AND       reduce using rule 70 (true_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 70 (true_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 70 (true_boolean_types -> STRING .)
    MULTIPLY        reduce using rule 144 (factor -> STRING .)
    DIVIDE          reduce using rule 144 (factor -> STRING .)
    MODULE          reduce using rule 144 (factor -> STRING .)
    POW             reduce using rule 144 (factor -> STRING .)
    PLUS            reduce using rule 144 (factor -> STRING .)
    MINUS           reduce using rule 144 (factor -> STRING .)

  ! LOGIC_AND       [ reduce using rule 77 (false_boolean_types -> STRING .) ]
  ! LOGIC_OR        [ reduce using rule 77 (false_boolean_types -> STRING .) ]
  ! LOGIC_XOR       [ reduce using rule 77 (false_boolean_types -> STRING .) ]
  ! EQUALS_EQUALS   [ reduce using rule 144 (factor -> STRING .) ]
  ! IDENTICAL       [ reduce using rule 144 (factor -> STRING .) ]
  ! NOT_EQUALS      [ reduce using rule 144 (factor -> STRING .) ]
  ! NOT_IDENTICAL   [ reduce using rule 144 (factor -> STRING .) ]
  ! SMALL_THAN      [ reduce using rule 144 (factor -> STRING .) ]
  ! GREATER_THAN    [ reduce using rule 144 (factor -> STRING .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 144 (factor -> STRING .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 144 (factor -> STRING .) ]
  ! SPACECRAFT      [ reduce using rule 144 (factor -> STRING .) ]
  ! NULL_FUSION     [ reduce using rule 144 (factor -> STRING .) ]


state 59

    (116) printable_values -> conditional .
    (117) printable_values -> conditional . printable_dividers printable_values
    (122) printable_values -> conditional . printable_dividers error
    (124) printable_dividers -> . COMMA
    (125) printable_dividers -> . STRING_CONCATENATION

    SEMICOLON       reduce using rule 116 (printable_values -> conditional .)
    RIGHT_PAREN     reduce using rule 116 (printable_values -> conditional .)
    COMMA           shift and go to state 120
    STRING_CONCATENATION shift and go to state 121

    printable_dividers             shift and go to state 136

state 60

    (118) printable_values -> structure_object_principal .
    (119) printable_values -> structure_object_principal . printable_dividers printable_values
    (123) printable_values -> structure_object_principal . printable_dividers error
    (124) printable_dividers -> . COMMA
    (125) printable_dividers -> . STRING_CONCATENATION

    SEMICOLON       reduce using rule 118 (printable_values -> structure_object_principal .)
    RIGHT_PAREN     reduce using rule 118 (printable_values -> structure_object_principal .)
    COMMA           shift and go to state 120
    STRING_CONCATENATION shift and go to state 121

    printable_dividers             shift and go to state 137

state 61

    (57) conditional -> error . logic_operator boolean_expression
    (58) logic_operator -> . LOGIC_AND
    (59) logic_operator -> . LOGIC_OR
    (60) logic_operator -> . LOGIC_XOR

    LOGIC_AND       shift and go to state 139
    LOGIC_OR        shift and go to state 140
    LOGIC_XOR       shift and go to state 141

    logic_operator                 shift and go to state 138

state 62

    (126) values -> INTEGER .
    (71) true_boolean_types -> INTEGER .
    (78) false_boolean_types -> INTEGER .
    (140) factor -> INTEGER .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 71 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 71 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 71 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 126 (values -> INTEGER .)
    COMMA           reduce using rule 126 (values -> INTEGER .)
    STRING_CONCATENATION reduce using rule 126 (values -> INTEGER .)
    EQUALS_EQUALS   reduce using rule 126 (values -> INTEGER .)
    IDENTICAL       reduce using rule 126 (values -> INTEGER .)
    NOT_EQUALS      reduce using rule 126 (values -> INTEGER .)
    NOT_IDENTICAL   reduce using rule 126 (values -> INTEGER .)
    SMALL_THAN      reduce using rule 126 (values -> INTEGER .)
    GREATER_THAN    reduce using rule 126 (values -> INTEGER .)
    SMALL_EQUALS_TO reduce using rule 126 (values -> INTEGER .)
    GREATER_EQUALS_TO reduce using rule 126 (values -> INTEGER .)
    SPACECRAFT      reduce using rule 126 (values -> INTEGER .)
    NULL_FUSION     reduce using rule 126 (values -> INTEGER .)
    SEMICOLON       reduce using rule 126 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 126 (values -> INTEGER .)
    LOGIC_AND       reduce using rule 71 (true_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 71 (true_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 71 (true_boolean_types -> INTEGER .)
    MULTIPLY        reduce using rule 140 (factor -> INTEGER .)
    DIVIDE          reduce using rule 140 (factor -> INTEGER .)
    MODULE          reduce using rule 140 (factor -> INTEGER .)
    POW             reduce using rule 140 (factor -> INTEGER .)
    PLUS            reduce using rule 140 (factor -> INTEGER .)
    MINUS           reduce using rule 140 (factor -> INTEGER .)

  ! LOGIC_AND       [ reduce using rule 78 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_OR        [ reduce using rule 78 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_XOR       [ reduce using rule 78 (false_boolean_types -> INTEGER .) ]
  ! EQUALS_EQUALS   [ reduce using rule 140 (factor -> INTEGER .) ]
  ! IDENTICAL       [ reduce using rule 140 (factor -> INTEGER .) ]
  ! NOT_EQUALS      [ reduce using rule 140 (factor -> INTEGER .) ]
  ! NOT_IDENTICAL   [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SMALL_THAN      [ reduce using rule 140 (factor -> INTEGER .) ]
  ! GREATER_THAN    [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 140 (factor -> INTEGER .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SPACECRAFT      [ reduce using rule 140 (factor -> INTEGER .) ]
  ! NULL_FUSION     [ reduce using rule 140 (factor -> INTEGER .) ]


state 63

    (128) values -> FLOAT .
    (72) true_boolean_types -> FLOAT .
    (81) false_boolean_types -> FLOAT .
    (141) factor -> FLOAT .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 72 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 72 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 72 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 128 (values -> FLOAT .)
    COMMA           reduce using rule 128 (values -> FLOAT .)
    STRING_CONCATENATION reduce using rule 128 (values -> FLOAT .)
    EQUALS_EQUALS   reduce using rule 128 (values -> FLOAT .)
    IDENTICAL       reduce using rule 128 (values -> FLOAT .)
    NOT_EQUALS      reduce using rule 128 (values -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 128 (values -> FLOAT .)
    SMALL_THAN      reduce using rule 128 (values -> FLOAT .)
    GREATER_THAN    reduce using rule 128 (values -> FLOAT .)
    SMALL_EQUALS_TO reduce using rule 128 (values -> FLOAT .)
    GREATER_EQUALS_TO reduce using rule 128 (values -> FLOAT .)
    SPACECRAFT      reduce using rule 128 (values -> FLOAT .)
    NULL_FUSION     reduce using rule 128 (values -> FLOAT .)
    SEMICOLON       reduce using rule 128 (values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 128 (values -> FLOAT .)
    LOGIC_AND       reduce using rule 72 (true_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 72 (true_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 72 (true_boolean_types -> FLOAT .)
    MULTIPLY        reduce using rule 141 (factor -> FLOAT .)
    DIVIDE          reduce using rule 141 (factor -> FLOAT .)
    MODULE          reduce using rule 141 (factor -> FLOAT .)
    POW             reduce using rule 141 (factor -> FLOAT .)
    PLUS            reduce using rule 141 (factor -> FLOAT .)
    MINUS           reduce using rule 141 (factor -> FLOAT .)

  ! LOGIC_AND       [ reduce using rule 81 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_OR        [ reduce using rule 81 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_XOR       [ reduce using rule 81 (false_boolean_types -> FLOAT .) ]
  ! EQUALS_EQUALS   [ reduce using rule 141 (factor -> FLOAT .) ]
  ! IDENTICAL       [ reduce using rule 141 (factor -> FLOAT .) ]
  ! NOT_EQUALS      [ reduce using rule 141 (factor -> FLOAT .) ]
  ! NOT_IDENTICAL   [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SMALL_THAN      [ reduce using rule 141 (factor -> FLOAT .) ]
  ! GREATER_THAN    [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 141 (factor -> FLOAT .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SPACECRAFT      [ reduce using rule 141 (factor -> FLOAT .) ]
  ! NULL_FUSION     [ reduce using rule 141 (factor -> FLOAT .) ]


state 64

    (129) values -> boolean .

    COMMA           reduce using rule 129 (values -> boolean .)
    STRING_CONCATENATION reduce using rule 129 (values -> boolean .)
    EQUALS_EQUALS   reduce using rule 129 (values -> boolean .)
    IDENTICAL       reduce using rule 129 (values -> boolean .)
    NOT_EQUALS      reduce using rule 129 (values -> boolean .)
    NOT_IDENTICAL   reduce using rule 129 (values -> boolean .)
    SMALL_THAN      reduce using rule 129 (values -> boolean .)
    GREATER_THAN    reduce using rule 129 (values -> boolean .)
    SMALL_EQUALS_TO reduce using rule 129 (values -> boolean .)
    GREATER_EQUALS_TO reduce using rule 129 (values -> boolean .)
    SPACECRAFT      reduce using rule 129 (values -> boolean .)
    NULL_FUSION     reduce using rule 129 (values -> boolean .)
    SEMICOLON       reduce using rule 129 (values -> boolean .)
    RIGHT_PAREN     reduce using rule 129 (values -> boolean .)
    RIGHT_BRACKET   reduce using rule 129 (values -> boolean .)
    LOGIC_AND       reduce using rule 129 (values -> boolean .)
    LOGIC_OR        reduce using rule 129 (values -> boolean .)
    LOGIC_XOR       reduce using rule 129 (values -> boolean .)
    ECHO            reduce using rule 129 (values -> boolean .)
    PRINT           reduce using rule 129 (values -> boolean .)
    CLASS           reduce using rule 129 (values -> boolean .)
    INTERFACE       reduce using rule 129 (values -> boolean .)
    FUNCTION        reduce using rule 129 (values -> boolean .)
    VARIABLE        reduce using rule 129 (values -> boolean .)
    INCREASE        reduce using rule 129 (values -> boolean .)
    DECREMENT       reduce using rule 129 (values -> boolean .)
    IF              reduce using rule 129 (values -> boolean .)
    WHILE           reduce using rule 129 (values -> boolean .)
    FOR             reduce using rule 129 (values -> boolean .)
    CONST           reduce using rule 129 (values -> boolean .)
    DEFINE          reduce using rule 129 (values -> boolean .)
    ARRAY           reduce using rule 129 (values -> boolean .)
    LEFT_BRACKET    reduce using rule 129 (values -> boolean .)
    NEW             reduce using rule 129 (values -> boolean .)
    PHP_END_IDENTIFIER reduce using rule 129 (values -> boolean .)
    RETURN          reduce using rule 129 (values -> boolean .)
    BREAK           reduce using rule 129 (values -> boolean .)
    RIGHT_BRACE     reduce using rule 129 (values -> boolean .)


state 65

    (54) conditional -> boolean_expression .
    (55) conditional -> boolean_expression . logic_operator boolean_expression
    (56) conditional -> boolean_expression . logic_operator error
    (58) logic_operator -> . LOGIC_AND
    (59) logic_operator -> . LOGIC_OR
    (60) logic_operator -> . LOGIC_XOR

  ! shift/reduce conflict for LOGIC_AND resolved as shift
  ! shift/reduce conflict for LOGIC_OR resolved as shift
  ! shift/reduce conflict for LOGIC_XOR resolved as shift
    COMMA           reduce using rule 54 (conditional -> boolean_expression .)
    STRING_CONCATENATION reduce using rule 54 (conditional -> boolean_expression .)
    SEMICOLON       reduce using rule 54 (conditional -> boolean_expression .)
    RIGHT_PAREN     reduce using rule 54 (conditional -> boolean_expression .)
    LOGIC_AND       shift and go to state 139
    LOGIC_OR        shift and go to state 140
    LOGIC_XOR       shift and go to state 141

  ! LOGIC_AND       [ reduce using rule 54 (conditional -> boolean_expression .) ]
  ! LOGIC_OR        [ reduce using rule 54 (conditional -> boolean_expression .) ]
  ! LOGIC_XOR       [ reduce using rule 54 (conditional -> boolean_expression .) ]

    logic_operator                 shift and go to state 142

state 66

    (130) boolean -> TRUE .
    (69) true_boolean_types -> TRUE .

    COMMA           reduce using rule 130 (boolean -> TRUE .)
    STRING_CONCATENATION reduce using rule 130 (boolean -> TRUE .)
    EQUALS_EQUALS   reduce using rule 130 (boolean -> TRUE .)
    IDENTICAL       reduce using rule 130 (boolean -> TRUE .)
    NOT_EQUALS      reduce using rule 130 (boolean -> TRUE .)
    NOT_IDENTICAL   reduce using rule 130 (boolean -> TRUE .)
    SMALL_THAN      reduce using rule 130 (boolean -> TRUE .)
    GREATER_THAN    reduce using rule 130 (boolean -> TRUE .)
    SMALL_EQUALS_TO reduce using rule 130 (boolean -> TRUE .)
    GREATER_EQUALS_TO reduce using rule 130 (boolean -> TRUE .)
    SPACECRAFT      reduce using rule 130 (boolean -> TRUE .)
    NULL_FUSION     reduce using rule 130 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 130 (boolean -> TRUE .)
    RIGHT_PAREN     reduce using rule 130 (boolean -> TRUE .)
    LOGIC_AND       reduce using rule 69 (true_boolean_types -> TRUE .)
    LOGIC_OR        reduce using rule 69 (true_boolean_types -> TRUE .)
    LOGIC_XOR       reduce using rule 69 (true_boolean_types -> TRUE .)


state 67

    (131) boolean -> FALSE .
    (76) false_boolean_types -> FALSE .

    COMMA           reduce using rule 131 (boolean -> FALSE .)
    STRING_CONCATENATION reduce using rule 131 (boolean -> FALSE .)
    EQUALS_EQUALS   reduce using rule 131 (boolean -> FALSE .)
    IDENTICAL       reduce using rule 131 (boolean -> FALSE .)
    NOT_EQUALS      reduce using rule 131 (boolean -> FALSE .)
    NOT_IDENTICAL   reduce using rule 131 (boolean -> FALSE .)
    SMALL_THAN      reduce using rule 131 (boolean -> FALSE .)
    GREATER_THAN    reduce using rule 131 (boolean -> FALSE .)
    SMALL_EQUALS_TO reduce using rule 131 (boolean -> FALSE .)
    GREATER_EQUALS_TO reduce using rule 131 (boolean -> FALSE .)
    SPACECRAFT      reduce using rule 131 (boolean -> FALSE .)
    NULL_FUSION     reduce using rule 131 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 131 (boolean -> FALSE .)
    RIGHT_PAREN     reduce using rule 131 (boolean -> FALSE .)
    LOGIC_AND       reduce using rule 76 (false_boolean_types -> FALSE .)
    LOGIC_OR        reduce using rule 76 (false_boolean_types -> FALSE .)
    LOGIC_XOR       reduce using rule 76 (false_boolean_types -> FALSE .)


state 68

    (61) boolean_expression -> comparation .

    LOGIC_AND       reduce using rule 61 (boolean_expression -> comparation .)
    LOGIC_OR        reduce using rule 61 (boolean_expression -> comparation .)
    LOGIC_XOR       reduce using rule 61 (boolean_expression -> comparation .)
    COMMA           reduce using rule 61 (boolean_expression -> comparation .)
    STRING_CONCATENATION reduce using rule 61 (boolean_expression -> comparation .)
    SEMICOLON       reduce using rule 61 (boolean_expression -> comparation .)
    RIGHT_PAREN     reduce using rule 61 (boolean_expression -> comparation .)


state 69

    (63) boolean_expression -> IDENTIFIER .
    (74) true_boolean_types -> IDENTIFIER .
    (80) false_boolean_types -> IDENTIFIER .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 63 (boolean_expression -> IDENTIFIER .)
    LOGIC_AND       reduce using rule 63 (boolean_expression -> IDENTIFIER .)
    LOGIC_OR        reduce using rule 63 (boolean_expression -> IDENTIFIER .)
    LOGIC_XOR       reduce using rule 63 (boolean_expression -> IDENTIFIER .)
    COMMA           reduce using rule 63 (boolean_expression -> IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 63 (boolean_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 63 (boolean_expression -> IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 63 (boolean_expression -> IDENTIFIER .)

  ! LOGIC_AND       [ reduce using rule 74 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_OR        [ reduce using rule 74 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_XOR       [ reduce using rule 74 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_AND       [ reduce using rule 80 (false_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_OR        [ reduce using rule 80 (false_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_XOR       [ reduce using rule 80 (false_boolean_types -> IDENTIFIER .) ]


state 70

    (65) boolean_expression -> logic_not_sentence .

    LOGIC_AND       reduce using rule 65 (boolean_expression -> logic_not_sentence .)
    LOGIC_OR        reduce using rule 65 (boolean_expression -> logic_not_sentence .)
    LOGIC_XOR       reduce using rule 65 (boolean_expression -> logic_not_sentence .)
    COMMA           reduce using rule 65 (boolean_expression -> logic_not_sentence .)
    STRING_CONCATENATION reduce using rule 65 (boolean_expression -> logic_not_sentence .)
    SEMICOLON       reduce using rule 65 (boolean_expression -> logic_not_sentence .)
    RIGHT_PAREN     reduce using rule 65 (boolean_expression -> logic_not_sentence .)


state 71

    (66) boolean_expression -> logic_expression .

    LOGIC_AND       reduce using rule 66 (boolean_expression -> logic_expression .)
    LOGIC_OR        reduce using rule 66 (boolean_expression -> logic_expression .)
    LOGIC_XOR       reduce using rule 66 (boolean_expression -> logic_expression .)
    COMMA           reduce using rule 66 (boolean_expression -> logic_expression .)
    STRING_CONCATENATION reduce using rule 66 (boolean_expression -> logic_expression .)
    SEMICOLON       reduce using rule 66 (boolean_expression -> logic_expression .)
    RIGHT_PAREN     reduce using rule 66 (boolean_expression -> logic_expression .)


state 72

    (268) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (269) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (270) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element
    (90) comparation -> access_array_element . EQUALS_EQUALS values
    (91) comparation -> access_array_element . EQUALS_EQUALS VARIABLE
    (94) comparation -> access_array_element . EQUALS_EQUALS access_array_element

    MINUS           shift and go to state 96
    EQUALS_EQUALS   shift and go to state 143


state 73

    (88) comparation -> expression . comparator_operator expression
    (97) comparator_operator -> . EQUALS_EQUALS
    (98) comparator_operator -> . IDENTICAL
    (99) comparator_operator -> . NOT_EQUALS
    (100) comparator_operator -> . NOT_IDENTICAL
    (101) comparator_operator -> . SMALL_THAN
    (102) comparator_operator -> . GREATER_THAN
    (103) comparator_operator -> . SMALL_EQUALS_TO
    (104) comparator_operator -> . GREATER_EQUALS_TO
    (105) comparator_operator -> . SPACECRAFT
    (106) comparator_operator -> . NULL_FUSION

    EQUALS_EQUALS   shift and go to state 122
    IDENTICAL       shift and go to state 123
    NOT_EQUALS      shift and go to state 124
    NOT_IDENTICAL   shift and go to state 125
    SMALL_THAN      shift and go to state 126
    GREATER_THAN    shift and go to state 127
    SMALL_EQUALS_TO shift and go to state 128
    GREATER_EQUALS_TO shift and go to state 129
    SPACECRAFT      shift and go to state 130
    NULL_FUSION     shift and go to state 131

    comparator_operator            shift and go to state 144

state 74

    (95) comparation -> access_element_matrix . EQUALS_EQUALS VARIABLE

    EQUALS_EQUALS   shift and go to state 145


state 75

    (84) logic_not_sentence -> LOGIC_NOT . conditional
    (85) logic_not_sentence -> LOGIC_NOT . VARIABLE
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    VARIABLE        shift and go to state 147
    error           shift and go to state 61
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    LOGIC_NOT       shift and go to state 75
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 150
    ARRAY           shift and go to state 79
    FALSE           shift and go to state 151
    NULL            shift and go to state 80

    conditional                    shift and go to state 146
    boolean_expression             shift and go to state 65
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    values                         shift and go to state 148
    expression                     shift and go to state 73
    access_array_element           shift and go to state 149
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    boolean                        shift and go to state 64
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 76

    (67) logic_expression -> true_boolean_types . logic_operator false_boolean_types
    (58) logic_operator -> . LOGIC_AND
    (59) logic_operator -> . LOGIC_OR
    (60) logic_operator -> . LOGIC_XOR

    LOGIC_AND       shift and go to state 139
    LOGIC_OR        shift and go to state 140
    LOGIC_XOR       shift and go to state 141

    logic_operator                 shift and go to state 152

state 77

    (68) logic_expression -> false_boolean_types . logic_operator true_boolean_types
    (58) logic_operator -> . LOGIC_AND
    (59) logic_operator -> . LOGIC_OR
    (60) logic_operator -> . LOGIC_XOR

    LOGIC_AND       shift and go to state 139
    LOGIC_OR        shift and go to state 140
    LOGIC_XOR       shift and go to state 141

    logic_operator                 shift and go to state 153

state 78

    (132) expression -> term .
    (133) expression -> term . PLUS expression
    (134) expression -> term . MINUS expression

    EQUALS_EQUALS   reduce using rule 132 (expression -> term .)
    IDENTICAL       reduce using rule 132 (expression -> term .)
    NOT_EQUALS      reduce using rule 132 (expression -> term .)
    NOT_IDENTICAL   reduce using rule 132 (expression -> term .)
    SMALL_THAN      reduce using rule 132 (expression -> term .)
    GREATER_THAN    reduce using rule 132 (expression -> term .)
    SMALL_EQUALS_TO reduce using rule 132 (expression -> term .)
    GREATER_EQUALS_TO reduce using rule 132 (expression -> term .)
    SPACECRAFT      reduce using rule 132 (expression -> term .)
    NULL_FUSION     reduce using rule 132 (expression -> term .)
    RIGHT_PAREN     reduce using rule 132 (expression -> term .)
    SEMICOLON       reduce using rule 132 (expression -> term .)
    LOGIC_AND       reduce using rule 132 (expression -> term .)
    LOGIC_OR        reduce using rule 132 (expression -> term .)
    LOGIC_XOR       reduce using rule 132 (expression -> term .)
    COMMA           reduce using rule 132 (expression -> term .)
    STRING_CONCATENATION reduce using rule 132 (expression -> term .)
    PLUS            shift and go to state 154
    MINUS           shift and go to state 155


state 79

    (75) true_boolean_types -> ARRAY . LEFT_PAREN values RIGHT_PAREN
    (82) false_boolean_types -> ARRAY . LEFT_PAREN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 156


state 80

    (83) false_boolean_types -> NULL .

    LOGIC_AND       reduce using rule 83 (false_boolean_types -> NULL .)
    LOGIC_OR        reduce using rule 83 (false_boolean_types -> NULL .)
    LOGIC_XOR       reduce using rule 83 (false_boolean_types -> NULL .)
    COMMA           reduce using rule 83 (false_boolean_types -> NULL .)
    STRING_CONCATENATION reduce using rule 83 (false_boolean_types -> NULL .)
    SEMICOLON       reduce using rule 83 (false_boolean_types -> NULL .)
    RIGHT_PAREN     reduce using rule 83 (false_boolean_types -> NULL .)


state 81

    (135) term -> factor .
    (136) term -> factor . MULTIPLY term
    (137) term -> factor . DIVIDE term
    (138) term -> factor . MODULE term
    (139) term -> factor . POW term

    PLUS            reduce using rule 135 (term -> factor .)
    MINUS           reduce using rule 135 (term -> factor .)
    EQUALS_EQUALS   reduce using rule 135 (term -> factor .)
    IDENTICAL       reduce using rule 135 (term -> factor .)
    NOT_EQUALS      reduce using rule 135 (term -> factor .)
    NOT_IDENTICAL   reduce using rule 135 (term -> factor .)
    SMALL_THAN      reduce using rule 135 (term -> factor .)
    GREATER_THAN    reduce using rule 135 (term -> factor .)
    SMALL_EQUALS_TO reduce using rule 135 (term -> factor .)
    GREATER_EQUALS_TO reduce using rule 135 (term -> factor .)
    SPACECRAFT      reduce using rule 135 (term -> factor .)
    NULL_FUSION     reduce using rule 135 (term -> factor .)
    RIGHT_PAREN     reduce using rule 135 (term -> factor .)
    SEMICOLON       reduce using rule 135 (term -> factor .)
    LOGIC_AND       reduce using rule 135 (term -> factor .)
    LOGIC_OR        reduce using rule 135 (term -> factor .)
    LOGIC_XOR       reduce using rule 135 (term -> factor .)
    COMMA           reduce using rule 135 (term -> factor .)
    STRING_CONCATENATION reduce using rule 135 (term -> factor .)
    MULTIPLY        shift and go to state 157
    DIVIDE          shift and go to state 158
    MODULE          shift and go to state 159
    POW             shift and go to state 160


state 82

    (108) print_statement -> PRINT LEFT_PAREN . printable_values RIGHT_PAREN
    (64) boolean_expression -> LEFT_PAREN . conditional RIGHT_PAREN
    (143) factor -> LEFT_PAREN . expression RIGHT_PAREN
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL

    VARIABLE        shift and go to state 114
    error           shift and go to state 61
    INTEGER         shift and go to state 116
    STRING          shift and go to state 115
    FLOAT           shift and go to state 117
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    printable_values               shift and go to state 161
    conditional                    shift and go to state 112
    expression                     shift and go to state 113
    values                         shift and go to state 56
    structure_object_principal     shift and go to state 60
    boolean_expression             shift and go to state 65
    term                           shift and go to state 78
    boolean                        shift and go to state 64
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    factor                         shift and go to state 81
    access_array_element           shift and go to state 72
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77

state 83

    (110) print_statement -> PRINT printable_values .

    SEMICOLON       reduce using rule 110 (print_statement -> PRINT printable_values .)


state 84

    (275) class_declaration -> CLASS IDENTIFIER . class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (280) class_extends_opt -> . EXTENDS IDENTIFIER
    (281) class_extends_opt -> .

    EXTENDS         shift and go to state 163
    IMPLEMENTS      reduce using rule 281 (class_extends_opt -> .)
    LEFT_BRACE      reduce using rule 281 (class_extends_opt -> .)

    class_extends_opt              shift and go to state 162

state 85

    (276) interface_declaration -> INTERFACE IDENTIFIER . class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (280) class_extends_opt -> . EXTENDS IDENTIFIER
    (281) class_extends_opt -> .

    EXTENDS         shift and go to state 163
    LEFT_BRACE      reduce using rule 281 (class_extends_opt -> .)

    class_extends_opt              shift and go to state 164

state 86

    (176) function_declaration -> FUNCTION IDENTIFIER . LEFT_PAREN params RIGHT_PAREN codeblock

    LEFT_PAREN      shift and go to state 165


state 87

    (147) variable_assignment -> VARIABLE assignment_operator . values
    (148) variable_assignment -> VARIABLE assignment_operator . IDENTIFIER
    (149) variable_assignment -> VARIABLE assignment_operator . expression
    (150) variable_assignment -> VARIABLE assignment_operator . function_invocation
    (151) variable_assignment -> VARIABLE assignment_operator . string_special_function
    (152) variable_assignment -> VARIABLE assignment_operator . array_special_function_structure
    (153) variable_assignment -> VARIABLE assignment_operator . types_structure
    (154) variable_assignment -> VARIABLE assignment_operator . input
    (155) variable_assignment -> VARIABLE assignment_operator . special_function
    (156) variable_assignment -> VARIABLE assignment_operator . conditional
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (167) function_invocation -> . IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (168) function_invocation -> . VARIABLE LEFT_PAREN params RIGHT_PAREN
    (186) string_special_function -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN
    (187) string_special_function -> . SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN
    (188) string_special_function -> . SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN
    (195) array_special_function_structure -> . array_special_function
    (196) array_special_function_structure -> . statement_array_special_function_error
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (184) input -> . FEGTS LEFT_PAREN STDIN RIGHT_PAREN
    (185) input -> . READLINE LEFT_PAREN STRING RIGHT_PAREN
    (177) special_function -> . arrow_function
    (178) special_function -> . anonymous_functions
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (197) array_special_function -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (198) array_special_function -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (199) array_special_function -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (200) array_special_function -> . ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN
    (201) array_special_function -> . ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN
    (202) statement_array_special_function_error -> . COUNT LEFT_PAREN error count_param RIGHT_PAREN
    (203) statement_array_special_function_error -> . ARRAY_POP LEFT_PAREN error RIGHT_PAREN
    (204) statement_array_special_function_error -> . ARRAY_SUM LEFT_PAREN error RIGHT_PAREN
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (179) arrow_function -> . FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock
    (180) arrow_function -> . FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement
    (181) arrow_function -> . FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression
    (182) anonymous_functions -> . FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL

    IDENTIFIER      shift and go to state 168
    INTEGER         shift and go to state 116
    STRING          shift and go to state 115
    FLOAT           shift and go to state 117
    VARIABLE        shift and go to state 166
    STRLEN          shift and go to state 177
    SUBSTR          shift and go to state 178
    FEGTS           shift and go to state 181
    READLINE        shift and go to state 182
    error           shift and go to state 61
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    COUNT           shift and go to state 185
    ARRAY_POP       shift and go to state 186
    ARRAY_SUM       shift and go to state 187
    FN              shift and go to state 190
    FUNCTION        shift and go to state 191
    LEFT_PAREN      shift and go to state 110
    ARRAY           shift and go to state 192
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    NULL            shift and go to state 80

    values                         shift and go to state 167
    expression                     shift and go to state 169
    function_invocation            shift and go to state 170
    string_special_function        shift and go to state 171
    array_special_function_structure shift and go to state 172
    types_structure                shift and go to state 173
    input                          shift and go to state 174
    special_function               shift and go to state 175
    conditional                    shift and go to state 176
    boolean                        shift and go to state 64
    term                           shift and go to state 78
    array_special_function         shift and go to state 179
    statement_array_special_function_error shift and go to state 180
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    arrow_function                 shift and go to state 183
    anonymous_functions            shift and go to state 184
    boolean_expression             shift and go to state 65
    factor                         shift and go to state 81
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 188
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 189
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    statement_access_array_element_error shift and go to state 48
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77

state 88

    (157) variable_assignment -> VARIABLE INCREASE .

    SEMICOLON       reduce using rule 157 (variable_assignment -> VARIABLE INCREASE .)


state 89

    (158) variable_assignment -> VARIABLE DECREMENT .

    SEMICOLON       reduce using rule 158 (variable_assignment -> VARIABLE DECREMENT .)


state 90

    (238) access_array_element -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (258) add_element_matrix -> VARIABLE LEFT_BRACKET . RIGHT_BRACKET EQUALS indexed_array
    (240) statement_access_array_element_error -> VARIABLE LEFT_BRACKET . error RIGHT_BRACKET

    INTEGER         shift and go to state 194
    VARIABLE        shift and go to state 193
    RIGHT_BRACKET   shift and go to state 195
    error           shift and go to state 196


state 91

    (161) assignment_operator -> EQUALS .

    IDENTIFIER      reduce using rule 161 (assignment_operator -> EQUALS .)
    INTEGER         reduce using rule 161 (assignment_operator -> EQUALS .)
    STRING          reduce using rule 161 (assignment_operator -> EQUALS .)
    FLOAT           reduce using rule 161 (assignment_operator -> EQUALS .)
    VARIABLE        reduce using rule 161 (assignment_operator -> EQUALS .)
    STRLEN          reduce using rule 161 (assignment_operator -> EQUALS .)
    SUBSTR          reduce using rule 161 (assignment_operator -> EQUALS .)
    FEGTS           reduce using rule 161 (assignment_operator -> EQUALS .)
    READLINE        reduce using rule 161 (assignment_operator -> EQUALS .)
    error           reduce using rule 161 (assignment_operator -> EQUALS .)
    TRUE            reduce using rule 161 (assignment_operator -> EQUALS .)
    FALSE           reduce using rule 161 (assignment_operator -> EQUALS .)
    COUNT           reduce using rule 161 (assignment_operator -> EQUALS .)
    ARRAY_POP       reduce using rule 161 (assignment_operator -> EQUALS .)
    ARRAY_SUM       reduce using rule 161 (assignment_operator -> EQUALS .)
    FN              reduce using rule 161 (assignment_operator -> EQUALS .)
    FUNCTION        reduce using rule 161 (assignment_operator -> EQUALS .)
    LEFT_PAREN      reduce using rule 161 (assignment_operator -> EQUALS .)
    ARRAY           reduce using rule 161 (assignment_operator -> EQUALS .)
    LEFT_BRACKET    reduce using rule 161 (assignment_operator -> EQUALS .)
    NEW             reduce using rule 161 (assignment_operator -> EQUALS .)
    LOGIC_NOT       reduce using rule 161 (assignment_operator -> EQUALS .)
    NULL            reduce using rule 161 (assignment_operator -> EQUALS .)


state 92

    (263) access_method_object -> VARIABLE MINUS . GREATER_THAN function_invocation
    (264) access_method_object -> VARIABLE MINUS . GREATER_THAN accessType
    (265) access_method_object -> VARIABLE MINUS . GREATER_THAN accessType EQUALS values
    (266) access_method_object -> VARIABLE MINUS . GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> VARIABLE MINUS . GREATER_THAN accessType EQUALS access_array_element

    GREATER_THAN    shift and go to state 197


state 93

    (162) assignment_operator -> PLUS_EQUALS .

    IDENTIFIER      reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    INTEGER         reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    STRING          reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    FLOAT           reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    VARIABLE        reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    STRLEN          reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    SUBSTR          reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    FEGTS           reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    READLINE        reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    error           reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    TRUE            reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    FALSE           reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    COUNT           reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    ARRAY_POP       reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    ARRAY_SUM       reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    FN              reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    FUNCTION        reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    LEFT_PAREN      reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    ARRAY           reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    LEFT_BRACKET    reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    NEW             reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    LOGIC_NOT       reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)
    NULL            reduce using rule 162 (assignment_operator -> PLUS_EQUALS .)


state 94

    (159) variable_assignment -> INCREASE VARIABLE .

    SEMICOLON       reduce using rule 159 (variable_assignment -> INCREASE VARIABLE .)


state 95

    (160) variable_assignment -> DECREMENT VARIABLE .

    SEMICOLON       reduce using rule 160 (variable_assignment -> DECREMENT VARIABLE .)


state 96

    (268) access_method_object -> access_array_element MINUS . GREATER_THAN function_invocation
    (269) access_method_object -> access_array_element MINUS . GREATER_THAN accessType
    (270) access_method_object -> access_array_element MINUS . GREATER_THAN accessType EQUALS values
    (271) access_method_object -> access_array_element MINUS . GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> access_array_element MINUS . GREATER_THAN accessType EQUALS access_array_element

    GREATER_THAN    shift and go to state 198


state 97

    (243) structure_matrix_principal -> access_element_matrix SEMICOLON .

    ECHO            reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    PRINT           reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    CLASS           reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    INTERFACE       reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    FUNCTION        reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    VARIABLE        reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    INCREASE        reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    DECREMENT       reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    IF              reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    WHILE           reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    FOR             reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    CONST           reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    DEFINE          reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    ARRAY           reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    LEFT_BRACKET    reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    NEW             reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    SEMICOLON       reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    COMMA           reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    RIGHT_PAREN     reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    RETURN          reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    BREAK           reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)
    RIGHT_BRACE     reduce using rule 243 (structure_matrix_principal -> access_element_matrix SEMICOLON .)


state 98

    (256) modify_element_matrix -> access_element_matrix EQUALS . values
    (257) modify_element_matrix -> access_element_matrix EQUALS . VARIABLE
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 200
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 199
    boolean                        shift and go to state 64

state 99

    (244) structure_matrix_principal -> modify_element_matrix SEMICOLON .

    ECHO            reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    PRINT           reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    CLASS           reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    INTERFACE       reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    FUNCTION        reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    VARIABLE        reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    INCREASE        reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    DECREMENT       reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    IF              reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    WHILE           reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    FOR             reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    CONST           reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    DEFINE          reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    ARRAY           reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    LEFT_BRACKET    reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    NEW             reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    SEMICOLON       reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    COMMA           reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    RIGHT_PAREN     reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    RETURN          reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    BREAK           reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)
    RIGHT_BRACE     reduce using rule 244 (structure_matrix_principal -> modify_element_matrix SEMICOLON .)


state 100

    (15) if_statement -> IF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    error           shift and go to state 61
    VARIABLE        shift and go to state 207
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    LOGIC_NOT       shift and go to state 75
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 150
    ARRAY           shift and go to state 79
    FALSE           shift and go to state 151
    NULL            shift and go to state 80

    conditional                    shift and go to state 206
    boolean_expression             shift and go to state 65
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    values                         shift and go to state 148
    expression                     shift and go to state 73
    access_array_element           shift and go to state 149
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    boolean                        shift and go to state 64
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 101

    (14) while_statement -> WHILE LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    error           shift and go to state 61
    VARIABLE        shift and go to state 207
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    LOGIC_NOT       shift and go to state 75
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 150
    ARRAY           shift and go to state 79
    FALSE           shift and go to state 151
    NULL            shift and go to state 80

    conditional                    shift and go to state 208
    boolean_expression             shift and go to state 65
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    values                         shift and go to state 148
    expression                     shift and go to state 73
    access_array_element           shift and go to state 149
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    boolean                        shift and go to state 64
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 102

    (31) for_statement -> FOR LEFT_PAREN . VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    VARIABLE        shift and go to state 209


state 103

    (165) const_syntax -> CONST IDENTIFIER . EQUALS values

    EQUALS          shift and go to state 210


state 104

    (166) define_syntax -> DEFINE LEFT_PAREN . STRING COMMA values RIGHT_PAREN

    STRING          shift and go to state 211


state 105

    (223) indexed_array -> ARRAY LEFT_PAREN . values_array_indexed RIGHT_PAREN
    (224) associative_array -> ARRAY LEFT_PAREN . structure_array RIGHT_PAREN
    (246) matrix_firstform -> ARRAY LEFT_PAREN . structure_matrix_first RIGHT_PAREN SEMICOLON
    (230) values_array_indexed -> . values
    (231) values_array_indexed -> . values COMMA values_array_indexed
    (232) values_array_indexed -> . object_creation
    (233) values_array_indexed -> . object_creation COMMA values_array_indexed
    (234) values_array_indexed -> . indexed_array
    (235) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (226) structure_array -> . key EQUALS GREATER_THAN values
    (227) structure_array -> . key EQUALS GREATER_THAN values COMMA structure_array
    (250) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (251) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (228) key -> . INTEGER
    (229) key -> . STRING
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    ARRAY           shift and go to state 212
    INTEGER         shift and go to state 220
    STRING          shift and go to state 221
    FLOAT           shift and go to state 203
    NEW             shift and go to state 49
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values_array_indexed           shift and go to state 213
    structure_array                shift and go to state 214
    structure_matrix_first         shift and go to state 215
    values                         shift and go to state 216
    object_creation                shift and go to state 217
    indexed_array                  shift and go to state 218
    key                            shift and go to state 219
    boolean                        shift and go to state 64

state 106

    (225) associative_array -> ARRAY LEFT_BRACKET . structure_array RIGHT_BRACKET
    (226) structure_array -> . key EQUALS GREATER_THAN values
    (227) structure_array -> . key EQUALS GREATER_THAN values COMMA structure_array
    (228) key -> . INTEGER
    (229) key -> . STRING

    INTEGER         shift and go to state 223
    STRING          shift and go to state 224

    structure_array                shift and go to state 222
    key                            shift and go to state 219

state 107

    (248) structure_matrix_second -> LEFT_BRACKET . values RIGHT_BRACKET
    (249) structure_matrix_second -> LEFT_BRACKET . values RIGHT_BRACKET COMMA structure_matrix_second
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 225
    boolean                        shift and go to state 64

state 108

    (247) matrix_secondform -> LEFT_BRACKET structure_matrix_second . RIGHT_BRACKET SEMICOLON

    RIGHT_BRACKET   shift and go to state 226


state 109

    (261) object_creation -> NEW IDENTIFIER .
    (262) object_creation -> NEW IDENTIFIER . LEFT_PAREN params RIGHT_PAREN

    ECHO            reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    PRINT           reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    CLASS           reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    INTERFACE       reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    FUNCTION        reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    VARIABLE        reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    INCREASE        reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    DECREMENT       reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    IF              reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    WHILE           reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    FOR             reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    CONST           reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    DEFINE          reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    ARRAY           reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    LEFT_BRACKET    reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    NEW             reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    PHP_END_IDENTIFIER reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    COMMA           reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    SEMICOLON       reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    RETURN          reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    BREAK           reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    RIGHT_BRACE     reduce using rule 261 (object_creation -> NEW IDENTIFIER .)
    LEFT_PAREN      shift and go to state 227


state 110

    (64) boolean_expression -> LEFT_PAREN . conditional RIGHT_PAREN
    (143) factor -> LEFT_PAREN . expression RIGHT_PAREN
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    error           shift and go to state 61
    VARIABLE        shift and go to state 229
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    LOGIC_NOT       shift and go to state 75
    INTEGER         shift and go to state 230
    FLOAT           shift and go to state 231
    STRING          shift and go to state 232
    TRUE            shift and go to state 150
    ARRAY           shift and go to state 79
    FALSE           shift and go to state 151
    NULL            shift and go to state 80

    conditional                    shift and go to state 228
    expression                     shift and go to state 113
    boolean_expression             shift and go to state 65
    term                           shift and go to state 78
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    factor                         shift and go to state 81
    values                         shift and go to state 148
    access_array_element           shift and go to state 149
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    boolean                        shift and go to state 64

state 111

    (107) print_statement -> ECHO LEFT_PAREN printable_values . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 233


state 112

    (64) boolean_expression -> LEFT_PAREN conditional . RIGHT_PAREN
    (116) printable_values -> conditional .
    (117) printable_values -> conditional . printable_dividers printable_values
    (122) printable_values -> conditional . printable_dividers error
    (124) printable_dividers -> . COMMA
    (125) printable_dividers -> . STRING_CONCATENATION

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 234
    COMMA           shift and go to state 120
    STRING_CONCATENATION shift and go to state 121

  ! RIGHT_PAREN     [ reduce using rule 116 (printable_values -> conditional .) ]

    printable_dividers             shift and go to state 136

state 113

    (143) factor -> LEFT_PAREN expression . RIGHT_PAREN
    (88) comparation -> expression . comparator_operator expression
    (97) comparator_operator -> . EQUALS_EQUALS
    (98) comparator_operator -> . IDENTICAL
    (99) comparator_operator -> . NOT_EQUALS
    (100) comparator_operator -> . NOT_IDENTICAL
    (101) comparator_operator -> . SMALL_THAN
    (102) comparator_operator -> . GREATER_THAN
    (103) comparator_operator -> . SMALL_EQUALS_TO
    (104) comparator_operator -> . GREATER_EQUALS_TO
    (105) comparator_operator -> . SPACECRAFT
    (106) comparator_operator -> . NULL_FUSION

    RIGHT_PAREN     shift and go to state 235
    EQUALS_EQUALS   shift and go to state 122
    IDENTICAL       shift and go to state 123
    NOT_EQUALS      shift and go to state 124
    NOT_IDENTICAL   shift and go to state 125
    SMALL_THAN      shift and go to state 126
    GREATER_THAN    shift and go to state 127
    SMALL_EQUALS_TO shift and go to state 128
    GREATER_EQUALS_TO shift and go to state 129
    SPACECRAFT      shift and go to state 130
    NULL_FUSION     shift and go to state 131

    comparator_operator            shift and go to state 144

state 114

    (113) printable_values -> VARIABLE .
    (114) printable_values -> VARIABLE . printable_dividers printable_values
    (115) printable_values -> VARIABLE . STRING_CONCATENATION STRING
    (121) printable_values -> VARIABLE . printable_dividers error
    (62) boolean_expression -> VARIABLE .
    (263) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (264) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (265) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (89) comparation -> VARIABLE . EQUALS_EQUALS values
    (92) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (93) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (96) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (142) factor -> VARIABLE .
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (73) true_boolean_types -> VARIABLE .
    (79) false_boolean_types -> VARIABLE .
    (124) printable_dividers -> . COMMA
    (125) printable_dividers -> . STRING_CONCATENATION

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for STRING_CONCATENATION resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for COMMA resolved as shift
    STRING_CONCATENATION shift and go to state 133
    LOGIC_AND       reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 62 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 62 (boolean_expression -> VARIABLE .)
    MINUS           shift and go to state 92
    EQUALS_EQUALS   shift and go to state 134
    MULTIPLY        reduce using rule 142 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 142 (factor -> VARIABLE .)
    MODULE          reduce using rule 142 (factor -> VARIABLE .)
    POW             reduce using rule 142 (factor -> VARIABLE .)
    PLUS            reduce using rule 142 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 142 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 142 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 142 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 142 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 142 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 142 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 142 (factor -> VARIABLE .)
    LEFT_BRACKET    shift and go to state 135
    COMMA           shift and go to state 120

  ! RIGHT_PAREN     [ reduce using rule 113 (printable_values -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 62 (boolean_expression -> VARIABLE .) ]
  ! STRING_CONCATENATION [ reduce using rule 62 (boolean_expression -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 142 (factor -> VARIABLE .) ]
  ! RIGHT_PAREN     [ reduce using rule 142 (factor -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 142 (factor -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]

    printable_dividers             shift and go to state 132

state 115

    (127) values -> STRING .
    (144) factor -> STRING .
    (70) true_boolean_types -> STRING .
    (77) false_boolean_types -> STRING .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 70 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 70 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 70 (true_boolean_types -> STRING .)
    COMMA           reduce using rule 127 (values -> STRING .)
    STRING_CONCATENATION reduce using rule 127 (values -> STRING .)
    EQUALS_EQUALS   reduce using rule 127 (values -> STRING .)
    IDENTICAL       reduce using rule 127 (values -> STRING .)
    NOT_EQUALS      reduce using rule 127 (values -> STRING .)
    NOT_IDENTICAL   reduce using rule 127 (values -> STRING .)
    SMALL_THAN      reduce using rule 127 (values -> STRING .)
    GREATER_THAN    reduce using rule 127 (values -> STRING .)
    SMALL_EQUALS_TO reduce using rule 127 (values -> STRING .)
    GREATER_EQUALS_TO reduce using rule 127 (values -> STRING .)
    SPACECRAFT      reduce using rule 127 (values -> STRING .)
    NULL_FUSION     reduce using rule 127 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 127 (values -> STRING .)
    SEMICOLON       reduce using rule 127 (values -> STRING .)
    MULTIPLY        reduce using rule 144 (factor -> STRING .)
    DIVIDE          reduce using rule 144 (factor -> STRING .)
    MODULE          reduce using rule 144 (factor -> STRING .)
    POW             reduce using rule 144 (factor -> STRING .)
    PLUS            reduce using rule 144 (factor -> STRING .)
    MINUS           reduce using rule 144 (factor -> STRING .)
    LOGIC_AND       reduce using rule 70 (true_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 70 (true_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 70 (true_boolean_types -> STRING .)

  ! RIGHT_PAREN     [ reduce using rule 144 (factor -> STRING .) ]
  ! EQUALS_EQUALS   [ reduce using rule 144 (factor -> STRING .) ]
  ! IDENTICAL       [ reduce using rule 144 (factor -> STRING .) ]
  ! NOT_EQUALS      [ reduce using rule 144 (factor -> STRING .) ]
  ! NOT_IDENTICAL   [ reduce using rule 144 (factor -> STRING .) ]
  ! SMALL_THAN      [ reduce using rule 144 (factor -> STRING .) ]
  ! GREATER_THAN    [ reduce using rule 144 (factor -> STRING .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 144 (factor -> STRING .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 144 (factor -> STRING .) ]
  ! SPACECRAFT      [ reduce using rule 144 (factor -> STRING .) ]
  ! NULL_FUSION     [ reduce using rule 144 (factor -> STRING .) ]
  ! SEMICOLON       [ reduce using rule 144 (factor -> STRING .) ]
  ! LOGIC_AND       [ reduce using rule 77 (false_boolean_types -> STRING .) ]
  ! LOGIC_OR        [ reduce using rule 77 (false_boolean_types -> STRING .) ]
  ! LOGIC_XOR       [ reduce using rule 77 (false_boolean_types -> STRING .) ]


state 116

    (126) values -> INTEGER .
    (140) factor -> INTEGER .
    (71) true_boolean_types -> INTEGER .
    (78) false_boolean_types -> INTEGER .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 71 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 71 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 71 (true_boolean_types -> INTEGER .)
    COMMA           reduce using rule 126 (values -> INTEGER .)
    STRING_CONCATENATION reduce using rule 126 (values -> INTEGER .)
    EQUALS_EQUALS   reduce using rule 126 (values -> INTEGER .)
    IDENTICAL       reduce using rule 126 (values -> INTEGER .)
    NOT_EQUALS      reduce using rule 126 (values -> INTEGER .)
    NOT_IDENTICAL   reduce using rule 126 (values -> INTEGER .)
    SMALL_THAN      reduce using rule 126 (values -> INTEGER .)
    GREATER_THAN    reduce using rule 126 (values -> INTEGER .)
    SMALL_EQUALS_TO reduce using rule 126 (values -> INTEGER .)
    GREATER_EQUALS_TO reduce using rule 126 (values -> INTEGER .)
    SPACECRAFT      reduce using rule 126 (values -> INTEGER .)
    NULL_FUSION     reduce using rule 126 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 126 (values -> INTEGER .)
    SEMICOLON       reduce using rule 126 (values -> INTEGER .)
    MULTIPLY        reduce using rule 140 (factor -> INTEGER .)
    DIVIDE          reduce using rule 140 (factor -> INTEGER .)
    MODULE          reduce using rule 140 (factor -> INTEGER .)
    POW             reduce using rule 140 (factor -> INTEGER .)
    PLUS            reduce using rule 140 (factor -> INTEGER .)
    MINUS           reduce using rule 140 (factor -> INTEGER .)
    LOGIC_AND       reduce using rule 71 (true_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 71 (true_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 71 (true_boolean_types -> INTEGER .)

  ! RIGHT_PAREN     [ reduce using rule 140 (factor -> INTEGER .) ]
  ! EQUALS_EQUALS   [ reduce using rule 140 (factor -> INTEGER .) ]
  ! IDENTICAL       [ reduce using rule 140 (factor -> INTEGER .) ]
  ! NOT_EQUALS      [ reduce using rule 140 (factor -> INTEGER .) ]
  ! NOT_IDENTICAL   [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SMALL_THAN      [ reduce using rule 140 (factor -> INTEGER .) ]
  ! GREATER_THAN    [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 140 (factor -> INTEGER .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SPACECRAFT      [ reduce using rule 140 (factor -> INTEGER .) ]
  ! NULL_FUSION     [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 140 (factor -> INTEGER .) ]
  ! LOGIC_AND       [ reduce using rule 78 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_OR        [ reduce using rule 78 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_XOR       [ reduce using rule 78 (false_boolean_types -> INTEGER .) ]


state 117

    (128) values -> FLOAT .
    (141) factor -> FLOAT .
    (72) true_boolean_types -> FLOAT .
    (81) false_boolean_types -> FLOAT .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 72 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 72 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 72 (true_boolean_types -> FLOAT .)
    COMMA           reduce using rule 128 (values -> FLOAT .)
    STRING_CONCATENATION reduce using rule 128 (values -> FLOAT .)
    EQUALS_EQUALS   reduce using rule 128 (values -> FLOAT .)
    IDENTICAL       reduce using rule 128 (values -> FLOAT .)
    NOT_EQUALS      reduce using rule 128 (values -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 128 (values -> FLOAT .)
    SMALL_THAN      reduce using rule 128 (values -> FLOAT .)
    GREATER_THAN    reduce using rule 128 (values -> FLOAT .)
    SMALL_EQUALS_TO reduce using rule 128 (values -> FLOAT .)
    GREATER_EQUALS_TO reduce using rule 128 (values -> FLOAT .)
    SPACECRAFT      reduce using rule 128 (values -> FLOAT .)
    NULL_FUSION     reduce using rule 128 (values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 128 (values -> FLOAT .)
    SEMICOLON       reduce using rule 128 (values -> FLOAT .)
    MULTIPLY        reduce using rule 141 (factor -> FLOAT .)
    DIVIDE          reduce using rule 141 (factor -> FLOAT .)
    MODULE          reduce using rule 141 (factor -> FLOAT .)
    POW             reduce using rule 141 (factor -> FLOAT .)
    PLUS            reduce using rule 141 (factor -> FLOAT .)
    MINUS           reduce using rule 141 (factor -> FLOAT .)
    LOGIC_AND       reduce using rule 72 (true_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 72 (true_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 72 (true_boolean_types -> FLOAT .)

  ! RIGHT_PAREN     [ reduce using rule 141 (factor -> FLOAT .) ]
  ! EQUALS_EQUALS   [ reduce using rule 141 (factor -> FLOAT .) ]
  ! IDENTICAL       [ reduce using rule 141 (factor -> FLOAT .) ]
  ! NOT_EQUALS      [ reduce using rule 141 (factor -> FLOAT .) ]
  ! NOT_IDENTICAL   [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SMALL_THAN      [ reduce using rule 141 (factor -> FLOAT .) ]
  ! GREATER_THAN    [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 141 (factor -> FLOAT .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SPACECRAFT      [ reduce using rule 141 (factor -> FLOAT .) ]
  ! NULL_FUSION     [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SEMICOLON       [ reduce using rule 141 (factor -> FLOAT .) ]
  ! LOGIC_AND       [ reduce using rule 81 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_OR        [ reduce using rule 81 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_XOR       [ reduce using rule 81 (false_boolean_types -> FLOAT .) ]


state 118

    (112) printable_values -> values printable_dividers . printable_values
    (120) printable_values -> values printable_dividers . error
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    error           shift and go to state 237
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    values                         shift and go to state 56
    printable_values               shift and go to state 236
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 64
    boolean_expression             shift and go to state 65
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    access_array_element           shift and go to state 72
    expression                     shift and go to state 73
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 119

    (86) comparation -> values comparator_operator . values
    (87) comparation -> values comparator_operator . expression
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 240
    STRING          shift and go to state 241
    FLOAT           shift and go to state 242
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244

    values                         shift and go to state 238
    expression                     shift and go to state 239
    boolean                        shift and go to state 64
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 120

    (124) printable_dividers -> COMMA .

    error           reduce using rule 124 (printable_dividers -> COMMA .)
    VARIABLE        reduce using rule 124 (printable_dividers -> COMMA .)
    INTEGER         reduce using rule 124 (printable_dividers -> COMMA .)
    STRING          reduce using rule 124 (printable_dividers -> COMMA .)
    FLOAT           reduce using rule 124 (printable_dividers -> COMMA .)
    TRUE            reduce using rule 124 (printable_dividers -> COMMA .)
    FALSE           reduce using rule 124 (printable_dividers -> COMMA .)
    IDENTIFIER      reduce using rule 124 (printable_dividers -> COMMA .)
    LEFT_PAREN      reduce using rule 124 (printable_dividers -> COMMA .)
    NEW             reduce using rule 124 (printable_dividers -> COMMA .)
    LOGIC_NOT       reduce using rule 124 (printable_dividers -> COMMA .)
    ARRAY           reduce using rule 124 (printable_dividers -> COMMA .)
    NULL            reduce using rule 124 (printable_dividers -> COMMA .)


state 121

    (125) printable_dividers -> STRING_CONCATENATION .

    error           reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    VARIABLE        reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    INTEGER         reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    STRING          reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    FLOAT           reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    TRUE            reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    FALSE           reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    IDENTIFIER      reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    LEFT_PAREN      reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    NEW             reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    LOGIC_NOT       reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    ARRAY           reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    NULL            reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)


state 122

    (97) comparator_operator -> EQUALS_EQUALS .

    INTEGER         reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)
    STRING          reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)
    FLOAT           reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)
    TRUE            reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)
    FALSE           reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)
    VARIABLE        reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)
    LEFT_PAREN      reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)
    IDENTIFIER      reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)
    COUNT           reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)
    STRLEN          reduce using rule 97 (comparator_operator -> EQUALS_EQUALS .)


state 123

    (98) comparator_operator -> IDENTICAL .

    INTEGER         reduce using rule 98 (comparator_operator -> IDENTICAL .)
    STRING          reduce using rule 98 (comparator_operator -> IDENTICAL .)
    FLOAT           reduce using rule 98 (comparator_operator -> IDENTICAL .)
    TRUE            reduce using rule 98 (comparator_operator -> IDENTICAL .)
    FALSE           reduce using rule 98 (comparator_operator -> IDENTICAL .)
    VARIABLE        reduce using rule 98 (comparator_operator -> IDENTICAL .)
    LEFT_PAREN      reduce using rule 98 (comparator_operator -> IDENTICAL .)
    IDENTIFIER      reduce using rule 98 (comparator_operator -> IDENTICAL .)
    COUNT           reduce using rule 98 (comparator_operator -> IDENTICAL .)
    STRLEN          reduce using rule 98 (comparator_operator -> IDENTICAL .)


state 124

    (99) comparator_operator -> NOT_EQUALS .

    INTEGER         reduce using rule 99 (comparator_operator -> NOT_EQUALS .)
    STRING          reduce using rule 99 (comparator_operator -> NOT_EQUALS .)
    FLOAT           reduce using rule 99 (comparator_operator -> NOT_EQUALS .)
    TRUE            reduce using rule 99 (comparator_operator -> NOT_EQUALS .)
    FALSE           reduce using rule 99 (comparator_operator -> NOT_EQUALS .)
    VARIABLE        reduce using rule 99 (comparator_operator -> NOT_EQUALS .)
    LEFT_PAREN      reduce using rule 99 (comparator_operator -> NOT_EQUALS .)
    IDENTIFIER      reduce using rule 99 (comparator_operator -> NOT_EQUALS .)
    COUNT           reduce using rule 99 (comparator_operator -> NOT_EQUALS .)
    STRLEN          reduce using rule 99 (comparator_operator -> NOT_EQUALS .)


state 125

    (100) comparator_operator -> NOT_IDENTICAL .

    INTEGER         reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)
    STRING          reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)
    FLOAT           reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)
    TRUE            reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)
    FALSE           reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)
    VARIABLE        reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)
    LEFT_PAREN      reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)
    IDENTIFIER      reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)
    COUNT           reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)
    STRLEN          reduce using rule 100 (comparator_operator -> NOT_IDENTICAL .)


state 126

    (101) comparator_operator -> SMALL_THAN .

    INTEGER         reduce using rule 101 (comparator_operator -> SMALL_THAN .)
    STRING          reduce using rule 101 (comparator_operator -> SMALL_THAN .)
    FLOAT           reduce using rule 101 (comparator_operator -> SMALL_THAN .)
    TRUE            reduce using rule 101 (comparator_operator -> SMALL_THAN .)
    FALSE           reduce using rule 101 (comparator_operator -> SMALL_THAN .)
    VARIABLE        reduce using rule 101 (comparator_operator -> SMALL_THAN .)
    LEFT_PAREN      reduce using rule 101 (comparator_operator -> SMALL_THAN .)
    IDENTIFIER      reduce using rule 101 (comparator_operator -> SMALL_THAN .)
    COUNT           reduce using rule 101 (comparator_operator -> SMALL_THAN .)
    STRLEN          reduce using rule 101 (comparator_operator -> SMALL_THAN .)


state 127

    (102) comparator_operator -> GREATER_THAN .

    INTEGER         reduce using rule 102 (comparator_operator -> GREATER_THAN .)
    STRING          reduce using rule 102 (comparator_operator -> GREATER_THAN .)
    FLOAT           reduce using rule 102 (comparator_operator -> GREATER_THAN .)
    TRUE            reduce using rule 102 (comparator_operator -> GREATER_THAN .)
    FALSE           reduce using rule 102 (comparator_operator -> GREATER_THAN .)
    VARIABLE        reduce using rule 102 (comparator_operator -> GREATER_THAN .)
    LEFT_PAREN      reduce using rule 102 (comparator_operator -> GREATER_THAN .)
    IDENTIFIER      reduce using rule 102 (comparator_operator -> GREATER_THAN .)
    COUNT           reduce using rule 102 (comparator_operator -> GREATER_THAN .)
    STRLEN          reduce using rule 102 (comparator_operator -> GREATER_THAN .)


state 128

    (103) comparator_operator -> SMALL_EQUALS_TO .

    INTEGER         reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)
    STRING          reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)
    FLOAT           reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)
    TRUE            reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)
    FALSE           reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)
    VARIABLE        reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)
    LEFT_PAREN      reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)
    IDENTIFIER      reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)
    COUNT           reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)
    STRLEN          reduce using rule 103 (comparator_operator -> SMALL_EQUALS_TO .)


state 129

    (104) comparator_operator -> GREATER_EQUALS_TO .

    INTEGER         reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)
    STRING          reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)
    FLOAT           reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)
    TRUE            reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)
    FALSE           reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)
    VARIABLE        reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)
    LEFT_PAREN      reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)
    IDENTIFIER      reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)
    COUNT           reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)
    STRLEN          reduce using rule 104 (comparator_operator -> GREATER_EQUALS_TO .)


state 130

    (105) comparator_operator -> SPACECRAFT .

    INTEGER         reduce using rule 105 (comparator_operator -> SPACECRAFT .)
    STRING          reduce using rule 105 (comparator_operator -> SPACECRAFT .)
    FLOAT           reduce using rule 105 (comparator_operator -> SPACECRAFT .)
    TRUE            reduce using rule 105 (comparator_operator -> SPACECRAFT .)
    FALSE           reduce using rule 105 (comparator_operator -> SPACECRAFT .)
    VARIABLE        reduce using rule 105 (comparator_operator -> SPACECRAFT .)
    LEFT_PAREN      reduce using rule 105 (comparator_operator -> SPACECRAFT .)
    IDENTIFIER      reduce using rule 105 (comparator_operator -> SPACECRAFT .)
    COUNT           reduce using rule 105 (comparator_operator -> SPACECRAFT .)
    STRLEN          reduce using rule 105 (comparator_operator -> SPACECRAFT .)


state 131

    (106) comparator_operator -> NULL_FUSION .

    INTEGER         reduce using rule 106 (comparator_operator -> NULL_FUSION .)
    STRING          reduce using rule 106 (comparator_operator -> NULL_FUSION .)
    FLOAT           reduce using rule 106 (comparator_operator -> NULL_FUSION .)
    TRUE            reduce using rule 106 (comparator_operator -> NULL_FUSION .)
    FALSE           reduce using rule 106 (comparator_operator -> NULL_FUSION .)
    VARIABLE        reduce using rule 106 (comparator_operator -> NULL_FUSION .)
    LEFT_PAREN      reduce using rule 106 (comparator_operator -> NULL_FUSION .)
    IDENTIFIER      reduce using rule 106 (comparator_operator -> NULL_FUSION .)
    COUNT           reduce using rule 106 (comparator_operator -> NULL_FUSION .)
    STRLEN          reduce using rule 106 (comparator_operator -> NULL_FUSION .)


state 132

    (114) printable_values -> VARIABLE printable_dividers . printable_values
    (121) printable_values -> VARIABLE printable_dividers . error
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    error           shift and go to state 246
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    printable_values               shift and go to state 245
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 64
    boolean_expression             shift and go to state 65
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    access_array_element           shift and go to state 72
    expression                     shift and go to state 73
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 133

    (115) printable_values -> VARIABLE STRING_CONCATENATION . STRING
    (125) printable_dividers -> STRING_CONCATENATION .

  ! shift/reduce conflict for STRING resolved as shift
    STRING          shift and go to state 247
    error           reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    VARIABLE        reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    INTEGER         reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    FLOAT           reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    TRUE            reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    FALSE           reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    IDENTIFIER      reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    LEFT_PAREN      reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    NEW             reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    LOGIC_NOT       reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    ARRAY           reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)
    NULL            reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .)

  ! STRING          [ reduce using rule 125 (printable_dividers -> STRING_CONCATENATION .) ]


state 134

    (89) comparation -> VARIABLE EQUALS_EQUALS . values
    (92) comparation -> VARIABLE EQUALS_EQUALS . access_array_element
    (93) comparation -> VARIABLE EQUALS_EQUALS . VARIABLE
    (96) comparation -> VARIABLE EQUALS_EQUALS . access_element_matrix
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 248
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 249
    access_array_element           shift and go to state 250
    access_element_matrix          shift and go to state 251
    boolean                        shift and go to state 64

state 135

    (238) access_array_element -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET

    INTEGER         shift and go to state 194
    VARIABLE        shift and go to state 193


state 136

    (117) printable_values -> conditional printable_dividers . printable_values
    (122) printable_values -> conditional printable_dividers . error
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    error           shift and go to state 253
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    conditional                    shift and go to state 59
    printable_values               shift and go to state 252
    values                         shift and go to state 56
    structure_object_principal     shift and go to state 60
    boolean                        shift and go to state 64
    boolean_expression             shift and go to state 65
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    access_array_element           shift and go to state 72
    expression                     shift and go to state 73
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 137

    (119) printable_values -> structure_object_principal printable_dividers . printable_values
    (123) printable_values -> structure_object_principal printable_dividers . error
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    error           shift and go to state 255
    VARIABLE        shift and go to state 57
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    structure_object_principal     shift and go to state 60
    printable_values               shift and go to state 254
    values                         shift and go to state 56
    conditional                    shift and go to state 59
    boolean                        shift and go to state 64
    boolean_expression             shift and go to state 65
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    access_array_element           shift and go to state 72
    expression                     shift and go to state 73
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 138

    (57) conditional -> error logic_operator . boolean_expression
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    VARIABLE        shift and go to state 207
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    LOGIC_NOT       shift and go to state 75
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 150
    ARRAY           shift and go to state 79
    FALSE           shift and go to state 151
    NULL            shift and go to state 80

    boolean_expression             shift and go to state 256
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    values                         shift and go to state 148
    expression                     shift and go to state 73
    access_array_element           shift and go to state 149
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    boolean                        shift and go to state 64
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 139

    (58) logic_operator -> LOGIC_AND .

    VARIABLE        reduce using rule 58 (logic_operator -> LOGIC_AND .)
    IDENTIFIER      reduce using rule 58 (logic_operator -> LOGIC_AND .)
    LEFT_PAREN      reduce using rule 58 (logic_operator -> LOGIC_AND .)
    LOGIC_NOT       reduce using rule 58 (logic_operator -> LOGIC_AND .)
    INTEGER         reduce using rule 58 (logic_operator -> LOGIC_AND .)
    STRING          reduce using rule 58 (logic_operator -> LOGIC_AND .)
    FLOAT           reduce using rule 58 (logic_operator -> LOGIC_AND .)
    TRUE            reduce using rule 58 (logic_operator -> LOGIC_AND .)
    ARRAY           reduce using rule 58 (logic_operator -> LOGIC_AND .)
    FALSE           reduce using rule 58 (logic_operator -> LOGIC_AND .)
    NULL            reduce using rule 58 (logic_operator -> LOGIC_AND .)
    error           reduce using rule 58 (logic_operator -> LOGIC_AND .)


state 140

    (59) logic_operator -> LOGIC_OR .

    VARIABLE        reduce using rule 59 (logic_operator -> LOGIC_OR .)
    IDENTIFIER      reduce using rule 59 (logic_operator -> LOGIC_OR .)
    LEFT_PAREN      reduce using rule 59 (logic_operator -> LOGIC_OR .)
    LOGIC_NOT       reduce using rule 59 (logic_operator -> LOGIC_OR .)
    INTEGER         reduce using rule 59 (logic_operator -> LOGIC_OR .)
    STRING          reduce using rule 59 (logic_operator -> LOGIC_OR .)
    FLOAT           reduce using rule 59 (logic_operator -> LOGIC_OR .)
    TRUE            reduce using rule 59 (logic_operator -> LOGIC_OR .)
    ARRAY           reduce using rule 59 (logic_operator -> LOGIC_OR .)
    FALSE           reduce using rule 59 (logic_operator -> LOGIC_OR .)
    NULL            reduce using rule 59 (logic_operator -> LOGIC_OR .)
    error           reduce using rule 59 (logic_operator -> LOGIC_OR .)


state 141

    (60) logic_operator -> LOGIC_XOR .

    VARIABLE        reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    IDENTIFIER      reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    LEFT_PAREN      reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    LOGIC_NOT       reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    INTEGER         reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    STRING          reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    FLOAT           reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    TRUE            reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    ARRAY           reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    FALSE           reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    NULL            reduce using rule 60 (logic_operator -> LOGIC_XOR .)
    error           reduce using rule 60 (logic_operator -> LOGIC_XOR .)


state 142

    (55) conditional -> boolean_expression logic_operator . boolean_expression
    (56) conditional -> boolean_expression logic_operator . error
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    error           shift and go to state 258
    VARIABLE        shift and go to state 207
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    LOGIC_NOT       shift and go to state 75
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 150
    ARRAY           shift and go to state 79
    FALSE           shift and go to state 151
    NULL            shift and go to state 80

    boolean_expression             shift and go to state 257
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    values                         shift and go to state 148
    expression                     shift and go to state 73
    access_array_element           shift and go to state 149
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    boolean                        shift and go to state 64
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 143

    (90) comparation -> access_array_element EQUALS_EQUALS . values
    (91) comparation -> access_array_element EQUALS_EQUALS . VARIABLE
    (94) comparation -> access_array_element EQUALS_EQUALS . access_array_element
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 261
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    access_array_element           shift and go to state 259
    values                         shift and go to state 260
    boolean                        shift and go to state 64

state 144

    (88) comparation -> expression comparator_operator . expression
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 263
    FLOAT           shift and go to state 264
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244
    STRING          shift and go to state 265

    expression                     shift and go to state 262
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 145

    (95) comparation -> access_element_matrix EQUALS_EQUALS . VARIABLE

    VARIABLE        shift and go to state 266


state 146

    (84) logic_not_sentence -> LOGIC_NOT conditional .

    LOGIC_AND       reduce using rule 84 (logic_not_sentence -> LOGIC_NOT conditional .)
    LOGIC_OR        reduce using rule 84 (logic_not_sentence -> LOGIC_NOT conditional .)
    LOGIC_XOR       reduce using rule 84 (logic_not_sentence -> LOGIC_NOT conditional .)
    COMMA           reduce using rule 84 (logic_not_sentence -> LOGIC_NOT conditional .)
    STRING_CONCATENATION reduce using rule 84 (logic_not_sentence -> LOGIC_NOT conditional .)
    SEMICOLON       reduce using rule 84 (logic_not_sentence -> LOGIC_NOT conditional .)
    RIGHT_PAREN     reduce using rule 84 (logic_not_sentence -> LOGIC_NOT conditional .)


state 147

    (85) logic_not_sentence -> LOGIC_NOT VARIABLE .
    (62) boolean_expression -> VARIABLE .
    (89) comparation -> VARIABLE . EQUALS_EQUALS values
    (92) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (93) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (96) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (73) true_boolean_types -> VARIABLE .
    (79) false_boolean_types -> VARIABLE .
    (142) factor -> VARIABLE .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for STRING_CONCATENATION resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
    LOGIC_AND       reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 62 (boolean_expression -> VARIABLE .)
    COMMA           reduce using rule 62 (boolean_expression -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 62 (boolean_expression -> VARIABLE .)
    SEMICOLON       reduce using rule 62 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 62 (boolean_expression -> VARIABLE .)
    EQUALS_EQUALS   shift and go to state 134
    LEFT_BRACKET    shift and go to state 135
    MULTIPLY        reduce using rule 142 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 142 (factor -> VARIABLE .)
    MODULE          reduce using rule 142 (factor -> VARIABLE .)
    POW             reduce using rule 142 (factor -> VARIABLE .)
    PLUS            reduce using rule 142 (factor -> VARIABLE .)
    MINUS           reduce using rule 142 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 142 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 142 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 142 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 142 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 142 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 142 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 142 (factor -> VARIABLE .)

  ! LOGIC_AND       [ reduce using rule 85 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 85 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 85 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! COMMA           [ reduce using rule 85 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! STRING_CONCATENATION [ reduce using rule 85 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 85 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! RIGHT_PAREN     [ reduce using rule 85 (logic_not_sentence -> LOGIC_NOT VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 142 (factor -> VARIABLE .) ]


state 148

    (86) comparation -> values . comparator_operator values
    (87) comparation -> values . comparator_operator expression
    (97) comparator_operator -> . EQUALS_EQUALS
    (98) comparator_operator -> . IDENTICAL
    (99) comparator_operator -> . NOT_EQUALS
    (100) comparator_operator -> . NOT_IDENTICAL
    (101) comparator_operator -> . SMALL_THAN
    (102) comparator_operator -> . GREATER_THAN
    (103) comparator_operator -> . SMALL_EQUALS_TO
    (104) comparator_operator -> . GREATER_EQUALS_TO
    (105) comparator_operator -> . SPACECRAFT
    (106) comparator_operator -> . NULL_FUSION

    EQUALS_EQUALS   shift and go to state 122
    IDENTICAL       shift and go to state 123
    NOT_EQUALS      shift and go to state 124
    NOT_IDENTICAL   shift and go to state 125
    SMALL_THAN      shift and go to state 126
    GREATER_THAN    shift and go to state 127
    SMALL_EQUALS_TO shift and go to state 128
    GREATER_EQUALS_TO shift and go to state 129
    SPACECRAFT      shift and go to state 130
    NULL_FUSION     shift and go to state 131

    comparator_operator            shift and go to state 119

state 149

    (90) comparation -> access_array_element . EQUALS_EQUALS values
    (91) comparation -> access_array_element . EQUALS_EQUALS VARIABLE
    (94) comparation -> access_array_element . EQUALS_EQUALS access_array_element

    EQUALS_EQUALS   shift and go to state 143


state 150

    (69) true_boolean_types -> TRUE .
    (130) boolean -> TRUE .

    LOGIC_AND       reduce using rule 69 (true_boolean_types -> TRUE .)
    LOGIC_OR        reduce using rule 69 (true_boolean_types -> TRUE .)
    LOGIC_XOR       reduce using rule 69 (true_boolean_types -> TRUE .)
    EQUALS_EQUALS   reduce using rule 130 (boolean -> TRUE .)
    IDENTICAL       reduce using rule 130 (boolean -> TRUE .)
    NOT_EQUALS      reduce using rule 130 (boolean -> TRUE .)
    NOT_IDENTICAL   reduce using rule 130 (boolean -> TRUE .)
    SMALL_THAN      reduce using rule 130 (boolean -> TRUE .)
    GREATER_THAN    reduce using rule 130 (boolean -> TRUE .)
    SMALL_EQUALS_TO reduce using rule 130 (boolean -> TRUE .)
    GREATER_EQUALS_TO reduce using rule 130 (boolean -> TRUE .)
    SPACECRAFT      reduce using rule 130 (boolean -> TRUE .)
    NULL_FUSION     reduce using rule 130 (boolean -> TRUE .)


state 151

    (76) false_boolean_types -> FALSE .
    (131) boolean -> FALSE .

    LOGIC_AND       reduce using rule 76 (false_boolean_types -> FALSE .)
    LOGIC_OR        reduce using rule 76 (false_boolean_types -> FALSE .)
    LOGIC_XOR       reduce using rule 76 (false_boolean_types -> FALSE .)
    EQUALS_EQUALS   reduce using rule 131 (boolean -> FALSE .)
    IDENTICAL       reduce using rule 131 (boolean -> FALSE .)
    NOT_EQUALS      reduce using rule 131 (boolean -> FALSE .)
    NOT_IDENTICAL   reduce using rule 131 (boolean -> FALSE .)
    SMALL_THAN      reduce using rule 131 (boolean -> FALSE .)
    GREATER_THAN    reduce using rule 131 (boolean -> FALSE .)
    SMALL_EQUALS_TO reduce using rule 131 (boolean -> FALSE .)
    GREATER_EQUALS_TO reduce using rule 131 (boolean -> FALSE .)
    SPACECRAFT      reduce using rule 131 (boolean -> FALSE .)
    NULL_FUSION     reduce using rule 131 (boolean -> FALSE .)


state 152

    (67) logic_expression -> true_boolean_types logic_operator . false_boolean_types
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL

    FALSE           shift and go to state 268
    STRING          shift and go to state 269
    INTEGER         shift and go to state 270
    VARIABLE        shift and go to state 271
    IDENTIFIER      shift and go to state 272
    FLOAT           shift and go to state 273
    ARRAY           shift and go to state 274
    NULL            shift and go to state 80

    false_boolean_types            shift and go to state 267

state 153

    (68) logic_expression -> false_boolean_types logic_operator . true_boolean_types
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN

    TRUE            shift and go to state 276
    STRING          shift and go to state 277
    INTEGER         shift and go to state 278
    FLOAT           shift and go to state 279
    VARIABLE        shift and go to state 280
    IDENTIFIER      shift and go to state 281
    ARRAY           shift and go to state 282

    true_boolean_types             shift and go to state 275

state 154

    (133) expression -> term PLUS . expression
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 263
    FLOAT           shift and go to state 264
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244
    STRING          shift and go to state 265

    term                           shift and go to state 78
    expression                     shift and go to state 283
    factor                         shift and go to state 81

state 155

    (134) expression -> term MINUS . expression
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 263
    FLOAT           shift and go to state 264
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244
    STRING          shift and go to state 265

    term                           shift and go to state 78
    expression                     shift and go to state 284
    factor                         shift and go to state 81

state 156

    (75) true_boolean_types -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (82) false_boolean_types -> ARRAY LEFT_PAREN . RIGHT_PAREN
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    RIGHT_PAREN     shift and go to state 286
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 285
    boolean                        shift and go to state 64

state 157

    (136) term -> factor MULTIPLY . term
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 263
    FLOAT           shift and go to state 264
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244
    STRING          shift and go to state 265

    factor                         shift and go to state 81
    term                           shift and go to state 287

state 158

    (137) term -> factor DIVIDE . term
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 263
    FLOAT           shift and go to state 264
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244
    STRING          shift and go to state 265

    factor                         shift and go to state 81
    term                           shift and go to state 288

state 159

    (138) term -> factor MODULE . term
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 263
    FLOAT           shift and go to state 264
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244
    STRING          shift and go to state 265

    factor                         shift and go to state 81
    term                           shift and go to state 289

state 160

    (139) term -> factor POW . term
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 263
    FLOAT           shift and go to state 264
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244
    STRING          shift and go to state 265

    factor                         shift and go to state 81
    term                           shift and go to state 290

state 161

    (108) print_statement -> PRINT LEFT_PAREN printable_values . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 291


state 162

    (275) class_declaration -> CLASS IDENTIFIER class_extends_opt . class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (282) class_implements_opt -> . IMPLEMENTS interface_list
    (283) class_implements_opt -> .

    IMPLEMENTS      shift and go to state 293
    LEFT_BRACE      reduce using rule 283 (class_implements_opt -> .)

    class_implements_opt           shift and go to state 292

state 163

    (280) class_extends_opt -> EXTENDS . IDENTIFIER

    IDENTIFIER      shift and go to state 294


state 164

    (276) interface_declaration -> INTERFACE IDENTIFIER class_extends_opt . LEFT_BRACE interface_body RIGHT_BRACE

    LEFT_BRACE      shift and go to state 295


state 165

    (176) function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN . params RIGHT_PAREN codeblock
    (169) params -> . real_params
    (170) params -> . empty
    (171) real_params -> . VARIABLE
    (172) real_params -> . values
    (173) real_params -> . real_params COMMA VARIABLE
    (174) real_params -> . real_params COMMA values
    (175) empty -> .
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 299
    RIGHT_PAREN     reduce using rule 175 (empty -> .)
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    params                         shift and go to state 296
    real_params                    shift and go to state 297
    empty                          shift and go to state 298
    values                         shift and go to state 300
    boolean                        shift and go to state 64

state 166

    (168) function_invocation -> VARIABLE . LEFT_PAREN params RIGHT_PAREN
    (62) boolean_expression -> VARIABLE .
    (142) factor -> VARIABLE .
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (258) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (263) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (264) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (265) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (89) comparation -> VARIABLE . EQUALS_EQUALS values
    (92) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (93) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (96) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (240) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (73) true_boolean_types -> VARIABLE .
    (79) false_boolean_types -> VARIABLE .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
    LEFT_PAREN      shift and go to state 301
    LOGIC_AND       reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 62 (boolean_expression -> VARIABLE .)
    SEMICOLON       reduce using rule 62 (boolean_expression -> VARIABLE .)
    MULTIPLY        reduce using rule 142 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 142 (factor -> VARIABLE .)
    MODULE          reduce using rule 142 (factor -> VARIABLE .)
    POW             reduce using rule 142 (factor -> VARIABLE .)
    PLUS            reduce using rule 142 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 142 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 142 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 142 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 142 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 142 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 142 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 142 (factor -> VARIABLE .)
    LEFT_BRACKET    shift and go to state 90
    MINUS           shift and go to state 92
    EQUALS_EQUALS   shift and go to state 134

  ! MINUS           [ reduce using rule 142 (factor -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 142 (factor -> VARIABLE .) ]
  ! SEMICOLON       [ reduce using rule 142 (factor -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]


state 167

    (147) variable_assignment -> VARIABLE assignment_operator values .
    (86) comparation -> values . comparator_operator values
    (87) comparation -> values . comparator_operator expression
    (97) comparator_operator -> . EQUALS_EQUALS
    (98) comparator_operator -> . IDENTICAL
    (99) comparator_operator -> . NOT_EQUALS
    (100) comparator_operator -> . NOT_IDENTICAL
    (101) comparator_operator -> . SMALL_THAN
    (102) comparator_operator -> . GREATER_THAN
    (103) comparator_operator -> . SMALL_EQUALS_TO
    (104) comparator_operator -> . GREATER_EQUALS_TO
    (105) comparator_operator -> . SPACECRAFT
    (106) comparator_operator -> . NULL_FUSION

    SEMICOLON       reduce using rule 147 (variable_assignment -> VARIABLE assignment_operator values .)
    EQUALS_EQUALS   shift and go to state 122
    IDENTICAL       shift and go to state 123
    NOT_EQUALS      shift and go to state 124
    NOT_IDENTICAL   shift and go to state 125
    SMALL_THAN      shift and go to state 126
    GREATER_THAN    shift and go to state 127
    SMALL_EQUALS_TO shift and go to state 128
    GREATER_EQUALS_TO shift and go to state 129
    SPACECRAFT      shift and go to state 130
    NULL_FUSION     shift and go to state 131

    comparator_operator            shift and go to state 119

state 168

    (148) variable_assignment -> VARIABLE assignment_operator IDENTIFIER .
    (167) function_invocation -> IDENTIFIER . LEFT_PAREN params RIGHT_PAREN
    (63) boolean_expression -> IDENTIFIER .
    (74) true_boolean_types -> IDENTIFIER .
    (80) false_boolean_types -> IDENTIFIER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 63 (boolean_expression -> IDENTIFIER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 63 (boolean_expression -> IDENTIFIER .)
    LEFT_PAREN      shift and go to state 302
    LOGIC_AND       reduce using rule 63 (boolean_expression -> IDENTIFIER .)
    LOGIC_OR        reduce using rule 63 (boolean_expression -> IDENTIFIER .)
    LOGIC_XOR       reduce using rule 63 (boolean_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 63 (boolean_expression -> IDENTIFIER .)

  ! SEMICOLON       [ reduce using rule 148 (variable_assignment -> VARIABLE assignment_operator IDENTIFIER .) ]
  ! LOGIC_AND       [ reduce using rule 74 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_OR        [ reduce using rule 74 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_XOR       [ reduce using rule 74 (true_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_AND       [ reduce using rule 80 (false_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_OR        [ reduce using rule 80 (false_boolean_types -> IDENTIFIER .) ]
  ! LOGIC_XOR       [ reduce using rule 80 (false_boolean_types -> IDENTIFIER .) ]


state 169

    (149) variable_assignment -> VARIABLE assignment_operator expression .
    (88) comparation -> expression . comparator_operator expression
    (97) comparator_operator -> . EQUALS_EQUALS
    (98) comparator_operator -> . IDENTICAL
    (99) comparator_operator -> . NOT_EQUALS
    (100) comparator_operator -> . NOT_IDENTICAL
    (101) comparator_operator -> . SMALL_THAN
    (102) comparator_operator -> . GREATER_THAN
    (103) comparator_operator -> . SMALL_EQUALS_TO
    (104) comparator_operator -> . GREATER_EQUALS_TO
    (105) comparator_operator -> . SPACECRAFT
    (106) comparator_operator -> . NULL_FUSION

    SEMICOLON       reduce using rule 149 (variable_assignment -> VARIABLE assignment_operator expression .)
    EQUALS_EQUALS   shift and go to state 122
    IDENTICAL       shift and go to state 123
    NOT_EQUALS      shift and go to state 124
    NOT_IDENTICAL   shift and go to state 125
    SMALL_THAN      shift and go to state 126
    GREATER_THAN    shift and go to state 127
    SMALL_EQUALS_TO shift and go to state 128
    GREATER_EQUALS_TO shift and go to state 129
    SPACECRAFT      shift and go to state 130
    NULL_FUSION     shift and go to state 131

    comparator_operator            shift and go to state 144

state 170

    (150) variable_assignment -> VARIABLE assignment_operator function_invocation .

    SEMICOLON       reduce using rule 150 (variable_assignment -> VARIABLE assignment_operator function_invocation .)


state 171

    (151) variable_assignment -> VARIABLE assignment_operator string_special_function .

    SEMICOLON       reduce using rule 151 (variable_assignment -> VARIABLE assignment_operator string_special_function .)


state 172

    (152) variable_assignment -> VARIABLE assignment_operator array_special_function_structure .

    SEMICOLON       reduce using rule 152 (variable_assignment -> VARIABLE assignment_operator array_special_function_structure .)


state 173

    (153) variable_assignment -> VARIABLE assignment_operator types_structure .

    SEMICOLON       reduce using rule 153 (variable_assignment -> VARIABLE assignment_operator types_structure .)


state 174

    (154) variable_assignment -> VARIABLE assignment_operator input .

    SEMICOLON       reduce using rule 154 (variable_assignment -> VARIABLE assignment_operator input .)


state 175

    (155) variable_assignment -> VARIABLE assignment_operator special_function .

    SEMICOLON       reduce using rule 155 (variable_assignment -> VARIABLE assignment_operator special_function .)


state 176

    (156) variable_assignment -> VARIABLE assignment_operator conditional .

    SEMICOLON       reduce using rule 156 (variable_assignment -> VARIABLE assignment_operator conditional .)


state 177

    (186) string_special_function -> STRLEN . LEFT_PAREN string_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 303


state 178

    (187) string_special_function -> SUBSTR . LEFT_PAREN string_param COMMA int_param RIGHT_PAREN
    (188) string_special_function -> SUBSTR . LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 304


state 179

    (195) array_special_function_structure -> array_special_function .

    SEMICOLON       reduce using rule 195 (array_special_function_structure -> array_special_function .)


state 180

    (196) array_special_function_structure -> statement_array_special_function_error .

    SEMICOLON       reduce using rule 196 (array_special_function_structure -> statement_array_special_function_error .)


state 181

    (184) input -> FEGTS . LEFT_PAREN STDIN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 305


state 182

    (185) input -> READLINE . LEFT_PAREN STRING RIGHT_PAREN

    LEFT_PAREN      shift and go to state 306


state 183

    (177) special_function -> arrow_function .

    SEMICOLON       reduce using rule 177 (special_function -> arrow_function .)


state 184

    (178) special_function -> anonymous_functions .

    SEMICOLON       reduce using rule 178 (special_function -> anonymous_functions .)


state 185

    (197) array_special_function -> COUNT . LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (198) array_special_function -> COUNT . LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (199) array_special_function -> COUNT . LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (202) statement_array_special_function_error -> COUNT . LEFT_PAREN error count_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 307


state 186

    (200) array_special_function -> ARRAY_POP . LEFT_PAREN VARIABLE RIGHT_PAREN
    (203) statement_array_special_function_error -> ARRAY_POP . LEFT_PAREN error RIGHT_PAREN

    LEFT_PAREN      shift and go to state 308


state 187

    (201) array_special_function -> ARRAY_SUM . LEFT_PAREN VARIABLE RIGHT_PAREN
    (204) statement_array_special_function_error -> ARRAY_SUM . LEFT_PAREN error RIGHT_PAREN

    LEFT_PAREN      shift and go to state 309


state 188

    (222) structure_array_principal -> access_array_element .
    (236) access_array_stucture -> access_array_element .
    (268) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (269) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (270) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element
    (90) comparation -> access_array_element . EQUALS_EQUALS values
    (91) comparation -> access_array_element . EQUALS_EQUALS VARIABLE
    (94) comparation -> access_array_element . EQUALS_EQUALS access_array_element

  ! reduce/reduce conflict for SEMICOLON resolved using rule 222 (structure_array_principal -> access_array_element .)
    SEMICOLON       reduce using rule 222 (structure_array_principal -> access_array_element .)
    MINUS           shift and go to state 96
    EQUALS_EQUALS   shift and go to state 143

  ! SEMICOLON       [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]


state 189

    (243) structure_matrix_principal -> access_element_matrix . SEMICOLON
    (256) modify_element_matrix -> access_element_matrix . EQUALS values
    (257) modify_element_matrix -> access_element_matrix . EQUALS VARIABLE
    (95) comparation -> access_element_matrix . EQUALS_EQUALS VARIABLE

    SEMICOLON       shift and go to state 97
    EQUALS          shift and go to state 98
    EQUALS_EQUALS   shift and go to state 145


state 190

    (179) arrow_function -> FN . LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock
    (180) arrow_function -> FN . LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement
    (181) arrow_function -> FN . LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression

    LEFT_PAREN      shift and go to state 310


state 191

    (182) anonymous_functions -> FUNCTION . LEFT_PAREN params RIGHT_PAREN codeblock

    LEFT_PAREN      shift and go to state 311


state 192

    (223) indexed_array -> ARRAY . LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> ARRAY . LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> ARRAY . LEFT_BRACKET structure_array RIGHT_BRACKET
    (246) matrix_firstform -> ARRAY . LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (75) true_boolean_types -> ARRAY . LEFT_PAREN values RIGHT_PAREN
    (82) false_boolean_types -> ARRAY . LEFT_PAREN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 312
    LEFT_BRACKET    shift and go to state 106


state 193

    (239) access_array_element -> VARIABLE LEFT_BRACKET VARIABLE . RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE . RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE . RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 313


state 194

    (238) access_array_element -> VARIABLE LEFT_BRACKET INTEGER . RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER . RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER . RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 314


state 195

    (258) add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET . EQUALS indexed_array

    EQUALS          shift and go to state 315


state 196

    (240) statement_access_array_element_error -> VARIABLE LEFT_BRACKET error . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 316


state 197

    (263) access_method_object -> VARIABLE MINUS GREATER_THAN . function_invocation
    (264) access_method_object -> VARIABLE MINUS GREATER_THAN . accessType
    (265) access_method_object -> VARIABLE MINUS GREATER_THAN . accessType EQUALS values
    (266) access_method_object -> VARIABLE MINUS GREATER_THAN . accessType EQUALS VARIABLE
    (267) access_method_object -> VARIABLE MINUS GREATER_THAN . accessType EQUALS access_array_element
    (167) function_invocation -> . IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (168) function_invocation -> . VARIABLE LEFT_PAREN params RIGHT_PAREN
    (273) accessType -> . IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET
    (274) accessType -> . IDENTIFIER

    IDENTIFIER      shift and go to state 320
    VARIABLE        shift and go to state 317

    function_invocation            shift and go to state 318
    accessType                     shift and go to state 319

state 198

    (268) access_method_object -> access_array_element MINUS GREATER_THAN . function_invocation
    (269) access_method_object -> access_array_element MINUS GREATER_THAN . accessType
    (270) access_method_object -> access_array_element MINUS GREATER_THAN . accessType EQUALS values
    (271) access_method_object -> access_array_element MINUS GREATER_THAN . accessType EQUALS VARIABLE
    (272) access_method_object -> access_array_element MINUS GREATER_THAN . accessType EQUALS access_array_element
    (167) function_invocation -> . IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (168) function_invocation -> . VARIABLE LEFT_PAREN params RIGHT_PAREN
    (273) accessType -> . IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET
    (274) accessType -> . IDENTIFIER

    IDENTIFIER      shift and go to state 320
    VARIABLE        shift and go to state 317

    function_invocation            shift and go to state 321
    accessType                     shift and go to state 322

state 199

    (256) modify_element_matrix -> access_element_matrix EQUALS values .

    SEMICOLON       reduce using rule 256 (modify_element_matrix -> access_element_matrix EQUALS values .)


state 200

    (257) modify_element_matrix -> access_element_matrix EQUALS VARIABLE .

    SEMICOLON       reduce using rule 257 (modify_element_matrix -> access_element_matrix EQUALS VARIABLE .)


state 201

    (126) values -> INTEGER .

    SEMICOLON       reduce using rule 126 (values -> INTEGER .)
    RIGHT_BRACKET   reduce using rule 126 (values -> INTEGER .)
    LOGIC_AND       reduce using rule 126 (values -> INTEGER .)
    LOGIC_OR        reduce using rule 126 (values -> INTEGER .)
    LOGIC_XOR       reduce using rule 126 (values -> INTEGER .)
    COMMA           reduce using rule 126 (values -> INTEGER .)
    STRING_CONCATENATION reduce using rule 126 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 126 (values -> INTEGER .)
    ECHO            reduce using rule 126 (values -> INTEGER .)
    PRINT           reduce using rule 126 (values -> INTEGER .)
    CLASS           reduce using rule 126 (values -> INTEGER .)
    INTERFACE       reduce using rule 126 (values -> INTEGER .)
    FUNCTION        reduce using rule 126 (values -> INTEGER .)
    VARIABLE        reduce using rule 126 (values -> INTEGER .)
    INCREASE        reduce using rule 126 (values -> INTEGER .)
    DECREMENT       reduce using rule 126 (values -> INTEGER .)
    IF              reduce using rule 126 (values -> INTEGER .)
    WHILE           reduce using rule 126 (values -> INTEGER .)
    FOR             reduce using rule 126 (values -> INTEGER .)
    CONST           reduce using rule 126 (values -> INTEGER .)
    DEFINE          reduce using rule 126 (values -> INTEGER .)
    ARRAY           reduce using rule 126 (values -> INTEGER .)
    LEFT_BRACKET    reduce using rule 126 (values -> INTEGER .)
    NEW             reduce using rule 126 (values -> INTEGER .)
    PHP_END_IDENTIFIER reduce using rule 126 (values -> INTEGER .)
    RETURN          reduce using rule 126 (values -> INTEGER .)
    BREAK           reduce using rule 126 (values -> INTEGER .)
    RIGHT_BRACE     reduce using rule 126 (values -> INTEGER .)


state 202

    (127) values -> STRING .

    SEMICOLON       reduce using rule 127 (values -> STRING .)
    RIGHT_BRACKET   reduce using rule 127 (values -> STRING .)
    LOGIC_AND       reduce using rule 127 (values -> STRING .)
    LOGIC_OR        reduce using rule 127 (values -> STRING .)
    LOGIC_XOR       reduce using rule 127 (values -> STRING .)
    COMMA           reduce using rule 127 (values -> STRING .)
    STRING_CONCATENATION reduce using rule 127 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 127 (values -> STRING .)
    ECHO            reduce using rule 127 (values -> STRING .)
    PRINT           reduce using rule 127 (values -> STRING .)
    CLASS           reduce using rule 127 (values -> STRING .)
    INTERFACE       reduce using rule 127 (values -> STRING .)
    FUNCTION        reduce using rule 127 (values -> STRING .)
    VARIABLE        reduce using rule 127 (values -> STRING .)
    INCREASE        reduce using rule 127 (values -> STRING .)
    DECREMENT       reduce using rule 127 (values -> STRING .)
    IF              reduce using rule 127 (values -> STRING .)
    WHILE           reduce using rule 127 (values -> STRING .)
    FOR             reduce using rule 127 (values -> STRING .)
    CONST           reduce using rule 127 (values -> STRING .)
    DEFINE          reduce using rule 127 (values -> STRING .)
    ARRAY           reduce using rule 127 (values -> STRING .)
    LEFT_BRACKET    reduce using rule 127 (values -> STRING .)
    NEW             reduce using rule 127 (values -> STRING .)
    PHP_END_IDENTIFIER reduce using rule 127 (values -> STRING .)
    RETURN          reduce using rule 127 (values -> STRING .)
    BREAK           reduce using rule 127 (values -> STRING .)
    RIGHT_BRACE     reduce using rule 127 (values -> STRING .)


state 203

    (128) values -> FLOAT .

    SEMICOLON       reduce using rule 128 (values -> FLOAT .)
    COMMA           reduce using rule 128 (values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 128 (values -> FLOAT .)
    RIGHT_BRACKET   reduce using rule 128 (values -> FLOAT .)
    LOGIC_AND       reduce using rule 128 (values -> FLOAT .)
    LOGIC_OR        reduce using rule 128 (values -> FLOAT .)
    LOGIC_XOR       reduce using rule 128 (values -> FLOAT .)
    STRING_CONCATENATION reduce using rule 128 (values -> FLOAT .)
    ECHO            reduce using rule 128 (values -> FLOAT .)
    PRINT           reduce using rule 128 (values -> FLOAT .)
    CLASS           reduce using rule 128 (values -> FLOAT .)
    INTERFACE       reduce using rule 128 (values -> FLOAT .)
    FUNCTION        reduce using rule 128 (values -> FLOAT .)
    VARIABLE        reduce using rule 128 (values -> FLOAT .)
    INCREASE        reduce using rule 128 (values -> FLOAT .)
    DECREMENT       reduce using rule 128 (values -> FLOAT .)
    IF              reduce using rule 128 (values -> FLOAT .)
    WHILE           reduce using rule 128 (values -> FLOAT .)
    FOR             reduce using rule 128 (values -> FLOAT .)
    CONST           reduce using rule 128 (values -> FLOAT .)
    DEFINE          reduce using rule 128 (values -> FLOAT .)
    ARRAY           reduce using rule 128 (values -> FLOAT .)
    LEFT_BRACKET    reduce using rule 128 (values -> FLOAT .)
    NEW             reduce using rule 128 (values -> FLOAT .)
    PHP_END_IDENTIFIER reduce using rule 128 (values -> FLOAT .)
    RETURN          reduce using rule 128 (values -> FLOAT .)
    BREAK           reduce using rule 128 (values -> FLOAT .)
    RIGHT_BRACE     reduce using rule 128 (values -> FLOAT .)


state 204

    (130) boolean -> TRUE .

    SEMICOLON       reduce using rule 130 (boolean -> TRUE .)
    COMMA           reduce using rule 130 (boolean -> TRUE .)
    RIGHT_PAREN     reduce using rule 130 (boolean -> TRUE .)
    RIGHT_BRACKET   reduce using rule 130 (boolean -> TRUE .)
    LOGIC_AND       reduce using rule 130 (boolean -> TRUE .)
    LOGIC_OR        reduce using rule 130 (boolean -> TRUE .)
    LOGIC_XOR       reduce using rule 130 (boolean -> TRUE .)
    STRING_CONCATENATION reduce using rule 130 (boolean -> TRUE .)
    ECHO            reduce using rule 130 (boolean -> TRUE .)
    PRINT           reduce using rule 130 (boolean -> TRUE .)
    CLASS           reduce using rule 130 (boolean -> TRUE .)
    INTERFACE       reduce using rule 130 (boolean -> TRUE .)
    FUNCTION        reduce using rule 130 (boolean -> TRUE .)
    VARIABLE        reduce using rule 130 (boolean -> TRUE .)
    INCREASE        reduce using rule 130 (boolean -> TRUE .)
    DECREMENT       reduce using rule 130 (boolean -> TRUE .)
    IF              reduce using rule 130 (boolean -> TRUE .)
    WHILE           reduce using rule 130 (boolean -> TRUE .)
    FOR             reduce using rule 130 (boolean -> TRUE .)
    CONST           reduce using rule 130 (boolean -> TRUE .)
    DEFINE          reduce using rule 130 (boolean -> TRUE .)
    ARRAY           reduce using rule 130 (boolean -> TRUE .)
    LEFT_BRACKET    reduce using rule 130 (boolean -> TRUE .)
    NEW             reduce using rule 130 (boolean -> TRUE .)
    PHP_END_IDENTIFIER reduce using rule 130 (boolean -> TRUE .)
    RETURN          reduce using rule 130 (boolean -> TRUE .)
    BREAK           reduce using rule 130 (boolean -> TRUE .)
    RIGHT_BRACE     reduce using rule 130 (boolean -> TRUE .)


state 205

    (131) boolean -> FALSE .

    SEMICOLON       reduce using rule 131 (boolean -> FALSE .)
    COMMA           reduce using rule 131 (boolean -> FALSE .)
    RIGHT_PAREN     reduce using rule 131 (boolean -> FALSE .)
    RIGHT_BRACKET   reduce using rule 131 (boolean -> FALSE .)
    LOGIC_AND       reduce using rule 131 (boolean -> FALSE .)
    LOGIC_OR        reduce using rule 131 (boolean -> FALSE .)
    LOGIC_XOR       reduce using rule 131 (boolean -> FALSE .)
    STRING_CONCATENATION reduce using rule 131 (boolean -> FALSE .)
    ECHO            reduce using rule 131 (boolean -> FALSE .)
    PRINT           reduce using rule 131 (boolean -> FALSE .)
    CLASS           reduce using rule 131 (boolean -> FALSE .)
    INTERFACE       reduce using rule 131 (boolean -> FALSE .)
    FUNCTION        reduce using rule 131 (boolean -> FALSE .)
    VARIABLE        reduce using rule 131 (boolean -> FALSE .)
    INCREASE        reduce using rule 131 (boolean -> FALSE .)
    DECREMENT       reduce using rule 131 (boolean -> FALSE .)
    IF              reduce using rule 131 (boolean -> FALSE .)
    WHILE           reduce using rule 131 (boolean -> FALSE .)
    FOR             reduce using rule 131 (boolean -> FALSE .)
    CONST           reduce using rule 131 (boolean -> FALSE .)
    DEFINE          reduce using rule 131 (boolean -> FALSE .)
    ARRAY           reduce using rule 131 (boolean -> FALSE .)
    LEFT_BRACKET    reduce using rule 131 (boolean -> FALSE .)
    NEW             reduce using rule 131 (boolean -> FALSE .)
    PHP_END_IDENTIFIER reduce using rule 131 (boolean -> FALSE .)
    RETURN          reduce using rule 131 (boolean -> FALSE .)
    BREAK           reduce using rule 131 (boolean -> FALSE .)
    RIGHT_BRACE     reduce using rule 131 (boolean -> FALSE .)


state 206

    (15) if_statement -> IF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement

    RIGHT_PAREN     shift and go to state 323


state 207

    (62) boolean_expression -> VARIABLE .
    (89) comparation -> VARIABLE . EQUALS_EQUALS values
    (92) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (93) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (96) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (73) true_boolean_types -> VARIABLE .
    (79) false_boolean_types -> VARIABLE .
    (142) factor -> VARIABLE .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
    LOGIC_AND       reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 62 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 62 (boolean_expression -> VARIABLE .)
    COMMA           reduce using rule 62 (boolean_expression -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 62 (boolean_expression -> VARIABLE .)
    SEMICOLON       reduce using rule 62 (boolean_expression -> VARIABLE .)
    EQUALS_EQUALS   shift and go to state 134
    LEFT_BRACKET    shift and go to state 135
    MULTIPLY        reduce using rule 142 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 142 (factor -> VARIABLE .)
    MODULE          reduce using rule 142 (factor -> VARIABLE .)
    POW             reduce using rule 142 (factor -> VARIABLE .)
    PLUS            reduce using rule 142 (factor -> VARIABLE .)
    MINUS           reduce using rule 142 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 142 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 142 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 142 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 142 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 142 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 142 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 142 (factor -> VARIABLE .)

  ! LOGIC_AND       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 142 (factor -> VARIABLE .) ]


state 208

    (14) while_statement -> WHILE LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    RIGHT_PAREN     shift and go to state 324


state 209

    (31) for_statement -> FOR LEFT_PAREN VARIABLE . EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    EQUALS          shift and go to state 325


state 210

    (165) const_syntax -> CONST IDENTIFIER EQUALS . values
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 326
    boolean                        shift and go to state 64

state 211

    (166) define_syntax -> DEFINE LEFT_PAREN STRING . COMMA values RIGHT_PAREN

    COMMA           shift and go to state 327


state 212

    (250) structure_matrix_first -> ARRAY . LEFT_PAREN values RIGHT_PAREN
    (251) structure_matrix_first -> ARRAY . LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first
    (223) indexed_array -> ARRAY . LEFT_PAREN values_array_indexed RIGHT_PAREN

    LEFT_PAREN      shift and go to state 328


state 213

    (223) indexed_array -> ARRAY LEFT_PAREN values_array_indexed . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 329


state 214

    (224) associative_array -> ARRAY LEFT_PAREN structure_array . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 330


state 215

    (246) matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first . RIGHT_PAREN SEMICOLON

    RIGHT_PAREN     shift and go to state 331


state 216

    (230) values_array_indexed -> values .
    (231) values_array_indexed -> values . COMMA values_array_indexed

    RIGHT_PAREN     reduce using rule 230 (values_array_indexed -> values .)
    COMMA           shift and go to state 332


state 217

    (232) values_array_indexed -> object_creation .
    (233) values_array_indexed -> object_creation . COMMA values_array_indexed

    RIGHT_PAREN     reduce using rule 232 (values_array_indexed -> object_creation .)
    COMMA           shift and go to state 333


state 218

    (234) values_array_indexed -> indexed_array .
    (235) values_array_indexed -> indexed_array . COMMA values_array_indexed

    RIGHT_PAREN     reduce using rule 234 (values_array_indexed -> indexed_array .)
    COMMA           shift and go to state 334


state 219

    (226) structure_array -> key . EQUALS GREATER_THAN values
    (227) structure_array -> key . EQUALS GREATER_THAN values COMMA structure_array

    EQUALS          shift and go to state 335


state 220

    (126) values -> INTEGER .
    (228) key -> INTEGER .

    COMMA           reduce using rule 126 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 126 (values -> INTEGER .)
    EQUALS          reduce using rule 228 (key -> INTEGER .)


state 221

    (127) values -> STRING .
    (229) key -> STRING .

    COMMA           reduce using rule 127 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 127 (values -> STRING .)
    EQUALS          reduce using rule 229 (key -> STRING .)


state 222

    (225) associative_array -> ARRAY LEFT_BRACKET structure_array . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 336


state 223

    (228) key -> INTEGER .

    EQUALS          reduce using rule 228 (key -> INTEGER .)


state 224

    (229) key -> STRING .

    EQUALS          reduce using rule 229 (key -> STRING .)


state 225

    (248) structure_matrix_second -> LEFT_BRACKET values . RIGHT_BRACKET
    (249) structure_matrix_second -> LEFT_BRACKET values . RIGHT_BRACKET COMMA structure_matrix_second

    RIGHT_BRACKET   shift and go to state 337


state 226

    (247) matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 338


state 227

    (262) object_creation -> NEW IDENTIFIER LEFT_PAREN . params RIGHT_PAREN
    (169) params -> . real_params
    (170) params -> . empty
    (171) real_params -> . VARIABLE
    (172) real_params -> . values
    (173) real_params -> . real_params COMMA VARIABLE
    (174) real_params -> . real_params COMMA values
    (175) empty -> .
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 299
    RIGHT_PAREN     reduce using rule 175 (empty -> .)
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    params                         shift and go to state 339
    real_params                    shift and go to state 297
    empty                          shift and go to state 298
    values                         shift and go to state 300
    boolean                        shift and go to state 64

state 228

    (64) boolean_expression -> LEFT_PAREN conditional . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 234


state 229

    (62) boolean_expression -> VARIABLE .
    (89) comparation -> VARIABLE . EQUALS_EQUALS values
    (92) comparation -> VARIABLE . EQUALS_EQUALS access_array_element
    (93) comparation -> VARIABLE . EQUALS_EQUALS VARIABLE
    (96) comparation -> VARIABLE . EQUALS_EQUALS access_element_matrix
    (142) factor -> VARIABLE .
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (73) true_boolean_types -> VARIABLE .
    (79) false_boolean_types -> VARIABLE .

  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! shift/reduce conflict for EQUALS_EQUALS resolved as shift
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 62 (boolean_expression -> VARIABLE .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_AND       reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_OR        reduce using rule 62 (boolean_expression -> VARIABLE .)
    LOGIC_XOR       reduce using rule 62 (boolean_expression -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 62 (boolean_expression -> VARIABLE .)
    EQUALS_EQUALS   shift and go to state 134
    MULTIPLY        reduce using rule 142 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 142 (factor -> VARIABLE .)
    MODULE          reduce using rule 142 (factor -> VARIABLE .)
    POW             reduce using rule 142 (factor -> VARIABLE .)
    PLUS            reduce using rule 142 (factor -> VARIABLE .)
    MINUS           reduce using rule 142 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 142 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 142 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 142 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 142 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 142 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 142 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 142 (factor -> VARIABLE .)
    LEFT_BRACKET    shift and go to state 135

  ! RIGHT_PAREN     [ reduce using rule 142 (factor -> VARIABLE .) ]
  ! EQUALS_EQUALS   [ reduce using rule 142 (factor -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 73 (true_boolean_types -> VARIABLE .) ]
  ! LOGIC_AND       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_OR        [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]
  ! LOGIC_XOR       [ reduce using rule 79 (false_boolean_types -> VARIABLE .) ]


state 230

    (140) factor -> INTEGER .
    (126) values -> INTEGER .
    (71) true_boolean_types -> INTEGER .
    (78) false_boolean_types -> INTEGER .

  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 71 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 71 (true_boolean_types -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 71 (true_boolean_types -> INTEGER .)
    MULTIPLY        reduce using rule 140 (factor -> INTEGER .)
    DIVIDE          reduce using rule 140 (factor -> INTEGER .)
    MODULE          reduce using rule 140 (factor -> INTEGER .)
    POW             reduce using rule 140 (factor -> INTEGER .)
    PLUS            reduce using rule 140 (factor -> INTEGER .)
    MINUS           reduce using rule 140 (factor -> INTEGER .)
    RIGHT_PAREN     reduce using rule 140 (factor -> INTEGER .)
    EQUALS_EQUALS   reduce using rule 126 (values -> INTEGER .)
    IDENTICAL       reduce using rule 126 (values -> INTEGER .)
    NOT_EQUALS      reduce using rule 126 (values -> INTEGER .)
    NOT_IDENTICAL   reduce using rule 126 (values -> INTEGER .)
    SMALL_THAN      reduce using rule 126 (values -> INTEGER .)
    GREATER_THAN    reduce using rule 126 (values -> INTEGER .)
    SMALL_EQUALS_TO reduce using rule 126 (values -> INTEGER .)
    GREATER_EQUALS_TO reduce using rule 126 (values -> INTEGER .)
    SPACECRAFT      reduce using rule 126 (values -> INTEGER .)
    NULL_FUSION     reduce using rule 126 (values -> INTEGER .)
    LOGIC_AND       reduce using rule 71 (true_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 71 (true_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 71 (true_boolean_types -> INTEGER .)

  ! EQUALS_EQUALS   [ reduce using rule 140 (factor -> INTEGER .) ]
  ! IDENTICAL       [ reduce using rule 140 (factor -> INTEGER .) ]
  ! NOT_EQUALS      [ reduce using rule 140 (factor -> INTEGER .) ]
  ! NOT_IDENTICAL   [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SMALL_THAN      [ reduce using rule 140 (factor -> INTEGER .) ]
  ! GREATER_THAN    [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 140 (factor -> INTEGER .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SPACECRAFT      [ reduce using rule 140 (factor -> INTEGER .) ]
  ! NULL_FUSION     [ reduce using rule 140 (factor -> INTEGER .) ]
  ! LOGIC_AND       [ reduce using rule 78 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_OR        [ reduce using rule 78 (false_boolean_types -> INTEGER .) ]
  ! LOGIC_XOR       [ reduce using rule 78 (false_boolean_types -> INTEGER .) ]


state 231

    (141) factor -> FLOAT .
    (128) values -> FLOAT .
    (72) true_boolean_types -> FLOAT .
    (81) false_boolean_types -> FLOAT .

  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 72 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 72 (true_boolean_types -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 72 (true_boolean_types -> FLOAT .)
    MULTIPLY        reduce using rule 141 (factor -> FLOAT .)
    DIVIDE          reduce using rule 141 (factor -> FLOAT .)
    MODULE          reduce using rule 141 (factor -> FLOAT .)
    POW             reduce using rule 141 (factor -> FLOAT .)
    PLUS            reduce using rule 141 (factor -> FLOAT .)
    MINUS           reduce using rule 141 (factor -> FLOAT .)
    RIGHT_PAREN     reduce using rule 141 (factor -> FLOAT .)
    EQUALS_EQUALS   reduce using rule 128 (values -> FLOAT .)
    IDENTICAL       reduce using rule 128 (values -> FLOAT .)
    NOT_EQUALS      reduce using rule 128 (values -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 128 (values -> FLOAT .)
    SMALL_THAN      reduce using rule 128 (values -> FLOAT .)
    GREATER_THAN    reduce using rule 128 (values -> FLOAT .)
    SMALL_EQUALS_TO reduce using rule 128 (values -> FLOAT .)
    GREATER_EQUALS_TO reduce using rule 128 (values -> FLOAT .)
    SPACECRAFT      reduce using rule 128 (values -> FLOAT .)
    NULL_FUSION     reduce using rule 128 (values -> FLOAT .)
    LOGIC_AND       reduce using rule 72 (true_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 72 (true_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 72 (true_boolean_types -> FLOAT .)

  ! EQUALS_EQUALS   [ reduce using rule 141 (factor -> FLOAT .) ]
  ! IDENTICAL       [ reduce using rule 141 (factor -> FLOAT .) ]
  ! NOT_EQUALS      [ reduce using rule 141 (factor -> FLOAT .) ]
  ! NOT_IDENTICAL   [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SMALL_THAN      [ reduce using rule 141 (factor -> FLOAT .) ]
  ! GREATER_THAN    [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 141 (factor -> FLOAT .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SPACECRAFT      [ reduce using rule 141 (factor -> FLOAT .) ]
  ! NULL_FUSION     [ reduce using rule 141 (factor -> FLOAT .) ]
  ! LOGIC_AND       [ reduce using rule 81 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_OR        [ reduce using rule 81 (false_boolean_types -> FLOAT .) ]
  ! LOGIC_XOR       [ reduce using rule 81 (false_boolean_types -> FLOAT .) ]


state 232

    (144) factor -> STRING .
    (127) values -> STRING .
    (70) true_boolean_types -> STRING .
    (77) false_boolean_types -> STRING .

  ! reduce/reduce conflict for EQUALS_EQUALS resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for IDENTICAL resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for NOT_EQUALS resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for NOT_IDENTICAL resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_THAN resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SMALL_EQUALS_TO resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for GREATER_EQUALS_TO resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SPACECRAFT resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for NULL_FUSION resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for LOGIC_AND resolved using rule 70 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 70 (true_boolean_types -> STRING .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 70 (true_boolean_types -> STRING .)
    MULTIPLY        reduce using rule 144 (factor -> STRING .)
    DIVIDE          reduce using rule 144 (factor -> STRING .)
    MODULE          reduce using rule 144 (factor -> STRING .)
    POW             reduce using rule 144 (factor -> STRING .)
    PLUS            reduce using rule 144 (factor -> STRING .)
    MINUS           reduce using rule 144 (factor -> STRING .)
    RIGHT_PAREN     reduce using rule 144 (factor -> STRING .)
    EQUALS_EQUALS   reduce using rule 127 (values -> STRING .)
    IDENTICAL       reduce using rule 127 (values -> STRING .)
    NOT_EQUALS      reduce using rule 127 (values -> STRING .)
    NOT_IDENTICAL   reduce using rule 127 (values -> STRING .)
    SMALL_THAN      reduce using rule 127 (values -> STRING .)
    GREATER_THAN    reduce using rule 127 (values -> STRING .)
    SMALL_EQUALS_TO reduce using rule 127 (values -> STRING .)
    GREATER_EQUALS_TO reduce using rule 127 (values -> STRING .)
    SPACECRAFT      reduce using rule 127 (values -> STRING .)
    NULL_FUSION     reduce using rule 127 (values -> STRING .)
    LOGIC_AND       reduce using rule 70 (true_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 70 (true_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 70 (true_boolean_types -> STRING .)

  ! EQUALS_EQUALS   [ reduce using rule 144 (factor -> STRING .) ]
  ! IDENTICAL       [ reduce using rule 144 (factor -> STRING .) ]
  ! NOT_EQUALS      [ reduce using rule 144 (factor -> STRING .) ]
  ! NOT_IDENTICAL   [ reduce using rule 144 (factor -> STRING .) ]
  ! SMALL_THAN      [ reduce using rule 144 (factor -> STRING .) ]
  ! GREATER_THAN    [ reduce using rule 144 (factor -> STRING .) ]
  ! SMALL_EQUALS_TO [ reduce using rule 144 (factor -> STRING .) ]
  ! GREATER_EQUALS_TO [ reduce using rule 144 (factor -> STRING .) ]
  ! SPACECRAFT      [ reduce using rule 144 (factor -> STRING .) ]
  ! NULL_FUSION     [ reduce using rule 144 (factor -> STRING .) ]
  ! LOGIC_AND       [ reduce using rule 77 (false_boolean_types -> STRING .) ]
  ! LOGIC_OR        [ reduce using rule 77 (false_boolean_types -> STRING .) ]
  ! LOGIC_XOR       [ reduce using rule 77 (false_boolean_types -> STRING .) ]


state 233

    (107) print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN .

    SEMICOLON       reduce using rule 107 (print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN .)


state 234

    (64) boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .

    LOGIC_AND       reduce using rule 64 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    LOGIC_OR        reduce using rule 64 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    LOGIC_XOR       reduce using rule 64 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    COMMA           reduce using rule 64 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 64 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    SEMICOLON       reduce using rule 64 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 64 (boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN .)


state 235

    (143) factor -> LEFT_PAREN expression RIGHT_PAREN .

    MULTIPLY        reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    DIVIDE          reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    MODULE          reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    POW             reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUALS_EQUALS   reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    IDENTICAL       reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_EQUALS      reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_IDENTICAL   reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    SMALL_THAN      reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_THAN    reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    SMALL_EQUALS_TO reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_EQUALS_TO reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    SPACECRAFT      reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    NULL_FUSION     reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    SEMICOLON       reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    LOGIC_AND       reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    LOGIC_OR        reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    LOGIC_XOR       reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    COMMA           reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 143 (factor -> LEFT_PAREN expression RIGHT_PAREN .)


state 236

    (112) printable_values -> values printable_dividers printable_values .

    SEMICOLON       reduce using rule 112 (printable_values -> values printable_dividers printable_values .)
    RIGHT_PAREN     reduce using rule 112 (printable_values -> values printable_dividers printable_values .)


state 237

    (120) printable_values -> values printable_dividers error .
    (57) conditional -> error . logic_operator boolean_expression
    (58) logic_operator -> . LOGIC_AND
    (59) logic_operator -> . LOGIC_OR
    (60) logic_operator -> . LOGIC_XOR

    SEMICOLON       reduce using rule 120 (printable_values -> values printable_dividers error .)
    RIGHT_PAREN     reduce using rule 120 (printable_values -> values printable_dividers error .)
    LOGIC_AND       shift and go to state 139
    LOGIC_OR        shift and go to state 140
    LOGIC_XOR       shift and go to state 141

    logic_operator                 shift and go to state 138

state 238

    (86) comparation -> values comparator_operator values .

    LOGIC_AND       reduce using rule 86 (comparation -> values comparator_operator values .)
    LOGIC_OR        reduce using rule 86 (comparation -> values comparator_operator values .)
    LOGIC_XOR       reduce using rule 86 (comparation -> values comparator_operator values .)
    COMMA           reduce using rule 86 (comparation -> values comparator_operator values .)
    STRING_CONCATENATION reduce using rule 86 (comparation -> values comparator_operator values .)
    SEMICOLON       reduce using rule 86 (comparation -> values comparator_operator values .)
    RIGHT_PAREN     reduce using rule 86 (comparation -> values comparator_operator values .)


state 239

    (87) comparation -> values comparator_operator expression .

    LOGIC_AND       reduce using rule 87 (comparation -> values comparator_operator expression .)
    LOGIC_OR        reduce using rule 87 (comparation -> values comparator_operator expression .)
    LOGIC_XOR       reduce using rule 87 (comparation -> values comparator_operator expression .)
    COMMA           reduce using rule 87 (comparation -> values comparator_operator expression .)
    STRING_CONCATENATION reduce using rule 87 (comparation -> values comparator_operator expression .)
    SEMICOLON       reduce using rule 87 (comparation -> values comparator_operator expression .)
    RIGHT_PAREN     reduce using rule 87 (comparation -> values comparator_operator expression .)


state 240

    (126) values -> INTEGER .
    (140) factor -> INTEGER .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for STRING_CONCATENATION resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 126 (values -> INTEGER .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 126 (values -> INTEGER .)
    LOGIC_AND       reduce using rule 126 (values -> INTEGER .)
    LOGIC_OR        reduce using rule 126 (values -> INTEGER .)
    LOGIC_XOR       reduce using rule 126 (values -> INTEGER .)
    COMMA           reduce using rule 126 (values -> INTEGER .)
    STRING_CONCATENATION reduce using rule 126 (values -> INTEGER .)
    SEMICOLON       reduce using rule 126 (values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 126 (values -> INTEGER .)
    MULTIPLY        reduce using rule 140 (factor -> INTEGER .)
    DIVIDE          reduce using rule 140 (factor -> INTEGER .)
    MODULE          reduce using rule 140 (factor -> INTEGER .)
    POW             reduce using rule 140 (factor -> INTEGER .)
    PLUS            reduce using rule 140 (factor -> INTEGER .)
    MINUS           reduce using rule 140 (factor -> INTEGER .)

  ! LOGIC_AND       [ reduce using rule 140 (factor -> INTEGER .) ]
  ! LOGIC_OR        [ reduce using rule 140 (factor -> INTEGER .) ]
  ! LOGIC_XOR       [ reduce using rule 140 (factor -> INTEGER .) ]
  ! COMMA           [ reduce using rule 140 (factor -> INTEGER .) ]
  ! STRING_CONCATENATION [ reduce using rule 140 (factor -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 140 (factor -> INTEGER .) ]
  ! RIGHT_PAREN     [ reduce using rule 140 (factor -> INTEGER .) ]


state 241

    (127) values -> STRING .
    (144) factor -> STRING .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for STRING_CONCATENATION resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 127 (values -> STRING .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 127 (values -> STRING .)
    LOGIC_AND       reduce using rule 127 (values -> STRING .)
    LOGIC_OR        reduce using rule 127 (values -> STRING .)
    LOGIC_XOR       reduce using rule 127 (values -> STRING .)
    COMMA           reduce using rule 127 (values -> STRING .)
    STRING_CONCATENATION reduce using rule 127 (values -> STRING .)
    SEMICOLON       reduce using rule 127 (values -> STRING .)
    RIGHT_PAREN     reduce using rule 127 (values -> STRING .)
    MULTIPLY        reduce using rule 144 (factor -> STRING .)
    DIVIDE          reduce using rule 144 (factor -> STRING .)
    MODULE          reduce using rule 144 (factor -> STRING .)
    POW             reduce using rule 144 (factor -> STRING .)
    PLUS            reduce using rule 144 (factor -> STRING .)
    MINUS           reduce using rule 144 (factor -> STRING .)

  ! LOGIC_AND       [ reduce using rule 144 (factor -> STRING .) ]
  ! LOGIC_OR        [ reduce using rule 144 (factor -> STRING .) ]
  ! LOGIC_XOR       [ reduce using rule 144 (factor -> STRING .) ]
  ! COMMA           [ reduce using rule 144 (factor -> STRING .) ]
  ! STRING_CONCATENATION [ reduce using rule 144 (factor -> STRING .) ]
  ! SEMICOLON       [ reduce using rule 144 (factor -> STRING .) ]
  ! RIGHT_PAREN     [ reduce using rule 144 (factor -> STRING .) ]


state 242

    (128) values -> FLOAT .
    (141) factor -> FLOAT .

  ! reduce/reduce conflict for LOGIC_AND resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_OR resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for LOGIC_XOR resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for COMMA resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for STRING_CONCATENATION resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 128 (values -> FLOAT .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 128 (values -> FLOAT .)
    LOGIC_AND       reduce using rule 128 (values -> FLOAT .)
    LOGIC_OR        reduce using rule 128 (values -> FLOAT .)
    LOGIC_XOR       reduce using rule 128 (values -> FLOAT .)
    COMMA           reduce using rule 128 (values -> FLOAT .)
    STRING_CONCATENATION reduce using rule 128 (values -> FLOAT .)
    SEMICOLON       reduce using rule 128 (values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 128 (values -> FLOAT .)
    MULTIPLY        reduce using rule 141 (factor -> FLOAT .)
    DIVIDE          reduce using rule 141 (factor -> FLOAT .)
    MODULE          reduce using rule 141 (factor -> FLOAT .)
    POW             reduce using rule 141 (factor -> FLOAT .)
    PLUS            reduce using rule 141 (factor -> FLOAT .)
    MINUS           reduce using rule 141 (factor -> FLOAT .)

  ! LOGIC_AND       [ reduce using rule 141 (factor -> FLOAT .) ]
  ! LOGIC_OR        [ reduce using rule 141 (factor -> FLOAT .) ]
  ! LOGIC_XOR       [ reduce using rule 141 (factor -> FLOAT .) ]
  ! COMMA           [ reduce using rule 141 (factor -> FLOAT .) ]
  ! STRING_CONCATENATION [ reduce using rule 141 (factor -> FLOAT .) ]
  ! SEMICOLON       [ reduce using rule 141 (factor -> FLOAT .) ]
  ! RIGHT_PAREN     [ reduce using rule 141 (factor -> FLOAT .) ]


state 243

    (142) factor -> VARIABLE .

    MULTIPLY        reduce using rule 142 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 142 (factor -> VARIABLE .)
    MODULE          reduce using rule 142 (factor -> VARIABLE .)
    POW             reduce using rule 142 (factor -> VARIABLE .)
    PLUS            reduce using rule 142 (factor -> VARIABLE .)
    MINUS           reduce using rule 142 (factor -> VARIABLE .)
    LOGIC_AND       reduce using rule 142 (factor -> VARIABLE .)
    LOGIC_OR        reduce using rule 142 (factor -> VARIABLE .)
    LOGIC_XOR       reduce using rule 142 (factor -> VARIABLE .)
    COMMA           reduce using rule 142 (factor -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 142 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 142 (factor -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 142 (factor -> VARIABLE .)
    EQUALS_EQUALS   reduce using rule 142 (factor -> VARIABLE .)
    IDENTICAL       reduce using rule 142 (factor -> VARIABLE .)
    NOT_EQUALS      reduce using rule 142 (factor -> VARIABLE .)
    NOT_IDENTICAL   reduce using rule 142 (factor -> VARIABLE .)
    SMALL_THAN      reduce using rule 142 (factor -> VARIABLE .)
    GREATER_THAN    reduce using rule 142 (factor -> VARIABLE .)
    SMALL_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    GREATER_EQUALS_TO reduce using rule 142 (factor -> VARIABLE .)
    SPACECRAFT      reduce using rule 142 (factor -> VARIABLE .)
    NULL_FUSION     reduce using rule 142 (factor -> VARIABLE .)


state 244

    (143) factor -> LEFT_PAREN . expression RIGHT_PAREN
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 263
    FLOAT           shift and go to state 264
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244
    STRING          shift and go to state 265

    expression                     shift and go to state 340
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 245

    (114) printable_values -> VARIABLE printable_dividers printable_values .

    SEMICOLON       reduce using rule 114 (printable_values -> VARIABLE printable_dividers printable_values .)
    RIGHT_PAREN     reduce using rule 114 (printable_values -> VARIABLE printable_dividers printable_values .)


state 246

    (121) printable_values -> VARIABLE printable_dividers error .
    (57) conditional -> error . logic_operator boolean_expression
    (58) logic_operator -> . LOGIC_AND
    (59) logic_operator -> . LOGIC_OR
    (60) logic_operator -> . LOGIC_XOR

    SEMICOLON       reduce using rule 121 (printable_values -> VARIABLE printable_dividers error .)
    RIGHT_PAREN     reduce using rule 121 (printable_values -> VARIABLE printable_dividers error .)
    LOGIC_AND       shift and go to state 139
    LOGIC_OR        shift and go to state 140
    LOGIC_XOR       shift and go to state 141

    logic_operator                 shift and go to state 138

state 247

    (115) printable_values -> VARIABLE STRING_CONCATENATION STRING .

    SEMICOLON       reduce using rule 115 (printable_values -> VARIABLE STRING_CONCATENATION STRING .)
    RIGHT_PAREN     reduce using rule 115 (printable_values -> VARIABLE STRING_CONCATENATION STRING .)


state 248

    (93) comparation -> VARIABLE EQUALS_EQUALS VARIABLE .
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET

    LOGIC_AND       reduce using rule 93 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    LOGIC_OR        reduce using rule 93 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    LOGIC_XOR       reduce using rule 93 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    COMMA           reduce using rule 93 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 93 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 93 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 93 (comparation -> VARIABLE EQUALS_EQUALS VARIABLE .)
    LEFT_BRACKET    shift and go to state 135


state 249

    (89) comparation -> VARIABLE EQUALS_EQUALS values .

    LOGIC_AND       reduce using rule 89 (comparation -> VARIABLE EQUALS_EQUALS values .)
    LOGIC_OR        reduce using rule 89 (comparation -> VARIABLE EQUALS_EQUALS values .)
    LOGIC_XOR       reduce using rule 89 (comparation -> VARIABLE EQUALS_EQUALS values .)
    COMMA           reduce using rule 89 (comparation -> VARIABLE EQUALS_EQUALS values .)
    STRING_CONCATENATION reduce using rule 89 (comparation -> VARIABLE EQUALS_EQUALS values .)
    SEMICOLON       reduce using rule 89 (comparation -> VARIABLE EQUALS_EQUALS values .)
    RIGHT_PAREN     reduce using rule 89 (comparation -> VARIABLE EQUALS_EQUALS values .)


state 250

    (92) comparation -> VARIABLE EQUALS_EQUALS access_array_element .

    LOGIC_AND       reduce using rule 92 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    LOGIC_OR        reduce using rule 92 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    LOGIC_XOR       reduce using rule 92 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    COMMA           reduce using rule 92 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    STRING_CONCATENATION reduce using rule 92 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    SEMICOLON       reduce using rule 92 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)
    RIGHT_PAREN     reduce using rule 92 (comparation -> VARIABLE EQUALS_EQUALS access_array_element .)


state 251

    (96) comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .

    LOGIC_AND       reduce using rule 96 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    LOGIC_OR        reduce using rule 96 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    LOGIC_XOR       reduce using rule 96 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    COMMA           reduce using rule 96 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    STRING_CONCATENATION reduce using rule 96 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    SEMICOLON       reduce using rule 96 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)
    RIGHT_PAREN     reduce using rule 96 (comparation -> VARIABLE EQUALS_EQUALS access_element_matrix .)


state 252

    (117) printable_values -> conditional printable_dividers printable_values .

    SEMICOLON       reduce using rule 117 (printable_values -> conditional printable_dividers printable_values .)
    RIGHT_PAREN     reduce using rule 117 (printable_values -> conditional printable_dividers printable_values .)


state 253

    (122) printable_values -> conditional printable_dividers error .
    (57) conditional -> error . logic_operator boolean_expression
    (58) logic_operator -> . LOGIC_AND
    (59) logic_operator -> . LOGIC_OR
    (60) logic_operator -> . LOGIC_XOR

    SEMICOLON       reduce using rule 122 (printable_values -> conditional printable_dividers error .)
    RIGHT_PAREN     reduce using rule 122 (printable_values -> conditional printable_dividers error .)
    LOGIC_AND       shift and go to state 139
    LOGIC_OR        shift and go to state 140
    LOGIC_XOR       shift and go to state 141

    logic_operator                 shift and go to state 138

state 254

    (119) printable_values -> structure_object_principal printable_dividers printable_values .

    SEMICOLON       reduce using rule 119 (printable_values -> structure_object_principal printable_dividers printable_values .)
    RIGHT_PAREN     reduce using rule 119 (printable_values -> structure_object_principal printable_dividers printable_values .)


state 255

    (123) printable_values -> structure_object_principal printable_dividers error .
    (57) conditional -> error . logic_operator boolean_expression
    (58) logic_operator -> . LOGIC_AND
    (59) logic_operator -> . LOGIC_OR
    (60) logic_operator -> . LOGIC_XOR

    SEMICOLON       reduce using rule 123 (printable_values -> structure_object_principal printable_dividers error .)
    RIGHT_PAREN     reduce using rule 123 (printable_values -> structure_object_principal printable_dividers error .)
    LOGIC_AND       shift and go to state 139
    LOGIC_OR        shift and go to state 140
    LOGIC_XOR       shift and go to state 141

    logic_operator                 shift and go to state 138

state 256

    (57) conditional -> error logic_operator boolean_expression .

    COMMA           reduce using rule 57 (conditional -> error logic_operator boolean_expression .)
    STRING_CONCATENATION reduce using rule 57 (conditional -> error logic_operator boolean_expression .)
    SEMICOLON       reduce using rule 57 (conditional -> error logic_operator boolean_expression .)
    RIGHT_PAREN     reduce using rule 57 (conditional -> error logic_operator boolean_expression .)
    LOGIC_AND       reduce using rule 57 (conditional -> error logic_operator boolean_expression .)
    LOGIC_OR        reduce using rule 57 (conditional -> error logic_operator boolean_expression .)
    LOGIC_XOR       reduce using rule 57 (conditional -> error logic_operator boolean_expression .)


state 257

    (55) conditional -> boolean_expression logic_operator boolean_expression .

    COMMA           reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    STRING_CONCATENATION reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    SEMICOLON       reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    RIGHT_PAREN     reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    LOGIC_AND       reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    LOGIC_OR        reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)
    LOGIC_XOR       reduce using rule 55 (conditional -> boolean_expression logic_operator boolean_expression .)


state 258

    (56) conditional -> boolean_expression logic_operator error .

    COMMA           reduce using rule 56 (conditional -> boolean_expression logic_operator error .)
    STRING_CONCATENATION reduce using rule 56 (conditional -> boolean_expression logic_operator error .)
    SEMICOLON       reduce using rule 56 (conditional -> boolean_expression logic_operator error .)
    RIGHT_PAREN     reduce using rule 56 (conditional -> boolean_expression logic_operator error .)
    LOGIC_AND       reduce using rule 56 (conditional -> boolean_expression logic_operator error .)
    LOGIC_OR        reduce using rule 56 (conditional -> boolean_expression logic_operator error .)
    LOGIC_XOR       reduce using rule 56 (conditional -> boolean_expression logic_operator error .)


state 259

    (94) comparation -> access_array_element EQUALS_EQUALS access_array_element .

    LOGIC_AND       reduce using rule 94 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    LOGIC_OR        reduce using rule 94 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    LOGIC_XOR       reduce using rule 94 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    COMMA           reduce using rule 94 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    STRING_CONCATENATION reduce using rule 94 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    SEMICOLON       reduce using rule 94 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)
    RIGHT_PAREN     reduce using rule 94 (comparation -> access_array_element EQUALS_EQUALS access_array_element .)


state 260

    (90) comparation -> access_array_element EQUALS_EQUALS values .

    LOGIC_AND       reduce using rule 90 (comparation -> access_array_element EQUALS_EQUALS values .)
    LOGIC_OR        reduce using rule 90 (comparation -> access_array_element EQUALS_EQUALS values .)
    LOGIC_XOR       reduce using rule 90 (comparation -> access_array_element EQUALS_EQUALS values .)
    COMMA           reduce using rule 90 (comparation -> access_array_element EQUALS_EQUALS values .)
    STRING_CONCATENATION reduce using rule 90 (comparation -> access_array_element EQUALS_EQUALS values .)
    SEMICOLON       reduce using rule 90 (comparation -> access_array_element EQUALS_EQUALS values .)
    RIGHT_PAREN     reduce using rule 90 (comparation -> access_array_element EQUALS_EQUALS values .)


state 261

    (91) comparation -> access_array_element EQUALS_EQUALS VARIABLE .
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET

    LOGIC_AND       reduce using rule 91 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    LOGIC_OR        reduce using rule 91 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    LOGIC_XOR       reduce using rule 91 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    COMMA           reduce using rule 91 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 91 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 91 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 91 (comparation -> access_array_element EQUALS_EQUALS VARIABLE .)
    LEFT_BRACKET    shift and go to state 341


state 262

    (88) comparation -> expression comparator_operator expression .

    LOGIC_AND       reduce using rule 88 (comparation -> expression comparator_operator expression .)
    LOGIC_OR        reduce using rule 88 (comparation -> expression comparator_operator expression .)
    LOGIC_XOR       reduce using rule 88 (comparation -> expression comparator_operator expression .)
    COMMA           reduce using rule 88 (comparation -> expression comparator_operator expression .)
    STRING_CONCATENATION reduce using rule 88 (comparation -> expression comparator_operator expression .)
    SEMICOLON       reduce using rule 88 (comparation -> expression comparator_operator expression .)
    RIGHT_PAREN     reduce using rule 88 (comparation -> expression comparator_operator expression .)


state 263

    (140) factor -> INTEGER .

    MULTIPLY        reduce using rule 140 (factor -> INTEGER .)
    DIVIDE          reduce using rule 140 (factor -> INTEGER .)
    MODULE          reduce using rule 140 (factor -> INTEGER .)
    POW             reduce using rule 140 (factor -> INTEGER .)
    PLUS            reduce using rule 140 (factor -> INTEGER .)
    MINUS           reduce using rule 140 (factor -> INTEGER .)
    LOGIC_AND       reduce using rule 140 (factor -> INTEGER .)
    LOGIC_OR        reduce using rule 140 (factor -> INTEGER .)
    LOGIC_XOR       reduce using rule 140 (factor -> INTEGER .)
    COMMA           reduce using rule 140 (factor -> INTEGER .)
    STRING_CONCATENATION reduce using rule 140 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 140 (factor -> INTEGER .)
    RIGHT_PAREN     reduce using rule 140 (factor -> INTEGER .)
    EQUALS_EQUALS   reduce using rule 140 (factor -> INTEGER .)
    IDENTICAL       reduce using rule 140 (factor -> INTEGER .)
    NOT_EQUALS      reduce using rule 140 (factor -> INTEGER .)
    NOT_IDENTICAL   reduce using rule 140 (factor -> INTEGER .)
    SMALL_THAN      reduce using rule 140 (factor -> INTEGER .)
    GREATER_THAN    reduce using rule 140 (factor -> INTEGER .)
    SMALL_EQUALS_TO reduce using rule 140 (factor -> INTEGER .)
    GREATER_EQUALS_TO reduce using rule 140 (factor -> INTEGER .)
    SPACECRAFT      reduce using rule 140 (factor -> INTEGER .)
    NULL_FUSION     reduce using rule 140 (factor -> INTEGER .)


state 264

    (141) factor -> FLOAT .

    MULTIPLY        reduce using rule 141 (factor -> FLOAT .)
    DIVIDE          reduce using rule 141 (factor -> FLOAT .)
    MODULE          reduce using rule 141 (factor -> FLOAT .)
    POW             reduce using rule 141 (factor -> FLOAT .)
    PLUS            reduce using rule 141 (factor -> FLOAT .)
    MINUS           reduce using rule 141 (factor -> FLOAT .)
    LOGIC_AND       reduce using rule 141 (factor -> FLOAT .)
    LOGIC_OR        reduce using rule 141 (factor -> FLOAT .)
    LOGIC_XOR       reduce using rule 141 (factor -> FLOAT .)
    COMMA           reduce using rule 141 (factor -> FLOAT .)
    STRING_CONCATENATION reduce using rule 141 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 141 (factor -> FLOAT .)
    RIGHT_PAREN     reduce using rule 141 (factor -> FLOAT .)
    EQUALS_EQUALS   reduce using rule 141 (factor -> FLOAT .)
    IDENTICAL       reduce using rule 141 (factor -> FLOAT .)
    NOT_EQUALS      reduce using rule 141 (factor -> FLOAT .)
    NOT_IDENTICAL   reduce using rule 141 (factor -> FLOAT .)
    SMALL_THAN      reduce using rule 141 (factor -> FLOAT .)
    GREATER_THAN    reduce using rule 141 (factor -> FLOAT .)
    SMALL_EQUALS_TO reduce using rule 141 (factor -> FLOAT .)
    GREATER_EQUALS_TO reduce using rule 141 (factor -> FLOAT .)
    SPACECRAFT      reduce using rule 141 (factor -> FLOAT .)
    NULL_FUSION     reduce using rule 141 (factor -> FLOAT .)


state 265

    (144) factor -> STRING .

    MULTIPLY        reduce using rule 144 (factor -> STRING .)
    DIVIDE          reduce using rule 144 (factor -> STRING .)
    MODULE          reduce using rule 144 (factor -> STRING .)
    POW             reduce using rule 144 (factor -> STRING .)
    PLUS            reduce using rule 144 (factor -> STRING .)
    MINUS           reduce using rule 144 (factor -> STRING .)
    LOGIC_AND       reduce using rule 144 (factor -> STRING .)
    LOGIC_OR        reduce using rule 144 (factor -> STRING .)
    LOGIC_XOR       reduce using rule 144 (factor -> STRING .)
    COMMA           reduce using rule 144 (factor -> STRING .)
    STRING_CONCATENATION reduce using rule 144 (factor -> STRING .)
    SEMICOLON       reduce using rule 144 (factor -> STRING .)
    RIGHT_PAREN     reduce using rule 144 (factor -> STRING .)
    EQUALS_EQUALS   reduce using rule 144 (factor -> STRING .)
    IDENTICAL       reduce using rule 144 (factor -> STRING .)
    NOT_EQUALS      reduce using rule 144 (factor -> STRING .)
    NOT_IDENTICAL   reduce using rule 144 (factor -> STRING .)
    SMALL_THAN      reduce using rule 144 (factor -> STRING .)
    GREATER_THAN    reduce using rule 144 (factor -> STRING .)
    SMALL_EQUALS_TO reduce using rule 144 (factor -> STRING .)
    GREATER_EQUALS_TO reduce using rule 144 (factor -> STRING .)
    SPACECRAFT      reduce using rule 144 (factor -> STRING .)
    NULL_FUSION     reduce using rule 144 (factor -> STRING .)


state 266

    (95) comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .

    LOGIC_AND       reduce using rule 95 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    LOGIC_OR        reduce using rule 95 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    LOGIC_XOR       reduce using rule 95 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    COMMA           reduce using rule 95 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 95 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 95 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 95 (comparation -> access_element_matrix EQUALS_EQUALS VARIABLE .)


state 267

    (67) logic_expression -> true_boolean_types logic_operator false_boolean_types .

    LOGIC_AND       reduce using rule 67 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    LOGIC_OR        reduce using rule 67 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    LOGIC_XOR       reduce using rule 67 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    COMMA           reduce using rule 67 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    STRING_CONCATENATION reduce using rule 67 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    SEMICOLON       reduce using rule 67 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)
    RIGHT_PAREN     reduce using rule 67 (logic_expression -> true_boolean_types logic_operator false_boolean_types .)


state 268

    (76) false_boolean_types -> FALSE .

    LOGIC_AND       reduce using rule 76 (false_boolean_types -> FALSE .)
    LOGIC_OR        reduce using rule 76 (false_boolean_types -> FALSE .)
    LOGIC_XOR       reduce using rule 76 (false_boolean_types -> FALSE .)
    COMMA           reduce using rule 76 (false_boolean_types -> FALSE .)
    STRING_CONCATENATION reduce using rule 76 (false_boolean_types -> FALSE .)
    SEMICOLON       reduce using rule 76 (false_boolean_types -> FALSE .)
    RIGHT_PAREN     reduce using rule 76 (false_boolean_types -> FALSE .)


state 269

    (77) false_boolean_types -> STRING .

    LOGIC_AND       reduce using rule 77 (false_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 77 (false_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 77 (false_boolean_types -> STRING .)
    COMMA           reduce using rule 77 (false_boolean_types -> STRING .)
    STRING_CONCATENATION reduce using rule 77 (false_boolean_types -> STRING .)
    SEMICOLON       reduce using rule 77 (false_boolean_types -> STRING .)
    RIGHT_PAREN     reduce using rule 77 (false_boolean_types -> STRING .)


state 270

    (78) false_boolean_types -> INTEGER .

    LOGIC_AND       reduce using rule 78 (false_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 78 (false_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 78 (false_boolean_types -> INTEGER .)
    COMMA           reduce using rule 78 (false_boolean_types -> INTEGER .)
    STRING_CONCATENATION reduce using rule 78 (false_boolean_types -> INTEGER .)
    SEMICOLON       reduce using rule 78 (false_boolean_types -> INTEGER .)
    RIGHT_PAREN     reduce using rule 78 (false_boolean_types -> INTEGER .)


state 271

    (79) false_boolean_types -> VARIABLE .

    LOGIC_AND       reduce using rule 79 (false_boolean_types -> VARIABLE .)
    LOGIC_OR        reduce using rule 79 (false_boolean_types -> VARIABLE .)
    LOGIC_XOR       reduce using rule 79 (false_boolean_types -> VARIABLE .)
    COMMA           reduce using rule 79 (false_boolean_types -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 79 (false_boolean_types -> VARIABLE .)
    SEMICOLON       reduce using rule 79 (false_boolean_types -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 79 (false_boolean_types -> VARIABLE .)


state 272

    (80) false_boolean_types -> IDENTIFIER .

    LOGIC_AND       reduce using rule 80 (false_boolean_types -> IDENTIFIER .)
    LOGIC_OR        reduce using rule 80 (false_boolean_types -> IDENTIFIER .)
    LOGIC_XOR       reduce using rule 80 (false_boolean_types -> IDENTIFIER .)
    COMMA           reduce using rule 80 (false_boolean_types -> IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 80 (false_boolean_types -> IDENTIFIER .)
    SEMICOLON       reduce using rule 80 (false_boolean_types -> IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 80 (false_boolean_types -> IDENTIFIER .)


state 273

    (81) false_boolean_types -> FLOAT .

    LOGIC_AND       reduce using rule 81 (false_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 81 (false_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 81 (false_boolean_types -> FLOAT .)
    COMMA           reduce using rule 81 (false_boolean_types -> FLOAT .)
    STRING_CONCATENATION reduce using rule 81 (false_boolean_types -> FLOAT .)
    SEMICOLON       reduce using rule 81 (false_boolean_types -> FLOAT .)
    RIGHT_PAREN     reduce using rule 81 (false_boolean_types -> FLOAT .)


state 274

    (82) false_boolean_types -> ARRAY . LEFT_PAREN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 342


state 275

    (68) logic_expression -> false_boolean_types logic_operator true_boolean_types .

    LOGIC_AND       reduce using rule 68 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    LOGIC_OR        reduce using rule 68 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    LOGIC_XOR       reduce using rule 68 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    COMMA           reduce using rule 68 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    STRING_CONCATENATION reduce using rule 68 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    SEMICOLON       reduce using rule 68 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)
    RIGHT_PAREN     reduce using rule 68 (logic_expression -> false_boolean_types logic_operator true_boolean_types .)


state 276

    (69) true_boolean_types -> TRUE .

    LOGIC_AND       reduce using rule 69 (true_boolean_types -> TRUE .)
    LOGIC_OR        reduce using rule 69 (true_boolean_types -> TRUE .)
    LOGIC_XOR       reduce using rule 69 (true_boolean_types -> TRUE .)
    COMMA           reduce using rule 69 (true_boolean_types -> TRUE .)
    STRING_CONCATENATION reduce using rule 69 (true_boolean_types -> TRUE .)
    SEMICOLON       reduce using rule 69 (true_boolean_types -> TRUE .)
    RIGHT_PAREN     reduce using rule 69 (true_boolean_types -> TRUE .)


state 277

    (70) true_boolean_types -> STRING .

    LOGIC_AND       reduce using rule 70 (true_boolean_types -> STRING .)
    LOGIC_OR        reduce using rule 70 (true_boolean_types -> STRING .)
    LOGIC_XOR       reduce using rule 70 (true_boolean_types -> STRING .)
    COMMA           reduce using rule 70 (true_boolean_types -> STRING .)
    STRING_CONCATENATION reduce using rule 70 (true_boolean_types -> STRING .)
    SEMICOLON       reduce using rule 70 (true_boolean_types -> STRING .)
    RIGHT_PAREN     reduce using rule 70 (true_boolean_types -> STRING .)


state 278

    (71) true_boolean_types -> INTEGER .

    LOGIC_AND       reduce using rule 71 (true_boolean_types -> INTEGER .)
    LOGIC_OR        reduce using rule 71 (true_boolean_types -> INTEGER .)
    LOGIC_XOR       reduce using rule 71 (true_boolean_types -> INTEGER .)
    COMMA           reduce using rule 71 (true_boolean_types -> INTEGER .)
    STRING_CONCATENATION reduce using rule 71 (true_boolean_types -> INTEGER .)
    SEMICOLON       reduce using rule 71 (true_boolean_types -> INTEGER .)
    RIGHT_PAREN     reduce using rule 71 (true_boolean_types -> INTEGER .)


state 279

    (72) true_boolean_types -> FLOAT .

    LOGIC_AND       reduce using rule 72 (true_boolean_types -> FLOAT .)
    LOGIC_OR        reduce using rule 72 (true_boolean_types -> FLOAT .)
    LOGIC_XOR       reduce using rule 72 (true_boolean_types -> FLOAT .)
    COMMA           reduce using rule 72 (true_boolean_types -> FLOAT .)
    STRING_CONCATENATION reduce using rule 72 (true_boolean_types -> FLOAT .)
    SEMICOLON       reduce using rule 72 (true_boolean_types -> FLOAT .)
    RIGHT_PAREN     reduce using rule 72 (true_boolean_types -> FLOAT .)


state 280

    (73) true_boolean_types -> VARIABLE .

    LOGIC_AND       reduce using rule 73 (true_boolean_types -> VARIABLE .)
    LOGIC_OR        reduce using rule 73 (true_boolean_types -> VARIABLE .)
    LOGIC_XOR       reduce using rule 73 (true_boolean_types -> VARIABLE .)
    COMMA           reduce using rule 73 (true_boolean_types -> VARIABLE .)
    STRING_CONCATENATION reduce using rule 73 (true_boolean_types -> VARIABLE .)
    SEMICOLON       reduce using rule 73 (true_boolean_types -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 73 (true_boolean_types -> VARIABLE .)


state 281

    (74) true_boolean_types -> IDENTIFIER .

    LOGIC_AND       reduce using rule 74 (true_boolean_types -> IDENTIFIER .)
    LOGIC_OR        reduce using rule 74 (true_boolean_types -> IDENTIFIER .)
    LOGIC_XOR       reduce using rule 74 (true_boolean_types -> IDENTIFIER .)
    COMMA           reduce using rule 74 (true_boolean_types -> IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 74 (true_boolean_types -> IDENTIFIER .)
    SEMICOLON       reduce using rule 74 (true_boolean_types -> IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 74 (true_boolean_types -> IDENTIFIER .)


state 282

    (75) true_boolean_types -> ARRAY . LEFT_PAREN values RIGHT_PAREN

    LEFT_PAREN      shift and go to state 343


state 283

    (133) expression -> term PLUS expression .

    EQUALS_EQUALS   reduce using rule 133 (expression -> term PLUS expression .)
    IDENTICAL       reduce using rule 133 (expression -> term PLUS expression .)
    NOT_EQUALS      reduce using rule 133 (expression -> term PLUS expression .)
    NOT_IDENTICAL   reduce using rule 133 (expression -> term PLUS expression .)
    SMALL_THAN      reduce using rule 133 (expression -> term PLUS expression .)
    GREATER_THAN    reduce using rule 133 (expression -> term PLUS expression .)
    SMALL_EQUALS_TO reduce using rule 133 (expression -> term PLUS expression .)
    GREATER_EQUALS_TO reduce using rule 133 (expression -> term PLUS expression .)
    SPACECRAFT      reduce using rule 133 (expression -> term PLUS expression .)
    NULL_FUSION     reduce using rule 133 (expression -> term PLUS expression .)
    RIGHT_PAREN     reduce using rule 133 (expression -> term PLUS expression .)
    SEMICOLON       reduce using rule 133 (expression -> term PLUS expression .)
    LOGIC_AND       reduce using rule 133 (expression -> term PLUS expression .)
    LOGIC_OR        reduce using rule 133 (expression -> term PLUS expression .)
    LOGIC_XOR       reduce using rule 133 (expression -> term PLUS expression .)
    COMMA           reduce using rule 133 (expression -> term PLUS expression .)
    STRING_CONCATENATION reduce using rule 133 (expression -> term PLUS expression .)


state 284

    (134) expression -> term MINUS expression .

    EQUALS_EQUALS   reduce using rule 134 (expression -> term MINUS expression .)
    IDENTICAL       reduce using rule 134 (expression -> term MINUS expression .)
    NOT_EQUALS      reduce using rule 134 (expression -> term MINUS expression .)
    NOT_IDENTICAL   reduce using rule 134 (expression -> term MINUS expression .)
    SMALL_THAN      reduce using rule 134 (expression -> term MINUS expression .)
    GREATER_THAN    reduce using rule 134 (expression -> term MINUS expression .)
    SMALL_EQUALS_TO reduce using rule 134 (expression -> term MINUS expression .)
    GREATER_EQUALS_TO reduce using rule 134 (expression -> term MINUS expression .)
    SPACECRAFT      reduce using rule 134 (expression -> term MINUS expression .)
    NULL_FUSION     reduce using rule 134 (expression -> term MINUS expression .)
    RIGHT_PAREN     reduce using rule 134 (expression -> term MINUS expression .)
    SEMICOLON       reduce using rule 134 (expression -> term MINUS expression .)
    LOGIC_AND       reduce using rule 134 (expression -> term MINUS expression .)
    LOGIC_OR        reduce using rule 134 (expression -> term MINUS expression .)
    LOGIC_XOR       reduce using rule 134 (expression -> term MINUS expression .)
    COMMA           reduce using rule 134 (expression -> term MINUS expression .)
    STRING_CONCATENATION reduce using rule 134 (expression -> term MINUS expression .)


state 285

    (75) true_boolean_types -> ARRAY LEFT_PAREN values . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 344


state 286

    (82) false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .

    LOGIC_AND       reduce using rule 82 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    LOGIC_OR        reduce using rule 82 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    LOGIC_XOR       reduce using rule 82 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    COMMA           reduce using rule 82 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 82 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    SEMICOLON       reduce using rule 82 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 82 (false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN .)


state 287

    (136) term -> factor MULTIPLY term .

    PLUS            reduce using rule 136 (term -> factor MULTIPLY term .)
    MINUS           reduce using rule 136 (term -> factor MULTIPLY term .)
    EQUALS_EQUALS   reduce using rule 136 (term -> factor MULTIPLY term .)
    IDENTICAL       reduce using rule 136 (term -> factor MULTIPLY term .)
    NOT_EQUALS      reduce using rule 136 (term -> factor MULTIPLY term .)
    NOT_IDENTICAL   reduce using rule 136 (term -> factor MULTIPLY term .)
    SMALL_THAN      reduce using rule 136 (term -> factor MULTIPLY term .)
    GREATER_THAN    reduce using rule 136 (term -> factor MULTIPLY term .)
    SMALL_EQUALS_TO reduce using rule 136 (term -> factor MULTIPLY term .)
    GREATER_EQUALS_TO reduce using rule 136 (term -> factor MULTIPLY term .)
    SPACECRAFT      reduce using rule 136 (term -> factor MULTIPLY term .)
    NULL_FUSION     reduce using rule 136 (term -> factor MULTIPLY term .)
    RIGHT_PAREN     reduce using rule 136 (term -> factor MULTIPLY term .)
    SEMICOLON       reduce using rule 136 (term -> factor MULTIPLY term .)
    LOGIC_AND       reduce using rule 136 (term -> factor MULTIPLY term .)
    LOGIC_OR        reduce using rule 136 (term -> factor MULTIPLY term .)
    LOGIC_XOR       reduce using rule 136 (term -> factor MULTIPLY term .)
    COMMA           reduce using rule 136 (term -> factor MULTIPLY term .)
    STRING_CONCATENATION reduce using rule 136 (term -> factor MULTIPLY term .)


state 288

    (137) term -> factor DIVIDE term .

    PLUS            reduce using rule 137 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 137 (term -> factor DIVIDE term .)
    EQUALS_EQUALS   reduce using rule 137 (term -> factor DIVIDE term .)
    IDENTICAL       reduce using rule 137 (term -> factor DIVIDE term .)
    NOT_EQUALS      reduce using rule 137 (term -> factor DIVIDE term .)
    NOT_IDENTICAL   reduce using rule 137 (term -> factor DIVIDE term .)
    SMALL_THAN      reduce using rule 137 (term -> factor DIVIDE term .)
    GREATER_THAN    reduce using rule 137 (term -> factor DIVIDE term .)
    SMALL_EQUALS_TO reduce using rule 137 (term -> factor DIVIDE term .)
    GREATER_EQUALS_TO reduce using rule 137 (term -> factor DIVIDE term .)
    SPACECRAFT      reduce using rule 137 (term -> factor DIVIDE term .)
    NULL_FUSION     reduce using rule 137 (term -> factor DIVIDE term .)
    RIGHT_PAREN     reduce using rule 137 (term -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 137 (term -> factor DIVIDE term .)
    LOGIC_AND       reduce using rule 137 (term -> factor DIVIDE term .)
    LOGIC_OR        reduce using rule 137 (term -> factor DIVIDE term .)
    LOGIC_XOR       reduce using rule 137 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 137 (term -> factor DIVIDE term .)
    STRING_CONCATENATION reduce using rule 137 (term -> factor DIVIDE term .)


state 289

    (138) term -> factor MODULE term .

    PLUS            reduce using rule 138 (term -> factor MODULE term .)
    MINUS           reduce using rule 138 (term -> factor MODULE term .)
    EQUALS_EQUALS   reduce using rule 138 (term -> factor MODULE term .)
    IDENTICAL       reduce using rule 138 (term -> factor MODULE term .)
    NOT_EQUALS      reduce using rule 138 (term -> factor MODULE term .)
    NOT_IDENTICAL   reduce using rule 138 (term -> factor MODULE term .)
    SMALL_THAN      reduce using rule 138 (term -> factor MODULE term .)
    GREATER_THAN    reduce using rule 138 (term -> factor MODULE term .)
    SMALL_EQUALS_TO reduce using rule 138 (term -> factor MODULE term .)
    GREATER_EQUALS_TO reduce using rule 138 (term -> factor MODULE term .)
    SPACECRAFT      reduce using rule 138 (term -> factor MODULE term .)
    NULL_FUSION     reduce using rule 138 (term -> factor MODULE term .)
    RIGHT_PAREN     reduce using rule 138 (term -> factor MODULE term .)
    SEMICOLON       reduce using rule 138 (term -> factor MODULE term .)
    LOGIC_AND       reduce using rule 138 (term -> factor MODULE term .)
    LOGIC_OR        reduce using rule 138 (term -> factor MODULE term .)
    LOGIC_XOR       reduce using rule 138 (term -> factor MODULE term .)
    COMMA           reduce using rule 138 (term -> factor MODULE term .)
    STRING_CONCATENATION reduce using rule 138 (term -> factor MODULE term .)


state 290

    (139) term -> factor POW term .

    PLUS            reduce using rule 139 (term -> factor POW term .)
    MINUS           reduce using rule 139 (term -> factor POW term .)
    EQUALS_EQUALS   reduce using rule 139 (term -> factor POW term .)
    IDENTICAL       reduce using rule 139 (term -> factor POW term .)
    NOT_EQUALS      reduce using rule 139 (term -> factor POW term .)
    NOT_IDENTICAL   reduce using rule 139 (term -> factor POW term .)
    SMALL_THAN      reduce using rule 139 (term -> factor POW term .)
    GREATER_THAN    reduce using rule 139 (term -> factor POW term .)
    SMALL_EQUALS_TO reduce using rule 139 (term -> factor POW term .)
    GREATER_EQUALS_TO reduce using rule 139 (term -> factor POW term .)
    SPACECRAFT      reduce using rule 139 (term -> factor POW term .)
    NULL_FUSION     reduce using rule 139 (term -> factor POW term .)
    RIGHT_PAREN     reduce using rule 139 (term -> factor POW term .)
    SEMICOLON       reduce using rule 139 (term -> factor POW term .)
    LOGIC_AND       reduce using rule 139 (term -> factor POW term .)
    LOGIC_OR        reduce using rule 139 (term -> factor POW term .)
    LOGIC_XOR       reduce using rule 139 (term -> factor POW term .)
    COMMA           reduce using rule 139 (term -> factor POW term .)
    STRING_CONCATENATION reduce using rule 139 (term -> factor POW term .)


state 291

    (108) print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN .

    SEMICOLON       reduce using rule 108 (print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN .)


state 292

    (275) class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt . LEFT_BRACE class_body RIGHT_BRACE

    LEFT_BRACE      shift and go to state 345


state 293

    (282) class_implements_opt -> IMPLEMENTS . interface_list
    (284) interface_list -> . IDENTIFIER
    (285) interface_list -> . interface_list COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 347

    interface_list                 shift and go to state 346

state 294

    (280) class_extends_opt -> EXTENDS IDENTIFIER .

    IMPLEMENTS      reduce using rule 280 (class_extends_opt -> EXTENDS IDENTIFIER .)
    LEFT_BRACE      reduce using rule 280 (class_extends_opt -> EXTENDS IDENTIFIER .)


state 295

    (276) interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE . interface_body RIGHT_BRACE
    (277) interface_body -> . interface_body interface_method
    (278) interface_body -> .

    RIGHT_BRACE     reduce using rule 278 (interface_body -> .)
    PUBLIC          reduce using rule 278 (interface_body -> .)
    PRIVATE         reduce using rule 278 (interface_body -> .)
    PROTECTED       reduce using rule 278 (interface_body -> .)
    FUNCTION        reduce using rule 278 (interface_body -> .)

    interface_body                 shift and go to state 348

state 296

    (176) function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params . RIGHT_PAREN codeblock

    RIGHT_PAREN     shift and go to state 349


state 297

    (169) params -> real_params .
    (173) real_params -> real_params . COMMA VARIABLE
    (174) real_params -> real_params . COMMA values

    RIGHT_PAREN     reduce using rule 169 (params -> real_params .)
    COMMA           shift and go to state 350


state 298

    (170) params -> empty .

    RIGHT_PAREN     reduce using rule 170 (params -> empty .)


state 299

    (171) real_params -> VARIABLE .

    COMMA           reduce using rule 171 (real_params -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 171 (real_params -> VARIABLE .)


state 300

    (172) real_params -> values .

    COMMA           reduce using rule 172 (real_params -> values .)
    RIGHT_PAREN     reduce using rule 172 (real_params -> values .)


state 301

    (168) function_invocation -> VARIABLE LEFT_PAREN . params RIGHT_PAREN
    (169) params -> . real_params
    (170) params -> . empty
    (171) real_params -> . VARIABLE
    (172) real_params -> . values
    (173) real_params -> . real_params COMMA VARIABLE
    (174) real_params -> . real_params COMMA values
    (175) empty -> .
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 299
    RIGHT_PAREN     reduce using rule 175 (empty -> .)
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    params                         shift and go to state 351
    real_params                    shift and go to state 297
    empty                          shift and go to state 298
    values                         shift and go to state 300
    boolean                        shift and go to state 64

state 302

    (167) function_invocation -> IDENTIFIER LEFT_PAREN . params RIGHT_PAREN
    (169) params -> . real_params
    (170) params -> . empty
    (171) real_params -> . VARIABLE
    (172) real_params -> . values
    (173) real_params -> . real_params COMMA VARIABLE
    (174) real_params -> . real_params COMMA values
    (175) empty -> .
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 299
    RIGHT_PAREN     reduce using rule 175 (empty -> .)
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    params                         shift and go to state 352
    real_params                    shift and go to state 297
    empty                          shift and go to state 298
    values                         shift and go to state 300
    boolean                        shift and go to state 64

state 303

    (186) string_special_function -> STRLEN LEFT_PAREN . string_param RIGHT_PAREN
    (189) string_param -> . STRING
    (190) string_param -> . VARIABLE
    (191) string_param -> . INTEGER

    STRING          shift and go to state 354
    VARIABLE        shift and go to state 355
    INTEGER         shift and go to state 356

    string_param                   shift and go to state 353

state 304

    (187) string_special_function -> SUBSTR LEFT_PAREN . string_param COMMA int_param RIGHT_PAREN
    (188) string_special_function -> SUBSTR LEFT_PAREN . string_param COMMA int_param COMMA int_param RIGHT_PAREN
    (189) string_param -> . STRING
    (190) string_param -> . VARIABLE
    (191) string_param -> . INTEGER

    STRING          shift and go to state 354
    VARIABLE        shift and go to state 355
    INTEGER         shift and go to state 356

    string_param                   shift and go to state 357

state 305

    (184) input -> FEGTS LEFT_PAREN . STDIN RIGHT_PAREN

    STDIN           shift and go to state 358


state 306

    (185) input -> READLINE LEFT_PAREN . STRING RIGHT_PAREN

    STRING          shift and go to state 359


state 307

    (197) array_special_function -> COUNT LEFT_PAREN . structure_array_principal count_param RIGHT_PAREN
    (198) array_special_function -> COUNT LEFT_PAREN . structure_matrix_principal count_param RIGHT_PAREN
    (199) array_special_function -> COUNT LEFT_PAREN . VARIABLE count_param RIGHT_PAREN
    (202) statement_array_special_function_error -> COUNT LEFT_PAREN . error count_param RIGHT_PAREN
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    VARIABLE        shift and go to state 362
    error           shift and go to state 363
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47

    structure_array_principal      shift and go to state 360
    structure_matrix_principal     shift and go to state 361
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 364
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    statement_access_array_element_error shift and go to state 48

state 308

    (200) array_special_function -> ARRAY_POP LEFT_PAREN . VARIABLE RIGHT_PAREN
    (203) statement_array_special_function_error -> ARRAY_POP LEFT_PAREN . error RIGHT_PAREN

    VARIABLE        shift and go to state 365
    error           shift and go to state 366


state 309

    (201) array_special_function -> ARRAY_SUM LEFT_PAREN . VARIABLE RIGHT_PAREN
    (204) statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN . error RIGHT_PAREN

    VARIABLE        shift and go to state 367
    error           shift and go to state 368


state 310

    (179) arrow_function -> FN LEFT_PAREN . params RIGHT_PAREN EQUALS GREATER_THAN codeblock
    (180) arrow_function -> FN LEFT_PAREN . params RIGHT_PAREN EQUALS GREATER_THAN print_statement
    (181) arrow_function -> FN LEFT_PAREN . params RIGHT_PAREN EQUALS GREATER_THAN expression
    (169) params -> . real_params
    (170) params -> . empty
    (171) real_params -> . VARIABLE
    (172) real_params -> . values
    (173) real_params -> . real_params COMMA VARIABLE
    (174) real_params -> . real_params COMMA values
    (175) empty -> .
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 299
    RIGHT_PAREN     reduce using rule 175 (empty -> .)
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    params                         shift and go to state 369
    real_params                    shift and go to state 297
    empty                          shift and go to state 298
    values                         shift and go to state 300
    boolean                        shift and go to state 64

state 311

    (182) anonymous_functions -> FUNCTION LEFT_PAREN . params RIGHT_PAREN codeblock
    (169) params -> . real_params
    (170) params -> . empty
    (171) real_params -> . VARIABLE
    (172) real_params -> . values
    (173) real_params -> . real_params COMMA VARIABLE
    (174) real_params -> . real_params COMMA values
    (175) empty -> .
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 299
    RIGHT_PAREN     reduce using rule 175 (empty -> .)
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    params                         shift and go to state 370
    real_params                    shift and go to state 297
    empty                          shift and go to state 298
    values                         shift and go to state 300
    boolean                        shift and go to state 64

state 312

    (223) indexed_array -> ARRAY LEFT_PAREN . values_array_indexed RIGHT_PAREN
    (224) associative_array -> ARRAY LEFT_PAREN . structure_array RIGHT_PAREN
    (246) matrix_firstform -> ARRAY LEFT_PAREN . structure_matrix_first RIGHT_PAREN SEMICOLON
    (75) true_boolean_types -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (82) false_boolean_types -> ARRAY LEFT_PAREN . RIGHT_PAREN
    (230) values_array_indexed -> . values
    (231) values_array_indexed -> . values COMMA values_array_indexed
    (232) values_array_indexed -> . object_creation
    (233) values_array_indexed -> . object_creation COMMA values_array_indexed
    (234) values_array_indexed -> . indexed_array
    (235) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (226) structure_array -> . key EQUALS GREATER_THAN values
    (227) structure_array -> . key EQUALS GREATER_THAN values COMMA structure_array
    (250) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (251) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (228) key -> . INTEGER
    (229) key -> . STRING
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    RIGHT_PAREN     shift and go to state 286
    ARRAY           shift and go to state 212
    INTEGER         shift and go to state 220
    STRING          shift and go to state 221
    FLOAT           shift and go to state 203
    NEW             shift and go to state 49
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values_array_indexed           shift and go to state 213
    structure_array                shift and go to state 214
    structure_matrix_first         shift and go to state 215
    values                         shift and go to state 371
    object_creation                shift and go to state 217
    indexed_array                  shift and go to state 218
    key                            shift and go to state 219
    boolean                        shift and go to state 64

state 313

    (239) access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .
    (253) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET . LEFT_BRACKET INTEGER RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    MINUS           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    ECHO            reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    PRINT           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    CLASS           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    INTERFACE       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    FUNCTION        reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    VARIABLE        reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    INCREASE        reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    DECREMENT       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    IF              reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    WHILE           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    FOR             reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    CONST           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    DEFINE          reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    ARRAY           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    NEW             reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    COMMA           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RETURN          reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    BREAK           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LEFT_BRACKET    shift and go to state 372

  ! LEFT_BRACKET    [ reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .) ]


state 314

    (238) access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .
    (252) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET . LEFT_BRACKET VARIABLE RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    MINUS           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ECHO            reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PRINT           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CLASS           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INTERFACE       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FUNCTION        reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    VARIABLE        reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INCREASE        reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DECREMENT       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    IF              reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    WHILE           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FOR             reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CONST           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DEFINE          reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ARRAY           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    NEW             reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RETURN          reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    BREAK           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LEFT_BRACKET    shift and go to state 373

  ! LEFT_BRACKET    [ reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .) ]


state 315

    (258) add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS . indexed_array
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN

    ARRAY           shift and go to state 375

    indexed_array                  shift and go to state 374

state 316

    (240) statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .

    ECHO            reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    PRINT           reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    CLASS           reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    INTERFACE       reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    FUNCTION        reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    VARIABLE        reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    INCREASE        reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    DECREMENT       reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    IF              reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    WHILE           reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    FOR             reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    CONST           reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    DEFINE          reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    ARRAY           reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    NEW             reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    COMMA           reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    RETURN          reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    BREAK           reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 240 (statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET .)


state 317

    (168) function_invocation -> VARIABLE . LEFT_PAREN params RIGHT_PAREN

    LEFT_PAREN      shift and go to state 301


state 318

    (263) access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .

    ECHO            reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    PRINT           reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    CLASS           reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    INTERFACE       reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    FUNCTION        reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    VARIABLE        reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    INCREASE        reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    DECREMENT       reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    IF              reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    WHILE           reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    FOR             reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    CONST           reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    DEFINE          reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    ARRAY           reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    LEFT_BRACKET    reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    NEW             reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    PHP_END_IDENTIFIER reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    COMMA           reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    STRING_CONCATENATION reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    SEMICOLON       reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    RIGHT_PAREN     reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    RETURN          reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    BREAK           reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)
    RIGHT_BRACE     reduce using rule 263 (access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation .)


state 319

    (264) access_method_object -> VARIABLE MINUS GREATER_THAN accessType .
    (265) access_method_object -> VARIABLE MINUS GREATER_THAN accessType . EQUALS values
    (266) access_method_object -> VARIABLE MINUS GREATER_THAN accessType . EQUALS VARIABLE
    (267) access_method_object -> VARIABLE MINUS GREATER_THAN accessType . EQUALS access_array_element

    ECHO            reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    PRINT           reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    CLASS           reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    INTERFACE       reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    FUNCTION        reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    VARIABLE        reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    INCREASE        reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    DECREMENT       reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    IF              reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    WHILE           reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    FOR             reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    CONST           reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    DEFINE          reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    ARRAY           reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    LEFT_BRACKET    reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    NEW             reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    PHP_END_IDENTIFIER reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    COMMA           reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    STRING_CONCATENATION reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    SEMICOLON       reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    RIGHT_PAREN     reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    RETURN          reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    BREAK           reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    RIGHT_BRACE     reduce using rule 264 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType .)
    EQUALS          shift and go to state 376


state 320

    (167) function_invocation -> IDENTIFIER . LEFT_PAREN params RIGHT_PAREN
    (273) accessType -> IDENTIFIER . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (274) accessType -> IDENTIFIER .

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    LEFT_PAREN      shift and go to state 302
    LEFT_BRACKET    shift and go to state 377
    EQUALS          reduce using rule 274 (accessType -> IDENTIFIER .)
    ECHO            reduce using rule 274 (accessType -> IDENTIFIER .)
    PRINT           reduce using rule 274 (accessType -> IDENTIFIER .)
    CLASS           reduce using rule 274 (accessType -> IDENTIFIER .)
    INTERFACE       reduce using rule 274 (accessType -> IDENTIFIER .)
    FUNCTION        reduce using rule 274 (accessType -> IDENTIFIER .)
    VARIABLE        reduce using rule 274 (accessType -> IDENTIFIER .)
    INCREASE        reduce using rule 274 (accessType -> IDENTIFIER .)
    DECREMENT       reduce using rule 274 (accessType -> IDENTIFIER .)
    IF              reduce using rule 274 (accessType -> IDENTIFIER .)
    WHILE           reduce using rule 274 (accessType -> IDENTIFIER .)
    FOR             reduce using rule 274 (accessType -> IDENTIFIER .)
    CONST           reduce using rule 274 (accessType -> IDENTIFIER .)
    DEFINE          reduce using rule 274 (accessType -> IDENTIFIER .)
    ARRAY           reduce using rule 274 (accessType -> IDENTIFIER .)
    NEW             reduce using rule 274 (accessType -> IDENTIFIER .)
    PHP_END_IDENTIFIER reduce using rule 274 (accessType -> IDENTIFIER .)
    COMMA           reduce using rule 274 (accessType -> IDENTIFIER .)
    STRING_CONCATENATION reduce using rule 274 (accessType -> IDENTIFIER .)
    SEMICOLON       reduce using rule 274 (accessType -> IDENTIFIER .)
    RIGHT_PAREN     reduce using rule 274 (accessType -> IDENTIFIER .)
    RETURN          reduce using rule 274 (accessType -> IDENTIFIER .)
    BREAK           reduce using rule 274 (accessType -> IDENTIFIER .)
    RIGHT_BRACE     reduce using rule 274 (accessType -> IDENTIFIER .)

  ! LEFT_BRACKET    [ reduce using rule 274 (accessType -> IDENTIFIER .) ]


state 321

    (268) access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .

    ECHO            reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    PRINT           reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    CLASS           reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    INTERFACE       reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    FUNCTION        reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    VARIABLE        reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    INCREASE        reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    DECREMENT       reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    IF              reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    WHILE           reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    FOR             reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    CONST           reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    DEFINE          reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    ARRAY           reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    LEFT_BRACKET    reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    NEW             reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    PHP_END_IDENTIFIER reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    COMMA           reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    STRING_CONCATENATION reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    SEMICOLON       reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    RIGHT_PAREN     reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    RETURN          reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    BREAK           reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)
    RIGHT_BRACE     reduce using rule 268 (access_method_object -> access_array_element MINUS GREATER_THAN function_invocation .)


state 322

    (269) access_method_object -> access_array_element MINUS GREATER_THAN accessType .
    (270) access_method_object -> access_array_element MINUS GREATER_THAN accessType . EQUALS values
    (271) access_method_object -> access_array_element MINUS GREATER_THAN accessType . EQUALS VARIABLE
    (272) access_method_object -> access_array_element MINUS GREATER_THAN accessType . EQUALS access_array_element

    ECHO            reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    PRINT           reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    CLASS           reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    INTERFACE       reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    FUNCTION        reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    VARIABLE        reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    INCREASE        reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    DECREMENT       reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    IF              reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    WHILE           reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    FOR             reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    CONST           reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    DEFINE          reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    ARRAY           reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    LEFT_BRACKET    reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    NEW             reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    PHP_END_IDENTIFIER reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    COMMA           reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    STRING_CONCATENATION reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    SEMICOLON       reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    RIGHT_PAREN     reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    RETURN          reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    BREAK           reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    RIGHT_BRACE     reduce using rule 269 (access_method_object -> access_array_element MINUS GREATER_THAN accessType .)
    EQUALS          shift and go to state 378


state 323

    (15) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE else_statement

    LEFT_BRACE      shift and go to state 379


state 324

    (14) while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 380


state 325

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS . expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (39) expression_for -> . VARIABLE
    (40) expression_for -> . number_values
    (41) expression_for -> . expression_for operator_aritmetic expression_for
    (42) expression_for -> . LEFT_PAREN expression_for RIGHT_PAREN
    (43) expression_for -> . IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> . IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
    (45) expression_for -> . length_operations
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT
    (212) length_operations -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (213) length_operations -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (214) length_operations -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (215) length_operations -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN

    VARIABLE        shift and go to state 382
    LEFT_PAREN      shift and go to state 381
    IDENTIFIER      shift and go to state 385
    INTEGER         shift and go to state 387
    FLOAT           shift and go to state 388
    COUNT           shift and go to state 389
    STRLEN          shift and go to state 390

    expression_for                 shift and go to state 383
    number_values                  shift and go to state 384
    length_operations              shift and go to state 386

state 326

    (165) const_syntax -> CONST IDENTIFIER EQUALS values .

    SEMICOLON       reduce using rule 165 (const_syntax -> CONST IDENTIFIER EQUALS values .)


state 327

    (166) define_syntax -> DEFINE LEFT_PAREN STRING COMMA . values RIGHT_PAREN
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 391
    boolean                        shift and go to state 64

state 328

    (250) structure_matrix_first -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (251) structure_matrix_first -> ARRAY LEFT_PAREN . values RIGHT_PAREN COMMA structure_matrix_first
    (223) indexed_array -> ARRAY LEFT_PAREN . values_array_indexed RIGHT_PAREN
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (230) values_array_indexed -> . values
    (231) values_array_indexed -> . values COMMA values_array_indexed
    (232) values_array_indexed -> . object_creation
    (233) values_array_indexed -> . object_creation COMMA values_array_indexed
    (234) values_array_indexed -> . indexed_array
    (235) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205
    NEW             shift and go to state 49
    ARRAY           shift and go to state 375

    values                         shift and go to state 392
    values_array_indexed           shift and go to state 213
    boolean                        shift and go to state 64
    object_creation                shift and go to state 217
    indexed_array                  shift and go to state 218

state 329

    (223) indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .

    ECHO            reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    PRINT           reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    CLASS           reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    INTERFACE       reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    FUNCTION        reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    VARIABLE        reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    INCREASE        reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    DECREMENT       reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    IF              reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    WHILE           reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    FOR             reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    CONST           reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    DEFINE          reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    ARRAY           reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    NEW             reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    SEMICOLON       reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    COMMA           reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    RETURN          reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    BREAK           reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 223 (indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN .)


state 330

    (224) associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .

    ECHO            reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    PRINT           reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    CLASS           reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    INTERFACE       reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    FUNCTION        reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    VARIABLE        reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    INCREASE        reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    DECREMENT       reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    IF              reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    WHILE           reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    FOR             reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    CONST           reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    DEFINE          reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    ARRAY           reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    NEW             reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    SEMICOLON       reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    COMMA           reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    RETURN          reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    BREAK           reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 224 (associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN .)


state 331

    (246) matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN . SEMICOLON

    SEMICOLON       shift and go to state 393


state 332

    (231) values_array_indexed -> values COMMA . values_array_indexed
    (230) values_array_indexed -> . values
    (231) values_array_indexed -> . values COMMA values_array_indexed
    (232) values_array_indexed -> . object_creation
    (233) values_array_indexed -> . object_creation COMMA values_array_indexed
    (234) values_array_indexed -> . indexed_array
    (235) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    NEW             shift and go to state 49
    ARRAY           shift and go to state 375
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 216
    values_array_indexed           shift and go to state 394
    object_creation                shift and go to state 217
    indexed_array                  shift and go to state 218
    boolean                        shift and go to state 64

state 333

    (233) values_array_indexed -> object_creation COMMA . values_array_indexed
    (230) values_array_indexed -> . values
    (231) values_array_indexed -> . values COMMA values_array_indexed
    (232) values_array_indexed -> . object_creation
    (233) values_array_indexed -> . object_creation COMMA values_array_indexed
    (234) values_array_indexed -> . indexed_array
    (235) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    NEW             shift and go to state 49
    ARRAY           shift and go to state 375
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    object_creation                shift and go to state 217
    values_array_indexed           shift and go to state 395
    values                         shift and go to state 216
    indexed_array                  shift and go to state 218
    boolean                        shift and go to state 64

state 334

    (235) values_array_indexed -> indexed_array COMMA . values_array_indexed
    (230) values_array_indexed -> . values
    (231) values_array_indexed -> . values COMMA values_array_indexed
    (232) values_array_indexed -> . object_creation
    (233) values_array_indexed -> . object_creation COMMA values_array_indexed
    (234) values_array_indexed -> . indexed_array
    (235) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    NEW             shift and go to state 49
    ARRAY           shift and go to state 375
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    indexed_array                  shift and go to state 218
    values_array_indexed           shift and go to state 396
    values                         shift and go to state 216
    object_creation                shift and go to state 217
    boolean                        shift and go to state 64

state 335

    (226) structure_array -> key EQUALS . GREATER_THAN values
    (227) structure_array -> key EQUALS . GREATER_THAN values COMMA structure_array

    GREATER_THAN    shift and go to state 397


state 336

    (225) associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .

    ECHO            reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    PRINT           reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    CLASS           reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    INTERFACE       reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    FUNCTION        reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    VARIABLE        reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    INCREASE        reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    DECREMENT       reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    IF              reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    WHILE           reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    FOR             reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    CONST           reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    DEFINE          reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    ARRAY           reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    NEW             reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    COMMA           reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    RETURN          reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    BREAK           reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 225 (associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET .)


state 337

    (248) structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET .
    (249) structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET . COMMA structure_matrix_second

    RIGHT_BRACKET   reduce using rule 248 (structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET .)
    COMMA           shift and go to state 398


state 338

    (247) matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .

    ECHO            reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    PRINT           reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    CLASS           reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    INTERFACE       reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    FUNCTION        reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    VARIABLE        reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    INCREASE        reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    DECREMENT       reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    IF              reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    WHILE           reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    FOR             reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    CONST           reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    DEFINE          reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    ARRAY           reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    LEFT_BRACKET    reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    NEW             reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    COMMA           reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    RIGHT_PAREN     reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    RETURN          reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    BREAK           reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)
    RIGHT_BRACE     reduce using rule 247 (matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON .)


state 339

    (262) object_creation -> NEW IDENTIFIER LEFT_PAREN params . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 399


state 340

    (143) factor -> LEFT_PAREN expression . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 235


state 341

    (238) access_array_element -> VARIABLE LEFT_BRACKET . INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE LEFT_BRACKET . VARIABLE RIGHT_BRACKET

    INTEGER         shift and go to state 401
    VARIABLE        shift and go to state 400


state 342

    (82) false_boolean_types -> ARRAY LEFT_PAREN . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 286


state 343

    (75) true_boolean_types -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 285
    boolean                        shift and go to state 64

state 344

    (75) true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .

    LOGIC_AND       reduce using rule 75 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    LOGIC_OR        reduce using rule 75 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    LOGIC_XOR       reduce using rule 75 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    COMMA           reduce using rule 75 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 75 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    SEMICOLON       reduce using rule 75 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 75 (true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN .)


state 345

    (275) class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE . class_body RIGHT_BRACE
    (286) class_body -> . class_body class_member
    (287) class_body -> .

    RIGHT_BRACE     reduce using rule 287 (class_body -> .)
    PUBLIC          reduce using rule 287 (class_body -> .)
    PRIVATE         reduce using rule 287 (class_body -> .)
    PROTECTED       reduce using rule 287 (class_body -> .)
    STATIC          reduce using rule 287 (class_body -> .)
    FUNCTION        reduce using rule 287 (class_body -> .)
    VARIABLE        reduce using rule 287 (class_body -> .)
    CONST           reduce using rule 287 (class_body -> .)
    DEFINE          reduce using rule 287 (class_body -> .)

    class_body                     shift and go to state 402

state 346

    (282) class_implements_opt -> IMPLEMENTS interface_list .
    (285) interface_list -> interface_list . COMMA IDENTIFIER

    LEFT_BRACE      reduce using rule 282 (class_implements_opt -> IMPLEMENTS interface_list .)
    COMMA           shift and go to state 403


state 347

    (284) interface_list -> IDENTIFIER .

    COMMA           reduce using rule 284 (interface_list -> IDENTIFIER .)
    LEFT_BRACE      reduce using rule 284 (interface_list -> IDENTIFIER .)


state 348

    (276) interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body . RIGHT_BRACE
    (277) interface_body -> interface_body . interface_method
    (279) interface_method -> . visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON
    (294) visibility_opt -> . PUBLIC
    (295) visibility_opt -> . PRIVATE
    (296) visibility_opt -> . PROTECTED
    (297) visibility_opt -> .

    RIGHT_BRACE     shift and go to state 404
    PUBLIC          shift and go to state 407
    PRIVATE         shift and go to state 408
    PROTECTED       shift and go to state 409
    FUNCTION        reduce using rule 297 (visibility_opt -> .)

    interface_method               shift and go to state 405
    visibility_opt                 shift and go to state 406

state 349

    (176) function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN . codeblock
    (183) codeblock -> . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 411

    codeblock                      shift and go to state 410

state 350

    (173) real_params -> real_params COMMA . VARIABLE
    (174) real_params -> real_params COMMA . values
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 412
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 413
    boolean                        shift and go to state 64

state 351

    (168) function_invocation -> VARIABLE LEFT_PAREN params . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 414


state 352

    (167) function_invocation -> IDENTIFIER LEFT_PAREN params . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 415


state 353

    (186) string_special_function -> STRLEN LEFT_PAREN string_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 416


state 354

    (189) string_param -> STRING .

    RIGHT_PAREN     reduce using rule 189 (string_param -> STRING .)
    COMMA           reduce using rule 189 (string_param -> STRING .)


state 355

    (190) string_param -> VARIABLE .

    RIGHT_PAREN     reduce using rule 190 (string_param -> VARIABLE .)
    COMMA           reduce using rule 190 (string_param -> VARIABLE .)


state 356

    (191) string_param -> INTEGER .

    RIGHT_PAREN     reduce using rule 191 (string_param -> INTEGER .)
    COMMA           reduce using rule 191 (string_param -> INTEGER .)


state 357

    (187) string_special_function -> SUBSTR LEFT_PAREN string_param . COMMA int_param RIGHT_PAREN
    (188) string_special_function -> SUBSTR LEFT_PAREN string_param . COMMA int_param COMMA int_param RIGHT_PAREN

    COMMA           shift and go to state 417


state 358

    (184) input -> FEGTS LEFT_PAREN STDIN . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 418


state 359

    (185) input -> READLINE LEFT_PAREN STRING . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 419


state 360

    (197) array_special_function -> COUNT LEFT_PAREN structure_array_principal . count_param RIGHT_PAREN
    (209) count_param -> . COMMA COUNT_NORMAL
    (210) count_param -> . COMMA COUNT_RECURSIVE
    (211) count_param -> .

    COMMA           shift and go to state 421
    RIGHT_PAREN     reduce using rule 211 (count_param -> .)

    count_param                    shift and go to state 420

state 361

    (198) array_special_function -> COUNT LEFT_PAREN structure_matrix_principal . count_param RIGHT_PAREN
    (209) count_param -> . COMMA COUNT_NORMAL
    (210) count_param -> . COMMA COUNT_RECURSIVE
    (211) count_param -> .

    COMMA           shift and go to state 421
    RIGHT_PAREN     reduce using rule 211 (count_param -> .)

    count_param                    shift and go to state 422

state 362

    (199) array_special_function -> COUNT LEFT_PAREN VARIABLE . count_param RIGHT_PAREN
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (258) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (240) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (209) count_param -> . COMMA COUNT_NORMAL
    (210) count_param -> . COMMA COUNT_RECURSIVE
    (211) count_param -> .

    LEFT_BRACKET    shift and go to state 90
    COMMA           shift and go to state 421
    RIGHT_PAREN     reduce using rule 211 (count_param -> .)

    count_param                    shift and go to state 423

state 363

    (202) statement_array_special_function_error -> COUNT LEFT_PAREN error . count_param RIGHT_PAREN
    (209) count_param -> . COMMA COUNT_NORMAL
    (210) count_param -> . COMMA COUNT_RECURSIVE
    (211) count_param -> .

    COMMA           shift and go to state 421
    RIGHT_PAREN     reduce using rule 211 (count_param -> .)

    count_param                    shift and go to state 424

state 364

    (222) structure_array_principal -> access_array_element .
    (236) access_array_stucture -> access_array_element .

  ! reduce/reduce conflict for COMMA resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RIGHT_PAREN resolved using rule 222 (structure_array_principal -> access_array_element .)
    COMMA           reduce using rule 222 (structure_array_principal -> access_array_element .)
    RIGHT_PAREN     reduce using rule 222 (structure_array_principal -> access_array_element .)

  ! COMMA           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! RIGHT_PAREN     [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]


state 365

    (200) array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 425


state 366

    (203) statement_array_special_function_error -> ARRAY_POP LEFT_PAREN error . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 426


state 367

    (201) array_special_function -> ARRAY_SUM LEFT_PAREN VARIABLE . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 427


state 368

    (204) statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN error . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 428


state 369

    (179) arrow_function -> FN LEFT_PAREN params . RIGHT_PAREN EQUALS GREATER_THAN codeblock
    (180) arrow_function -> FN LEFT_PAREN params . RIGHT_PAREN EQUALS GREATER_THAN print_statement
    (181) arrow_function -> FN LEFT_PAREN params . RIGHT_PAREN EQUALS GREATER_THAN expression

    RIGHT_PAREN     shift and go to state 429


state 370

    (182) anonymous_functions -> FUNCTION LEFT_PAREN params . RIGHT_PAREN codeblock

    RIGHT_PAREN     shift and go to state 430


state 371

    (75) true_boolean_types -> ARRAY LEFT_PAREN values . RIGHT_PAREN
    (230) values_array_indexed -> values .
    (231) values_array_indexed -> values . COMMA values_array_indexed

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 344
    COMMA           shift and go to state 332

  ! RIGHT_PAREN     [ reduce using rule 230 (values_array_indexed -> values .) ]


state 372

    (253) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET . VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET . INTEGER RIGHT_BRACKET

    VARIABLE        shift and go to state 431
    INTEGER         shift and go to state 432


state 373

    (252) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET . INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET . VARIABLE RIGHT_BRACKET

    INTEGER         shift and go to state 434
    VARIABLE        shift and go to state 433


state 374

    (258) add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .

    ECHO            reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    PRINT           reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    CLASS           reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    INTERFACE       reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    FUNCTION        reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    VARIABLE        reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    INCREASE        reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    DECREMENT       reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    IF              reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    WHILE           reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    FOR             reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    CONST           reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    DEFINE          reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    ARRAY           reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    LEFT_BRACKET    reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    NEW             reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    PHP_END_IDENTIFIER reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    SEMICOLON       reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    COMMA           reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    RIGHT_PAREN     reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    RETURN          reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    BREAK           reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)
    RIGHT_BRACE     reduce using rule 258 (add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array .)


state 375

    (223) indexed_array -> ARRAY . LEFT_PAREN values_array_indexed RIGHT_PAREN

    LEFT_PAREN      shift and go to state 435


state 376

    (265) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS . values
    (266) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS . VARIABLE
    (267) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS . access_array_element
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 436
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 437
    access_array_element           shift and go to state 438
    boolean                        shift and go to state 64

state 377

    (273) accessType -> IDENTIFIER LEFT_BRACKET . INTEGER RIGHT_BRACKET

    INTEGER         shift and go to state 439


state 378

    (270) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS . values
    (271) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS . VARIABLE
    (272) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS . access_array_element
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 442
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    access_array_element           shift and go to state 440
    values                         shift and go to state 441
    boolean                        shift and go to state 64

state 379

    (15) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE else_statement
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 445
    BREAK           shift and go to state 446
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 443
    sentence                       shift and go to state 444
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 380

    (14) while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 445
    BREAK           shift and go to state 446
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 447
    sentence                       shift and go to state 444
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 381

    (42) expression_for -> LEFT_PAREN . expression_for RIGHT_PAREN
    (39) expression_for -> . VARIABLE
    (40) expression_for -> . number_values
    (41) expression_for -> . expression_for operator_aritmetic expression_for
    (42) expression_for -> . LEFT_PAREN expression_for RIGHT_PAREN
    (43) expression_for -> . IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> . IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
    (45) expression_for -> . length_operations
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT
    (212) length_operations -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (213) length_operations -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (214) length_operations -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (215) length_operations -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN

    VARIABLE        shift and go to state 382
    LEFT_PAREN      shift and go to state 381
    IDENTIFIER      shift and go to state 385
    INTEGER         shift and go to state 387
    FLOAT           shift and go to state 388
    COUNT           shift and go to state 389
    STRLEN          shift and go to state 390

    expression_for                 shift and go to state 448
    number_values                  shift and go to state 384
    length_operations              shift and go to state 386

state 382

    (39) expression_for -> VARIABLE .

    SEMICOLON       reduce using rule 39 (expression_for -> VARIABLE .)
    PLUS            reduce using rule 39 (expression_for -> VARIABLE .)
    MINUS           reduce using rule 39 (expression_for -> VARIABLE .)
    MULTIPLY        reduce using rule 39 (expression_for -> VARIABLE .)
    DIVIDE          reduce using rule 39 (expression_for -> VARIABLE .)
    MODULE          reduce using rule 39 (expression_for -> VARIABLE .)
    POW             reduce using rule 39 (expression_for -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 39 (expression_for -> VARIABLE .)


state 383

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for . SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (41) expression_for -> expression_for . operator_aritmetic expression_for
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

    SEMICOLON       shift and go to state 449
    PLUS            shift and go to state 451
    MINUS           shift and go to state 452
    MULTIPLY        shift and go to state 453
    DIVIDE          shift and go to state 454
    MODULE          shift and go to state 455
    POW             shift and go to state 456

    operator_aritmetic             shift and go to state 450

state 384

    (40) expression_for -> number_values .

    SEMICOLON       reduce using rule 40 (expression_for -> number_values .)
    PLUS            reduce using rule 40 (expression_for -> number_values .)
    MINUS           reduce using rule 40 (expression_for -> number_values .)
    MULTIPLY        reduce using rule 40 (expression_for -> number_values .)
    DIVIDE          reduce using rule 40 (expression_for -> number_values .)
    MODULE          reduce using rule 40 (expression_for -> number_values .)
    POW             reduce using rule 40 (expression_for -> number_values .)
    RIGHT_PAREN     reduce using rule 40 (expression_for -> number_values .)


state 385

    (43) expression_for -> IDENTIFIER . LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> IDENTIFIER . LEFT_PAREN access_array_element RIGHT_PAREN

    LEFT_PAREN      shift and go to state 457


state 386

    (45) expression_for -> length_operations .

    SEMICOLON       reduce using rule 45 (expression_for -> length_operations .)
    PLUS            reduce using rule 45 (expression_for -> length_operations .)
    MINUS           reduce using rule 45 (expression_for -> length_operations .)
    MULTIPLY        reduce using rule 45 (expression_for -> length_operations .)
    DIVIDE          reduce using rule 45 (expression_for -> length_operations .)
    MODULE          reduce using rule 45 (expression_for -> length_operations .)
    POW             reduce using rule 45 (expression_for -> length_operations .)
    RIGHT_PAREN     reduce using rule 45 (expression_for -> length_operations .)


state 387

    (46) number_values -> INTEGER .

    SEMICOLON       reduce using rule 46 (number_values -> INTEGER .)
    PLUS            reduce using rule 46 (number_values -> INTEGER .)
    MINUS           reduce using rule 46 (number_values -> INTEGER .)
    MULTIPLY        reduce using rule 46 (number_values -> INTEGER .)
    DIVIDE          reduce using rule 46 (number_values -> INTEGER .)
    MODULE          reduce using rule 46 (number_values -> INTEGER .)
    POW             reduce using rule 46 (number_values -> INTEGER .)
    RIGHT_PAREN     reduce using rule 46 (number_values -> INTEGER .)


state 388

    (47) number_values -> FLOAT .

    SEMICOLON       reduce using rule 47 (number_values -> FLOAT .)
    PLUS            reduce using rule 47 (number_values -> FLOAT .)
    MINUS           reduce using rule 47 (number_values -> FLOAT .)
    MULTIPLY        reduce using rule 47 (number_values -> FLOAT .)
    DIVIDE          reduce using rule 47 (number_values -> FLOAT .)
    MODULE          reduce using rule 47 (number_values -> FLOAT .)
    POW             reduce using rule 47 (number_values -> FLOAT .)
    RIGHT_PAREN     reduce using rule 47 (number_values -> FLOAT .)


state 389

    (212) length_operations -> COUNT . LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (213) length_operations -> COUNT . LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (214) length_operations -> COUNT . LEFT_PAREN VARIABLE count_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 458


state 390

    (215) length_operations -> STRLEN . LEFT_PAREN string_param RIGHT_PAREN

    LEFT_PAREN      shift and go to state 459


state 391

    (166) define_syntax -> DEFINE LEFT_PAREN STRING COMMA values . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 460


state 392

    (250) structure_matrix_first -> ARRAY LEFT_PAREN values . RIGHT_PAREN
    (251) structure_matrix_first -> ARRAY LEFT_PAREN values . RIGHT_PAREN COMMA structure_matrix_first
    (230) values_array_indexed -> values .
    (231) values_array_indexed -> values . COMMA values_array_indexed

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 461
    COMMA           shift and go to state 332

  ! RIGHT_PAREN     [ reduce using rule 230 (values_array_indexed -> values .) ]


state 393

    (246) matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .

    ECHO            reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    PRINT           reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    CLASS           reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    INTERFACE       reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    FUNCTION        reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    VARIABLE        reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    INCREASE        reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    DECREMENT       reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    IF              reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    WHILE           reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    FOR             reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    CONST           reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    DEFINE          reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    ARRAY           reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    LEFT_BRACKET    reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    NEW             reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    PHP_END_IDENTIFIER reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    SEMICOLON       reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    COMMA           reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    RIGHT_PAREN     reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    RETURN          reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    BREAK           reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)
    RIGHT_BRACE     reduce using rule 246 (matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON .)


state 394

    (231) values_array_indexed -> values COMMA values_array_indexed .

    RIGHT_PAREN     reduce using rule 231 (values_array_indexed -> values COMMA values_array_indexed .)


state 395

    (233) values_array_indexed -> object_creation COMMA values_array_indexed .

    RIGHT_PAREN     reduce using rule 233 (values_array_indexed -> object_creation COMMA values_array_indexed .)


state 396

    (235) values_array_indexed -> indexed_array COMMA values_array_indexed .

    RIGHT_PAREN     reduce using rule 235 (values_array_indexed -> indexed_array COMMA values_array_indexed .)


state 397

    (226) structure_array -> key EQUALS GREATER_THAN . values
    (227) structure_array -> key EQUALS GREATER_THAN . values COMMA structure_array
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 462
    boolean                        shift and go to state 64

state 398

    (249) structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA . structure_matrix_second
    (248) structure_matrix_second -> . LEFT_BRACKET values RIGHT_BRACKET
    (249) structure_matrix_second -> . LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second

    LEFT_BRACKET    shift and go to state 107

    structure_matrix_second        shift and go to state 463

state 399

    (262) object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .

    ECHO            reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    PRINT           reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    CLASS           reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    INTERFACE       reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    FUNCTION        reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    VARIABLE        reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    INCREASE        reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    DECREMENT       reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    IF              reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    WHILE           reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    FOR             reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    CONST           reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    DEFINE          reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    ARRAY           reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    NEW             reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    COMMA           reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    SEMICOLON       reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RETURN          reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    BREAK           reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 262 (object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)


state 400

    (239) access_array_element -> VARIABLE LEFT_BRACKET VARIABLE . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 464


state 401

    (238) access_array_element -> VARIABLE LEFT_BRACKET INTEGER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 465


state 402

    (275) class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body . RIGHT_BRACE
    (286) class_body -> class_body . class_member
    (288) class_member -> . visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (289) class_member -> . visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (290) class_member -> . class_attribute
    (294) visibility_opt -> . PUBLIC
    (295) visibility_opt -> . PRIVATE
    (296) visibility_opt -> . PROTECTED
    (297) visibility_opt -> .
    (291) class_attribute -> . visibility_opt VARIABLE EQUALS values SEMICOLON
    (292) class_attribute -> . visibility_opt VARIABLE SEMICOLON
    (293) class_attribute -> . visibility_opt constant_assignment SEMICOLON

    RIGHT_BRACE     shift and go to state 466
    PUBLIC          shift and go to state 407
    PRIVATE         shift and go to state 408
    PROTECTED       shift and go to state 409
    STATIC          reduce using rule 297 (visibility_opt -> .)
    FUNCTION        reduce using rule 297 (visibility_opt -> .)
    VARIABLE        reduce using rule 297 (visibility_opt -> .)
    CONST           reduce using rule 297 (visibility_opt -> .)
    DEFINE          reduce using rule 297 (visibility_opt -> .)

    class_member                   shift and go to state 467
    visibility_opt                 shift and go to state 468
    class_attribute                shift and go to state 469

state 403

    (285) interface_list -> interface_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 470


state 404

    (276) interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .

    ECHO            reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    PRINT           reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    CLASS           reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    INTERFACE       reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    FUNCTION        reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    VARIABLE        reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    INCREASE        reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    DECREMENT       reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    IF              reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    WHILE           reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    FOR             reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    CONST           reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    DEFINE          reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    ARRAY           reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    NEW             reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    RETURN          reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    BREAK           reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 276 (interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE .)


state 405

    (277) interface_body -> interface_body interface_method .

    RIGHT_BRACE     reduce using rule 277 (interface_body -> interface_body interface_method .)
    PUBLIC          reduce using rule 277 (interface_body -> interface_body interface_method .)
    PRIVATE         reduce using rule 277 (interface_body -> interface_body interface_method .)
    PROTECTED       reduce using rule 277 (interface_body -> interface_body interface_method .)
    FUNCTION        reduce using rule 277 (interface_body -> interface_body interface_method .)


state 406

    (279) interface_method -> visibility_opt . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON

    FUNCTION        shift and go to state 471


state 407

    (294) visibility_opt -> PUBLIC .

    FUNCTION        reduce using rule 294 (visibility_opt -> PUBLIC .)
    STATIC          reduce using rule 294 (visibility_opt -> PUBLIC .)
    VARIABLE        reduce using rule 294 (visibility_opt -> PUBLIC .)
    CONST           reduce using rule 294 (visibility_opt -> PUBLIC .)
    DEFINE          reduce using rule 294 (visibility_opt -> PUBLIC .)


state 408

    (295) visibility_opt -> PRIVATE .

    FUNCTION        reduce using rule 295 (visibility_opt -> PRIVATE .)
    STATIC          reduce using rule 295 (visibility_opt -> PRIVATE .)
    VARIABLE        reduce using rule 295 (visibility_opt -> PRIVATE .)
    CONST           reduce using rule 295 (visibility_opt -> PRIVATE .)
    DEFINE          reduce using rule 295 (visibility_opt -> PRIVATE .)


state 409

    (296) visibility_opt -> PROTECTED .

    FUNCTION        reduce using rule 296 (visibility_opt -> PROTECTED .)
    STATIC          reduce using rule 296 (visibility_opt -> PROTECTED .)
    VARIABLE        reduce using rule 296 (visibility_opt -> PROTECTED .)
    CONST           reduce using rule 296 (visibility_opt -> PROTECTED .)
    DEFINE          reduce using rule 296 (visibility_opt -> PROTECTED .)


state 410

    (176) function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .

    ECHO            reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    PRINT           reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    CLASS           reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    INTERFACE       reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    FUNCTION        reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    VARIABLE        reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    INCREASE        reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    DECREMENT       reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    IF              reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    WHILE           reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    FOR             reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    CONST           reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    DEFINE          reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    ARRAY           reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    LEFT_BRACKET    reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    NEW             reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    PHP_END_IDENTIFIER reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    RETURN          reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    BREAK           reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)
    RIGHT_BRACE     reduce using rule 176 (function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock .)


state 411

    (183) codeblock -> LEFT_BRACE . body_statement RIGHT_BRACE
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 445
    BREAK           shift and go to state 446
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 472
    sentence                       shift and go to state 444
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 412

    (173) real_params -> real_params COMMA VARIABLE .

    COMMA           reduce using rule 173 (real_params -> real_params COMMA VARIABLE .)
    RIGHT_PAREN     reduce using rule 173 (real_params -> real_params COMMA VARIABLE .)


state 413

    (174) real_params -> real_params COMMA values .

    COMMA           reduce using rule 174 (real_params -> real_params COMMA values .)
    RIGHT_PAREN     reduce using rule 174 (real_params -> real_params COMMA values .)


state 414

    (168) function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .

    SEMICOLON       reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    ECHO            reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    PRINT           reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    CLASS           reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    INTERFACE       reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    FUNCTION        reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    VARIABLE        reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    INCREASE        reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    DECREMENT       reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    IF              reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    WHILE           reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    FOR             reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    CONST           reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    DEFINE          reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    ARRAY           reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    NEW             reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    COMMA           reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    RETURN          reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    BREAK           reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 168 (function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN .)


state 415

    (167) function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .

    SEMICOLON       reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    ECHO            reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    PRINT           reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    CLASS           reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    INTERFACE       reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    FUNCTION        reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    VARIABLE        reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    INCREASE        reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    DECREMENT       reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    IF              reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    WHILE           reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    FOR             reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    CONST           reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    DEFINE          reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    ARRAY           reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    LEFT_BRACKET    reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    NEW             reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    PHP_END_IDENTIFIER reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    COMMA           reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    STRING_CONCATENATION reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RETURN          reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    BREAK           reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)
    RIGHT_BRACE     reduce using rule 167 (function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN .)


state 416

    (186) string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 186 (string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)


state 417

    (187) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA . int_param RIGHT_PAREN
    (188) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA . int_param COMMA int_param RIGHT_PAREN
    (192) int_param -> . INTEGER
    (193) int_param -> . VARIABLE
    (194) int_param -> . STRING

    INTEGER         shift and go to state 474
    VARIABLE        shift and go to state 475
    STRING          shift and go to state 476

    int_param                      shift and go to state 473

state 418

    (184) input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN .

    SEMICOLON       reduce using rule 184 (input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN .)


state 419

    (185) input -> READLINE LEFT_PAREN STRING RIGHT_PAREN .

    SEMICOLON       reduce using rule 185 (input -> READLINE LEFT_PAREN STRING RIGHT_PAREN .)


state 420

    (197) array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 477


state 421

    (209) count_param -> COMMA . COUNT_NORMAL
    (210) count_param -> COMMA . COUNT_RECURSIVE

    COUNT_NORMAL    shift and go to state 478
    COUNT_RECURSIVE shift and go to state 479


state 422

    (198) array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 480


state 423

    (199) array_special_function -> COUNT LEFT_PAREN VARIABLE count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 481


state 424

    (202) statement_array_special_function_error -> COUNT LEFT_PAREN error count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 482


state 425

    (200) array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN .

    SEMICOLON       reduce using rule 200 (array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN .)


state 426

    (203) statement_array_special_function_error -> ARRAY_POP LEFT_PAREN error RIGHT_PAREN .

    SEMICOLON       reduce using rule 203 (statement_array_special_function_error -> ARRAY_POP LEFT_PAREN error RIGHT_PAREN .)


state 427

    (201) array_special_function -> ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN .

    SEMICOLON       reduce using rule 201 (array_special_function -> ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN .)


state 428

    (204) statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN error RIGHT_PAREN .

    SEMICOLON       reduce using rule 204 (statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN error RIGHT_PAREN .)


state 429

    (179) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN . EQUALS GREATER_THAN codeblock
    (180) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN . EQUALS GREATER_THAN print_statement
    (181) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN . EQUALS GREATER_THAN expression

    EQUALS          shift and go to state 483


state 430

    (182) anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN . codeblock
    (183) codeblock -> . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 411

    codeblock                      shift and go to state 484

state 431

    (253) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 485


state 432

    (254) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 486


state 433

    (255) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 487


state 434

    (252) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 488


state 435

    (223) indexed_array -> ARRAY LEFT_PAREN . values_array_indexed RIGHT_PAREN
    (230) values_array_indexed -> . values
    (231) values_array_indexed -> . values COMMA values_array_indexed
    (232) values_array_indexed -> . object_creation
    (233) values_array_indexed -> . object_creation COMMA values_array_indexed
    (234) values_array_indexed -> . indexed_array
    (235) values_array_indexed -> . indexed_array COMMA values_array_indexed
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    NEW             shift and go to state 49
    ARRAY           shift and go to state 375
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values_array_indexed           shift and go to state 213
    values                         shift and go to state 216
    object_creation                shift and go to state 217
    indexed_array                  shift and go to state 218
    boolean                        shift and go to state 64

state 436

    (266) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    ECHO            reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    PRINT           reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    CLASS           reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    INTERFACE       reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    FUNCTION        reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    VARIABLE        reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    INCREASE        reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    DECREMENT       reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    IF              reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    WHILE           reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    FOR             reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    CONST           reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    DEFINE          reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    ARRAY           reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    NEW             reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    PHP_END_IDENTIFIER reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    COMMA           reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RETURN          reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    BREAK           reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RIGHT_BRACE     reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    LEFT_BRACKET    shift and go to state 341

  ! LEFT_BRACKET    [ reduce using rule 266 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE .) ]


state 437

    (265) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .

    ECHO            reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    PRINT           reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    CLASS           reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    INTERFACE       reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    FUNCTION        reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    VARIABLE        reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    INCREASE        reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    DECREMENT       reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    IF              reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    WHILE           reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    FOR             reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    CONST           reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    DEFINE          reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    ARRAY           reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    LEFT_BRACKET    reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    NEW             reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    PHP_END_IDENTIFIER reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    COMMA           reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    STRING_CONCATENATION reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    SEMICOLON       reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    RIGHT_PAREN     reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    RETURN          reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    BREAK           reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)
    RIGHT_BRACE     reduce using rule 265 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values .)


state 438

    (267) access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .

    ECHO            reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    PRINT           reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    CLASS           reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    INTERFACE       reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    FUNCTION        reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    VARIABLE        reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    INCREASE        reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    DECREMENT       reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    IF              reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    WHILE           reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    FOR             reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    CONST           reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    DEFINE          reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    ARRAY           reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    LEFT_BRACKET    reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    NEW             reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    PHP_END_IDENTIFIER reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    COMMA           reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    STRING_CONCATENATION reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    SEMICOLON       reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RIGHT_PAREN     reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RETURN          reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    BREAK           reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RIGHT_BRACE     reduce using rule 267 (access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element .)


state 439

    (273) accessType -> IDENTIFIER LEFT_BRACKET INTEGER . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 489


state 440

    (272) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .

    ECHO            reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    PRINT           reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    CLASS           reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    INTERFACE       reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    FUNCTION        reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    VARIABLE        reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    INCREASE        reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    DECREMENT       reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    IF              reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    WHILE           reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    FOR             reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    CONST           reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    DEFINE          reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    ARRAY           reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    LEFT_BRACKET    reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    NEW             reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    PHP_END_IDENTIFIER reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    COMMA           reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    STRING_CONCATENATION reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    SEMICOLON       reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RIGHT_PAREN     reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RETURN          reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    BREAK           reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)
    RIGHT_BRACE     reduce using rule 272 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element .)


state 441

    (270) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .

    ECHO            reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    PRINT           reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    CLASS           reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    INTERFACE       reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    FUNCTION        reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    VARIABLE        reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    INCREASE        reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    DECREMENT       reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    IF              reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    WHILE           reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    FOR             reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    CONST           reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    DEFINE          reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    ARRAY           reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    LEFT_BRACKET    reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    NEW             reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    PHP_END_IDENTIFIER reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    COMMA           reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    STRING_CONCATENATION reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    SEMICOLON       reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    RIGHT_PAREN     reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    RETURN          reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    BREAK           reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)
    RIGHT_BRACE     reduce using rule 270 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values .)


state 442

    (271) access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET

  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
    ECHO            reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    PRINT           reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    CLASS           reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    INTERFACE       reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    FUNCTION        reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    VARIABLE        reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    INCREASE        reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    DECREMENT       reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    IF              reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    WHILE           reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    FOR             reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    CONST           reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    DEFINE          reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    ARRAY           reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    NEW             reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    PHP_END_IDENTIFIER reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    COMMA           reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    STRING_CONCATENATION reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    SEMICOLON       reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RIGHT_PAREN     reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RETURN          reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    BREAK           reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    RIGHT_BRACE     reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .)
    LEFT_BRACKET    shift and go to state 341

  ! LEFT_BRACKET    [ reduce using rule 271 (access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE .) ]


state 443

    (15) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE
    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE else_statement

    RIGHT_BRACE     shift and go to state 490


state 444

    (22) body_statement -> sentence .
    (23) body_statement -> sentence . RETURN values SEMICOLON
    (24) body_statement -> sentence . RETURN SEMICOLON
    (25) body_statement -> sentence . BREAK SEMICOLON
    (26) body_statement -> sentence . body_statement
    (30) body_statement -> sentence . RETURN printable_values SEMICOLON
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RIGHT_BRACE     reduce using rule 22 (body_statement -> sentence .)
    RETURN          shift and go to state 491
    BREAK           shift and go to state 492
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    sentence                       shift and go to state 444
    body_statement                 shift and go to state 493
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 445

    (27) body_statement -> RETURN . values SEMICOLON
    (29) body_statement -> RETURN . printable_values SEMICOLON
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    VARIABLE        shift and go to state 57
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    error           shift and go to state 61
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    values                         shift and go to state 494
    printable_values               shift and go to state 495
    boolean                        shift and go to state 64
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean_expression             shift and go to state 65
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    access_array_element           shift and go to state 72
    expression                     shift and go to state 73
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 446

    (28) body_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 496


state 447

    (14) while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 497


state 448

    (42) expression_for -> LEFT_PAREN expression_for . RIGHT_PAREN
    (41) expression_for -> expression_for . operator_aritmetic expression_for
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

    RIGHT_PAREN     shift and go to state 498
    PLUS            shift and go to state 451
    MINUS           shift and go to state 452
    MULTIPLY        shift and go to state 453
    DIVIDE          shift and go to state 454
    MODULE          shift and go to state 455
    POW             shift and go to state 456

    operator_aritmetic             shift and go to state 450

state 449

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON . condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (38) condition_for -> . VARIABLE comparator_operator expression_for

    VARIABLE        shift and go to state 499

    condition_for                  shift and go to state 500

state 450

    (41) expression_for -> expression_for operator_aritmetic . expression_for
    (39) expression_for -> . VARIABLE
    (40) expression_for -> . number_values
    (41) expression_for -> . expression_for operator_aritmetic expression_for
    (42) expression_for -> . LEFT_PAREN expression_for RIGHT_PAREN
    (43) expression_for -> . IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> . IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
    (45) expression_for -> . length_operations
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT
    (212) length_operations -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (213) length_operations -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (214) length_operations -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (215) length_operations -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN

    VARIABLE        shift and go to state 382
    LEFT_PAREN      shift and go to state 381
    IDENTIFIER      shift and go to state 385
    INTEGER         shift and go to state 387
    FLOAT           shift and go to state 388
    COUNT           shift and go to state 389
    STRLEN          shift and go to state 390

    expression_for                 shift and go to state 501
    number_values                  shift and go to state 384
    length_operations              shift and go to state 386

state 451

    (48) operator_aritmetic -> PLUS .

    VARIABLE        reduce using rule 48 (operator_aritmetic -> PLUS .)
    LEFT_PAREN      reduce using rule 48 (operator_aritmetic -> PLUS .)
    IDENTIFIER      reduce using rule 48 (operator_aritmetic -> PLUS .)
    INTEGER         reduce using rule 48 (operator_aritmetic -> PLUS .)
    FLOAT           reduce using rule 48 (operator_aritmetic -> PLUS .)
    COUNT           reduce using rule 48 (operator_aritmetic -> PLUS .)
    STRLEN          reduce using rule 48 (operator_aritmetic -> PLUS .)


state 452

    (49) operator_aritmetic -> MINUS .

    VARIABLE        reduce using rule 49 (operator_aritmetic -> MINUS .)
    LEFT_PAREN      reduce using rule 49 (operator_aritmetic -> MINUS .)
    IDENTIFIER      reduce using rule 49 (operator_aritmetic -> MINUS .)
    INTEGER         reduce using rule 49 (operator_aritmetic -> MINUS .)
    FLOAT           reduce using rule 49 (operator_aritmetic -> MINUS .)
    COUNT           reduce using rule 49 (operator_aritmetic -> MINUS .)
    STRLEN          reduce using rule 49 (operator_aritmetic -> MINUS .)


state 453

    (50) operator_aritmetic -> MULTIPLY .

    VARIABLE        reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    LEFT_PAREN      reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    IDENTIFIER      reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    INTEGER         reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    FLOAT           reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    COUNT           reduce using rule 50 (operator_aritmetic -> MULTIPLY .)
    STRLEN          reduce using rule 50 (operator_aritmetic -> MULTIPLY .)


state 454

    (51) operator_aritmetic -> DIVIDE .

    VARIABLE        reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    LEFT_PAREN      reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    IDENTIFIER      reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    INTEGER         reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    FLOAT           reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    COUNT           reduce using rule 51 (operator_aritmetic -> DIVIDE .)
    STRLEN          reduce using rule 51 (operator_aritmetic -> DIVIDE .)


state 455

    (52) operator_aritmetic -> MODULE .

    VARIABLE        reduce using rule 52 (operator_aritmetic -> MODULE .)
    LEFT_PAREN      reduce using rule 52 (operator_aritmetic -> MODULE .)
    IDENTIFIER      reduce using rule 52 (operator_aritmetic -> MODULE .)
    INTEGER         reduce using rule 52 (operator_aritmetic -> MODULE .)
    FLOAT           reduce using rule 52 (operator_aritmetic -> MODULE .)
    COUNT           reduce using rule 52 (operator_aritmetic -> MODULE .)
    STRLEN          reduce using rule 52 (operator_aritmetic -> MODULE .)


state 456

    (53) operator_aritmetic -> POW .

    VARIABLE        reduce using rule 53 (operator_aritmetic -> POW .)
    LEFT_PAREN      reduce using rule 53 (operator_aritmetic -> POW .)
    IDENTIFIER      reduce using rule 53 (operator_aritmetic -> POW .)
    INTEGER         reduce using rule 53 (operator_aritmetic -> POW .)
    FLOAT           reduce using rule 53 (operator_aritmetic -> POW .)
    COUNT           reduce using rule 53 (operator_aritmetic -> POW .)
    STRLEN          reduce using rule 53 (operator_aritmetic -> POW .)


state 457

    (43) expression_for -> IDENTIFIER LEFT_PAREN . VARIABLE RIGHT_PAREN
    (44) expression_for -> IDENTIFIER LEFT_PAREN . access_array_element RIGHT_PAREN
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET

    VARIABLE        shift and go to state 502

    access_array_element           shift and go to state 503

state 458

    (212) length_operations -> COUNT LEFT_PAREN . structure_array_principal count_param RIGHT_PAREN
    (213) length_operations -> COUNT LEFT_PAREN . structure_matrix_principal count_param RIGHT_PAREN
    (214) length_operations -> COUNT LEFT_PAREN . VARIABLE count_param RIGHT_PAREN
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    VARIABLE        shift and go to state 506
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47

    structure_array_principal      shift and go to state 504
    structure_matrix_principal     shift and go to state 505
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 364
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    statement_access_array_element_error shift and go to state 48

state 459

    (215) length_operations -> STRLEN LEFT_PAREN . string_param RIGHT_PAREN
    (189) string_param -> . STRING
    (190) string_param -> . VARIABLE
    (191) string_param -> . INTEGER

    STRING          shift and go to state 354
    VARIABLE        shift and go to state 355
    INTEGER         shift and go to state 356

    string_param                   shift and go to state 507

state 460

    (166) define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN .

    SEMICOLON       reduce using rule 166 (define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN .)


state 461

    (250) structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN .
    (251) structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN . COMMA structure_matrix_first

    RIGHT_PAREN     reduce using rule 250 (structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN .)
    COMMA           shift and go to state 508


state 462

    (226) structure_array -> key EQUALS GREATER_THAN values .
    (227) structure_array -> key EQUALS GREATER_THAN values . COMMA structure_array

    RIGHT_PAREN     reduce using rule 226 (structure_array -> key EQUALS GREATER_THAN values .)
    RIGHT_BRACKET   reduce using rule 226 (structure_array -> key EQUALS GREATER_THAN values .)
    COMMA           shift and go to state 509


state 463

    (249) structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second .

    RIGHT_BRACKET   reduce using rule 249 (structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second .)


state 464

    (239) access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .

    LOGIC_AND       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    COMMA           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    ECHO            reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    PRINT           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    CLASS           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    INTERFACE       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    FUNCTION        reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    VARIABLE        reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    INCREASE        reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    DECREMENT       reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    IF              reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    WHILE           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    FOR             reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    CONST           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    DEFINE          reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    ARRAY           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    NEW             reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RETURN          reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    BREAK           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    MINUS           reduce using rule 239 (access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET .)


state 465

    (238) access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .

    LOGIC_AND       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ECHO            reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PRINT           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CLASS           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INTERFACE       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FUNCTION        reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    VARIABLE        reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INCREASE        reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DECREMENT       reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    IF              reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    WHILE           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FOR             reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CONST           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DEFINE          reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ARRAY           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    NEW             reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RETURN          reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    BREAK           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    MINUS           reduce using rule 238 (access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET .)


state 466

    (275) class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .

    ECHO            reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    PRINT           reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    CLASS           reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    INTERFACE       reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    FUNCTION        reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    VARIABLE        reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    INCREASE        reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    DECREMENT       reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    IF              reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    WHILE           reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    FOR             reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    CONST           reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    DEFINE          reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    ARRAY           reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    NEW             reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    RETURN          reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    BREAK           reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 275 (class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE .)


state 467

    (286) class_body -> class_body class_member .

    RIGHT_BRACE     reduce using rule 286 (class_body -> class_body class_member .)
    PUBLIC          reduce using rule 286 (class_body -> class_body class_member .)
    PRIVATE         reduce using rule 286 (class_body -> class_body class_member .)
    PROTECTED       reduce using rule 286 (class_body -> class_body class_member .)
    STATIC          reduce using rule 286 (class_body -> class_body class_member .)
    FUNCTION        reduce using rule 286 (class_body -> class_body class_member .)
    VARIABLE        reduce using rule 286 (class_body -> class_body class_member .)
    CONST           reduce using rule 286 (class_body -> class_body class_member .)
    DEFINE          reduce using rule 286 (class_body -> class_body class_member .)


state 468

    (288) class_member -> visibility_opt . STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (289) class_member -> visibility_opt . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (291) class_attribute -> visibility_opt . VARIABLE EQUALS values SEMICOLON
    (292) class_attribute -> visibility_opt . VARIABLE SEMICOLON
    (293) class_attribute -> visibility_opt . constant_assignment SEMICOLON
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN

    STATIC          shift and go to state 510
    FUNCTION        shift and go to state 511
    VARIABLE        shift and go to state 512
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45

    constant_assignment            shift and go to state 513
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29

state 469

    (290) class_member -> class_attribute .

    RIGHT_BRACE     reduce using rule 290 (class_member -> class_attribute .)
    PUBLIC          reduce using rule 290 (class_member -> class_attribute .)
    PRIVATE         reduce using rule 290 (class_member -> class_attribute .)
    PROTECTED       reduce using rule 290 (class_member -> class_attribute .)
    STATIC          reduce using rule 290 (class_member -> class_attribute .)
    FUNCTION        reduce using rule 290 (class_member -> class_attribute .)
    VARIABLE        reduce using rule 290 (class_member -> class_attribute .)
    CONST           reduce using rule 290 (class_member -> class_attribute .)
    DEFINE          reduce using rule 290 (class_member -> class_attribute .)


state 470

    (285) interface_list -> interface_list COMMA IDENTIFIER .

    COMMA           reduce using rule 285 (interface_list -> interface_list COMMA IDENTIFIER .)
    LEFT_BRACE      reduce using rule 285 (interface_list -> interface_list COMMA IDENTIFIER .)


state 471

    (279) interface_method -> visibility_opt FUNCTION . IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON

    IDENTIFIER      shift and go to state 514


state 472

    (183) codeblock -> LEFT_BRACE body_statement . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 515


state 473

    (187) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param . RIGHT_PAREN
    (188) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param . COMMA int_param RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 517
    COMMA           shift and go to state 516


state 474

    (192) int_param -> INTEGER .

    RIGHT_PAREN     reduce using rule 192 (int_param -> INTEGER .)
    COMMA           reduce using rule 192 (int_param -> INTEGER .)


state 475

    (193) int_param -> VARIABLE .

    RIGHT_PAREN     reduce using rule 193 (int_param -> VARIABLE .)
    COMMA           reduce using rule 193 (int_param -> VARIABLE .)


state 476

    (194) int_param -> STRING .

    RIGHT_PAREN     reduce using rule 194 (int_param -> STRING .)
    COMMA           reduce using rule 194 (int_param -> STRING .)


state 477

    (197) array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 197 (array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)


state 478

    (209) count_param -> COMMA COUNT_NORMAL .

    RIGHT_PAREN     reduce using rule 209 (count_param -> COMMA COUNT_NORMAL .)


state 479

    (210) count_param -> COMMA COUNT_RECURSIVE .

    RIGHT_PAREN     reduce using rule 210 (count_param -> COMMA COUNT_RECURSIVE .)


state 480

    (198) array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 198 (array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)


state 481

    (199) array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 199 (array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)


state 482

    (202) statement_array_special_function_error -> COUNT LEFT_PAREN error count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 202 (statement_array_special_function_error -> COUNT LEFT_PAREN error count_param RIGHT_PAREN .)


state 483

    (179) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS . GREATER_THAN codeblock
    (180) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS . GREATER_THAN print_statement
    (181) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS . GREATER_THAN expression

    GREATER_THAN    shift and go to state 518


state 484

    (182) anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock .

    SEMICOLON       reduce using rule 182 (anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock .)


state 485

    (253) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .

    SEMICOLON       reduce using rule 253 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS          reduce using rule 253 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 253 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 253 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 253 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 253 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    COMMA           reduce using rule 253 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 253 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 253 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)


state 486

    (254) access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .

    SEMICOLON       reduce using rule 254 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS          reduce using rule 254 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 254 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 254 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 254 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 254 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 254 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 254 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 254 (access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)


state 487

    (255) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .

    SEMICOLON       reduce using rule 255 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS          reduce using rule 255 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 255 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 255 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 255 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 255 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    COMMA           reduce using rule 255 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 255 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 255 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET .)


state 488

    (252) access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .

    SEMICOLON       reduce using rule 252 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS          reduce using rule 252 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    EQUALS_EQUALS   reduce using rule 252 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_AND       reduce using rule 252 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_OR        reduce using rule 252 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LOGIC_XOR       reduce using rule 252 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 252 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 252 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 252 (access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET .)


state 489

    (273) accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .

    EQUALS          reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ECHO            reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PRINT           reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CLASS           reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INTERFACE       reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FUNCTION        reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    VARIABLE        reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    INCREASE        reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DECREMENT       reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    IF              reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    WHILE           reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    FOR             reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    CONST           reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    DEFINE          reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    ARRAY           reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    NEW             reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    PHP_END_IDENTIFIER reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    COMMA           reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    STRING_CONCATENATION reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RETURN          reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    BREAK           reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 273 (accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .)


state 490

    (15) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .
    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE . elseif_statement
    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE . else_statement
    (18) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (21) else_statement -> . ELSE LEFT_BRACE body_statement RIGHT_BRACE

    ECHO            reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 15 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ELSEIF          shift and go to state 521
    ELSE            shift and go to state 522

    elseif_statement               shift and go to state 519
    else_statement                 shift and go to state 520

state 491

    (23) body_statement -> sentence RETURN . values SEMICOLON
    (24) body_statement -> sentence RETURN . SEMICOLON
    (30) body_statement -> sentence RETURN . printable_values SEMICOLON
    (27) body_statement -> RETURN . values SEMICOLON
    (29) body_statement -> RETURN . printable_values SEMICOLON
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (111) printable_values -> . values
    (112) printable_values -> . values printable_dividers printable_values
    (113) printable_values -> . VARIABLE
    (114) printable_values -> . VARIABLE printable_dividers printable_values
    (115) printable_values -> . VARIABLE STRING_CONCATENATION STRING
    (116) printable_values -> . conditional
    (117) printable_values -> . conditional printable_dividers printable_values
    (118) printable_values -> . structure_object_principal
    (119) printable_values -> . structure_object_principal printable_dividers printable_values
    (120) printable_values -> . values printable_dividers error
    (121) printable_values -> . VARIABLE printable_dividers error
    (122) printable_values -> . conditional printable_dividers error
    (123) printable_values -> . structure_object_principal printable_dividers error
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    SEMICOLON       shift and go to state 524
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    VARIABLE        shift and go to state 57
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    error           shift and go to state 61
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    NEW             shift and go to state 49
    LOGIC_NOT       shift and go to state 75
    ARRAY           shift and go to state 79
    NULL            shift and go to state 80

    values                         shift and go to state 523
    printable_values               shift and go to state 525
    boolean                        shift and go to state 64
    conditional                    shift and go to state 59
    structure_object_principal     shift and go to state 60
    boolean_expression             shift and go to state 65
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    access_array_element           shift and go to state 72
    expression                     shift and go to state 73
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 492

    (25) body_statement -> sentence BREAK . SEMICOLON
    (28) body_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 526


state 493

    (26) body_statement -> sentence body_statement .

    RIGHT_BRACE     reduce using rule 26 (body_statement -> sentence body_statement .)


state 494

    (27) body_statement -> RETURN values . SEMICOLON
    (111) printable_values -> values .
    (112) printable_values -> values . printable_dividers printable_values
    (120) printable_values -> values . printable_dividers error
    (86) comparation -> values . comparator_operator values
    (87) comparation -> values . comparator_operator expression
    (124) printable_dividers -> . COMMA
    (125) printable_dividers -> . STRING_CONCATENATION
    (97) comparator_operator -> . EQUALS_EQUALS
    (98) comparator_operator -> . IDENTICAL
    (99) comparator_operator -> . NOT_EQUALS
    (100) comparator_operator -> . NOT_IDENTICAL
    (101) comparator_operator -> . SMALL_THAN
    (102) comparator_operator -> . GREATER_THAN
    (103) comparator_operator -> . SMALL_EQUALS_TO
    (104) comparator_operator -> . GREATER_EQUALS_TO
    (105) comparator_operator -> . SPACECRAFT
    (106) comparator_operator -> . NULL_FUSION

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 527
    COMMA           shift and go to state 120
    STRING_CONCATENATION shift and go to state 121
    EQUALS_EQUALS   shift and go to state 122
    IDENTICAL       shift and go to state 123
    NOT_EQUALS      shift and go to state 124
    NOT_IDENTICAL   shift and go to state 125
    SMALL_THAN      shift and go to state 126
    GREATER_THAN    shift and go to state 127
    SMALL_EQUALS_TO shift and go to state 128
    GREATER_EQUALS_TO shift and go to state 129
    SPACECRAFT      shift and go to state 130
    NULL_FUSION     shift and go to state 131

  ! SEMICOLON       [ reduce using rule 111 (printable_values -> values .) ]

    printable_dividers             shift and go to state 118
    comparator_operator            shift and go to state 119

state 495

    (29) body_statement -> RETURN printable_values . SEMICOLON

    SEMICOLON       shift and go to state 528


state 496

    (28) body_statement -> BREAK SEMICOLON .

    RIGHT_BRACE     reduce using rule 28 (body_statement -> BREAK SEMICOLON .)


state 497

    (14) while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .

    ECHO            reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 14 (while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)


state 498

    (42) expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .

    SEMICOLON       reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    PLUS            reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    MINUS           reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    MULTIPLY        reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    DIVIDE          reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    MODULE          reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    POW             reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 42 (expression_for -> LEFT_PAREN expression_for RIGHT_PAREN .)


state 499

    (38) condition_for -> VARIABLE . comparator_operator expression_for
    (97) comparator_operator -> . EQUALS_EQUALS
    (98) comparator_operator -> . IDENTICAL
    (99) comparator_operator -> . NOT_EQUALS
    (100) comparator_operator -> . NOT_IDENTICAL
    (101) comparator_operator -> . SMALL_THAN
    (102) comparator_operator -> . GREATER_THAN
    (103) comparator_operator -> . SMALL_EQUALS_TO
    (104) comparator_operator -> . GREATER_EQUALS_TO
    (105) comparator_operator -> . SPACECRAFT
    (106) comparator_operator -> . NULL_FUSION

    EQUALS_EQUALS   shift and go to state 122
    IDENTICAL       shift and go to state 123
    NOT_EQUALS      shift and go to state 124
    NOT_IDENTICAL   shift and go to state 125
    SMALL_THAN      shift and go to state 126
    GREATER_THAN    shift and go to state 127
    SMALL_EQUALS_TO shift and go to state 128
    GREATER_EQUALS_TO shift and go to state 129
    SPACECRAFT      shift and go to state 130
    NULL_FUSION     shift and go to state 131

    comparator_operator            shift and go to state 529

state 500

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for . SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    SEMICOLON       shift and go to state 530


state 501

    (41) expression_for -> expression_for operator_aritmetic expression_for .
    (41) expression_for -> expression_for . operator_aritmetic expression_for
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    SEMICOLON       reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .)
    RIGHT_PAREN     reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .)
    PLUS            shift and go to state 451
    MINUS           shift and go to state 452
    MULTIPLY        shift and go to state 453
    DIVIDE          shift and go to state 454
    MODULE          shift and go to state 455
    POW             shift and go to state 456

  ! PLUS            [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! MINUS           [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! MULTIPLY        [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! DIVIDE          [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! MODULE          [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]
  ! POW             [ reduce using rule 41 (expression_for -> expression_for operator_aritmetic expression_for .) ]

    operator_aritmetic             shift and go to state 450

state 502

    (43) expression_for -> IDENTIFIER LEFT_PAREN VARIABLE . RIGHT_PAREN
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET

    RIGHT_PAREN     shift and go to state 531
    LEFT_BRACKET    shift and go to state 341


state 503

    (44) expression_for -> IDENTIFIER LEFT_PAREN access_array_element . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 532


state 504

    (212) length_operations -> COUNT LEFT_PAREN structure_array_principal . count_param RIGHT_PAREN
    (209) count_param -> . COMMA COUNT_NORMAL
    (210) count_param -> . COMMA COUNT_RECURSIVE
    (211) count_param -> .

    COMMA           shift and go to state 421
    RIGHT_PAREN     reduce using rule 211 (count_param -> .)

    count_param                    shift and go to state 533

state 505

    (213) length_operations -> COUNT LEFT_PAREN structure_matrix_principal . count_param RIGHT_PAREN
    (209) count_param -> . COMMA COUNT_NORMAL
    (210) count_param -> . COMMA COUNT_RECURSIVE
    (211) count_param -> .

    COMMA           shift and go to state 421
    RIGHT_PAREN     reduce using rule 211 (count_param -> .)

    count_param                    shift and go to state 534

state 506

    (214) length_operations -> COUNT LEFT_PAREN VARIABLE . count_param RIGHT_PAREN
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (258) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (240) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (209) count_param -> . COMMA COUNT_NORMAL
    (210) count_param -> . COMMA COUNT_RECURSIVE
    (211) count_param -> .

    LEFT_BRACKET    shift and go to state 90
    COMMA           shift and go to state 421
    RIGHT_PAREN     reduce using rule 211 (count_param -> .)

    count_param                    shift and go to state 535

state 507

    (215) length_operations -> STRLEN LEFT_PAREN string_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 536


state 508

    (251) structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA . structure_matrix_first
    (250) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (251) structure_matrix_first -> . ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first

    ARRAY           shift and go to state 537

    structure_matrix_first         shift and go to state 538

state 509

    (227) structure_array -> key EQUALS GREATER_THAN values COMMA . structure_array
    (226) structure_array -> . key EQUALS GREATER_THAN values
    (227) structure_array -> . key EQUALS GREATER_THAN values COMMA structure_array
    (228) key -> . INTEGER
    (229) key -> . STRING

    INTEGER         shift and go to state 223
    STRING          shift and go to state 224

    key                            shift and go to state 219
    structure_array                shift and go to state 539

state 510

    (288) class_member -> visibility_opt STATIC . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    FUNCTION        shift and go to state 540


state 511

    (289) class_member -> visibility_opt FUNCTION . IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    IDENTIFIER      shift and go to state 541


state 512

    (291) class_attribute -> visibility_opt VARIABLE . EQUALS values SEMICOLON
    (292) class_attribute -> visibility_opt VARIABLE . SEMICOLON

    EQUALS          shift and go to state 542
    SEMICOLON       shift and go to state 543


state 513

    (293) class_attribute -> visibility_opt constant_assignment . SEMICOLON

    SEMICOLON       shift and go to state 544


state 514

    (279) interface_method -> visibility_opt FUNCTION IDENTIFIER . LEFT_PAREN params RIGHT_PAREN SEMICOLON

    LEFT_PAREN      shift and go to state 545


state 515

    (183) codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .

    ECHO            reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)
    SEMICOLON       reduce using rule 183 (codeblock -> LEFT_BRACE body_statement RIGHT_BRACE .)


state 516

    (188) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA . int_param RIGHT_PAREN
    (192) int_param -> . INTEGER
    (193) int_param -> . VARIABLE
    (194) int_param -> . STRING

    INTEGER         shift and go to state 474
    VARIABLE        shift and go to state 475
    STRING          shift and go to state 476

    int_param                      shift and go to state 546

state 517

    (187) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 187 (string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN .)


state 518

    (179) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN . codeblock
    (180) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN . print_statement
    (181) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN . expression
    (183) codeblock -> . LEFT_BRACE body_statement RIGHT_BRACE
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    LEFT_BRACE      shift and go to state 411
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    INTEGER         shift and go to state 263
    FLOAT           shift and go to state 264
    VARIABLE        shift and go to state 243
    LEFT_PAREN      shift and go to state 244
    STRING          shift and go to state 265

    codeblock                      shift and go to state 547
    print_statement                shift and go to state 548
    expression                     shift and go to state 549
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 519

    (16) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .

    ECHO            reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    PRINT           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    CLASS           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    INTERFACE       reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    FUNCTION        reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    VARIABLE        reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    INCREASE        reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    DECREMENT       reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    IF              reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    WHILE           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    FOR             reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    CONST           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    DEFINE          reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    ARRAY           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    LEFT_BRACKET    reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    NEW             reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    PHP_END_IDENTIFIER reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    RETURN          reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    BREAK           reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    RIGHT_BRACE     reduce using rule 16 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)


state 520

    (17) if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .

    ECHO            reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    PRINT           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    CLASS           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    INTERFACE       reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    FUNCTION        reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    VARIABLE        reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    INCREASE        reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    DECREMENT       reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    IF              reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    WHILE           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    FOR             reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    CONST           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    DEFINE          reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    ARRAY           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    LEFT_BRACKET    reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    NEW             reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    PHP_END_IDENTIFIER reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    RETURN          reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    BREAK           reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    RIGHT_BRACE     reduce using rule 17 (if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)


state 521

    (18) elseif_statement -> ELSEIF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF . LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement

    LEFT_PAREN      shift and go to state 550


state 522

    (21) else_statement -> ELSE . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 551


state 523

    (23) body_statement -> sentence RETURN values . SEMICOLON
    (27) body_statement -> RETURN values . SEMICOLON
    (111) printable_values -> values .
    (112) printable_values -> values . printable_dividers printable_values
    (120) printable_values -> values . printable_dividers error
    (86) comparation -> values . comparator_operator values
    (87) comparation -> values . comparator_operator expression
    (124) printable_dividers -> . COMMA
    (125) printable_dividers -> . STRING_CONCATENATION
    (97) comparator_operator -> . EQUALS_EQUALS
    (98) comparator_operator -> . IDENTICAL
    (99) comparator_operator -> . NOT_EQUALS
    (100) comparator_operator -> . NOT_IDENTICAL
    (101) comparator_operator -> . SMALL_THAN
    (102) comparator_operator -> . GREATER_THAN
    (103) comparator_operator -> . SMALL_EQUALS_TO
    (104) comparator_operator -> . GREATER_EQUALS_TO
    (105) comparator_operator -> . SPACECRAFT
    (106) comparator_operator -> . NULL_FUSION

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 552
    COMMA           shift and go to state 120
    STRING_CONCATENATION shift and go to state 121
    EQUALS_EQUALS   shift and go to state 122
    IDENTICAL       shift and go to state 123
    NOT_EQUALS      shift and go to state 124
    NOT_IDENTICAL   shift and go to state 125
    SMALL_THAN      shift and go to state 126
    GREATER_THAN    shift and go to state 127
    SMALL_EQUALS_TO shift and go to state 128
    GREATER_EQUALS_TO shift and go to state 129
    SPACECRAFT      shift and go to state 130
    NULL_FUSION     shift and go to state 131

  ! SEMICOLON       [ reduce using rule 111 (printable_values -> values .) ]

    printable_dividers             shift and go to state 118
    comparator_operator            shift and go to state 119

state 524

    (24) body_statement -> sentence RETURN SEMICOLON .

    RIGHT_BRACE     reduce using rule 24 (body_statement -> sentence RETURN SEMICOLON .)


state 525

    (30) body_statement -> sentence RETURN printable_values . SEMICOLON
    (29) body_statement -> RETURN printable_values . SEMICOLON

    SEMICOLON       shift and go to state 553


state 526

    (25) body_statement -> sentence BREAK SEMICOLON .
    (28) body_statement -> BREAK SEMICOLON .

  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 25 (body_statement -> sentence BREAK SEMICOLON .)
    RIGHT_BRACE     reduce using rule 25 (body_statement -> sentence BREAK SEMICOLON .)

  ! RIGHT_BRACE     [ reduce using rule 28 (body_statement -> BREAK SEMICOLON .) ]


state 527

    (27) body_statement -> RETURN values SEMICOLON .

    RIGHT_BRACE     reduce using rule 27 (body_statement -> RETURN values SEMICOLON .)


state 528

    (29) body_statement -> RETURN printable_values SEMICOLON .

    RIGHT_BRACE     reduce using rule 29 (body_statement -> RETURN printable_values SEMICOLON .)


state 529

    (38) condition_for -> VARIABLE comparator_operator . expression_for
    (39) expression_for -> . VARIABLE
    (40) expression_for -> . number_values
    (41) expression_for -> . expression_for operator_aritmetic expression_for
    (42) expression_for -> . LEFT_PAREN expression_for RIGHT_PAREN
    (43) expression_for -> . IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN
    (44) expression_for -> . IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN
    (45) expression_for -> . length_operations
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT
    (212) length_operations -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (213) length_operations -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (214) length_operations -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (215) length_operations -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN

    VARIABLE        shift and go to state 382
    LEFT_PAREN      shift and go to state 381
    IDENTIFIER      shift and go to state 385
    INTEGER         shift and go to state 387
    FLOAT           shift and go to state 388
    COUNT           shift and go to state 389
    STRLEN          shift and go to state 390

    expression_for                 shift and go to state 554
    number_values                  shift and go to state 384
    length_operations              shift and go to state 386

state 530

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON . increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (32) increment_statement -> . VARIABLE INCREASE
    (33) increment_statement -> . VARIABLE DECREMENT
    (34) increment_statement -> . INCREASE VARIABLE
    (35) increment_statement -> . DECREMENT VARIABLE
    (36) increment_statement -> . VARIABLE PLUS_EQUALS INTEGER
    (37) increment_statement -> . VARIABLE EQUALS VARIABLE operator_aritmetic number_values

    VARIABLE        shift and go to state 555
    INCREASE        shift and go to state 557
    DECREMENT       shift and go to state 558

    increment_statement            shift and go to state 556

state 531

    (43) expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .

    SEMICOLON       reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    PLUS            reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    MINUS           reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    MULTIPLY        reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    DIVIDE          reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    MODULE          reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    POW             reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 43 (expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN .)


state 532

    (44) expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .

    SEMICOLON       reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    PLUS            reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    MINUS           reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    MULTIPLY        reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    DIVIDE          reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    MODULE          reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    POW             reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 44 (expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN .)


state 533

    (212) length_operations -> COUNT LEFT_PAREN structure_array_principal count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 559


state 534

    (213) length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 560


state 535

    (214) length_operations -> COUNT LEFT_PAREN VARIABLE count_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 561


state 536

    (215) length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 215 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    PLUS            reduce using rule 215 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    MINUS           reduce using rule 215 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    MULTIPLY        reduce using rule 215 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    DIVIDE          reduce using rule 215 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    MODULE          reduce using rule 215 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    POW             reduce using rule 215 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 215 (length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN .)


state 537

    (250) structure_matrix_first -> ARRAY . LEFT_PAREN values RIGHT_PAREN
    (251) structure_matrix_first -> ARRAY . LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first

    LEFT_PAREN      shift and go to state 562


state 538

    (251) structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first .

    RIGHT_PAREN     reduce using rule 251 (structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first .)


state 539

    (227) structure_array -> key EQUALS GREATER_THAN values COMMA structure_array .

    RIGHT_PAREN     reduce using rule 227 (structure_array -> key EQUALS GREATER_THAN values COMMA structure_array .)
    RIGHT_BRACKET   reduce using rule 227 (structure_array -> key EQUALS GREATER_THAN values COMMA structure_array .)


state 540

    (288) class_member -> visibility_opt STATIC FUNCTION . IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    IDENTIFIER      shift and go to state 563


state 541

    (289) class_member -> visibility_opt FUNCTION IDENTIFIER . LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    LEFT_PAREN      shift and go to state 564


state 542

    (291) class_attribute -> visibility_opt VARIABLE EQUALS . values SEMICOLON
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 565
    boolean                        shift and go to state 64

state 543

    (292) class_attribute -> visibility_opt VARIABLE SEMICOLON .

    RIGHT_BRACE     reduce using rule 292 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    PUBLIC          reduce using rule 292 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    PRIVATE         reduce using rule 292 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    PROTECTED       reduce using rule 292 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    STATIC          reduce using rule 292 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    FUNCTION        reduce using rule 292 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 292 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    CONST           reduce using rule 292 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)
    DEFINE          reduce using rule 292 (class_attribute -> visibility_opt VARIABLE SEMICOLON .)


state 544

    (293) class_attribute -> visibility_opt constant_assignment SEMICOLON .

    RIGHT_BRACE     reduce using rule 293 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    PUBLIC          reduce using rule 293 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    PRIVATE         reduce using rule 293 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    PROTECTED       reduce using rule 293 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    STATIC          reduce using rule 293 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    FUNCTION        reduce using rule 293 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    VARIABLE        reduce using rule 293 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    CONST           reduce using rule 293 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)
    DEFINE          reduce using rule 293 (class_attribute -> visibility_opt constant_assignment SEMICOLON .)


state 545

    (279) interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN . params RIGHT_PAREN SEMICOLON
    (169) params -> . real_params
    (170) params -> . empty
    (171) real_params -> . VARIABLE
    (172) real_params -> . values
    (173) real_params -> . real_params COMMA VARIABLE
    (174) real_params -> . real_params COMMA values
    (175) empty -> .
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 299
    RIGHT_PAREN     reduce using rule 175 (empty -> .)
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    params                         shift and go to state 566
    real_params                    shift and go to state 297
    empty                          shift and go to state 298
    values                         shift and go to state 300
    boolean                        shift and go to state 64

state 546

    (188) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 567


state 547

    (179) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock .

    SEMICOLON       reduce using rule 179 (arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock .)


state 548

    (180) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement .

    SEMICOLON       reduce using rule 180 (arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement .)


state 549

    (181) arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression .

    SEMICOLON       reduce using rule 181 (arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression .)


state 550

    (18) elseif_statement -> ELSEIF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN . conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (54) conditional -> . boolean_expression
    (55) conditional -> . boolean_expression logic_operator boolean_expression
    (56) conditional -> . boolean_expression logic_operator error
    (57) conditional -> . error logic_operator boolean_expression
    (61) boolean_expression -> . comparation
    (62) boolean_expression -> . VARIABLE
    (63) boolean_expression -> . IDENTIFIER
    (64) boolean_expression -> . LEFT_PAREN conditional RIGHT_PAREN
    (65) boolean_expression -> . logic_not_sentence
    (66) boolean_expression -> . logic_expression
    (86) comparation -> . values comparator_operator values
    (87) comparation -> . values comparator_operator expression
    (88) comparation -> . expression comparator_operator expression
    (89) comparation -> . VARIABLE EQUALS_EQUALS values
    (90) comparation -> . access_array_element EQUALS_EQUALS values
    (91) comparation -> . access_array_element EQUALS_EQUALS VARIABLE
    (92) comparation -> . VARIABLE EQUALS_EQUALS access_array_element
    (93) comparation -> . VARIABLE EQUALS_EQUALS VARIABLE
    (94) comparation -> . access_array_element EQUALS_EQUALS access_array_element
    (95) comparation -> . access_element_matrix EQUALS_EQUALS VARIABLE
    (96) comparation -> . VARIABLE EQUALS_EQUALS access_element_matrix
    (84) logic_not_sentence -> . LOGIC_NOT conditional
    (85) logic_not_sentence -> . LOGIC_NOT VARIABLE
    (67) logic_expression -> . true_boolean_types logic_operator false_boolean_types
    (68) logic_expression -> . false_boolean_types logic_operator true_boolean_types
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (69) true_boolean_types -> . TRUE
    (70) true_boolean_types -> . STRING
    (71) true_boolean_types -> . INTEGER
    (72) true_boolean_types -> . FLOAT
    (73) true_boolean_types -> . VARIABLE
    (74) true_boolean_types -> . IDENTIFIER
    (75) true_boolean_types -> . ARRAY LEFT_PAREN values RIGHT_PAREN
    (76) false_boolean_types -> . FALSE
    (77) false_boolean_types -> . STRING
    (78) false_boolean_types -> . INTEGER
    (79) false_boolean_types -> . VARIABLE
    (80) false_boolean_types -> . IDENTIFIER
    (81) false_boolean_types -> . FLOAT
    (82) false_boolean_types -> . ARRAY LEFT_PAREN RIGHT_PAREN
    (83) false_boolean_types -> . NULL
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    error           shift and go to state 61
    VARIABLE        shift and go to state 207
    IDENTIFIER      shift and go to state 69
    LEFT_PAREN      shift and go to state 110
    LOGIC_NOT       shift and go to state 75
    INTEGER         shift and go to state 62
    STRING          shift and go to state 58
    FLOAT           shift and go to state 63
    TRUE            shift and go to state 150
    ARRAY           shift and go to state 79
    FALSE           shift and go to state 151
    NULL            shift and go to state 80

    conditional                    shift and go to state 568
    boolean_expression             shift and go to state 65
    comparation                    shift and go to state 68
    logic_not_sentence             shift and go to state 70
    logic_expression               shift and go to state 71
    values                         shift and go to state 148
    expression                     shift and go to state 73
    access_array_element           shift and go to state 149
    access_element_matrix          shift and go to state 74
    true_boolean_types             shift and go to state 76
    false_boolean_types            shift and go to state 77
    boolean                        shift and go to state 64
    term                           shift and go to state 78
    factor                         shift and go to state 81

state 551

    (21) else_statement -> ELSE LEFT_BRACE . body_statement RIGHT_BRACE
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 445
    BREAK           shift and go to state 446
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 569
    sentence                       shift and go to state 444
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 552

    (23) body_statement -> sentence RETURN values SEMICOLON .
    (27) body_statement -> RETURN values SEMICOLON .

  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 23 (body_statement -> sentence RETURN values SEMICOLON .)
    RIGHT_BRACE     reduce using rule 23 (body_statement -> sentence RETURN values SEMICOLON .)

  ! RIGHT_BRACE     [ reduce using rule 27 (body_statement -> RETURN values SEMICOLON .) ]


state 553

    (30) body_statement -> sentence RETURN printable_values SEMICOLON .
    (29) body_statement -> RETURN printable_values SEMICOLON .

  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 29 (body_statement -> RETURN printable_values SEMICOLON .)
    RIGHT_BRACE     reduce using rule 29 (body_statement -> RETURN printable_values SEMICOLON .)

  ! RIGHT_BRACE     [ reduce using rule 30 (body_statement -> sentence RETURN printable_values SEMICOLON .) ]


state 554

    (38) condition_for -> VARIABLE comparator_operator expression_for .
    (41) expression_for -> expression_for . operator_aritmetic expression_for
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

    SEMICOLON       reduce using rule 38 (condition_for -> VARIABLE comparator_operator expression_for .)
    PLUS            shift and go to state 451
    MINUS           shift and go to state 452
    MULTIPLY        shift and go to state 453
    DIVIDE          shift and go to state 454
    MODULE          shift and go to state 455
    POW             shift and go to state 456

    operator_aritmetic             shift and go to state 450

state 555

    (32) increment_statement -> VARIABLE . INCREASE
    (33) increment_statement -> VARIABLE . DECREMENT
    (36) increment_statement -> VARIABLE . PLUS_EQUALS INTEGER
    (37) increment_statement -> VARIABLE . EQUALS VARIABLE operator_aritmetic number_values

    INCREASE        shift and go to state 570
    DECREMENT       shift and go to state 571
    PLUS_EQUALS     shift and go to state 572
    EQUALS          shift and go to state 573


state 556

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE

    RIGHT_PAREN     shift and go to state 574


state 557

    (34) increment_statement -> INCREASE . VARIABLE

    VARIABLE        shift and go to state 575


state 558

    (35) increment_statement -> DECREMENT . VARIABLE

    VARIABLE        shift and go to state 576


state 559

    (212) length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 212 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    PLUS            reduce using rule 212 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    MINUS           reduce using rule 212 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    MULTIPLY        reduce using rule 212 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    DIVIDE          reduce using rule 212 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    MODULE          reduce using rule 212 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    POW             reduce using rule 212 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 212 (length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN .)


state 560

    (213) length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 213 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    PLUS            reduce using rule 213 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    MINUS           reduce using rule 213 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    MULTIPLY        reduce using rule 213 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    DIVIDE          reduce using rule 213 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    MODULE          reduce using rule 213 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    POW             reduce using rule 213 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 213 (length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN .)


state 561

    (214) length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 214 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    PLUS            reduce using rule 214 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    MINUS           reduce using rule 214 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    MULTIPLY        reduce using rule 214 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    DIVIDE          reduce using rule 214 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    MODULE          reduce using rule 214 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    POW             reduce using rule 214 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 214 (length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN .)


state 562

    (250) structure_matrix_first -> ARRAY LEFT_PAREN . values RIGHT_PAREN
    (251) structure_matrix_first -> ARRAY LEFT_PAREN . values RIGHT_PAREN COMMA structure_matrix_first
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    values                         shift and go to state 577
    boolean                        shift and go to state 64

state 563

    (288) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER . LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    LEFT_PAREN      shift and go to state 578


state 564

    (289) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN . params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (169) params -> . real_params
    (170) params -> . empty
    (171) real_params -> . VARIABLE
    (172) real_params -> . values
    (173) real_params -> . real_params COMMA VARIABLE
    (174) real_params -> . real_params COMMA values
    (175) empty -> .
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 299
    RIGHT_PAREN     reduce using rule 175 (empty -> .)
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    params                         shift and go to state 579
    real_params                    shift and go to state 297
    empty                          shift and go to state 298
    values                         shift and go to state 300
    boolean                        shift and go to state 64

state 565

    (291) class_attribute -> visibility_opt VARIABLE EQUALS values . SEMICOLON

    SEMICOLON       shift and go to state 580


state 566

    (279) interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params . RIGHT_PAREN SEMICOLON

    RIGHT_PAREN     shift and go to state 581


state 567

    (188) string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN .

    SEMICOLON       reduce using rule 188 (string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN .)


state 568

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional . RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement

    RIGHT_PAREN     shift and go to state 582


state 569

    (21) else_statement -> ELSE LEFT_BRACE body_statement . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 583


state 570

    (32) increment_statement -> VARIABLE INCREASE .

    RIGHT_PAREN     reduce using rule 32 (increment_statement -> VARIABLE INCREASE .)


state 571

    (33) increment_statement -> VARIABLE DECREMENT .

    RIGHT_PAREN     reduce using rule 33 (increment_statement -> VARIABLE DECREMENT .)


state 572

    (36) increment_statement -> VARIABLE PLUS_EQUALS . INTEGER

    INTEGER         shift and go to state 584


state 573

    (37) increment_statement -> VARIABLE EQUALS . VARIABLE operator_aritmetic number_values

    VARIABLE        shift and go to state 585


state 574

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE

    LEFT_BRACE      shift and go to state 586


state 575

    (34) increment_statement -> INCREASE VARIABLE .

    RIGHT_PAREN     reduce using rule 34 (increment_statement -> INCREASE VARIABLE .)


state 576

    (35) increment_statement -> DECREMENT VARIABLE .

    RIGHT_PAREN     reduce using rule 35 (increment_statement -> DECREMENT VARIABLE .)


state 577

    (250) structure_matrix_first -> ARRAY LEFT_PAREN values . RIGHT_PAREN
    (251) structure_matrix_first -> ARRAY LEFT_PAREN values . RIGHT_PAREN COMMA structure_matrix_first

    RIGHT_PAREN     shift and go to state 461


state 578

    (288) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN . params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE
    (169) params -> . real_params
    (170) params -> . empty
    (171) real_params -> . VARIABLE
    (172) real_params -> . values
    (173) real_params -> . real_params COMMA VARIABLE
    (174) real_params -> . real_params COMMA values
    (175) empty -> .
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE

    VARIABLE        shift and go to state 299
    RIGHT_PAREN     reduce using rule 175 (empty -> .)
    INTEGER         shift and go to state 201
    STRING          shift and go to state 202
    FLOAT           shift and go to state 203
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205

    params                         shift and go to state 587
    real_params                    shift and go to state 297
    empty                          shift and go to state 298
    values                         shift and go to state 300
    boolean                        shift and go to state 64

state 579

    (289) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params . RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    RIGHT_PAREN     shift and go to state 588


state 580

    (291) class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .

    RIGHT_BRACE     reduce using rule 291 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    PUBLIC          reduce using rule 291 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    PRIVATE         reduce using rule 291 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    PROTECTED       reduce using rule 291 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    STATIC          reduce using rule 291 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    FUNCTION        reduce using rule 291 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    VARIABLE        reduce using rule 291 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    CONST           reduce using rule 291 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)
    DEFINE          reduce using rule 291 (class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON .)


state 581

    (279) interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN . SEMICOLON

    SEMICOLON       shift and go to state 589


state 582

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN . LEFT_BRACE body_statement RIGHT_BRACE else_statement

    LEFT_BRACE      shift and go to state 590


state 583

    (21) else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .

    ECHO            reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 21 (else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE .)


state 584

    (36) increment_statement -> VARIABLE PLUS_EQUALS INTEGER .

    RIGHT_PAREN     reduce using rule 36 (increment_statement -> VARIABLE PLUS_EQUALS INTEGER .)


state 585

    (37) increment_statement -> VARIABLE EQUALS VARIABLE . operator_aritmetic number_values
    (48) operator_aritmetic -> . PLUS
    (49) operator_aritmetic -> . MINUS
    (50) operator_aritmetic -> . MULTIPLY
    (51) operator_aritmetic -> . DIVIDE
    (52) operator_aritmetic -> . MODULE
    (53) operator_aritmetic -> . POW

    PLUS            shift and go to state 451
    MINUS           shift and go to state 452
    MULTIPLY        shift and go to state 453
    DIVIDE          shift and go to state 454
    MODULE          shift and go to state 455
    POW             shift and go to state 456

    operator_aritmetic             shift and go to state 591

state 586

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 445
    BREAK           shift and go to state 446
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 592
    sentence                       shift and go to state 444
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 587

    (288) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params . RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE

    RIGHT_PAREN     shift and go to state 593


state 588

    (289) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN . LEFT_BRACE method_body RIGHT_BRACE

    LEFT_BRACE      shift and go to state 594


state 589

    (279) interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .

    RIGHT_BRACE     reduce using rule 279 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)
    PUBLIC          reduce using rule 279 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)
    PRIVATE         reduce using rule 279 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)
    PROTECTED       reduce using rule 279 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)
    FUNCTION        reduce using rule 279 (interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON .)


state 590

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE . body_statement RIGHT_BRACE else_statement
    (22) body_statement -> . sentence
    (23) body_statement -> . sentence RETURN values SEMICOLON
    (24) body_statement -> . sentence RETURN SEMICOLON
    (25) body_statement -> . sentence BREAK SEMICOLON
    (26) body_statement -> . sentence body_statement
    (27) body_statement -> . RETURN values SEMICOLON
    (28) body_statement -> . BREAK SEMICOLON
    (29) body_statement -> . RETURN printable_values SEMICOLON
    (30) body_statement -> . sentence RETURN printable_values SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 445
    BREAK           shift and go to state 446
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    VARIABLE        shift and go to state 25
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    body_statement                 shift and go to state 595
    sentence                       shift and go to state 444
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    access_array_element           shift and go to state 33
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    access_method_object           shift and go to state 40
    statement_access_array_element_error shift and go to state 48

state 591

    (37) increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic . number_values
    (46) number_values -> . INTEGER
    (47) number_values -> . FLOAT

    INTEGER         shift and go to state 387
    FLOAT           shift and go to state 388

    number_values                  shift and go to state 596

state 592

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 597


state 593

    (288) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN . LEFT_BRACE method_body RIGHT_BRACE

    LEFT_BRACE      shift and go to state 598


state 594

    (289) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE . method_body RIGHT_BRACE
    (298) method_body -> . classStatement
    (299) method_body -> . classStatement return_form
    (300) method_body -> . return_form
    (301) method_body -> . classStatement BREAK SEMICOLON
    (302) method_body -> . classStatement method_body
    (309) classStatement -> . sentence
    (310) classStatement -> . access_method_object SEMICOLON
    (303) return_form -> . RETURN values SEMICOLON
    (304) return_form -> . RETURN access_method_object SEMICOLON
    (305) return_form -> . RETURN SEMICOLON
    (306) return_form -> . RETURN expression SEMICOLON
    (307) return_form -> . RETURN string_special_function SEMICOLON
    (308) return_form -> . RETURN array_special_function_structure SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 604
    VARIABLE        shift and go to state 605
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    method_body                    shift and go to state 599
    classStatement                 shift and go to state 600
    return_form                    shift and go to state 601
    sentence                       shift and go to state 602
    access_method_object           shift and go to state 603
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    access_array_element           shift and go to state 606
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    statement_access_array_element_error shift and go to state 48

state 595

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement . RIGHT_BRACE else_statement

    RIGHT_BRACE     shift and go to state 607


state 596

    (37) increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values .

    RIGHT_PAREN     reduce using rule 37 (increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values .)


state 597

    (31) for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .

    ECHO            reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 31 (for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)


state 598

    (288) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE . method_body RIGHT_BRACE
    (298) method_body -> . classStatement
    (299) method_body -> . classStatement return_form
    (300) method_body -> . return_form
    (301) method_body -> . classStatement BREAK SEMICOLON
    (302) method_body -> . classStatement method_body
    (309) classStatement -> . sentence
    (310) classStatement -> . access_method_object SEMICOLON
    (303) return_form -> . RETURN values SEMICOLON
    (304) return_form -> . RETURN access_method_object SEMICOLON
    (305) return_form -> . RETURN SEMICOLON
    (306) return_form -> . RETURN expression SEMICOLON
    (307) return_form -> . RETURN string_special_function SEMICOLON
    (308) return_form -> . RETURN array_special_function_structure SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RETURN          shift and go to state 604
    VARIABLE        shift and go to state 605
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    method_body                    shift and go to state 608
    classStatement                 shift and go to state 600
    return_form                    shift and go to state 601
    sentence                       shift and go to state 602
    access_method_object           shift and go to state 603
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    access_array_element           shift and go to state 606
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    statement_access_array_element_error shift and go to state 48

state 599

    (289) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 609


state 600

    (298) method_body -> classStatement .
    (299) method_body -> classStatement . return_form
    (301) method_body -> classStatement . BREAK SEMICOLON
    (302) method_body -> classStatement . method_body
    (303) return_form -> . RETURN values SEMICOLON
    (304) return_form -> . RETURN access_method_object SEMICOLON
    (305) return_form -> . RETURN SEMICOLON
    (306) return_form -> . RETURN expression SEMICOLON
    (307) return_form -> . RETURN string_special_function SEMICOLON
    (308) return_form -> . RETURN array_special_function_structure SEMICOLON
    (298) method_body -> . classStatement
    (299) method_body -> . classStatement return_form
    (300) method_body -> . return_form
    (301) method_body -> . classStatement BREAK SEMICOLON
    (302) method_body -> . classStatement method_body
    (309) classStatement -> . sentence
    (310) classStatement -> . access_method_object SEMICOLON
    (4) sentence -> . print_statement SEMICOLON
    (5) sentence -> . assignment SEMICOLON
    (6) sentence -> . types_structure
    (7) sentence -> . class_declaration
    (8) sentence -> . interface_declaration
    (9) sentence -> . control_structures
    (10) sentence -> . function_declaration
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (107) print_statement -> . ECHO LEFT_PAREN printable_values RIGHT_PAREN
    (108) print_statement -> . PRINT LEFT_PAREN printable_values RIGHT_PAREN
    (109) print_statement -> . ECHO printable_values
    (110) print_statement -> . PRINT printable_values
    (145) assignment -> . variable_assignment
    (146) assignment -> . constant_assignment
    (216) types_structure -> . structure_array_principal
    (217) types_structure -> . structure_matrix_principal
    (218) types_structure -> . structure_object_principal
    (275) class_declaration -> . CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE
    (276) interface_declaration -> . INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE
    (11) control_structures -> . if_statement
    (12) control_structures -> . while_statement
    (13) control_structures -> . for_statement
    (176) function_declaration -> . FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (147) variable_assignment -> . VARIABLE assignment_operator values
    (148) variable_assignment -> . VARIABLE assignment_operator IDENTIFIER
    (149) variable_assignment -> . VARIABLE assignment_operator expression
    (150) variable_assignment -> . VARIABLE assignment_operator function_invocation
    (151) variable_assignment -> . VARIABLE assignment_operator string_special_function
    (152) variable_assignment -> . VARIABLE assignment_operator array_special_function_structure
    (153) variable_assignment -> . VARIABLE assignment_operator types_structure
    (154) variable_assignment -> . VARIABLE assignment_operator input
    (155) variable_assignment -> . VARIABLE assignment_operator special_function
    (156) variable_assignment -> . VARIABLE assignment_operator conditional
    (157) variable_assignment -> . VARIABLE INCREASE
    (158) variable_assignment -> . VARIABLE DECREMENT
    (159) variable_assignment -> . INCREASE VARIABLE
    (160) variable_assignment -> . DECREMENT VARIABLE
    (163) constant_assignment -> . const_syntax
    (164) constant_assignment -> . define_syntax
    (219) structure_array_principal -> . indexed_array
    (220) structure_array_principal -> . associative_array
    (221) structure_array_principal -> . access_array_stucture
    (222) structure_array_principal -> . access_array_element
    (241) structure_matrix_principal -> . matrix_firstform
    (242) structure_matrix_principal -> . matrix_secondform
    (243) structure_matrix_principal -> . access_element_matrix SEMICOLON
    (244) structure_matrix_principal -> . modify_element_matrix SEMICOLON
    (245) structure_matrix_principal -> . add_element_matrix
    (259) structure_object_principal -> . object_creation
    (260) structure_object_principal -> . access_method_object
    (15) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (16) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (17) if_statement -> . IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (14) while_statement -> . WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (31) for_statement -> . FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (165) const_syntax -> . CONST IDENTIFIER EQUALS values
    (166) define_syntax -> . DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN
    (223) indexed_array -> . ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN
    (224) associative_array -> . ARRAY LEFT_PAREN structure_array RIGHT_PAREN
    (225) associative_array -> . ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET
    (236) access_array_stucture -> . access_array_element
    (237) access_array_stucture -> . statement_access_array_element_error
    (246) matrix_firstform -> . ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON
    (247) matrix_secondform -> . LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON
    (252) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (256) modify_element_matrix -> . access_element_matrix EQUALS values
    (257) modify_element_matrix -> . access_element_matrix EQUALS VARIABLE
    (258) add_element_matrix -> . VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (261) object_creation -> . NEW IDENTIFIER
    (262) object_creation -> . NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN
    (240) statement_access_array_element_error -> . VARIABLE LEFT_BRACKET error RIGHT_BRACKET

    RIGHT_BRACE     reduce using rule 298 (method_body -> classStatement .)
    BREAK           shift and go to state 611
    RETURN          shift and go to state 604
    VARIABLE        shift and go to state 605
    ECHO            shift and go to state 12
    PRINT           shift and go to state 13
    CLASS           shift and go to state 19
    INTERFACE       shift and go to state 20
    FUNCTION        shift and go to state 24
    INCREASE        shift and go to state 26
    DECREMENT       shift and go to state 27
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CONST           shift and go to state 44
    DEFINE          shift and go to state 45
    ARRAY           shift and go to state 46
    LEFT_BRACKET    shift and go to state 47
    NEW             shift and go to state 49

    classStatement                 shift and go to state 600
    return_form                    shift and go to state 610
    method_body                    shift and go to state 612
    access_method_object           shift and go to state 603
    sentence                       shift and go to state 602
    print_statement                shift and go to state 5
    assignment                     shift and go to state 6
    types_structure                shift and go to state 7
    class_declaration              shift and go to state 8
    interface_declaration          shift and go to state 9
    control_structures             shift and go to state 10
    function_declaration           shift and go to state 11
    access_array_element           shift and go to state 606
    variable_assignment            shift and go to state 14
    constant_assignment            shift and go to state 15
    structure_array_principal      shift and go to state 16
    structure_matrix_principal     shift and go to state 17
    structure_object_principal     shift and go to state 18
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    const_syntax                   shift and go to state 28
    define_syntax                  shift and go to state 29
    indexed_array                  shift and go to state 30
    associative_array              shift and go to state 31
    access_array_stucture          shift and go to state 32
    matrix_firstform               shift and go to state 34
    matrix_secondform              shift and go to state 35
    access_element_matrix          shift and go to state 36
    modify_element_matrix          shift and go to state 37
    add_element_matrix             shift and go to state 38
    object_creation                shift and go to state 39
    statement_access_array_element_error shift and go to state 48

state 601

    (300) method_body -> return_form .

    RIGHT_BRACE     reduce using rule 300 (method_body -> return_form .)


state 602

    (309) classStatement -> sentence .

    BREAK           reduce using rule 309 (classStatement -> sentence .)
    RETURN          reduce using rule 309 (classStatement -> sentence .)
    VARIABLE        reduce using rule 309 (classStatement -> sentence .)
    ECHO            reduce using rule 309 (classStatement -> sentence .)
    PRINT           reduce using rule 309 (classStatement -> sentence .)
    CLASS           reduce using rule 309 (classStatement -> sentence .)
    INTERFACE       reduce using rule 309 (classStatement -> sentence .)
    FUNCTION        reduce using rule 309 (classStatement -> sentence .)
    INCREASE        reduce using rule 309 (classStatement -> sentence .)
    DECREMENT       reduce using rule 309 (classStatement -> sentence .)
    IF              reduce using rule 309 (classStatement -> sentence .)
    WHILE           reduce using rule 309 (classStatement -> sentence .)
    FOR             reduce using rule 309 (classStatement -> sentence .)
    CONST           reduce using rule 309 (classStatement -> sentence .)
    DEFINE          reduce using rule 309 (classStatement -> sentence .)
    ARRAY           reduce using rule 309 (classStatement -> sentence .)
    LEFT_BRACKET    reduce using rule 309 (classStatement -> sentence .)
    NEW             reduce using rule 309 (classStatement -> sentence .)
    RIGHT_BRACE     reduce using rule 309 (classStatement -> sentence .)


state 603

    (310) classStatement -> access_method_object . SEMICOLON
    (260) structure_object_principal -> access_method_object .

    SEMICOLON       shift and go to state 613
    BREAK           reduce using rule 260 (structure_object_principal -> access_method_object .)
    RETURN          reduce using rule 260 (structure_object_principal -> access_method_object .)
    VARIABLE        reduce using rule 260 (structure_object_principal -> access_method_object .)
    ECHO            reduce using rule 260 (structure_object_principal -> access_method_object .)
    PRINT           reduce using rule 260 (structure_object_principal -> access_method_object .)
    CLASS           reduce using rule 260 (structure_object_principal -> access_method_object .)
    INTERFACE       reduce using rule 260 (structure_object_principal -> access_method_object .)
    FUNCTION        reduce using rule 260 (structure_object_principal -> access_method_object .)
    INCREASE        reduce using rule 260 (structure_object_principal -> access_method_object .)
    DECREMENT       reduce using rule 260 (structure_object_principal -> access_method_object .)
    IF              reduce using rule 260 (structure_object_principal -> access_method_object .)
    WHILE           reduce using rule 260 (structure_object_principal -> access_method_object .)
    FOR             reduce using rule 260 (structure_object_principal -> access_method_object .)
    CONST           reduce using rule 260 (structure_object_principal -> access_method_object .)
    DEFINE          reduce using rule 260 (structure_object_principal -> access_method_object .)
    ARRAY           reduce using rule 260 (structure_object_principal -> access_method_object .)
    LEFT_BRACKET    reduce using rule 260 (structure_object_principal -> access_method_object .)
    NEW             reduce using rule 260 (structure_object_principal -> access_method_object .)
    RIGHT_BRACE     reduce using rule 260 (structure_object_principal -> access_method_object .)


state 604

    (303) return_form -> RETURN . values SEMICOLON
    (304) return_form -> RETURN . access_method_object SEMICOLON
    (305) return_form -> RETURN . SEMICOLON
    (306) return_form -> RETURN . expression SEMICOLON
    (307) return_form -> RETURN . string_special_function SEMICOLON
    (308) return_form -> RETURN . array_special_function_structure SEMICOLON
    (126) values -> . INTEGER
    (127) values -> . STRING
    (128) values -> . FLOAT
    (129) values -> . boolean
    (263) access_method_object -> . VARIABLE MINUS GREATER_THAN function_invocation
    (264) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType
    (265) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> . VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element
    (268) access_method_object -> . access_array_element MINUS GREATER_THAN function_invocation
    (269) access_method_object -> . access_array_element MINUS GREATER_THAN accessType
    (270) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> . access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element
    (132) expression -> . term
    (133) expression -> . term PLUS expression
    (134) expression -> . term MINUS expression
    (186) string_special_function -> . STRLEN LEFT_PAREN string_param RIGHT_PAREN
    (187) string_special_function -> . SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN
    (188) string_special_function -> . SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN
    (195) array_special_function_structure -> . array_special_function
    (196) array_special_function_structure -> . statement_array_special_function_error
    (130) boolean -> . TRUE
    (131) boolean -> . FALSE
    (238) access_array_element -> . VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> . VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (135) term -> . factor
    (136) term -> . factor MULTIPLY term
    (137) term -> . factor DIVIDE term
    (138) term -> . factor MODULE term
    (139) term -> . factor POW term
    (197) array_special_function -> . COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN
    (198) array_special_function -> . COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN
    (199) array_special_function -> . COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN
    (200) array_special_function -> . ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN
    (201) array_special_function -> . ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN
    (202) statement_array_special_function_error -> . COUNT LEFT_PAREN error count_param RIGHT_PAREN
    (203) statement_array_special_function_error -> . ARRAY_POP LEFT_PAREN error RIGHT_PAREN
    (204) statement_array_special_function_error -> . ARRAY_SUM LEFT_PAREN error RIGHT_PAREN
    (140) factor -> . INTEGER
    (141) factor -> . FLOAT
    (142) factor -> . VARIABLE
    (143) factor -> . LEFT_PAREN expression RIGHT_PAREN
    (144) factor -> . STRING

    SEMICOLON       shift and go to state 615
    INTEGER         shift and go to state 240
    STRING          shift and go to state 241
    FLOAT           shift and go to state 242
    VARIABLE        shift and go to state 620
    STRLEN          shift and go to state 177
    SUBSTR          shift and go to state 178
    TRUE            shift and go to state 204
    FALSE           shift and go to state 205
    COUNT           shift and go to state 185
    ARRAY_POP       shift and go to state 186
    ARRAY_SUM       shift and go to state 187
    LEFT_PAREN      shift and go to state 244

    values                         shift and go to state 614
    access_method_object           shift and go to state 616
    expression                     shift and go to state 617
    string_special_function        shift and go to state 618
    array_special_function_structure shift and go to state 619
    boolean                        shift and go to state 64
    access_array_element           shift and go to state 621
    term                           shift and go to state 78
    array_special_function         shift and go to state 179
    statement_array_special_function_error shift and go to state 180
    factor                         shift and go to state 81

state 605

    (263) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (264) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (265) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (147) variable_assignment -> VARIABLE . assignment_operator values
    (148) variable_assignment -> VARIABLE . assignment_operator IDENTIFIER
    (149) variable_assignment -> VARIABLE . assignment_operator expression
    (150) variable_assignment -> VARIABLE . assignment_operator function_invocation
    (151) variable_assignment -> VARIABLE . assignment_operator string_special_function
    (152) variable_assignment -> VARIABLE . assignment_operator array_special_function_structure
    (153) variable_assignment -> VARIABLE . assignment_operator types_structure
    (154) variable_assignment -> VARIABLE . assignment_operator input
    (155) variable_assignment -> VARIABLE . assignment_operator special_function
    (156) variable_assignment -> VARIABLE . assignment_operator conditional
    (157) variable_assignment -> VARIABLE . INCREASE
    (158) variable_assignment -> VARIABLE . DECREMENT
    (252) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (253) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (254) access_element_matrix -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET
    (255) access_element_matrix -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (258) add_element_matrix -> VARIABLE . LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array
    (240) statement_access_array_element_error -> VARIABLE . LEFT_BRACKET error RIGHT_BRACKET
    (161) assignment_operator -> . EQUALS
    (162) assignment_operator -> . PLUS_EQUALS

    MINUS           shift and go to state 92
    LEFT_BRACKET    shift and go to state 90
    INCREASE        shift and go to state 88
    DECREMENT       shift and go to state 89
    EQUALS          shift and go to state 91
    PLUS_EQUALS     shift and go to state 93

    assignment_operator            shift and go to state 87

state 606

    (268) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (269) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (270) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element
    (222) structure_array_principal -> access_array_element .
    (236) access_array_stucture -> access_array_element .

  ! reduce/reduce conflict for BREAK resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RETURN resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for ECHO resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for PRINT resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for CLASS resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for INCREASE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for IF resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for WHILE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for FOR resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for CONST resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for DEFINE resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for ARRAY resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for NEW resolved using rule 222 (structure_array_principal -> access_array_element .)
  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 222 (structure_array_principal -> access_array_element .)
    MINUS           shift and go to state 96
    BREAK           reduce using rule 222 (structure_array_principal -> access_array_element .)
    RETURN          reduce using rule 222 (structure_array_principal -> access_array_element .)
    VARIABLE        reduce using rule 222 (structure_array_principal -> access_array_element .)
    ECHO            reduce using rule 222 (structure_array_principal -> access_array_element .)
    PRINT           reduce using rule 222 (structure_array_principal -> access_array_element .)
    CLASS           reduce using rule 222 (structure_array_principal -> access_array_element .)
    INTERFACE       reduce using rule 222 (structure_array_principal -> access_array_element .)
    FUNCTION        reduce using rule 222 (structure_array_principal -> access_array_element .)
    INCREASE        reduce using rule 222 (structure_array_principal -> access_array_element .)
    DECREMENT       reduce using rule 222 (structure_array_principal -> access_array_element .)
    IF              reduce using rule 222 (structure_array_principal -> access_array_element .)
    WHILE           reduce using rule 222 (structure_array_principal -> access_array_element .)
    FOR             reduce using rule 222 (structure_array_principal -> access_array_element .)
    CONST           reduce using rule 222 (structure_array_principal -> access_array_element .)
    DEFINE          reduce using rule 222 (structure_array_principal -> access_array_element .)
    ARRAY           reduce using rule 222 (structure_array_principal -> access_array_element .)
    LEFT_BRACKET    reduce using rule 222 (structure_array_principal -> access_array_element .)
    NEW             reduce using rule 222 (structure_array_principal -> access_array_element .)
    RIGHT_BRACE     reduce using rule 222 (structure_array_principal -> access_array_element .)

  ! BREAK           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! RETURN          [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! VARIABLE        [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! ECHO            [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! PRINT           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! CLASS           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! INTERFACE       [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! FUNCTION        [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! INCREASE        [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! DECREMENT       [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! IF              [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! WHILE           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! FOR             [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! CONST           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! DEFINE          [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! ARRAY           [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! LEFT_BRACKET    [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! NEW             [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]
  ! RIGHT_BRACE     [ reduce using rule 236 (access_array_stucture -> access_array_element .) ]


state 607

    (18) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .
    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE . elseif_statement
    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE . else_statement
    (18) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE
    (19) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement
    (20) elseif_statement -> . ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement
    (21) else_statement -> . ELSE LEFT_BRACE body_statement RIGHT_BRACE

    ECHO            reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PRINT           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CLASS           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INTERFACE       reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FUNCTION        reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    VARIABLE        reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    INCREASE        reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DECREMENT       reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    IF              reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    WHILE           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    FOR             reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    CONST           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    DEFINE          reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ARRAY           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    NEW             reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    PHP_END_IDENTIFIER reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RETURN          reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    BREAK           reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 18 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE .)
    ELSEIF          shift and go to state 521
    ELSE            shift and go to state 522

    elseif_statement               shift and go to state 622
    else_statement                 shift and go to state 623

state 608

    (288) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 624


state 609

    (289) class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .

    RIGHT_BRACE     reduce using rule 289 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PUBLIC          reduce using rule 289 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PRIVATE         reduce using rule 289 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PROTECTED       reduce using rule 289 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    STATIC          reduce using rule 289 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    FUNCTION        reduce using rule 289 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    VARIABLE        reduce using rule 289 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    CONST           reduce using rule 289 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    DEFINE          reduce using rule 289 (class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)


state 610

    (299) method_body -> classStatement return_form .
    (300) method_body -> return_form .

  ! reduce/reduce conflict for RIGHT_BRACE resolved using rule 299 (method_body -> classStatement return_form .)
    RIGHT_BRACE     reduce using rule 299 (method_body -> classStatement return_form .)

  ! RIGHT_BRACE     [ reduce using rule 300 (method_body -> return_form .) ]


state 611

    (301) method_body -> classStatement BREAK . SEMICOLON

    SEMICOLON       shift and go to state 625


state 612

    (302) method_body -> classStatement method_body .

    RIGHT_BRACE     reduce using rule 302 (method_body -> classStatement method_body .)


state 613

    (310) classStatement -> access_method_object SEMICOLON .

    BREAK           reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    RETURN          reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    VARIABLE        reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    ECHO            reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    PRINT           reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    CLASS           reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    INTERFACE       reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    FUNCTION        reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    INCREASE        reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    DECREMENT       reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    IF              reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    WHILE           reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    FOR             reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    CONST           reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    DEFINE          reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    ARRAY           reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    LEFT_BRACKET    reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    NEW             reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)
    RIGHT_BRACE     reduce using rule 310 (classStatement -> access_method_object SEMICOLON .)


state 614

    (303) return_form -> RETURN values . SEMICOLON

    SEMICOLON       shift and go to state 626


state 615

    (305) return_form -> RETURN SEMICOLON .

    RIGHT_BRACE     reduce using rule 305 (return_form -> RETURN SEMICOLON .)


state 616

    (304) return_form -> RETURN access_method_object . SEMICOLON

    SEMICOLON       shift and go to state 627


state 617

    (306) return_form -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 628


state 618

    (307) return_form -> RETURN string_special_function . SEMICOLON

    SEMICOLON       shift and go to state 629


state 619

    (308) return_form -> RETURN array_special_function_structure . SEMICOLON

    SEMICOLON       shift and go to state 630


state 620

    (263) access_method_object -> VARIABLE . MINUS GREATER_THAN function_invocation
    (264) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType
    (265) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS values
    (266) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (267) access_method_object -> VARIABLE . MINUS GREATER_THAN accessType EQUALS access_array_element
    (238) access_array_element -> VARIABLE . LEFT_BRACKET INTEGER RIGHT_BRACKET
    (239) access_array_element -> VARIABLE . LEFT_BRACKET VARIABLE RIGHT_BRACKET
    (142) factor -> VARIABLE .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 92
    LEFT_BRACKET    shift and go to state 341
    MULTIPLY        reduce using rule 142 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 142 (factor -> VARIABLE .)
    MODULE          reduce using rule 142 (factor -> VARIABLE .)
    POW             reduce using rule 142 (factor -> VARIABLE .)
    PLUS            reduce using rule 142 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 142 (factor -> VARIABLE .)

  ! MINUS           [ reduce using rule 142 (factor -> VARIABLE .) ]


state 621

    (268) access_method_object -> access_array_element . MINUS GREATER_THAN function_invocation
    (269) access_method_object -> access_array_element . MINUS GREATER_THAN accessType
    (270) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS values
    (271) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS VARIABLE
    (272) access_method_object -> access_array_element . MINUS GREATER_THAN accessType EQUALS access_array_element

    MINUS           shift and go to state 96


state 622

    (19) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .

    ECHO            reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    PRINT           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    CLASS           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    INTERFACE       reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    FUNCTION        reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    VARIABLE        reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    INCREASE        reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    DECREMENT       reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    IF              reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    WHILE           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    FOR             reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    CONST           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    DEFINE          reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    ARRAY           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    LEFT_BRACKET    reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    NEW             reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    PHP_END_IDENTIFIER reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    RETURN          reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    BREAK           reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)
    RIGHT_BRACE     reduce using rule 19 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement .)


state 623

    (20) elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .

    ECHO            reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    PRINT           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    CLASS           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    INTERFACE       reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    FUNCTION        reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    VARIABLE        reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    INCREASE        reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    DECREMENT       reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    IF              reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    WHILE           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    FOR             reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    CONST           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    DEFINE          reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    ARRAY           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    LEFT_BRACKET    reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    NEW             reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    PHP_END_IDENTIFIER reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    RETURN          reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    BREAK           reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)
    RIGHT_BRACE     reduce using rule 20 (elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement .)


state 624

    (288) class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .

    RIGHT_BRACE     reduce using rule 288 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PUBLIC          reduce using rule 288 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PRIVATE         reduce using rule 288 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    PROTECTED       reduce using rule 288 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    STATIC          reduce using rule 288 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    FUNCTION        reduce using rule 288 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    VARIABLE        reduce using rule 288 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    CONST           reduce using rule 288 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)
    DEFINE          reduce using rule 288 (class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE .)


state 625

    (301) method_body -> classStatement BREAK SEMICOLON .

    RIGHT_BRACE     reduce using rule 301 (method_body -> classStatement BREAK SEMICOLON .)


state 626

    (303) return_form -> RETURN values SEMICOLON .

    RIGHT_BRACE     reduce using rule 303 (return_form -> RETURN values SEMICOLON .)


state 627

    (304) return_form -> RETURN access_method_object SEMICOLON .

    RIGHT_BRACE     reduce using rule 304 (return_form -> RETURN access_method_object SEMICOLON .)


state 628

    (306) return_form -> RETURN expression SEMICOLON .

    RIGHT_BRACE     reduce using rule 306 (return_form -> RETURN expression SEMICOLON .)


state 629

    (307) return_form -> RETURN string_special_function SEMICOLON .

    RIGHT_BRACE     reduce using rule 307 (return_form -> RETURN string_special_function SEMICOLON .)


state 630

    (308) return_form -> RETURN array_special_function_structure SEMICOLON .

    RIGHT_BRACE     reduce using rule 308 (return_form -> RETURN array_special_function_structure SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STRING_CONCATENATION in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 57 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 57 resolved as shift
WARNING: shift/reduce conflict for LOGIC_AND in state 65 resolved as shift
WARNING: shift/reduce conflict for LOGIC_OR in state 65 resolved as shift
WARNING: shift/reduce conflict for LOGIC_XOR in state 65 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 112 resolved as shift
WARNING: shift/reduce conflict for STRING_CONCATENATION in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 114 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 114 resolved as shift
WARNING: shift/reduce conflict for STRING in state 133 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 166 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 166 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 207 resolved as shift
WARNING: shift/reduce conflict for EQUALS_EQUALS in state 229 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 313 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 314 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 320 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 371 resolved as shift
WARNING: shift/reduce conflict for RIGHT_PAREN in state 392 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 436 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 442 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 494 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 501 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 501 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 501 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 501 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 501 resolved as shift
WARNING: shift/reduce conflict for POW in state 501 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 523 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 620 resolved as shift
WARNING: reduce/reduce conflict in state 33 resolved using rule (structure_array_principal -> access_array_element)
WARNING: rejected rule (access_array_stucture -> access_array_element) in state 33
WARNING: reduce/reduce conflict in state 57 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (printable_values -> VARIABLE) in state 57
WARNING: reduce/reduce conflict in state 57 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 57
WARNING: reduce/reduce conflict in state 57 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 57
WARNING: reduce/reduce conflict in state 58 resolved using rule (true_boolean_types -> STRING)
WARNING: rejected rule (false_boolean_types -> STRING) in state 58
WARNING: reduce/reduce conflict in state 58 resolved using rule (values -> STRING)
WARNING: rejected rule (factor -> STRING) in state 58
WARNING: reduce/reduce conflict in state 62 resolved using rule (true_boolean_types -> INTEGER)
WARNING: rejected rule (false_boolean_types -> INTEGER) in state 62
WARNING: reduce/reduce conflict in state 62 resolved using rule (values -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 62
WARNING: reduce/reduce conflict in state 63 resolved using rule (true_boolean_types -> FLOAT)
WARNING: rejected rule (false_boolean_types -> FLOAT) in state 63
WARNING: reduce/reduce conflict in state 63 resolved using rule (values -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 63
WARNING: reduce/reduce conflict in state 69 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (true_boolean_types -> IDENTIFIER) in state 69
WARNING: reduce/reduce conflict in state 69 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (false_boolean_types -> IDENTIFIER) in state 69
WARNING: reduce/reduce conflict in state 114 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (printable_values -> VARIABLE) in state 114
WARNING: reduce/reduce conflict in state 114 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 114
WARNING: reduce/reduce conflict in state 114 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 114
WARNING: reduce/reduce conflict in state 114 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 114
WARNING: reduce/reduce conflict in state 115 resolved using rule (values -> STRING)
WARNING: rejected rule (factor -> STRING) in state 115
WARNING: reduce/reduce conflict in state 115 resolved using rule (true_boolean_types -> STRING)
WARNING: rejected rule (false_boolean_types -> STRING) in state 115
WARNING: reduce/reduce conflict in state 116 resolved using rule (values -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 116
WARNING: reduce/reduce conflict in state 116 resolved using rule (true_boolean_types -> INTEGER)
WARNING: rejected rule (false_boolean_types -> INTEGER) in state 116
WARNING: reduce/reduce conflict in state 117 resolved using rule (values -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 117
WARNING: reduce/reduce conflict in state 117 resolved using rule (true_boolean_types -> FLOAT)
WARNING: rejected rule (false_boolean_types -> FLOAT) in state 117
WARNING: reduce/reduce conflict in state 147 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (logic_not_sentence -> LOGIC_NOT VARIABLE) in state 147
WARNING: reduce/reduce conflict in state 147 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 147
WARNING: reduce/reduce conflict in state 147 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 147
WARNING: reduce/reduce conflict in state 166 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 166
WARNING: reduce/reduce conflict in state 168 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (variable_assignment -> VARIABLE assignment_operator IDENTIFIER) in state 168
WARNING: reduce/reduce conflict in state 168 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (true_boolean_types -> IDENTIFIER) in state 168
WARNING: reduce/reduce conflict in state 168 resolved using rule (boolean_expression -> IDENTIFIER)
WARNING: rejected rule (false_boolean_types -> IDENTIFIER) in state 168
WARNING: reduce/reduce conflict in state 188 resolved using rule (structure_array_principal -> access_array_element)
WARNING: rejected rule (access_array_stucture -> access_array_element) in state 188
WARNING: reduce/reduce conflict in state 207 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 207
WARNING: reduce/reduce conflict in state 207 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 207
WARNING: reduce/reduce conflict in state 229 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 229
WARNING: reduce/reduce conflict in state 229 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (true_boolean_types -> VARIABLE) in state 229
WARNING: reduce/reduce conflict in state 229 resolved using rule (boolean_expression -> VARIABLE)
WARNING: rejected rule (false_boolean_types -> VARIABLE) in state 229
WARNING: reduce/reduce conflict in state 230 resolved using rule (values -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 230
WARNING: reduce/reduce conflict in state 230 resolved using rule (true_boolean_types -> INTEGER)
WARNING: rejected rule (false_boolean_types -> INTEGER) in state 230
WARNING: reduce/reduce conflict in state 231 resolved using rule (values -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (true_boolean_types -> FLOAT)
WARNING: rejected rule (false_boolean_types -> FLOAT) in state 231
WARNING: reduce/reduce conflict in state 232 resolved using rule (values -> STRING)
WARNING: rejected rule (factor -> STRING) in state 232
WARNING: reduce/reduce conflict in state 232 resolved using rule (true_boolean_types -> STRING)
WARNING: rejected rule (false_boolean_types -> STRING) in state 232
WARNING: reduce/reduce conflict in state 240 resolved using rule (values -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 240
WARNING: reduce/reduce conflict in state 241 resolved using rule (values -> STRING)
WARNING: rejected rule (factor -> STRING) in state 241
WARNING: reduce/reduce conflict in state 242 resolved using rule (values -> FLOAT)
WARNING: rejected rule (factor -> FLOAT) in state 242
WARNING: reduce/reduce conflict in state 364 resolved using rule (structure_array_principal -> access_array_element)
WARNING: rejected rule (access_array_stucture -> access_array_element) in state 364
WARNING: reduce/reduce conflict in state 526 resolved using rule (body_statement -> sentence BREAK SEMICOLON)
WARNING: rejected rule (body_statement -> BREAK SEMICOLON) in state 526
WARNING: reduce/reduce conflict in state 552 resolved using rule (body_statement -> sentence RETURN values SEMICOLON)
WARNING: rejected rule (body_statement -> RETURN values SEMICOLON) in state 552
WARNING: reduce/reduce conflict in state 553 resolved using rule (body_statement -> RETURN printable_values SEMICOLON)
WARNING: rejected rule (body_statement -> sentence RETURN printable_values SEMICOLON) in state 553
WARNING: reduce/reduce conflict in state 606 resolved using rule (structure_array_principal -> access_array_element)
WARNING: rejected rule (access_array_stucture -> access_array_element) in state 606
WARNING: reduce/reduce conflict in state 610 resolved using rule (method_body -> classStatement return_form)
WARNING: rejected rule (method_body -> return_form) in state 610
WARNING: Rule (access_array_stucture -> access_array_element) is never reduced
WARNING: Rule (printable_values -> VARIABLE) is never reduced
WARNING: Rule (logic_not_sentence -> LOGIC_NOT VARIABLE) is never reduced
WARNING: Rule (variable_assignment -> VARIABLE assignment_operator IDENTIFIER) is never reduced
WARNING: Rule (body_statement -> sentence RETURN printable_values SEMICOLON) is never reduced
