
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ARRAY_POP ARRAY_PUSH BREAK CLASS COLON COMMA COMMENT CONST COUNT COUNT_NORMAL COUNT_RECURSIVE DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION STRLEN SUBSTR TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n                   | length_operations\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n                        | logic_expression\n    \n    logic_expression : true_boolean_types logic_operator false_boolean_types\n                     | false_boolean_types logic_operator true_boolean_types\n    \n    true_boolean_types : TRUE\n                       | STRING\n                       | INTEGER\n                       | FLOAT\n                       | VARIABLE\n                       | ARRAY LEFT_PAREN values RIGHT_PAREN\n    \n    false_boolean_types : FALSE\n                        | STRING\n                        | INTEGER\n                        | VARIABLE\n                        | FLOAT\n                        | ARRAY LEFT_PAREN RIGHT_PAREN\n                        | NULL\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE COMMA printable_values\n                     | STRING STRING_CONCATENATION STRING\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal COMMA printable_values\n                     | function_invocation\n                     | function_invocation COMMA printable_values\n                     | string_special_function\n                     | string_special_function COMMA printable_values\n                     | array_special_function\n                     | array_special_function COMMA printable_values\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | FLOAT\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n           | STRING\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator string_special_function\n                        | VARIABLE assignment_operator array_special_function\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE assignment_operator conditional\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n                        | VARIABLE LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n                   | FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    string_special_function : STRLEN LEFT_PAREN string_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN\n    \n    string_param : STRING\n                 | VARIABLE\n    \n    int_param : INTEGER\n              | VARIABLE\n    \n    array_special_function : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                           | ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN\n    \n    count_param : COMMA COUNT_NORMAL\n                | COMMA COUNT_RECURSIVE\n                |\n    \n    length_operations : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                      | STRLEN LEFT_PAREN string_param RIGHT_PAREN\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN  access_method_object SEMICOLON\n                | RETURN SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,498,499,500,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[10,10,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,10,10,-222,-238,-252,-167,10,-242,-241,-243,-248,-246,-247,10,-216,-215,-251,-249,-14,-13,-173,10,-15,-16,10,-20,10,10,10,-28,10,10,-282,-236,-200,-17,-283,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,498,499,500,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[11,11,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,11,11,-222,-238,-252,-167,11,-242,-241,-243,-248,-246,-247,11,-216,-215,-251,-249,-14,-13,-173,11,-15,-16,11,-20,11,11,11,-28,11,11,-282,-236,-200,-17,-283,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[17,17,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,17,17,-222,-238,-252,-167,17,-242,-241,-243,-248,-246,-247,17,-216,-215,-251,-249,-14,-13,-173,-15,-16,17,-20,17,17,17,-28,17,17,-282,-236,-200,-17,-283,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[18,18,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,18,18,-222,-238,-252,-167,18,-242,-241,-243,-248,-246,-247,18,-216,-215,-251,-249,-14,-13,-173,-15,-16,18,-20,18,18,18,-28,18,18,-282,-236,-200,-17,-283,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,89,93,95,98,100,102,112,204,205,206,207,208,309,316,317,320,321,322,323,324,331,332,338,340,343,345,357,360,369,374,375,388,394,407,409,410,411,412,413,414,415,416,426,427,428,430,431,432,434,456,457,458,459,460,461,471,472,478,492,497,499,500,522,523,528,555,558,561,564,565,569,572,573,575,577,578,581,582,584,588,594,595,596,],[22,22,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,195,-152,-153,-214,-219,-220,-237,-118,-119,-120,-122,-123,-254,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-263,-273,-234,22,22,-222,-238,-273,-252,-253,463,-270,-271,-272,-167,22,-242,-241,-243,-248,-246,-247,22,-216,-215,-251,-262,493,-266,-249,-14,-13,519,-173,-15,-16,-268,-269,22,-267,-20,22,-255,22,22,-28,22,22,-282,-236,-200,-17,-265,-283,-18,-19,-264,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,62,77,84,89,92,93,95,98,100,101,102,103,104,105,112,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,163,164,165,166,168,169,170,171,176,200,201,204,205,206,207,208,230,246,313,314,316,317,320,321,322,323,324,327,331,332,338,340,343,344,345,347,353,357,367,368,369,371,373,374,375,376,388,394,407,409,412,413,414,415,416,426,427,428,430,431,432,434,439,440,441,442,443,444,445,446,447,448,449,454,456,457,458,459,460,461,471,472,478,497,499,500,507,508,522,523,524,527,528,533,534,540,548,553,555,558,561,565,569,572,573,575,577,578,579,581,582,584,588,594,595,596,],[23,23,-5,-6,-7,-8,-9,53,53,-194,-195,-196,-10,-11,-12,96,97,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,117,-121,157,117,177,197,-152,-153,-214,-219,203,-220,210,210,212,-237,232,53,245,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,53,249,254,197,53,53,53,53,53,210,-53,-54,-55,249,268,268,272,274,277,245,282,287,295,245,245,245,245,245,245,249,319,319,-118,-119,-120,-122,-123,249,245,249,249,-216,-215,-239,-240,-250,-244,-245,377,-201,-202,-203,-223,-159,395,-158,399,405,-263,421,423,-234,426,432,23,23,377,-222,-238,-273,-252,-270,-271,-272,-167,23,-242,-241,-243,-248,-246,-247,23,480,377,-45,-46,-47,-48,-49,-50,483,487,268,399,-216,-215,-251,-262,494,-266,-249,-14,-13,-173,-15,-16,377,531,-268,-269,249,210,23,550,551,249,560,249,-267,-20,23,23,580,-28,580,580,-282,-236,592,-200,-17,-265,-283,-18,-19,-264,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,508,528,531,558,561,565,569,572,573,575,577,578,580,581,582,588,594,595,],[24,24,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,90,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,24,24,-222,-238,-252,-167,24,-242,-241,-243,-248,-246,-247,24,-216,-215,-251,-249,-14,-13,-173,-15,-16,533,24,545,-20,24,24,24,-28,24,24,-282,-236,90,-200,-17,-283,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,508,528,531,558,561,565,569,572,573,575,577,578,580,581,582,588,594,595,],[25,25,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,91,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,25,25,-222,-238,-252,-167,25,-242,-241,-243,-248,-246,-247,25,-216,-215,-251,-249,-14,-13,-173,-15,-16,534,25,546,-20,25,25,25,-28,25,25,-282,-236,91,-200,-17,-283,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[39,39,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,39,39,-222,-238,-252,-167,39,-242,-241,-243,-248,-246,-247,39,-216,-215,-251,-249,-14,-13,-173,-15,-16,39,-20,39,39,39,-28,39,39,-282,-236,-200,-17,-283,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[40,40,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,40,40,-222,-238,-252,-167,40,-242,-241,-243,-248,-246,-247,40,-216,-215,-251,-249,-14,-13,-173,-15,-16,40,-20,40,40,40,-28,40,40,-282,-236,-200,-17,-283,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[41,41,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,41,41,-222,-238,-252,-167,41,-242,-241,-243,-248,-246,-247,41,-216,-215,-251,-249,-14,-13,-173,-15,-16,41,-20,41,41,41,-28,41,41,-282,-236,-200,-17,-283,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,357,369,374,375,388,394,407,409,412,413,414,415,416,426,427,428,430,431,432,434,456,457,458,459,460,461,471,472,478,497,499,500,522,523,528,555,558,561,565,569,572,573,575,577,578,581,582,584,588,594,595,596,],[42,42,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-263,-234,42,42,-222,-238,-273,-252,-270,-271,-272,-167,42,-242,-241,-243,-248,-246,-247,42,-216,-215,-251,-262,42,-266,-249,-14,-13,-173,-15,-16,-268,-269,42,-267,-20,42,42,42,-28,42,42,-282,-236,-200,-17,-265,-283,-18,-19,-264,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,357,369,374,375,388,394,407,409,412,413,414,415,416,426,427,428,430,431,432,434,456,457,458,459,460,461,471,472,478,497,499,500,522,523,528,555,558,561,565,569,572,573,575,577,578,581,582,584,588,594,595,596,],[43,43,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-263,-234,43,43,-222,-238,-273,-252,-270,-271,-272,-167,43,-242,-241,-243,-248,-246,-247,43,-216,-215,-251,-262,43,-266,-249,-14,-13,-173,-15,-16,-268,-269,43,-267,-20,43,43,43,-28,43,43,-282,-236,-200,-17,-265,-283,-18,-19,-264,]),'ARRAY':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,62,77,84,89,93,95,98,100,102,103,104,108,112,113,121,133,139,140,141,142,143,144,145,146,147,151,163,164,204,205,206,207,208,315,316,317,318,320,321,322,323,324,330,331,332,334,335,336,338,340,343,345,369,374,375,388,394,409,415,416,425,426,427,428,430,431,432,434,448,456,457,458,471,472,478,489,497,499,500,527,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[44,44,-5,-6,-7,-8,-9,81,81,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,81,-121,81,81,196,-152,-153,-214,-219,-220,81,81,215,-237,81,81,81,81,81,81,81,81,81,-53,-54,-55,44,289,296,-118,-119,-120,-122,-123,215,-216,-215,370,-239,-240,-250,-244,-245,370,-201,-202,370,370,370,-203,-223,-159,-158,-234,44,44,-222,-238,-252,-167,44,370,-242,-241,-243,-248,-246,-247,44,44,-216,-215,-251,-249,-14,-13,515,-173,-15,-16,81,44,-20,44,44,44,-28,44,44,-282,-236,-200,-17,-283,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,62,89,93,95,98,100,102,112,117,151,157,177,196,204,205,206,207,208,210,232,254,272,277,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,393,394,409,415,416,426,427,428,430,431,432,434,448,456,457,458,471,472,478,483,487,497,499,500,528,558,561,565,569,572,573,575,577,578,580,581,582,588,592,594,595,],[45,45,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,92,-197,-198,-199,-200,-217,-218,-221,-235,-236,109,110,-3,-4,137,-121,45,-152,-153,-214,-219,-220,-237,137,45,137,92,109,-118,-119,-120,-122,-123,137,137,137,92,353,367,368,-239,-240,372,-244,-245,-201,-202,-203,-223,-159,-158,-234,45,45,-222,110,-238,-252,-167,45,353,-241,-243,-248,-246,353,45,45,-216,-215,-251,-249,-14,-13,353,92,-173,-15,-16,45,-20,45,45,45,-28,45,45,-282,-236,92,-200,-17,-283,353,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,62,84,89,93,95,98,100,102,108,112,121,133,139,140,141,142,143,204,205,206,207,208,315,316,317,320,321,322,323,324,330,331,332,334,335,336,338,340,343,345,369,374,375,388,394,409,415,416,425,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[46,46,-5,-6,-7,-8,-9,46,46,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,46,-121,46,46,-152,-153,-214,-219,-220,46,-237,46,46,46,46,46,46,46,-118,-119,-120,-122,-123,46,-216,-215,-239,-240,-250,-244,-245,46,-201,-202,46,46,46,-203,-223,-159,-158,-234,46,46,-222,-238,-252,-167,46,46,-242,-241,-243,-248,-246,-247,46,-216,-215,-251,-249,-14,-13,-173,-15,-16,46,-20,46,46,46,-28,46,46,-282,-236,-200,-17,-283,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,388,394,409,415,426,427,428,430,431,432,456,457,458,471,472,478,497,499,500,558,572,582,594,595,],[0,-2,-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-1,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,-222,-238,-252,-167,-242,-241,-243,-248,-246,-247,-216,-215,-251,-249,-14,-13,-173,-15,-16,-20,-28,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,63,69,70,71,72,73,80,82,83,85,90,91,96,97,98,100,102,112,119,120,156,157,177,178,179,180,181,182,183,184,185,186,187,190,191,192,193,202,203,204,205,206,207,208,229,236,237,238,239,240,241,242,243,244,245,247,248,254,255,256,257,258,259,260,261,262,263,264,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,297,298,300,301,302,303,304,305,316,317,320,321,322,323,324,328,331,332,333,338,340,343,345,346,352,356,369,377,378,379,381,382,383,388,394,400,403,404,417,418,426,427,428,430,431,432,436,450,455,456,457,466,467,468,469,470,471,473,474,476,479,481,482,494,495,497,503,509,510,514,518,525,526,530,535,536,537,541,556,578,579,581,586,589,591,],[48,49,-137,-138,-194,-195,-196,-154,-155,-197,-198,-199,98,-217,-218,100,102,-221,-235,-236,-100,-102,-104,-119,-108,-110,-112,-114,-116,-118,-120,-121,-51,-122,-123,-56,-58,-59,-124,-74,-127,-101,-148,-149,-150,-151,-214,-219,-220,-237,-118,-120,-75,-76,-134,-139,-140,-141,-142,-143,-144,-145,-146,-147,-119,-168,-169,98,100,-232,-233,-118,-119,-120,-122,-123,340,-98,-57,-135,-103,-77,-78,-118,-119,-120,-134,-105,-107,-84,-80,-83,-87,-106,-109,-111,-113,-115,-117,-52,98,-85,-81,-82,-79,-132,-133,-136,-86,-60,-68,-69,-70,-71,-72,-61,-62,-63,-64,-65,-66,-125,-126,-73,-128,-129,-130,-131,-99,-216,-215,-239,-240,-250,-244,-245,-156,-201,-202,388,-203,-223,-159,-158,-176,-186,-67,-234,-36,439,-37,-42,-43,-44,-222,-238,-183,-184,-185,-174,-175,-242,-241,-243,-248,-246,-247,477,-157,-177,-216,-215,-172,-229,-230,-231,-228,-249,504,505,506,-39,508,-38,522,523,-173,529,-40,-41,-193,-178,-170,-171,-35,-190,-191,-192,555,564,588,590,98,597,598,599,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,528,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,435,435,-222,-238,-252,-167,435,-242,-241,-243,-248,-246,-247,473,-216,-215,-251,-249,-14,-13,-173,-15,-16,435,-20,435,435,579,-28,579,579,-282,-236,-200,-17,-283,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,316,317,320,321,322,323,324,331,332,338,340,343,345,369,374,375,388,394,409,415,416,426,427,428,430,431,432,434,456,457,458,471,472,478,497,499,500,528,558,561,565,572,575,577,578,581,582,588,594,595,],[-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-234,436,436,-222,-238,-252,-167,436,-242,-241,-243,-248,-246,-247,474,-216,-215,-251,-249,-14,-13,-173,-15,-16,436,-20,436,436,-28,586,-282,-236,-200,-17,-283,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,204,205,206,207,208,309,316,317,320,321,322,323,324,331,332,338,340,343,345,357,360,369,388,394,407,409,410,415,426,427,428,430,431,432,433,434,437,456,457,458,459,461,464,471,472,475,477,478,497,499,500,504,505,506,522,523,529,544,555,558,564,567,570,572,574,575,576,577,578,581,582,583,584,585,587,588,590,594,595,596,597,598,599,],[-5,-6,-7,-8,-9,-194,-195,-196,-10,-11,-12,-197,-198,-199,-200,-217,-218,-221,-235,-236,-3,-4,-121,-214,-219,-220,-237,-118,-119,-120,-122,-123,-254,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,-159,-158,-263,409,-234,-222,-238,458,-252,-253,-167,-242,-241,-243,-248,-246,-247,472,-21,478,-216,-215,-251,-262,-266,497,-249,-14,-25,-27,-13,-173,-15,-16,-23,-24,-26,-268,-269,-22,558,-267,-20,-255,572,582,-28,584,-274,-276,-282,-236,-200,-17,596,-265,-275,-278,-283,-281,-18,-19,-264,-277,-279,-280,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,53,64,65,66,67,68,77,81,84,88,89,93,95,103,104,112,113,117,121,122,123,124,125,126,127,128,129,130,131,132,133,139,140,141,142,143,144,145,146,147,154,165,166,168,169,170,171,177,188,189,194,195,196,215,246,289,296,319,322,327,370,376,380,384,385,440,441,442,443,444,445,446,496,501,507,515,520,527,539,],[50,84,103,104,105,107,108,113,135,148,149,150,151,152,113,167,113,176,113,-152,-153,113,113,230,113,135,113,246,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,113,113,113,113,113,113,113,-53,-54,-55,246,246,246,246,246,246,246,135,311,312,313,314,315,330,246,354,355,135,148,376,425,376,447,448,449,376,-45,-46,-47,-48,-49,-50,524,527,376,538,540,113,553,]),'STRING':([10,11,50,77,84,89,93,95,101,103,104,107,108,109,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,163,164,165,166,167,168,169,170,171,176,213,230,246,312,313,314,315,329,330,334,335,336,344,355,371,373,392,425,435,449,473,490,521,524,527,538,540,553,579,],[54,54,118,160,118,187,-152,-153,205,160,160,214,224,227,205,235,54,243,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,54,248,205,205,258,54,54,54,54,54,160,-53,-54,-55,205,267,267,205,281,285,292,281,281,205,281,281,281,281,205,205,205,281,363,205,205,224,205,205,205,205,205,205,205,205,205,205,205,205,267,205,227,205,205,160,205,205,205,205,]),'INTEGER':([10,11,50,77,84,89,92,93,95,101,103,104,108,109,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,139,140,141,142,143,144,145,146,147,148,153,154,163,164,165,166,167,168,169,170,171,176,213,230,246,313,314,315,327,329,330,334,335,336,344,347,353,355,367,368,371,372,373,376,392,425,435,440,441,442,443,444,445,446,454,473,490,507,521,524,527,538,540,547,553,566,579,],[60,60,119,60,119,119,198,-152,-153,204,60,60,223,226,204,233,60,242,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,60,204,204,198,60,60,60,60,60,60,-53,-54,-55,204,204,279,286,293,279,279,204,279,279,279,279,204,204,204,279,204,204,223,382,204,204,204,204,204,204,398,406,204,422,424,204,429,204,382,204,204,204,382,-45,-46,-47,-48,-49,-50,398,204,226,382,204,204,60,204,204,559,204,382,204,]),'FLOAT':([10,11,50,77,84,89,93,95,101,103,104,108,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,140,141,142,143,144,145,146,147,148,153,154,163,164,165,166,167,168,169,170,171,176,213,230,246,313,314,315,327,329,330,334,335,336,344,355,371,373,376,392,425,435,440,441,442,443,444,445,446,473,507,521,524,527,538,540,553,566,579,],[61,61,120,61,120,120,-152,-153,206,61,61,206,206,234,61,244,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,61,206,206,61,61,61,61,61,61,-53,-54,-55,206,206,280,288,294,280,280,206,280,280,280,280,206,206,206,280,206,206,206,383,206,206,206,206,206,206,206,206,206,383,206,206,206,383,-45,-46,-47,-48,-49,-50,206,383,206,206,61,206,206,206,383,206,]),'IDENTIFIER':([10,11,17,18,22,42,46,50,84,89,93,95,121,123,124,125,126,127,128,129,130,131,132,133,139,140,141,142,143,174,200,201,307,327,376,408,440,441,442,443,444,445,446,463,493,507,519,],[64,64,86,87,88,106,112,64,64,64,-152,-153,64,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,64,64,64,64,64,64,308,322,322,359,380,380,462,380,-45,-46,-47,-48,-49,-50,496,520,380,539,]),'STRLEN':([10,11,50,84,89,93,95,121,123,124,125,126,127,128,129,130,131,132,133,139,140,141,142,143,327,376,440,441,442,443,444,445,446,507,],[65,65,65,65,65,-152,-153,65,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,65,65,65,65,65,65,385,385,385,-45,-46,-47,-48,-49,-50,385,]),'SUBSTR':([10,11,50,84,89,93,95,121,133,139,140,141,142,143,],[66,66,66,66,66,-152,-153,66,66,66,66,66,66,66,]),'COUNT':([10,11,50,84,89,93,95,121,123,124,125,126,127,128,129,130,131,132,133,139,140,141,142,143,327,376,440,441,442,443,444,445,446,507,],[67,67,67,67,67,-152,-153,67,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,67,67,67,67,67,67,384,384,384,-45,-46,-47,-48,-49,-50,384,]),'ARRAY_POP':([10,11,50,84,89,93,95,121,133,139,140,141,142,143,],[68,68,68,68,68,-152,-153,68,68,68,68,68,68,68,]),'TRUE':([10,11,50,77,84,89,93,95,101,103,104,108,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,140,141,142,143,144,145,146,147,148,153,164,167,176,213,230,313,314,315,329,330,334,335,336,344,355,371,373,392,425,435,473,521,524,527,538,540,553,579,],[69,69,69,161,69,69,-152,-153,207,161,161,207,207,161,69,207,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,69,207,207,69,69,69,69,69,161,-53,-54,-55,207,207,291,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,161,207,207,207,207,]),'FALSE':([10,11,50,77,84,89,93,95,101,103,104,108,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,140,141,142,143,144,145,146,147,148,153,163,167,176,213,230,313,314,315,329,330,334,335,336,344,355,371,373,392,425,435,473,521,524,527,538,540,553,579,],[70,70,70,162,70,70,-152,-153,208,162,162,208,208,162,70,208,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,70,208,208,70,70,70,70,70,162,-53,-54,-55,208,208,284,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,162,208,208,208,208,]),'LOGIC_NOT':([10,11,50,77,84,89,93,95,103,104,113,121,133,139,140,141,142,143,144,145,146,147,527,],[77,77,77,77,77,77,-152,-153,77,77,77,77,77,77,77,77,77,77,77,-53,-54,-55,77,]),'NULL':([10,11,50,77,84,89,93,95,103,104,113,121,133,139,140,141,142,143,144,145,146,147,163,527,],[82,82,82,82,82,82,-152,-153,82,82,82,82,82,82,82,82,82,82,82,-53,-54,-55,82,82,]),'MINUS':([23,31,53,54,60,61,74,80,83,117,118,119,120,157,160,177,187,192,210,232,233,234,235,238,242,243,244,245,279,280,281,301,302,303,304,316,317,377,378,379,381,382,383,438,456,457,479,482,509,510,514,530,535,536,537,560,580,581,592,593,],[94,99,94,-136,-132,-133,99,166,-127,94,-136,-132,-133,-134,-136,94,-136,99,-134,-134,-132,-133,-136,-135,-132,-136,-133,-134,-132,-133,-136,-128,-129,-130,-131,-216,-215,-36,442,-37,-42,-43,-44,442,-216,-215,-39,442,-40,-41,-193,442,-190,-191,-192,442,94,99,94,99,]),'EQUALS':([23,34,106,193,199,212,222,223,224,226,227,321,322,324,419,467,468,469,470,471,494,531,580,],[93,101,213,101,318,327,337,-206,-207,-206,-207,371,-250,373,465,-229,-230,-231,-228,-249,521,548,93,]),'PLUS_EQUALS':([23,531,580,],[95,547,95,]),'COMMA':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,69,70,71,72,73,80,82,83,98,100,102,112,115,117,118,119,120,156,157,204,205,206,207,208,214,219,220,221,223,224,237,238,240,241,242,243,244,245,249,251,253,254,255,256,257,264,267,268,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,297,298,300,301,302,303,304,316,317,320,321,322,323,324,331,332,338,339,340,343,345,346,352,356,358,359,366,369,387,388,394,395,396,397,398,399,400,403,404,426,427,428,430,431,432,451,452,455,456,457,462,467,468,469,470,471,485,486,487,518,],[-197,-198,-199,-217,-218,-221,-235,-236,121,133,-119,139,140,141,142,143,-118,-120,-121,-51,-122,-123,-56,-58,-59,-124,-74,-127,-214,-219,-220,-237,139,133,-119,-118,-120,-75,-76,-118,-119,-120,-122,-123,329,334,335,336,-118,-119,-57,-135,-77,-78,-118,-119,-120,-134,-162,344,-163,-84,-80,-83,-87,-52,-179,-180,347,349,349,349,-200,-85,-81,-82,-79,-132,-133,-136,-86,-60,-68,-69,-70,-71,-72,-61,-62,-63,-64,-65,-66,-125,-126,-73,-128,-129,-130,-131,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,393,-223,-159,-158,-176,-186,-67,408,-260,334,-234,334,-222,-238,-164,-165,454,-181,-182,-183,-184,-185,-242,-241,-243,-248,-246,-247,489,490,-177,-216,-215,-261,-229,-230,-231,-228,-249,349,349,349,-178,]),'RIGHT_PAREN':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,69,70,71,72,73,80,82,83,98,100,102,112,114,115,116,117,118,119,120,135,148,156,157,167,172,176,204,205,206,207,208,209,211,216,217,218,219,220,221,223,224,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,297,298,299,300,301,302,303,304,310,313,314,315,316,317,320,321,322,323,324,331,332,338,340,341,342,343,345,346,348,350,351,352,354,356,362,363,364,365,366,369,377,379,381,382,383,386,387,388,389,390,391,394,395,396,397,398,399,400,401,402,403,404,426,427,428,430,431,432,438,451,452,455,456,457,467,468,469,470,471,479,482,483,484,485,486,487,488,491,509,510,511,512,513,514,516,517,518,524,532,535,536,537,540,542,543,545,546,550,551,552,553,554,559,562,571,],[-197,-198,-199,-217,-218,-221,-235,-236,-102,-104,-119,-108,-110,-112,-114,-116,-118,-120,-121,-51,-122,-123,-56,-58,-59,-124,-74,-127,-214,-219,-220,-237,236,237,238,-104,-119,-118,-120,-166,-166,-75,-76,300,305,-166,-118,-119,-120,-122,-123,325,326,331,332,333,-208,-210,-212,-118,-119,-166,237,-134,-132,-133,-136,-57,-135,-103,-77,-78,-118,-119,-120,-134,-105,-107,-162,343,-160,-161,-163,-84,-80,-83,-87,-106,-109,-111,-113,-115,-117,-52,345,346,-179,-180,-189,-189,-189,-200,352,-85,-81,-82,-79,-132,-133,-136,-86,-60,-68,-69,-70,-71,-72,-61,-62,-63,-64,-65,-66,-125,-126,356,-73,-128,-129,-130,-131,361,-166,-166,300,-216,-215,-239,-240,-250,-244,-245,-201,-202,-203,-223,394,238,-159,-158,-176,400,403,404,-186,300,-67,417,418,419,420,356,-234,-36,-37,-42,-43,-44,450,451,-222,-209,-211,-213,-238,-164,-165,455,-181,-182,-183,-187,-188,-184,-185,-242,-241,-243,-248,-246,-247,479,-226,-204,-177,-216,-215,-229,-230,-231,-228,-249,-39,-38,509,510,-189,-189,-189,514,518,-40,-41,535,536,537,-193,-227,-205,-178,-166,549,-190,-191,-192,-166,556,557,-29,-30,-31,-32,451,-166,563,-33,568,-34,]),'EQUALS_EQUALS':([52,53,54,60,61,62,69,70,74,75,76,80,83,116,117,118,119,120,157,158,159,160,161,162,177,178,179,187,192,193,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,316,317,467,468,469,470,480,],[123,136,-119,-118,-120,-121,-122,-123,153,123,155,-124,-127,123,136,-119,-118,-120,136,123,153,-119,-122,-123,136,123,123,-119,153,155,136,136,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,-216,-215,-229,-230,-231,-228,123,]),'IDENTICAL':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,158,160,161,162,177,178,179,187,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,480,],[124,-134,-119,-118,-120,-121,-122,-123,124,-124,-127,124,-134,-119,-118,-120,-134,124,-119,-122,-123,-134,124,124,-119,-134,-134,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,124,]),'NOT_EQUALS':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,158,160,161,162,177,178,179,187,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,480,],[125,-134,-119,-118,-120,-121,-122,-123,125,-124,-127,125,-134,-119,-118,-120,-134,125,-119,-122,-123,-134,125,125,-119,-134,-134,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,125,]),'NOT_IDENTICAL':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,158,160,161,162,177,178,179,187,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,480,],[126,-134,-119,-118,-120,-121,-122,-123,126,-124,-127,126,-134,-119,-118,-120,-134,126,-119,-122,-123,-134,126,126,-119,-134,-134,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,126,]),'SMALL_THAN':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,158,160,161,162,177,178,179,187,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,480,],[127,-134,-119,-118,-120,-121,-122,-123,127,-124,-127,127,-134,-119,-118,-120,-134,127,-119,-122,-123,-134,127,127,-119,-134,-134,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,127,]),'GREATER_THAN':([52,53,54,60,61,62,69,70,75,80,83,94,99,116,117,118,119,120,157,158,160,161,162,177,178,179,187,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,337,465,480,],[128,-134,-119,-118,-120,-121,-122,-123,128,-124,-127,200,201,128,-134,-119,-118,-120,-134,128,-119,-122,-123,-134,128,128,-119,-134,-134,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,392,498,128,]),'SMALL_EQUALS_TO':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,158,160,161,162,177,178,179,187,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,480,],[129,-134,-119,-118,-120,-121,-122,-123,129,-124,-127,129,-134,-119,-118,-120,-134,129,-119,-122,-123,-134,129,129,-119,-134,-134,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,129,]),'GREATER_EQUALS_TO':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,158,160,161,162,177,178,179,187,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,480,],[130,-134,-119,-118,-120,-121,-122,-123,130,-124,-127,130,-134,-119,-118,-120,-134,130,-119,-122,-123,-134,130,130,-119,-134,-134,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,130,]),'SPACECRAFT':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,158,160,161,162,177,178,179,187,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,480,],[131,-134,-119,-118,-120,-121,-122,-123,131,-124,-127,131,-134,-119,-118,-120,-134,131,-119,-122,-123,-134,131,131,-119,-134,-134,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,131,]),'NULL_FUSION':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,158,160,161,162,177,178,179,187,210,232,233,234,235,238,245,279,280,281,297,298,301,302,303,304,480,],[132,-134,-119,-118,-120,-121,-122,-123,132,-124,-127,132,-134,-119,-118,-120,-134,132,-119,-122,-123,-134,132,132,-119,-134,-134,-118,-120,-119,-135,-134,-132,-133,-136,-125,-126,-128,-129,-130,-131,132,]),'STRING_CONCATENATION':([53,54,117,118,],[134,138,134,138,]),'LOGIC_AND':([53,54,60,61,62,63,69,70,71,72,73,78,79,80,82,83,117,118,119,120,156,157,160,161,162,177,187,204,205,206,207,208,210,232,233,234,235,237,238,240,241,242,243,244,245,254,255,256,257,264,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,297,298,300,301,302,303,304,316,317,356,456,457,467,468,469,470,],[-66,-63,-64,-65,-121,145,-62,-68,-56,-58,-59,145,145,-124,-74,-127,-66,-63,-64,-65,-75,-66,-63,-62,-68,-66,-63,-118,-119,-120,-122,-123,-66,-66,-64,-65,-63,-57,-135,-77,-78,-118,-119,-120,-134,-84,-80,-83,-87,-52,-85,-81,-82,-79,-132,-133,-136,-86,-60,-68,-69,-70,-71,-72,-61,-62,-63,-64,-65,-66,-125,-126,-73,-128,-129,-130,-131,-216,-215,-67,-216,-215,-229,-230,-231,-228,]),'LOGIC_OR':([53,54,60,61,62,63,69,70,71,72,73,78,79,80,82,83,117,118,119,120,156,157,160,161,162,177,187,204,205,206,207,208,210,232,233,234,235,237,238,240,241,242,243,244,245,254,255,256,257,264,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,297,298,300,301,302,303,304,316,317,356,456,457,467,468,469,470,],[-66,-63,-64,-65,-121,146,-62,-68,-56,-58,-59,146,146,-124,-74,-127,-66,-63,-64,-65,-75,-66,-63,-62,-68,-66,-63,-118,-119,-120,-122,-123,-66,-66,-64,-65,-63,-57,-135,-77,-78,-118,-119,-120,-134,-84,-80,-83,-87,-52,-85,-81,-82,-79,-132,-133,-136,-86,-60,-68,-69,-70,-71,-72,-61,-62,-63,-64,-65,-66,-125,-126,-73,-128,-129,-130,-131,-216,-215,-67,-216,-215,-229,-230,-231,-228,]),'LOGIC_XOR':([53,54,60,61,62,63,69,70,71,72,73,78,79,80,82,83,117,118,119,120,156,157,160,161,162,177,187,204,205,206,207,208,210,232,233,234,235,237,238,240,241,242,243,244,245,254,255,256,257,264,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,297,298,300,301,302,303,304,316,317,356,456,457,467,468,469,470,],[-66,-63,-64,-65,-121,147,-62,-68,-56,-58,-59,147,147,-124,-74,-127,-66,-63,-64,-65,-75,-66,-63,-62,-68,-66,-63,-118,-119,-120,-122,-123,-66,-66,-64,-65,-63,-57,-135,-77,-78,-118,-119,-120,-134,-84,-80,-83,-87,-52,-85,-81,-82,-79,-132,-133,-136,-86,-60,-68,-69,-70,-71,-72,-61,-62,-63,-64,-65,-66,-125,-126,-73,-128,-129,-130,-131,-216,-215,-67,-216,-215,-229,-230,-231,-228,]),'MULTIPLY':([53,54,60,61,83,117,118,119,120,157,160,177,187,210,232,233,234,235,238,242,243,244,245,279,280,281,377,378,379,381,382,383,438,479,482,509,510,514,530,535,536,537,560,],[-134,-136,-132,-133,168,-134,-136,-132,-133,-134,-136,-134,-136,-134,-134,-132,-133,-136,-135,-132,-136,-133,-134,-132,-133,-136,-36,443,-37,-42,-43,-44,443,-39,443,-40,-41,-193,443,-190,-191,-192,443,]),'DIVIDE':([53,54,60,61,83,117,118,119,120,157,160,177,187,210,232,233,234,235,238,242,243,244,245,279,280,281,377,378,379,381,382,383,438,479,482,509,510,514,530,535,536,537,560,],[-134,-136,-132,-133,169,-134,-136,-132,-133,-134,-136,-134,-136,-134,-134,-132,-133,-136,-135,-132,-136,-133,-134,-132,-133,-136,-36,444,-37,-42,-43,-44,444,-39,444,-40,-41,-193,444,-190,-191,-192,444,]),'MODULE':([53,54,60,61,83,117,118,119,120,157,160,177,187,210,232,233,234,235,238,242,243,244,245,279,280,281,377,378,379,381,382,383,438,479,482,509,510,514,530,535,536,537,560,],[-134,-136,-132,-133,170,-134,-136,-132,-133,-134,-136,-134,-136,-134,-134,-132,-133,-136,-135,-132,-136,-133,-134,-132,-133,-136,-36,445,-37,-42,-43,-44,445,-39,445,-40,-41,-193,445,-190,-191,-192,445,]),'POW':([53,54,60,61,83,117,118,119,120,157,160,177,187,210,232,233,234,235,238,242,243,244,245,279,280,281,377,378,379,381,382,383,438,479,482,509,510,514,530,535,536,537,560,],[-134,-136,-132,-133,171,-134,-136,-132,-133,-134,-136,-134,-136,-134,-134,-132,-133,-136,-135,-132,-136,-133,-134,-132,-133,-136,-36,446,-37,-42,-43,-44,446,-39,446,-40,-41,-193,446,-190,-191,-192,446,]),'PLUS':([53,54,60,61,80,83,117,118,119,120,157,160,177,187,210,232,233,234,235,238,242,243,244,245,279,280,281,301,302,303,304,377,378,379,381,382,383,438,479,482,509,510,514,530,535,536,537,560,],[-134,-136,-132,-133,165,-127,-134,-136,-132,-133,-134,-136,-134,-136,-134,-134,-132,-133,-136,-135,-132,-136,-133,-134,-132,-133,-136,-128,-129,-130,-131,-36,441,-37,-42,-43,-44,441,-39,441,-40,-41,-193,441,-190,-191,-192,441,]),'RIGHT_BRACKET':([62,92,111,197,198,204,205,206,207,208,225,228,339,405,406,421,422,423,424,429,452,453,517,],[-121,199,229,316,317,-118,-119,-120,-122,-123,338,339,-224,456,457,467,468,469,470,471,-204,-225,-205,]),'EXTENDS':([86,87,],[174,174,]),'IMPLEMENTS':([86,173,308,],[-257,307,-256,]),'LEFT_BRACE':([86,87,173,175,306,308,325,326,358,359,361,420,462,498,502,549,557,563,568,],[-257,-257,-259,309,357,-256,374,375,-258,-260,416,416,-261,416,528,561,565,569,573,]),'FEGTS':([89,93,95,],[188,-152,-153,]),'READLINE':([89,93,95,],[189,-152,-153,]),'FN':([89,93,95,],[194,-152,-153,]),'PUBLIC':([309,357,360,407,410,459,461,522,523,555,564,584,596,],[-254,-263,412,412,-253,-262,-266,-268,-269,-267,-255,-265,-264,]),'PRIVATE':([309,357,360,407,410,459,461,522,523,555,564,584,596,],[-254,-263,413,413,-253,-262,-266,-268,-269,-267,-255,-265,-264,]),'PROTECTED':([309,357,360,407,410,459,461,522,523,555,564,584,596,],[-254,-263,414,414,-253,-262,-266,-268,-269,-267,-255,-265,-264,]),'STDIN':([311,],[362,]),'COUNT_NORMAL':([349,],[401,]),'COUNT_RECURSIVE':([349,],[402,]),'STATIC':([357,407,412,413,414,459,460,461,522,523,555,584,596,],[-263,-273,-270,-271,-272,-262,492,-266,-268,-269,-267,-265,-264,]),'ELSEIF':([472,582,],[501,501,]),'ELSE':([472,582,],[502,502,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,374,375,416,434,528,561,565,569,573,575,],[2,2,434,434,434,434,434,434,434,577,577,577,]),'print_statement':([0,2,374,375,416,434,498,528,561,565,569,573,575,],[3,3,3,3,3,3,526,3,3,3,3,3,3,]),'assignment':([0,2,374,375,416,434,528,561,565,569,573,575,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,89,374,375,416,434,528,561,565,569,573,575,],[5,5,183,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,374,375,416,434,528,561,565,569,573,575,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,374,375,416,434,528,561,565,569,573,575,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,374,375,416,434,528,561,565,569,573,575,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,374,375,416,434,528,561,565,569,573,575,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,374,375,416,434,528,561,565,569,573,575,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,374,375,416,434,460,528,561,565,569,573,575,],[13,13,13,13,13,13,495,13,13,13,13,13,13,]),'structure_array_principal':([0,2,89,151,374,375,416,434,448,528,561,565,569,573,575,],[14,14,14,270,14,14,14,14,485,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,89,151,374,375,416,434,448,528,561,565,569,573,575,],[15,15,15,271,15,15,15,15,486,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,84,89,121,133,139,140,141,142,143,374,375,416,434,528,561,565,569,573,575,],[16,16,56,56,56,56,16,56,56,56,56,56,56,56,16,16,16,16,16,16,16,16,16,16,]),'if_statement':([0,2,374,375,416,434,528,561,565,569,573,575,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,374,375,416,434,528,561,565,569,573,575,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,374,375,416,434,528,561,565,569,573,575,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,374,375,416,434,460,528,561,565,569,573,575,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,374,375,416,434,460,528,561,565,569,573,575,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,89,108,151,315,318,330,334,335,336,374,375,416,425,434,448,528,561,565,569,573,575,],[28,28,28,221,28,221,369,221,221,221,221,28,28,28,221,28,28,28,28,28,28,28,28,]),'associative_array':([0,2,89,151,374,375,416,434,448,528,561,565,569,573,575,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,89,151,374,375,416,434,448,528,561,565,569,573,575,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,77,84,89,103,104,113,121,133,136,139,140,141,142,143,144,151,153,371,373,374,375,416,434,447,448,527,528,561,565,569,573,575,579,],[31,31,74,74,74,159,74,192,159,159,159,74,74,256,74,74,74,74,74,159,273,275,428,430,31,31,31,31,484,273,159,31,31,31,581,581,581,593,]),'matrix_firstform':([0,2,89,151,374,375,416,434,448,528,561,565,569,573,575,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,89,151,374,375,416,434,448,528,561,565,569,573,575,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,77,84,89,103,104,113,121,133,136,139,140,141,142,143,144,151,374,375,416,434,448,527,528,561,565,569,573,575,],[34,34,76,76,76,76,76,193,76,76,76,76,76,257,76,76,76,76,76,76,34,34,34,34,34,34,76,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,89,151,374,375,416,434,448,528,561,565,569,573,575,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,89,151,374,375,416,434,448,528,561,565,569,573,575,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,84,89,108,121,133,139,140,141,142,143,315,330,334,335,336,374,375,416,425,434,528,561,565,569,573,575,],[37,37,37,37,37,37,37,220,37,37,37,37,37,37,37,220,220,220,220,220,37,37,37,220,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,84,89,121,133,139,140,141,142,143,374,375,416,434,528,561,565,569,573,575,579,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,578,578,578,591,]),'printable_values':([10,11,50,84,121,133,139,140,141,142,143,],[51,85,114,172,239,247,259,260,261,262,263,]),'values':([10,11,50,77,84,89,101,103,104,108,110,113,121,122,133,135,136,139,140,141,142,143,144,148,153,167,176,213,230,313,314,315,329,330,334,335,336,344,355,371,373,392,425,435,473,521,524,527,538,540,553,579,],[52,52,52,158,52,178,202,158,158,219,228,158,52,240,52,253,255,52,52,52,52,52,158,253,276,299,253,328,253,253,253,366,386,387,219,219,219,396,299,427,431,452,219,476,503,541,253,158,552,253,253,589,]),'conditional':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,527,],[55,55,115,156,115,186,209,211,231,55,55,55,55,55,55,55,543,]),'function_invocation':([10,11,50,84,89,121,133,139,140,141,142,143,200,201,],[57,57,57,57,180,57,57,57,57,57,57,57,320,323,]),'string_special_function':([10,11,50,84,89,121,133,139,140,141,142,143,],[58,58,58,58,181,58,58,58,58,58,58,58,]),'array_special_function':([10,11,50,84,89,121,133,139,140,141,142,143,],[59,59,59,59,182,59,59,59,59,59,59,59,]),'boolean':([10,11,50,77,84,89,101,103,104,108,110,113,121,122,133,135,136,139,140,141,142,143,144,148,153,167,176,213,230,313,314,315,329,330,334,335,336,344,355,371,373,392,425,435,473,521,524,527,538,540,553,579,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'boolean_expression':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,527,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,264,63,]),'comparation':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,527,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'logic_not_sentence':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,527,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'logic_expression':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,527,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'expression':([10,11,50,77,84,89,103,104,113,121,122,133,139,140,141,142,143,144,154,165,166,246,527,],[75,75,116,75,116,179,75,75,116,75,241,75,75,75,75,75,75,75,278,297,298,342,75,]),'true_boolean_types':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,164,527,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,290,78,]),'false_boolean_types':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,163,527,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,283,79,]),'term':([10,11,50,77,84,89,103,104,113,121,122,133,139,140,141,142,143,144,154,165,166,168,169,170,171,246,527,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,301,302,303,304,80,80,]),'factor':([10,11,50,77,84,89,103,104,113,121,122,133,139,140,141,142,143,144,154,165,166,168,169,170,171,246,527,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'assignment_operator':([23,580,],[89,89,]),'structure_matrix_second':([45,393,],[111,453,]),'comparator_operator':([52,75,116,158,178,179,480,],[122,154,154,122,122,154,507,]),'logic_operator':([63,78,79,],[144,163,164,]),'class_extends_opt':([86,87,],[173,175,]),'input':([89,],[184,]),'special_function':([89,],[185,]),'arrow_function':([89,],[190,]),'anonymous_functions':([89,],[191,]),'values_array_indexed':([108,315,330,334,335,336,425,],[216,216,216,389,390,391,216,]),'structure_array':([108,109,315,490,],[217,225,217,517,]),'structure_matrix_first':([108,315,489,],[218,218,516,]),'key':([108,109,315,490,],[222,222,222,222,]),'params':([135,148,176,230,313,314,524,540,553,],[250,265,310,341,364,365,542,554,562,]),'real_params':([135,148,176,230,313,314,524,540,553,],[251,251,251,251,251,251,251,251,251,]),'empty':([135,148,176,230,313,314,524,540,553,],[252,252,252,252,252,252,252,252,252,]),'string_param':([149,150,449,],[266,269,488,]),'class_implements_opt':([173,],[306,]),'accessType':([200,201,],[321,324,]),'count_param':([270,271,272,485,486,487,],[348,350,351,511,512,513,]),'interface_list':([307,],[358,]),'interface_body':([309,],[360,]),'expression_for':([327,376,440,507,],[378,438,482,530,]),'number_values':([327,376,440,507,566,],[379,379,379,379,571,]),'length_operations':([327,376,440,507,],[381,381,381,381,]),'int_param':([347,454,],[397,491,]),'class_body':([357,],[407,]),'interface_method':([360,],[410,]),'visibility_opt':([360,407,],[411,460,]),'codeblock':([361,420,498,],[415,466,525,]),'body_statement':([374,375,416,434,528,561,565,],[433,437,464,475,544,567,570,]),'operator_aritmetic':([378,438,482,530,560,],[440,440,440,440,566,]),'class_member':([407,],[459,]),'class_attribute':([407,],[461,]),'condition_for':([439,],[481,]),'elseif_statement':([472,582,],[499,594,]),'else_statement':([472,582,],[500,595,]),'increment_statement':([508,],[532,]),'method_body':([569,573,575,],[574,583,587,]),'classStatement':([569,573,575,],[575,575,575,]),'return_form':([569,573,575,],[576,576,585,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',83),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',88),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',89),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',93),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',98),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',103),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',104),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',108),
  ('expression_for -> length_operations','expression_for',1,'p_expression_for','syntaxAnalysis.py',109),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',114),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',115),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',120),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',121),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',125),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',132),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',133),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',139),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',140),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',141),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',147),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',148),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',149),
  ('boolean_expression -> logic_expression','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',150),
  ('logic_expression -> true_boolean_types logic_operator false_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',156),
  ('logic_expression -> false_boolean_types logic_operator true_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',157),
  ('true_boolean_types -> TRUE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',162),
  ('true_boolean_types -> STRING','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',163),
  ('true_boolean_types -> INTEGER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',164),
  ('true_boolean_types -> FLOAT','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',165),
  ('true_boolean_types -> VARIABLE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',166),
  ('true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN','true_boolean_types',4,'p_true_boolean_types','syntaxAnalysis.py',167),
  ('false_boolean_types -> FALSE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',172),
  ('false_boolean_types -> STRING','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',173),
  ('false_boolean_types -> INTEGER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',174),
  ('false_boolean_types -> VARIABLE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',175),
  ('false_boolean_types -> FLOAT','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',176),
  ('false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN','false_boolean_types',3,'p_false_boolean_types','syntaxAnalysis.py',177),
  ('false_boolean_types -> NULL','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',178),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',186),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',187),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',194),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',195),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',196),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',197),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',198),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',199),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',200),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',201),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',202),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',203),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',204),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',210),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',211),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',212),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',213),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',214),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',215),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',216),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',217),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',218),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',219),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',225),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',226),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',227),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',228),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',234),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',235),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',236),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',237),
  ('printable_values -> STRING STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',238),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',239),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',240),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',241),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',242),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',243),
  ('printable_values -> function_invocation','printable_values',1,'p_printable_values','syntaxAnalysis.py',244),
  ('printable_values -> function_invocation COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',245),
  ('printable_values -> string_special_function','printable_values',1,'p_printable_values','syntaxAnalysis.py',246),
  ('printable_values -> string_special_function COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',247),
  ('printable_values -> array_special_function','printable_values',1,'p_printable_values','syntaxAnalysis.py',248),
  ('printable_values -> array_special_function COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',249),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',255),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',256),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',257),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',258),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',264),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',265),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',271),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',272),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',273),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',279),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',280),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',281),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',282),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',283),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',290),
  ('factor -> FLOAT','factor',1,'p_factor','syntaxAnalysis.py',291),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',292),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',293),
  ('factor -> STRING','factor',1,'p_factor','syntaxAnalysis.py',294),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',321),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',322),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',328),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',329),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',330),
  ('variable_assignment -> VARIABLE assignment_operator string_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',331),
  ('variable_assignment -> VARIABLE assignment_operator array_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',332),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',333),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',334),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',335),
  ('variable_assignment -> VARIABLE assignment_operator conditional','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',336),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',337),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',338),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',339),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',340),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',347),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',348),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',354),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',355),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',361),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',367),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',378),
  ('function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',379),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',385),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',386),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',392),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',393),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',394),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',395),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',405),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',413),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',419),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',420),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',426),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',427),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',433),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',439),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',445),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',446),
  ('string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','string_special_function',4,'p_string_special_function','syntaxAnalysis.py',454),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN','string_special_function',6,'p_string_special_function','syntaxAnalysis.py',455),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN','string_special_function',8,'p_string_special_function','syntaxAnalysis.py',456),
  ('string_param -> STRING','string_param',1,'p_string_param','syntaxAnalysis.py',461),
  ('string_param -> VARIABLE','string_param',1,'p_string_param','syntaxAnalysis.py',462),
  ('int_param -> INTEGER','int_param',1,'p_int_param','syntaxAnalysis.py',466),
  ('int_param -> VARIABLE','int_param',1,'p_int_param','syntaxAnalysis.py',467),
  ('array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',476),
  ('array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',477),
  ('array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',478),
  ('array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN','array_special_function',4,'p_array_special_function','syntaxAnalysis.py',479),
  ('count_param -> COMMA COUNT_NORMAL','count_param',2,'p_count_param','syntaxAnalysis.py',485),
  ('count_param -> COMMA COUNT_RECURSIVE','count_param',2,'p_count_param','syntaxAnalysis.py',486),
  ('count_param -> <empty>','count_param',0,'p_count_param','syntaxAnalysis.py',487),
  ('length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',491),
  ('length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',492),
  ('length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',493),
  ('length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','length_operations',4,'p_length_operations','syntaxAnalysis.py',494),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',506),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',507),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',508),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',515),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',516),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',517),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',518),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',523),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',527),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',528),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',534),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',535),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',541),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',542),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',547),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',548),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',549),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',550),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',551),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',552),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',557),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',562),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',563),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',569),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',570),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',571),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',572),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',573),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',578),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',582),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',587),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',588),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',594),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',595),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',601),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',602),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',603),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',604),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',609),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',610),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',616),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',625),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',626),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',631),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',632),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',636),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',637),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',638),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',639),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',640),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',641),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',642),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',643),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',644),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',645),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',651),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',652),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',657),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',661),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',665),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',666),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',670),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',674),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',675),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',679),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',680),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',684),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',685),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',689),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',690),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',694),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',695),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',696),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',701),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',702),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',703),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',708),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',709),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',710),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',711),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',715),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',716),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',717),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',718),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',719),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',725),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',726),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',727),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',732),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',733),
]
