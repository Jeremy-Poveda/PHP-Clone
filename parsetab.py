
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY BREAK CLASS COLON COMMA COMMENT CONST DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION STRLEN SUBSTR TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n                        | logic_expression\n    \n    logic_expression : true_boolean_types logic_operator false_boolean_types\n                     | false_boolean_types logic_operator true_boolean_types\n    \n    true_boolean_types : TRUE\n                       | STRING\n                       | INTEGER\n                       | FLOAT\n                       | VARIABLE\n                       | ARRAY LEFT_PAREN values RIGHT_PAREN\n    \n    false_boolean_types : FALSE\n                        | STRING\n                        | INTEGER\n                        | VARIABLE\n                        | FLOAT\n                        | ARRAY LEFT_PAREN RIGHT_PAREN\n                        | NULL\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE COMMA printable_values\n                     | STRING STRING_CONCATENATION STRING\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal COMMA printable_values\n                     | function_invocation\n                     | function_invocation COMMA printable_values\n                     | string_special_function\n                     | string_special_function COMMA printable_values\n\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator string_special_function\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE assignment_operator conditional\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n                        | VARIABLE LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n                   | FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    string_special_function : STRLEN LEFT_PAREN string_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN\n    \n    string_param : STRING\n                 | VARIABLE\n    \n    int_param : INTEGER\n              | VARIABLE\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN  access_method_object SEMICOLON\n                | RETURN SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,457,458,459,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[10,10,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,10,10,-205,-221,-235,-161,10,-225,-224,-226,-231,-229,-230,10,-199,-198,-234,-232,-14,-13,-167,10,-15,-16,10,-20,10,10,10,-28,10,10,-265,-219,-183,-17,-266,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,457,458,459,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[11,11,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,11,11,-205,-221,-235,-161,11,-225,-224,-226,-231,-229,-230,11,-199,-198,-234,-232,-14,-13,-167,11,-15,-16,11,-20,11,11,11,-28,11,11,-265,-219,-183,-17,-266,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[17,17,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,17,17,-205,-221,-235,-161,17,-225,-224,-226,-231,-229,-230,17,-199,-198,-234,-232,-14,-13,-167,-15,-16,17,-20,17,17,17,-28,17,17,-265,-219,-183,-17,-266,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[18,18,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,18,18,-205,-221,-235,-161,18,-225,-224,-226,-231,-229,-230,18,-199,-198,-234,-232,-14,-13,-167,-15,-16,18,-20,18,18,18,-28,18,18,-265,-219,-183,-17,-266,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,86,90,92,95,97,99,109,194,195,196,197,198,287,294,295,298,299,300,301,302,309,310,316,318,321,323,330,333,342,347,348,358,364,372,374,375,376,377,378,379,380,381,391,392,393,395,396,397,399,419,420,421,422,423,424,434,435,441,451,456,458,459,477,478,483,507,510,513,516,517,521,524,525,527,529,530,533,534,536,540,546,547,548,],[22,22,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,185,-146,-147,-197,-202,-203,-220,-115,-116,-117,-119,-120,-237,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-246,-256,-217,22,22,-205,-221,-256,-235,-236,426,-253,-254,-255,-161,22,-225,-224,-226,-231,-229,-230,22,-199,-198,-234,-245,452,-249,-232,-14,-13,474,-167,-15,-16,-251,-252,22,-250,-20,22,-238,22,22,-28,22,22,-265,-219,-183,-17,-248,-266,-18,-19,-247,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,61,74,81,86,89,90,92,95,97,98,99,100,101,102,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,155,156,157,158,160,161,162,163,168,190,191,194,195,196,197,198,220,232,291,292,294,295,298,299,300,301,302,305,309,310,316,318,321,322,323,325,326,330,340,341,342,344,346,347,348,349,358,364,372,374,377,378,379,380,381,391,392,393,395,396,397,399,404,405,406,407,408,409,410,411,412,417,419,420,421,422,423,424,434,435,441,456,458,459,466,467,477,478,479,482,483,488,489,492,500,505,507,510,513,517,521,524,525,527,529,530,531,533,534,536,540,546,547,548,],[23,23,-5,-6,-7,-8,-9,53,53,-177,-178,-179,-10,-11,-12,93,94,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,114,-118,149,114,169,187,-146,-147,-197,-202,193,-203,200,200,202,-220,222,53,231,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,53,235,240,187,53,53,53,53,200,-52,-53,-54,235,253,253,257,231,260,265,273,231,231,231,231,231,231,235,297,297,-115,-116,-117,-119,-120,235,231,235,235,-199,-198,-222,-223,-233,-227,-228,350,-184,-185,-186,-206,-153,365,-152,369,370,-246,386,388,-217,391,397,23,23,350,-205,-221,-256,-235,-253,-254,-255,-161,23,-225,-224,-226,-231,-229,-230,23,443,350,-44,-45,-46,-47,-48,-49,446,369,-199,-198,-234,-245,453,-249,-232,-14,-13,-167,-15,-16,350,486,-251,-252,235,200,23,502,503,235,512,235,-250,-20,23,23,532,-28,532,532,-265,-219,544,-183,-17,-248,-266,-18,-19,-247,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,467,483,486,510,513,517,521,524,525,527,529,530,532,533,534,540,546,547,],[24,24,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,87,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,24,24,-205,-221,-235,-161,24,-225,-224,-226,-231,-229,-230,24,-199,-198,-234,-232,-14,-13,-167,-15,-16,488,24,497,-20,24,24,24,-28,24,24,-265,-219,87,-183,-17,-266,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,467,483,486,510,513,517,521,524,525,527,529,530,532,533,534,540,546,547,],[25,25,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,88,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,25,25,-205,-221,-235,-161,25,-225,-224,-226,-231,-229,-230,25,-199,-198,-234,-232,-14,-13,-167,-15,-16,489,25,498,-20,25,25,25,-28,25,25,-265,-219,88,-183,-17,-266,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[39,39,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,39,39,-205,-221,-235,-161,39,-225,-224,-226,-231,-229,-230,39,-199,-198,-234,-232,-14,-13,-167,-15,-16,39,-20,39,39,39,-28,39,39,-265,-219,-183,-17,-266,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[40,40,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,40,40,-205,-221,-235,-161,40,-225,-224,-226,-231,-229,-230,40,-199,-198,-234,-232,-14,-13,-167,-15,-16,40,-20,40,40,40,-28,40,40,-265,-219,-183,-17,-266,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[41,41,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,41,41,-205,-221,-235,-161,41,-225,-224,-226,-231,-229,-230,41,-199,-198,-234,-232,-14,-13,-167,-15,-16,41,-20,41,41,41,-28,41,41,-265,-219,-183,-17,-266,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,330,342,347,348,358,364,372,374,377,378,379,380,381,391,392,393,395,396,397,399,419,420,421,422,423,424,434,435,441,456,458,459,477,478,483,507,510,513,517,521,524,525,527,529,530,533,534,536,540,546,547,548,],[42,42,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-246,-217,42,42,-205,-221,-256,-235,-253,-254,-255,-161,42,-225,-224,-226,-231,-229,-230,42,-199,-198,-234,-245,42,-249,-232,-14,-13,-167,-15,-16,-251,-252,42,-250,-20,42,42,42,-28,42,42,-265,-219,-183,-17,-248,-266,-18,-19,-247,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,330,342,347,348,358,364,372,374,377,378,379,380,381,391,392,393,395,396,397,399,419,420,421,422,423,424,434,435,441,456,458,459,477,478,483,507,510,513,517,521,524,525,527,529,530,533,534,536,540,546,547,548,],[43,43,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-246,-217,43,43,-205,-221,-256,-235,-253,-254,-255,-161,43,-225,-224,-226,-231,-229,-230,43,-199,-198,-234,-245,43,-249,-232,-14,-13,-167,-15,-16,-251,-252,43,-250,-20,43,43,43,-28,43,43,-265,-219,-183,-17,-248,-266,-18,-19,-247,]),'ARRAY':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,61,74,81,86,90,92,95,97,99,100,101,105,109,110,116,128,134,135,136,137,138,139,140,141,155,156,194,195,196,197,198,293,294,295,296,298,299,300,301,302,308,309,310,312,313,314,316,318,321,323,342,347,348,358,364,374,380,381,390,391,392,393,395,396,397,399,419,420,421,434,435,441,448,456,458,459,482,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[44,44,-5,-6,-7,-8,-9,78,78,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,78,-118,78,78,186,-146,-147,-197,-202,-203,78,78,205,-220,78,78,78,78,78,78,78,78,-52,-53,-54,267,274,-115,-116,-117,-119,-120,205,-199,-198,343,-222,-223,-233,-227,-228,343,-184,-185,343,343,343,-186,-206,-153,-152,-217,44,44,-205,-221,-235,-161,44,343,-225,-224,-226,-231,-229,-230,44,-199,-198,-234,-232,-14,-13,470,-167,-15,-16,78,44,-20,44,44,44,-28,44,44,-265,-219,-183,-17,-266,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,61,86,90,92,95,97,99,109,114,149,169,186,194,195,196,197,198,200,222,240,257,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,363,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,446,456,458,459,483,510,513,517,521,524,525,527,529,530,532,533,534,540,544,546,547,],[45,45,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,89,-180,-181,-182,-183,-200,-201,-204,-218,-219,106,107,-3,-4,132,-118,45,-146,-147,-197,-202,-203,-220,132,132,89,106,-115,-116,-117,-119,-120,132,132,132,326,340,341,-222,-223,345,-227,-228,-184,-185,-186,-206,-153,-152,-217,45,45,-205,107,-221,-235,-161,45,326,-224,-226,-231,-229,326,45,-199,-198,-234,-232,-14,-13,326,-167,-15,-16,45,-20,45,45,45,-28,45,45,-265,-219,89,-183,-17,-266,326,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,61,81,86,90,92,95,97,99,105,109,116,128,134,135,136,137,194,195,196,197,198,293,294,295,298,299,300,301,302,308,309,310,312,313,314,316,318,321,323,342,347,348,358,364,374,380,381,390,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[46,46,-5,-6,-7,-8,-9,46,46,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,46,-118,46,46,-146,-147,-197,-202,-203,46,-220,46,46,46,46,46,46,-115,-116,-117,-119,-120,46,-199,-198,-222,-223,-233,-227,-228,46,-184,-185,46,46,46,-186,-206,-153,-152,-217,46,46,-205,-221,-235,-161,46,46,-225,-224,-226,-231,-229,-230,46,-199,-198,-234,-232,-14,-13,-167,-15,-16,46,-20,46,46,46,-28,46,46,-265,-219,-183,-17,-266,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,358,364,374,380,391,392,393,395,396,397,419,420,421,434,435,441,456,458,459,510,524,534,546,547,],[0,-2,-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-1,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,-205,-221,-235,-161,-225,-224,-226,-231,-229,-230,-199,-198,-234,-232,-14,-13,-167,-15,-16,-20,-28,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,66,67,68,69,70,77,79,80,82,87,88,93,94,95,97,99,109,115,148,149,152,169,170,171,172,173,174,175,176,177,180,181,182,183,192,193,194,195,196,197,198,219,224,225,226,227,228,229,230,231,233,234,240,241,242,243,244,245,246,247,248,249,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,275,276,278,279,280,281,282,283,294,295,298,299,300,301,302,306,309,310,311,316,318,321,323,324,329,342,350,351,352,354,355,358,364,382,383,391,392,393,395,396,397,401,413,418,419,420,429,430,431,432,433,434,436,437,439,442,444,445,453,454,456,462,468,469,473,480,481,485,493,508,530,531,533,538,541,543,],[48,49,-132,-133,-177,-178,-179,-148,-149,-180,-181,-182,95,-200,-201,97,99,-204,-218,-219,-99,-101,-103,-116,-107,-109,-111,-113,-115,-117,-118,-50,-119,-120,-55,-57,-58,-121,-73,-124,-100,-142,-143,-144,-145,-197,-202,-203,-220,-115,-74,-75,-116,-130,-134,-135,-136,-137,-138,-139,-140,-141,-162,-163,95,97,-215,-216,-115,-116,-117,-119,-120,318,-97,-56,-131,-102,-76,-77,-115,-130,-104,-106,-83,-79,-82,-86,-105,-108,-110,-112,-114,-51,-84,-80,-81,-78,-129,-85,-59,-67,-68,-69,-70,-71,-60,-61,-62,-63,-64,-65,-122,-123,-72,-125,-126,-127,-128,-98,-199,-198,-222,-223,-233,-227,-228,-150,-184,-185,358,-186,-206,-153,-152,-170,-66,-217,-36,404,-37,-42,-43,-205,-221,-168,-169,-225,-224,-226,-231,-229,-230,440,-151,-171,-199,-198,-166,-212,-213,-214,-211,-232,463,464,465,-39,467,-38,477,478,-167,484,-40,-41,-172,-164,-165,-35,507,516,540,542,95,549,550,551,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,483,510,513,517,521,524,525,527,529,530,533,534,540,546,547,],[-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,400,400,-205,-221,-235,-161,400,-225,-224,-226,-231,-229,-230,436,-199,-198,-234,-232,-14,-13,-167,-15,-16,400,-20,400,400,531,-28,531,531,-265,-219,-183,-17,-266,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,294,295,298,299,300,301,302,309,310,316,318,321,323,342,347,348,358,364,374,380,381,391,392,393,395,396,397,399,419,420,421,434,435,441,456,458,459,483,510,513,517,524,527,529,530,533,534,540,546,547,],[-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-217,401,401,-205,-221,-235,-161,401,-225,-224,-226,-231,-229,-230,437,-199,-198,-234,-232,-14,-13,-167,-15,-16,401,-20,401,401,-28,538,-265,-219,-183,-17,-266,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,194,195,196,197,198,287,294,295,298,299,300,301,302,309,310,316,318,321,323,330,333,342,358,364,372,374,375,380,391,392,393,395,396,397,398,399,402,419,420,421,422,424,427,434,435,438,440,441,456,458,459,463,464,465,477,478,484,496,507,510,516,519,522,524,526,527,528,529,530,533,534,535,536,537,539,540,542,546,547,548,549,550,551,],[-5,-6,-7,-8,-9,-177,-178,-179,-10,-11,-12,-180,-181,-182,-183,-200,-201,-204,-218,-219,-3,-4,-118,-197,-202,-203,-220,-115,-116,-117,-119,-120,-237,-199,-198,-222,-223,-233,-227,-228,-184,-185,-186,-206,-153,-152,-246,374,-217,-205,-221,421,-235,-236,-161,-225,-224,-226,-231,-229,-230,435,-21,441,-199,-198,-234,-245,-249,456,-232,-14,-25,-27,-13,-167,-15,-16,-23,-24,-26,-251,-252,-22,510,-250,-20,-238,524,534,-28,536,-257,-259,-265,-219,-183,-17,548,-248,-258,-261,-266,-264,-18,-19,-247,-260,-262,-263,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,53,63,64,65,74,78,81,85,86,90,92,100,101,109,110,114,116,117,118,119,120,121,122,123,124,125,126,127,128,134,135,136,137,138,139,140,141,146,157,158,160,161,162,163,169,178,179,184,185,186,205,232,267,274,297,300,305,343,349,353,405,406,407,408,409,410,411,455,460,466,470,475,482,491,],[50,81,100,101,102,104,105,110,130,142,143,144,110,159,110,168,110,-146,-147,110,110,220,110,130,110,232,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,110,110,110,110,110,110,-52,-53,-54,232,232,232,232,232,232,232,130,289,290,291,292,293,308,232,327,328,130,142,349,390,349,412,349,-44,-45,-46,-47,-48,-49,479,482,349,490,492,110,505,]),'STRING':([10,11,50,74,81,86,90,92,98,100,101,104,105,106,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,155,156,159,168,203,220,290,291,292,293,307,308,312,313,314,322,328,344,346,362,390,400,436,449,476,479,482,490,492,505,531,],[54,54,54,152,54,152,-146,-147,195,152,152,204,214,217,195,152,54,195,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,54,234,195,195,244,54,54,54,54,152,-52,-53,-54,195,252,252,195,263,270,195,195,195,195,336,195,195,214,195,195,195,195,195,195,195,195,195,195,195,195,195,217,195,195,152,195,195,195,195,]),'INTEGER':([10,11,50,74,81,86,89,90,92,98,100,101,105,106,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,134,135,136,137,138,139,140,141,142,145,146,155,156,157,158,159,160,161,162,163,168,203,220,232,291,292,293,305,307,308,312,313,314,322,325,326,328,340,341,344,345,346,349,362,390,400,405,406,407,408,409,410,411,417,436,449,466,476,479,482,490,492,499,505,518,531,],[59,59,115,59,115,115,188,-146,-147,194,59,59,213,216,194,223,59,230,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,59,194,194,188,59,59,59,59,59,-52,-53,-54,194,194,259,264,271,259,259,194,259,259,259,259,194,194,194,259,194,194,213,354,194,194,194,194,194,194,368,371,194,387,389,194,394,194,354,194,194,194,354,-44,-45,-46,-47,-48,-49,368,194,216,354,194,194,59,194,194,511,194,354,194,]),'FLOAT':([10,11,50,74,81,86,90,92,98,100,101,105,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,134,135,136,137,138,139,140,141,142,145,155,156,159,168,203,220,291,292,293,305,307,308,312,313,314,322,328,344,346,349,362,390,400,405,406,407,408,409,410,411,436,466,476,479,482,490,492,505,518,531,],[60,60,60,60,60,60,-146,-147,196,60,60,196,196,60,60,196,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,60,196,196,60,60,60,60,60,-52,-53,-54,196,196,266,272,196,196,196,196,196,196,196,355,196,196,196,196,196,196,196,196,196,355,196,196,196,355,-44,-45,-46,-47,-48,-49,196,355,196,196,60,196,196,196,355,196,]),'IDENTIFIER':([10,11,17,18,22,42,46,50,81,86,90,92,116,118,119,120,121,122,123,124,125,126,127,128,134,135,136,137,166,190,191,285,305,349,373,405,406,407,408,409,410,411,426,452,466,474,],[63,63,83,84,85,103,109,63,63,63,-146,-147,63,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,63,63,63,63,63,286,300,300,332,353,353,425,353,-44,-45,-46,-47,-48,-49,455,475,353,491,]),'STRLEN':([10,11,50,81,86,90,92,116,128,134,135,136,137,],[64,64,64,64,64,-146,-147,64,64,64,64,64,64,]),'SUBSTR':([10,11,50,81,86,90,92,116,128,134,135,136,137,],[65,65,65,65,65,-146,-147,65,65,65,65,65,65,]),'TRUE':([10,11,50,74,81,86,90,92,98,100,101,105,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,134,135,136,137,138,139,140,141,142,145,156,159,168,203,220,291,292,293,307,308,312,313,314,322,328,344,346,362,390,400,436,476,479,482,490,492,505,531,],[66,66,66,153,66,66,-146,-147,197,153,153,197,197,153,66,197,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,66,197,197,66,66,66,66,153,-52,-53,-54,197,197,269,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,153,197,197,197,197,]),'FALSE':([10,11,50,74,81,86,90,92,98,100,101,105,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,134,135,136,137,138,139,140,141,142,145,155,159,168,203,220,291,292,293,307,308,312,313,314,322,328,344,346,362,390,400,436,476,479,482,490,492,505,531,],[67,67,67,154,67,67,-146,-147,198,154,154,198,198,154,67,198,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,67,198,198,67,67,67,67,154,-52,-53,-54,198,198,262,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,154,198,198,198,198,]),'LOGIC_NOT':([10,11,50,74,81,86,90,92,100,101,110,116,128,134,135,136,137,138,139,140,141,482,],[74,74,74,74,74,74,-146,-147,74,74,74,74,74,74,74,74,74,74,-52,-53,-54,74,]),'NULL':([10,11,50,74,81,86,90,92,100,101,110,116,128,134,135,136,137,138,139,140,141,155,482,],[79,79,79,79,79,79,-146,-147,79,79,79,79,79,79,79,79,79,79,-52,-53,-54,79,79,]),'MINUS':([23,31,53,59,71,77,80,114,115,149,169,182,200,222,223,226,230,231,259,279,280,281,282,294,295,350,351,352,354,355,403,419,420,442,445,468,469,485,512,532,533,544,545,],[91,96,91,-129,96,158,-124,91,-129,-130,91,96,-130,-130,-129,-131,-129,-130,-129,-125,-126,-127,-128,-199,-198,-36,407,-37,-42,-43,407,-199,-198,-39,407,-40,-41,407,407,91,96,91,96,]),'EQUALS':([23,34,103,183,189,202,212,213,214,216,217,299,300,302,384,430,431,432,433,434,453,486,532,],[90,98,203,98,296,305,315,-189,-190,-189,-190,344,-233,346,428,-212,-213,-214,-211,-232,476,500,90,]),'PLUS_EQUALS':([23,486,532,],[92,499,92,]),'COMMA':([37,38,52,53,54,55,56,57,58,59,60,61,62,66,67,68,69,70,77,79,80,109,112,114,115,148,149,194,195,196,197,198,204,209,210,211,213,214,225,226,228,229,230,231,235,237,239,240,241,242,243,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,275,276,278,279,280,281,282,294,295,298,299,300,301,302,309,317,321,323,324,329,331,332,339,357,364,365,366,367,368,369,391,392,393,395,396,397,414,415,418,419,420,425,430,431,432,433,434,473,],[-218,-219,116,128,-116,134,135,136,137,-115,-117,-118,-50,-119,-120,-55,-57,-58,-121,-73,-124,-220,134,128,-115,-74,-75,-115,-116,-117,-119,-120,307,312,313,314,-115,-116,-56,-131,-76,-77,-115,-130,-156,322,-157,-83,-79,-82,-86,-51,-173,-174,325,-84,-80,-81,-78,-129,-85,-59,-67,-68,-69,-70,-71,-60,-61,-62,-63,-64,-65,-122,-123,-72,-125,-126,-127,-128,-199,-198,-222,-223,-233,-227,-228,-184,363,-153,-152,-170,-66,373,-243,312,312,-221,-158,-159,417,-175,-176,-225,-224,-226,-231,-229,-230,448,449,-171,-199,-198,-244,-212,-213,-214,-211,-232,-172,]),'RIGHT_PAREN':([37,38,52,53,54,55,56,57,58,59,60,61,62,66,67,68,69,70,77,79,80,109,111,112,113,114,115,130,142,148,149,159,164,168,194,195,196,197,198,199,201,206,207,208,209,210,211,213,214,220,221,222,223,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,275,276,277,278,279,280,281,282,288,291,292,293,294,295,298,299,300,301,302,309,319,320,321,323,324,327,329,335,336,337,338,339,350,352,354,355,356,357,359,360,361,364,365,366,367,368,369,391,392,393,395,396,397,403,414,415,418,419,420,430,431,432,433,434,442,445,446,447,450,468,469,471,472,473,479,487,492,494,495,497,498,502,503,504,505,506,511,514,523,],[-218,-219,-101,-103,-116,-107,-109,-111,-113,-115,-117,-118,-50,-119,-120,-55,-57,-58,-121,-73,-124,-220,224,225,226,-103,-115,-160,-160,-74,-75,278,283,-160,-115,-116,-117,-119,-120,303,304,309,310,311,-191,-193,-195,-115,-116,-160,225,-130,-129,-56,-131,-102,-76,-77,-115,-130,-104,-106,-156,321,-154,-155,-157,-83,-79,-82,-86,-105,-108,-110,-112,-114,-51,323,324,-173,-174,-84,-80,-81,-78,-129,-85,-59,-67,-68,-69,-70,-71,-60,-61,-62,-63,-64,-65,-122,-123,329,-72,-125,-126,-127,-128,334,-160,-160,278,-199,-198,-222,-223,-233,-227,-228,-184,364,226,-153,-152,-170,278,-66,382,383,384,385,329,-36,-37,-42,-43,413,414,-192,-194,-196,-221,-158,-159,418,-175,-176,-225,-224,-226,-231,-229,-230,442,-209,-187,-171,-199,-198,-212,-213,-214,-211,-232,-39,-38,468,469,473,-40,-41,-210,-188,-172,-160,501,-160,508,509,-29,-30,-31,-32,414,-160,515,-33,520,-34,]),'EQUALS_EQUALS':([52,53,54,59,60,61,66,67,71,72,73,77,80,113,114,115,149,150,151,152,153,154,169,170,171,182,183,200,222,223,226,231,259,275,276,279,280,281,282,294,295,430,431,432,433,443,],[118,131,-116,-115,-117,-118,-119,-120,145,118,147,-121,-124,118,131,-115,131,118,145,-116,-119,-120,131,118,118,145,147,131,131,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,-199,-198,-212,-213,-214,-211,118,]),'IDENTICAL':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,149,150,152,153,154,169,170,171,200,222,223,226,231,259,275,276,279,280,281,282,443,],[119,-130,-116,-115,-117,-118,-119,-120,119,-121,-124,119,-130,-115,-130,119,-116,-119,-120,-130,119,119,-130,-130,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,119,]),'NOT_EQUALS':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,149,150,152,153,154,169,170,171,200,222,223,226,231,259,275,276,279,280,281,282,443,],[120,-130,-116,-115,-117,-118,-119,-120,120,-121,-124,120,-130,-115,-130,120,-116,-119,-120,-130,120,120,-130,-130,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,120,]),'NOT_IDENTICAL':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,149,150,152,153,154,169,170,171,200,222,223,226,231,259,275,276,279,280,281,282,443,],[121,-130,-116,-115,-117,-118,-119,-120,121,-121,-124,121,-130,-115,-130,121,-116,-119,-120,-130,121,121,-130,-130,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,121,]),'SMALL_THAN':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,149,150,152,153,154,169,170,171,200,222,223,226,231,259,275,276,279,280,281,282,443,],[122,-130,-116,-115,-117,-118,-119,-120,122,-121,-124,122,-130,-115,-130,122,-116,-119,-120,-130,122,122,-130,-130,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,122,]),'GREATER_THAN':([52,53,54,59,60,61,66,67,72,77,80,91,96,113,114,115,149,150,152,153,154,169,170,171,200,222,223,226,231,259,275,276,279,280,281,282,315,428,443,],[123,-130,-116,-115,-117,-118,-119,-120,123,-121,-124,190,191,123,-130,-115,-130,123,-116,-119,-120,-130,123,123,-130,-130,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,362,457,123,]),'SMALL_EQUALS_TO':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,149,150,152,153,154,169,170,171,200,222,223,226,231,259,275,276,279,280,281,282,443,],[124,-130,-116,-115,-117,-118,-119,-120,124,-121,-124,124,-130,-115,-130,124,-116,-119,-120,-130,124,124,-130,-130,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,124,]),'GREATER_EQUALS_TO':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,149,150,152,153,154,169,170,171,200,222,223,226,231,259,275,276,279,280,281,282,443,],[125,-130,-116,-115,-117,-118,-119,-120,125,-121,-124,125,-130,-115,-130,125,-116,-119,-120,-130,125,125,-130,-130,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,125,]),'SPACECRAFT':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,149,150,152,153,154,169,170,171,200,222,223,226,231,259,275,276,279,280,281,282,443,],[126,-130,-116,-115,-117,-118,-119,-120,126,-121,-124,126,-130,-115,-130,126,-116,-119,-120,-130,126,126,-130,-130,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,126,]),'NULL_FUSION':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,149,150,152,153,154,169,170,171,200,222,223,226,231,259,275,276,279,280,281,282,443,],[127,-130,-116,-115,-117,-118,-119,-120,127,-121,-124,127,-130,-115,-130,127,-116,-119,-120,-130,127,127,-130,-130,-115,-131,-130,-129,-122,-123,-125,-126,-127,-128,127,]),'STRING_CONCATENATION':([53,54,114,],[129,133,129,]),'LOGIC_AND':([53,54,59,60,61,62,66,67,68,69,70,75,76,77,79,80,114,115,148,149,152,153,154,169,194,195,196,197,198,200,222,223,225,226,228,229,230,231,240,241,242,243,249,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,275,276,278,279,280,281,282,294,295,329,419,420,430,431,432,433,],[-65,-62,-63,-64,-118,139,-61,-67,-55,-57,-58,139,139,-121,-73,-124,-65,-63,-74,-65,-62,-61,-67,-65,-115,-116,-117,-119,-120,-65,-65,-63,-56,-131,-76,-77,-115,-130,-83,-79,-82,-86,-51,-84,-80,-81,-78,-129,-85,-59,-67,-68,-69,-70,-71,-60,-61,-62,-63,-64,-65,-122,-123,-72,-125,-126,-127,-128,-199,-198,-66,-199,-198,-212,-213,-214,-211,]),'LOGIC_OR':([53,54,59,60,61,62,66,67,68,69,70,75,76,77,79,80,114,115,148,149,152,153,154,169,194,195,196,197,198,200,222,223,225,226,228,229,230,231,240,241,242,243,249,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,275,276,278,279,280,281,282,294,295,329,419,420,430,431,432,433,],[-65,-62,-63,-64,-118,140,-61,-67,-55,-57,-58,140,140,-121,-73,-124,-65,-63,-74,-65,-62,-61,-67,-65,-115,-116,-117,-119,-120,-65,-65,-63,-56,-131,-76,-77,-115,-130,-83,-79,-82,-86,-51,-84,-80,-81,-78,-129,-85,-59,-67,-68,-69,-70,-71,-60,-61,-62,-63,-64,-65,-122,-123,-72,-125,-126,-127,-128,-199,-198,-66,-199,-198,-212,-213,-214,-211,]),'LOGIC_XOR':([53,54,59,60,61,62,66,67,68,69,70,75,76,77,79,80,114,115,148,149,152,153,154,169,194,195,196,197,198,200,222,223,225,226,228,229,230,231,240,241,242,243,249,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,275,276,278,279,280,281,282,294,295,329,419,420,430,431,432,433,],[-65,-62,-63,-64,-118,141,-61,-67,-55,-57,-58,141,141,-121,-73,-124,-65,-63,-74,-65,-62,-61,-67,-65,-115,-116,-117,-119,-120,-65,-65,-63,-56,-131,-76,-77,-115,-130,-83,-79,-82,-86,-51,-84,-80,-81,-78,-129,-85,-59,-67,-68,-69,-70,-71,-60,-61,-62,-63,-64,-65,-122,-123,-72,-125,-126,-127,-128,-199,-198,-66,-199,-198,-212,-213,-214,-211,]),'MULTIPLY':([53,59,80,114,115,149,169,200,222,223,226,230,231,259,350,351,352,354,355,403,442,445,468,469,485,512,],[-130,-129,160,-130,-129,-130,-130,-130,-130,-129,-131,-129,-130,-129,-36,408,-37,-42,-43,408,-39,408,-40,-41,408,408,]),'DIVIDE':([53,59,80,114,115,149,169,200,222,223,226,230,231,259,350,351,352,354,355,403,442,445,468,469,485,512,],[-130,-129,161,-130,-129,-130,-130,-130,-130,-129,-131,-129,-130,-129,-36,409,-37,-42,-43,409,-39,409,-40,-41,409,409,]),'MODULE':([53,59,80,114,115,149,169,200,222,223,226,230,231,259,350,351,352,354,355,403,442,445,468,469,485,512,],[-130,-129,162,-130,-129,-130,-130,-130,-130,-129,-131,-129,-130,-129,-36,410,-37,-42,-43,410,-39,410,-40,-41,410,410,]),'POW':([53,59,80,114,115,149,169,200,222,223,226,230,231,259,350,351,352,354,355,403,442,445,468,469,485,512,],[-130,-129,163,-130,-129,-130,-130,-130,-130,-129,-131,-129,-130,-129,-36,411,-37,-42,-43,411,-39,411,-40,-41,411,411,]),'PLUS':([53,59,77,80,114,115,149,169,200,222,223,226,230,231,259,279,280,281,282,350,351,352,354,355,403,442,445,468,469,485,512,],[-130,-129,157,-124,-130,-129,-130,-130,-130,-130,-129,-131,-129,-130,-129,-125,-126,-127,-128,-36,406,-37,-42,-43,406,-39,406,-40,-41,406,406,]),'RIGHT_BRACKET':([61,89,108,187,188,194,195,196,197,198,215,218,317,370,371,386,387,388,389,394,415,416,472,],[-118,189,219,294,295,-115,-116,-117,-119,-120,316,317,-207,419,420,430,431,432,433,434,-187,-208,-188,]),'EXTENDS':([83,84,],[166,166,]),'IMPLEMENTS':([83,165,286,],[-240,285,-239,]),'LEFT_BRACE':([83,84,165,167,284,286,303,304,331,332,334,385,425,457,461,501,509,515,520,],[-240,-240,-242,287,330,-239,347,348,-241,-243,381,381,-244,381,483,513,517,521,525,]),'FEGTS':([86,90,92,],[178,-146,-147,]),'READLINE':([86,90,92,],[179,-146,-147,]),'FN':([86,90,92,],[184,-146,-147,]),'PUBLIC':([287,330,333,372,375,422,424,477,478,507,516,536,548,],[-237,-246,377,377,-236,-245,-249,-251,-252,-250,-238,-248,-247,]),'PRIVATE':([287,330,333,372,375,422,424,477,478,507,516,536,548,],[-237,-246,378,378,-236,-245,-249,-251,-252,-250,-238,-248,-247,]),'PROTECTED':([287,330,333,372,375,422,424,477,478,507,516,536,548,],[-237,-246,379,379,-236,-245,-249,-251,-252,-250,-238,-248,-247,]),'STDIN':([289,],[335,]),'STATIC':([330,372,377,378,379,422,423,424,477,478,507,536,548,],[-246,-256,-253,-254,-255,-245,451,-249,-251,-252,-250,-248,-247,]),'ELSEIF':([435,534,],[460,460,]),'ELSE':([435,534,],[461,461,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,347,348,381,399,483,513,517,521,525,527,],[2,2,399,399,399,399,399,399,399,529,529,529,]),'print_statement':([0,2,347,348,381,399,457,483,513,517,521,525,527,],[3,3,3,3,3,3,481,3,3,3,3,3,3,]),'assignment':([0,2,347,348,381,399,483,513,517,521,525,527,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,86,347,348,381,399,483,513,517,521,525,527,],[5,5,174,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,347,348,381,399,483,513,517,521,525,527,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,347,348,381,399,483,513,517,521,525,527,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,347,348,381,399,483,513,517,521,525,527,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,347,348,381,399,483,513,517,521,525,527,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,347,348,381,399,483,513,517,521,525,527,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,347,348,381,399,423,483,513,517,521,525,527,],[13,13,13,13,13,13,454,13,13,13,13,13,13,]),'structure_array_principal':([0,2,86,347,348,381,399,483,513,517,521,525,527,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,86,347,348,381,399,483,513,517,521,525,527,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,81,86,116,128,134,135,136,137,347,348,381,399,483,513,517,521,525,527,],[16,16,56,56,56,56,16,56,56,56,56,56,56,16,16,16,16,16,16,16,16,16,16,]),'if_statement':([0,2,347,348,381,399,483,513,517,521,525,527,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,347,348,381,399,483,513,517,521,525,527,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,347,348,381,399,483,513,517,521,525,527,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,347,348,381,399,423,483,513,517,521,525,527,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,347,348,381,399,423,483,513,517,521,525,527,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,86,105,293,296,308,312,313,314,347,348,381,390,399,483,513,517,521,525,527,],[28,28,28,211,211,342,211,211,211,211,28,28,28,211,28,28,28,28,28,28,28,]),'associative_array':([0,2,86,347,348,381,399,483,513,517,521,525,527,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,86,347,348,381,399,483,513,517,521,525,527,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,74,81,86,100,101,110,116,128,131,134,135,136,137,138,145,344,346,347,348,381,399,412,482,483,513,517,521,525,527,531,],[31,31,71,71,71,151,71,182,151,151,151,71,71,242,71,71,71,71,151,255,393,395,31,31,31,31,447,151,31,31,31,533,533,533,545,]),'matrix_firstform':([0,2,86,347,348,381,399,483,513,517,521,525,527,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,86,347,348,381,399,483,513,517,521,525,527,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,74,81,86,100,101,110,116,128,131,134,135,136,137,138,347,348,381,399,482,483,513,517,521,525,527,],[34,34,73,73,73,73,73,183,73,73,73,73,73,243,73,73,73,73,73,34,34,34,34,73,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,86,347,348,381,399,483,513,517,521,525,527,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,86,347,348,381,399,483,513,517,521,525,527,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,81,86,105,116,128,134,135,136,137,293,308,312,313,314,347,348,381,390,399,483,513,517,521,525,527,],[37,37,37,37,37,37,37,210,37,37,37,37,37,37,210,210,210,210,210,37,37,37,210,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,81,86,116,128,134,135,136,137,347,348,381,399,483,513,517,521,525,527,531,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,530,530,530,543,]),'printable_values':([10,11,50,81,116,128,134,135,136,137,],[51,82,111,164,227,233,245,246,247,248,]),'values':([10,11,50,74,81,86,98,100,101,105,107,110,116,117,128,130,131,134,135,136,137,138,142,145,159,168,203,220,291,292,293,307,308,312,313,314,322,328,344,346,362,390,400,436,476,479,482,490,492,505,531,],[52,52,52,150,52,170,192,150,150,209,218,150,52,228,52,239,241,52,52,52,52,150,239,256,277,239,306,239,239,239,339,356,357,209,209,209,366,277,392,396,415,209,439,462,493,239,150,504,239,239,541,]),'conditional':([10,11,50,74,81,86,100,101,110,116,128,134,135,136,137,482,],[55,55,112,148,112,177,199,201,221,55,55,55,55,55,55,495,]),'function_invocation':([10,11,50,81,86,116,128,134,135,136,137,190,191,],[57,57,57,57,172,57,57,57,57,57,57,298,301,]),'string_special_function':([10,11,50,81,86,116,128,134,135,136,137,],[58,58,58,58,173,58,58,58,58,58,58,]),'boolean':([10,11,50,74,81,86,98,100,101,105,107,110,116,117,128,130,131,134,135,136,137,138,142,145,159,168,203,220,291,292,293,307,308,312,313,314,322,328,344,346,362,390,400,436,476,479,482,490,492,505,531,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'boolean_expression':([10,11,50,74,81,86,100,101,110,116,128,134,135,136,137,138,482,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,249,62,]),'comparation':([10,11,50,74,81,86,100,101,110,116,128,134,135,136,137,138,482,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'logic_not_sentence':([10,11,50,74,81,86,100,101,110,116,128,134,135,136,137,138,482,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'logic_expression':([10,11,50,74,81,86,100,101,110,116,128,134,135,136,137,138,482,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'expression':([10,11,50,74,81,86,100,101,110,116,117,128,134,135,136,137,138,146,157,158,232,482,],[72,72,113,72,113,171,72,72,113,72,229,72,72,72,72,72,72,258,275,276,320,72,]),'true_boolean_types':([10,11,50,74,81,86,100,101,110,116,128,134,135,136,137,138,156,482,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,268,75,]),'false_boolean_types':([10,11,50,74,81,86,100,101,110,116,128,134,135,136,137,138,155,482,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,261,76,]),'term':([10,11,50,74,81,86,100,101,110,116,117,128,134,135,136,137,138,146,157,158,160,161,162,163,232,482,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,279,280,281,282,77,77,]),'factor':([10,11,50,74,81,86,100,101,110,116,117,128,134,135,136,137,138,146,157,158,160,161,162,163,232,482,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'assignment_operator':([23,532,],[86,86,]),'structure_matrix_second':([45,363,],[108,416,]),'comparator_operator':([52,72,113,150,170,171,443,],[117,146,146,117,117,146,466,]),'logic_operator':([62,75,76,],[138,155,156,]),'class_extends_opt':([83,84,],[165,167,]),'input':([86,],[175,]),'special_function':([86,],[176,]),'arrow_function':([86,],[180,]),'anonymous_functions':([86,],[181,]),'values_array_indexed':([105,293,308,312,313,314,390,],[206,206,206,359,360,361,206,]),'structure_array':([105,106,293,449,],[207,215,207,472,]),'structure_matrix_first':([105,293,448,],[208,208,471,]),'key':([105,106,293,449,],[212,212,212,212,]),'params':([130,142,168,220,291,292,479,492,505,],[236,250,288,319,337,338,494,506,514,]),'real_params':([130,142,168,220,291,292,479,492,505,],[237,237,237,237,237,237,237,237,237,]),'empty':([130,142,168,220,291,292,479,492,505,],[238,238,238,238,238,238,238,238,238,]),'string_param':([143,144,],[251,254,]),'class_implements_opt':([165,],[284,]),'accessType':([190,191,],[299,302,]),'interface_list':([285,],[331,]),'interface_body':([287,],[333,]),'expression_for':([305,349,405,466,],[351,403,445,485,]),'number_values':([305,349,405,466,518,],[352,352,352,352,523,]),'int_param':([325,417,],[367,450,]),'class_body':([330,],[372,]),'interface_method':([333,],[375,]),'visibility_opt':([333,372,],[376,423,]),'codeblock':([334,385,457,],[380,429,480,]),'body_statement':([347,348,381,399,483,513,517,],[398,402,427,438,496,519,522,]),'operator_aritmetic':([351,403,445,485,512,],[405,405,405,405,518,]),'class_member':([372,],[422,]),'class_attribute':([372,],[424,]),'condition_for':([404,],[444,]),'elseif_statement':([435,534,],[458,546,]),'else_statement':([435,534,],[459,547,]),'increment_statement':([467,],[487,]),'method_body':([521,525,527,],[526,535,539,]),'classStatement':([521,525,527,],[527,527,527,]),'return_form':([521,525,527,],[528,528,537,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',83),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',88),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',89),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',93),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',98),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',103),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',104),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',108),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',113),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',114),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',119),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',120),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',121),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',131),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',132),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',138),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',139),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',140),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',146),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',147),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',148),
  ('boolean_expression -> logic_expression','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',149),
  ('logic_expression -> true_boolean_types logic_operator false_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',155),
  ('logic_expression -> false_boolean_types logic_operator true_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',156),
  ('true_boolean_types -> TRUE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',161),
  ('true_boolean_types -> STRING','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',162),
  ('true_boolean_types -> INTEGER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',163),
  ('true_boolean_types -> FLOAT','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',164),
  ('true_boolean_types -> VARIABLE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',165),
  ('true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN','true_boolean_types',4,'p_true_boolean_types','syntaxAnalysis.py',166),
  ('false_boolean_types -> FALSE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',171),
  ('false_boolean_types -> STRING','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',172),
  ('false_boolean_types -> INTEGER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',173),
  ('false_boolean_types -> VARIABLE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',174),
  ('false_boolean_types -> FLOAT','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',175),
  ('false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN','false_boolean_types',3,'p_false_boolean_types','syntaxAnalysis.py',176),
  ('false_boolean_types -> NULL','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',177),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',185),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',186),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',193),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',194),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',195),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',196),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',197),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',198),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',199),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',200),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',201),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',202),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',203),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',209),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',210),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',211),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',212),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',213),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',214),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',215),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',216),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',217),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',218),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',224),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',225),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',226),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',227),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',233),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',234),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',235),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',236),
  ('printable_values -> STRING STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',237),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',238),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',239),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',240),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',241),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',242),
  ('printable_values -> function_invocation','printable_values',1,'p_printable_values','syntaxAnalysis.py',243),
  ('printable_values -> function_invocation COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',244),
  ('printable_values -> string_special_function','printable_values',1,'p_printable_values','syntaxAnalysis.py',245),
  ('printable_values -> string_special_function COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',246),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',253),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',254),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',255),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',256),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',262),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',263),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',269),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',270),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',271),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',277),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',278),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',279),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',280),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',281),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',287),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',288),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',289),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',300),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',301),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',307),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',308),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',309),
  ('variable_assignment -> VARIABLE assignment_operator string_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',310),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',311),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',312),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',313),
  ('variable_assignment -> VARIABLE assignment_operator conditional','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',314),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',315),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',316),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',317),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',318),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',325),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',326),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',332),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',333),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',339),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',345),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',356),
  ('function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',357),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',363),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',364),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',370),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',371),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',372),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',373),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',383),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',391),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',397),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',398),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',404),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',405),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',411),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',417),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',423),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',424),
  ('string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','string_special_function',4,'p_string_special_function','syntaxAnalysis.py',432),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN','string_special_function',6,'p_string_special_function','syntaxAnalysis.py',433),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN','string_special_function',8,'p_string_special_function','syntaxAnalysis.py',434),
  ('string_param -> STRING','string_param',1,'p_string_param','syntaxAnalysis.py',439),
  ('string_param -> VARIABLE','string_param',1,'p_string_param','syntaxAnalysis.py',440),
  ('int_param -> INTEGER','int_param',1,'p_int_param','syntaxAnalysis.py',444),
  ('int_param -> VARIABLE','int_param',1,'p_int_param','syntaxAnalysis.py',445),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',457),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',458),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',459),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',466),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',467),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',468),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',469),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',474),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',478),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',479),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',485),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',486),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',492),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',493),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',498),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',499),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',500),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',501),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',502),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',503),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',508),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',513),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',514),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',520),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',521),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',522),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',523),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',524),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',529),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',533),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',538),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',539),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',545),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',546),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',552),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',553),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',554),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',555),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',560),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',561),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',567),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',576),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',577),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',582),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',583),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',587),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',588),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',589),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',590),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',591),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',592),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',593),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',594),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',595),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',596),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',602),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',603),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',608),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',612),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',616),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',617),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',621),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',625),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',626),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',630),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',631),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',635),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',636),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',640),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',641),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',645),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',646),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',647),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',652),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',653),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',654),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',659),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',660),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',661),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',662),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',666),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',667),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',668),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',669),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',670),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',676),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',677),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',678),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',683),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',684),
]
