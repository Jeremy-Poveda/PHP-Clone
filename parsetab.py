
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY BREAK CLASS COLON COMMA COMMENT CONST DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                  | FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                  | FOR LEFT_PAREN  SEMICOLON SEMICOLON RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values printable_dividers printable_values\n                     | VARIABLE\n                     | VARIABLE printable_dividers printable_values\n                     | conditional\n                     | conditional printable_dividers printable_values\n                     | structure_object_principal\n                     | structure_object_principal printable_dividers printable_values\n\n    \n    printable_dividers : COMMA\n                       | STRING_CONCATENATION\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET EQUALS valuesadd_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN  access_method_object SEMICOLON\n                | RETURN SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[10,10,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,10,10,-176,-191,-205,-140,10,-132,-195,-194,-196,-201,-199,-200,10,10,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,10,10,-20,10,10,-29,10,-28,10,10,-235,-189,-154,-17,-236,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[11,11,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,11,11,-176,-191,-205,-140,11,-132,-195,-194,-196,-201,-199,-200,11,11,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,11,11,-20,11,11,-29,11,-28,11,11,-235,-189,-154,-17,-236,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[17,17,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,17,17,-176,-191,-205,-140,17,-132,-195,-194,-196,-201,-199,-200,17,17,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,17,17,-20,17,17,-29,17,-28,17,17,-235,-189,-154,-17,-236,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[18,18,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,18,18,-176,-191,-205,-140,18,-132,-195,-194,-196,-201,-199,-200,18,18,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,18,18,-20,18,18,-29,18,-28,18,18,-235,-189,-154,-17,-236,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,76,80,82,85,87,88,98,186,224,236,237,239,240,241,242,243,251,252,258,260,264,267,277,282,283,294,300,304,306,307,308,309,310,311,312,313,316,326,327,328,330,331,332,334,348,354,355,356,357,358,359,369,370,376,388,393,396,397,412,419,420,425,445,450,453,456,459,460,462,465,467,468,470,472,473,476,477,479,483,489,490,491,],[22,22,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,159,-126,-127,-168,-173,-174,-190,-97,-207,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-216,-226,-187,22,22,-176,-191,-226,-205,-206,361,-223,-224,-225,-140,22,-132,-195,-194,-196,-201,-199,-200,22,22,-170,-169,-204,-215,389,-219,-202,-14,-13,416,-145,-15,-16,-30,-221,-222,22,22,-220,-20,22,-208,22,-29,22,-28,22,22,-235,-189,-154,-17,-218,-236,-18,-19,-217,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,57,58,59,61,62,68,71,76,79,80,82,85,87,88,89,90,91,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,135,136,137,138,139,144,153,186,188,230,234,235,236,237,239,240,241,242,243,246,251,252,258,260,263,264,269,275,276,277,279,281,282,283,284,294,300,301,304,306,309,310,311,312,313,316,326,327,328,330,331,332,334,339,340,341,342,343,344,345,346,347,348,354,355,356,357,358,359,369,370,376,379,393,396,397,404,407,408,409,412,419,420,421,424,425,431,438,445,448,450,453,456,460,462,465,467,468,470,472,473,474,476,477,479,483,489,490,491,],[23,23,-5,-6,-7,-8,-9,53,53,-148,-149,-150,-10,-11,-12,83,84,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,103,-98,-99,-100,-101,-102,131,103,145,160,-126,-127,-168,-173,-174,166,166,168,-190,190,53,198,-95,-96,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,53,200,160,53,53,166,-54,-55,-56,210,198,213,198,198,198,198,198,198,228,198,-97,228,228,228,228,-170,-169,-192,-193,-203,-197,-198,285,-155,-156,-157,-177,302,-216,314,321,323,-187,326,332,23,23,285,-176,-191,323,-226,-205,-223,-224,-225,-140,23,-132,-195,-194,-196,-201,-199,-200,23,378,285,-46,-47,-48,-49,-50,-51,382,23,-170,-169,-204,-215,390,-219,-202,-14,-13,405,-145,-15,-16,285,433,434,405,-30,-221,-222,228,166,23,444,228,23,228,-220,-20,23,23,-29,475,-28,475,475,-235,-189,487,-154,-17,-218,-236,-18,-19,-217,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,379,393,396,397,405,409,412,425,445,453,456,460,462,465,467,468,470,472,473,475,476,477,483,489,490,],[24,24,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,77,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,24,24,-176,-191,-205,-140,24,-132,-195,-194,-196,-201,-199,-200,24,24,-170,-169,-204,-202,-14,-13,407,-145,-15,-16,428,407,-30,24,24,-20,24,24,-29,24,-28,24,24,-235,-189,77,-154,-17,-236,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,379,393,396,397,405,409,412,425,445,453,456,460,462,465,467,468,470,472,473,475,476,477,483,489,490,],[25,25,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,78,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,25,25,-176,-191,-205,-140,25,-132,-195,-194,-196,-201,-199,-200,25,25,-170,-169,-204,-202,-14,-13,408,-145,-15,-16,429,408,-30,25,25,-20,25,25,-29,25,-28,25,25,-235,-189,78,-154,-17,-236,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[39,39,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,39,39,-176,-191,-205,-140,39,-132,-195,-194,-196,-201,-199,-200,39,39,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,39,39,-20,39,39,-29,39,-28,39,39,-235,-189,-154,-17,-236,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[40,40,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,40,40,-176,-191,-205,-140,40,-132,-195,-194,-196,-201,-199,-200,40,40,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,40,40,-20,40,40,-29,40,-28,40,40,-235,-189,-154,-17,-236,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[41,41,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,41,41,-176,-191,-205,-140,41,-132,-195,-194,-196,-201,-199,-200,41,41,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,41,41,-20,41,41,-29,41,-28,41,41,-235,-189,-154,-17,-236,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,264,277,282,283,294,300,304,306,309,310,311,312,313,316,326,327,328,330,331,332,334,348,354,355,356,357,358,359,369,370,376,393,396,397,412,419,420,425,445,450,453,456,460,462,465,467,468,470,472,473,476,477,479,483,489,490,491,],[42,42,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-216,-187,42,42,-176,-191,-226,-205,-223,-224,-225,-140,42,-132,-195,-194,-196,-201,-199,-200,42,42,-170,-169,-204,-215,42,-219,-202,-14,-13,-145,-15,-16,-30,-221,-222,42,42,-220,-20,42,42,-29,42,-28,42,42,-235,-189,-154,-17,-218,-236,-18,-19,-217,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,264,277,282,283,294,300,304,306,309,310,311,312,313,316,326,327,328,330,331,332,334,348,354,355,356,357,358,359,369,370,376,393,396,397,412,419,420,425,445,450,453,456,460,462,465,467,468,470,472,473,476,477,479,483,489,490,491,],[43,43,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-216,-187,43,43,-176,-191,-226,-205,-223,-224,-225,-140,43,-132,-195,-194,-196,-201,-199,-200,43,43,-170,-169,-204,-215,43,-219,-202,-14,-13,-145,-15,-16,-30,-221,-222,43,43,-220,-20,43,43,-29,43,-28,43,43,-235,-189,-154,-17,-218,-236,-18,-19,-217,]),'ARRAY':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,76,80,82,85,87,88,94,98,186,236,237,238,239,240,241,242,243,250,251,252,254,255,256,258,260,277,282,283,294,300,306,312,313,316,325,326,327,328,330,331,332,334,348,354,355,356,369,370,376,385,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[44,44,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,44,-126,-127,-168,-173,-174,172,-190,-97,-170,-169,278,-192,-193,-203,-197,-198,278,-155,-156,278,278,278,-157,-177,-187,44,44,-176,-191,-205,-140,44,-132,278,-195,-194,-196,-201,-199,-200,44,44,-170,-169,-204,-202,-14,-13,413,-145,-15,-16,-30,44,44,-20,44,44,-29,44,-28,44,44,-235,-189,-154,-17,-236,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,57,58,59,61,62,76,80,82,85,87,88,98,103,131,145,166,186,190,200,210,236,237,239,240,241,242,243,251,252,258,260,262,277,282,283,294,299,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,382,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,475,476,477,483,487,489,490,],[45,45,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,79,-151,-152,-153,-154,-171,-172,-175,-188,-189,95,96,-3,-4,120,-98,-99,-100,-101,-102,45,-126,-127,-168,-173,-174,-190,120,120,79,120,-97,120,120,263,275,276,-192,-193,280,-197,-198,-155,-156,-157,-177,301,-187,45,45,-176,96,-191,-205,-140,45,-132,263,-194,-196,-201,-199,263,45,45,-170,-169,-204,-202,-14,-13,263,-145,-15,-16,-30,45,45,-20,45,45,-29,45,-28,45,45,-235,-189,79,-154,-17,-236,263,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,57,58,59,61,62,71,76,80,82,85,87,88,94,98,104,106,107,118,121,122,186,236,237,239,240,241,242,243,250,251,252,254,255,256,258,260,277,282,283,294,300,306,312,313,316,325,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[46,46,-5,-6,-7,-8,-9,46,46,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,46,-98,-99,-100,-101,-102,46,46,-126,-127,-168,-173,-174,46,-190,46,-95,-96,46,46,46,-97,-170,-169,-192,-193,-203,-197,-198,46,-155,-156,46,46,46,-157,-177,-187,46,46,-176,-191,-205,-140,46,-132,46,-195,-194,-196,-201,-199,-200,46,46,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,46,46,-20,46,46,-29,46,-28,46,46,-235,-189,-154,-17,-236,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,294,300,306,312,316,326,327,328,330,331,332,354,355,356,369,370,376,393,396,397,412,453,462,467,477,489,490,],[0,-2,-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-1,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,-176,-191,-205,-140,-132,-195,-194,-196,-201,-199,-200,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,-20,-29,-28,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,72,77,78,83,84,85,87,88,91,98,130,131,145,146,147,148,149,150,151,156,157,169,186,187,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,236,237,239,240,241,242,243,248,251,252,253,258,260,262,277,285,286,287,289,290,294,300,316,317,318,326,327,328,330,331,332,336,339,349,354,355,364,365,366,367,368,369,371,372,374,377,380,381,387,390,391,393,400,410,411,422,423,427,439,451,473,474,476,481,484,486,],[48,49,-114,-115,-148,-149,-150,-128,-129,-151,-152,-153,85,-171,-172,87,88,-175,-188,-189,-85,-87,-89,-91,-93,-97,-98,-99,-100,-52,-101,-102,-57,-59,-103,-106,-86,-122,-123,-124,-125,-168,-173,-174,169,-190,-60,-61,-112,-116,-117,-118,-119,-120,-121,-141,-142,247,-97,260,-83,-58,-113,-88,-62,-63,-112,-90,-69,-65,-68,-72,-92,-94,-53,-70,-66,-67,-64,-111,-71,-104,-105,-107,-108,-109,-110,-84,-170,-169,-192,-193,-203,-197,-198,-130,-155,-156,294,-157,-177,-169,-187,-38,339,-39,-44,-45,-176,-191,-132,-146,-147,-195,-194,-196,-201,-199,-200,375,379,-131,-170,-169,-144,-183,-184,-185,-182,-202,401,402,403,-41,409,-40,-182,419,420,-145,426,-42,-43,-143,-186,-37,450,459,483,485,85,492,493,494,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,465,467,468,470,472,473,476,477,483,489,490,],[-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,335,335,-176,-191,-205,-140,335,-132,-195,-194,-196,-201,-199,-200,371,335,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,335,335,-20,335,335,-29,474,-28,474,474,-235,-189,-154,-17,-236,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,236,237,239,240,241,242,243,251,252,258,260,277,282,283,294,300,306,312,313,316,326,327,328,330,331,332,334,348,354,355,356,369,370,376,393,396,397,412,425,445,453,456,460,462,467,470,472,473,476,477,483,489,490,],[-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-187,336,336,-176,-191,-205,-140,336,-132,-195,-194,-196,-201,-199,-200,372,336,-170,-169,-204,-202,-14,-13,-145,-15,-16,-30,336,336,-20,336,336,-29,-28,481,-235,-189,-154,-17,-236,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,57,58,59,61,62,85,87,88,98,186,224,236,237,239,240,241,242,243,251,252,258,260,264,267,277,294,300,304,306,307,312,316,326,327,328,330,331,332,333,334,337,354,355,356,357,359,362,369,370,373,375,376,384,393,396,397,401,402,403,412,419,420,426,442,450,453,455,459,462,463,466,467,469,470,471,472,473,476,477,478,479,480,482,483,485,489,490,491,492,493,494,],[-5,-6,-7,-8,-9,-148,-149,-150,-10,-11,-12,-151,-152,-153,-154,-171,-172,-175,-188,-189,-3,-4,-98,-99,-100,-101,-102,-168,-173,-174,-190,-97,-207,-170,-169,-192,-193,-203,-197,-198,-155,-156,-157,-177,-216,306,-187,-176,-191,356,-205,-206,-140,-132,-195,-194,-196,-201,-199,-200,370,-21,376,-170,-169,-204,-215,-219,393,-202,-14,-25,-27,-13,412,-145,-15,-16,-23,-24,-26,-30,-221,-222,-22,453,-220,-20,462,-208,-29,467,477,-28,479,-227,-229,-235,-189,-154,-17,491,-218,-228,-231,-236,-234,-18,-19,-217,-230,-232,-233,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,68,71,75,76,80,82,89,90,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,122,123,124,125,126,128,134,135,136,137,138,139,152,153,154,155,158,159,172,241,246,278,284,288,340,341,342,343,344,345,346,392,398,404,413,417,424,437,],[50,71,89,90,91,93,94,99,99,99,144,153,-126,-127,99,99,188,99,99,153,-95,-96,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,99,99,99,99,-54,-55,-56,153,153,153,153,153,153,153,230,153,232,233,234,235,250,230,284,325,284,347,284,-46,-47,-48,-49,-50,-51,421,424,284,436,438,99,448,]),'INTEGER':([10,11,50,68,71,76,79,80,82,89,90,94,95,96,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,135,136,137,138,139,144,153,170,188,230,234,235,246,249,250,254,255,256,263,269,275,276,279,280,281,284,298,301,325,335,340,341,342,343,344,345,346,371,386,395,404,418,421,424,430,436,438,448,454,474,],[56,56,56,56,56,56,161,-126,-127,56,56,180,183,186,191,56,56,-95,-96,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,56,186,204,56,56,56,-54,-55,-56,186,212,212,212,212,212,212,212,186,212,186,186,186,186,186,289,186,186,186,186,186,303,186,322,324,186,329,186,289,186,353,186,186,289,-46,-47,-48,-49,-50,-51,186,183,186,289,186,186,56,443,186,186,186,289,186,]),'STRING':([10,11,50,68,71,76,80,82,89,90,93,94,95,96,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,144,170,188,230,233,234,235,249,250,254,255,256,269,279,281,298,325,335,371,386,395,418,421,424,436,438,448,474,],[57,57,57,57,57,57,-126,-127,57,57,171,181,184,57,57,57,57,-95,-96,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,57,57,57,57,57,-54,-55,-56,57,57,57,57,57,272,57,57,57,57,57,57,57,57,57,57,57,57,57,57,184,57,57,57,57,57,57,57,57,]),'FLOAT':([10,11,50,68,71,76,80,82,89,90,94,96,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,144,170,188,230,234,235,246,249,250,254,255,256,269,279,281,284,298,325,335,340,341,342,343,344,345,346,371,395,404,418,421,424,436,438,448,454,474,],[58,58,58,58,58,58,-126,-127,58,58,58,58,58,58,58,-95,-96,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,58,58,58,58,58,-54,-55,-56,58,58,58,58,58,58,58,290,58,58,58,58,58,58,58,58,290,58,58,58,290,-46,-47,-48,-49,-50,-51,58,58,290,58,58,58,58,58,58,290,58,]),'TRUE':([10,11,50,68,71,76,80,82,89,90,94,96,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,144,170,188,230,234,235,249,250,254,255,256,269,279,281,298,325,335,371,395,418,421,424,436,438,448,474,],[61,61,61,61,61,61,-126,-127,61,61,61,61,61,61,61,-95,-96,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,61,61,61,61,61,-54,-55,-56,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FALSE':([10,11,50,68,71,76,80,82,89,90,94,96,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,144,170,188,230,234,235,249,250,254,255,256,269,279,281,298,325,335,371,395,418,421,424,436,438,448,474,],[62,62,62,62,62,62,-126,-127,62,62,62,62,62,62,62,-95,-96,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,62,62,62,62,62,-54,-55,-56,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'LOGIC_NOT':([10,11,50,68,71,89,90,99,104,106,107,118,121,122,123,124,125,126,424,],[68,68,68,68,68,68,68,68,68,-95,-96,68,68,68,68,-54,-55,-56,68,]),'IDENTIFIER':([17,18,22,42,46,76,80,82,108,109,110,111,112,113,114,115,116,117,142,163,164,222,246,284,305,340,341,342,343,344,345,346,361,389,404,416,],[73,74,75,92,98,152,-126,-127,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,223,241,241,266,288,288,360,288,-46,-47,-48,-49,-50,-51,392,417,288,437,]),'MINUS':([23,31,53,56,65,69,70,103,131,145,166,190,191,194,198,212,216,217,218,219,236,237,262,285,286,287,289,290,338,354,355,377,381,410,411,427,444,475,476,487,488,],[81,86,81,-111,86,135,-106,81,-112,81,-112,-112,-111,-113,-112,-111,-107,-108,-109,-110,-170,-169,-169,-38,342,-39,-44,-45,342,-170,-169,-41,342,-42,-43,342,342,81,86,81,86,]),'EQUALS':([23,92,162,168,179,180,181,183,184,240,241,243,319,368,369,390,405,475,],[80,170,238,246,257,-160,-161,-160,-161,279,-203,281,363,395,-202,418,431,80,]),'PLUS_EQUALS':([23,405,475,],[82,430,82,]),'COMMA':([37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,98,101,103,130,131,171,176,177,178,180,181,186,193,194,196,197,198,200,201,202,203,207,208,209,210,211,212,213,214,215,216,217,218,219,226,228,229,236,239,240,241,242,243,251,259,262,265,266,293,300,314,315,316,326,327,328,330,331,332,350,351,354,355,360,365,366,367,369,387,],[-188,-189,106,106,106,106,-97,-98,-99,-100,-52,-101,-102,-57,-59,-103,-106,-190,106,106,-60,-61,249,254,255,256,-97,-98,-97,-58,-113,-62,-63,-112,-69,-65,-68,-72,-53,-70,-66,-67,-64,-111,-71,-104,-105,-107,-108,-109,-110,269,-135,-136,-170,-192,-193,-203,-197,-198,-155,299,-169,305,-213,254,-191,-137,-138,-132,-195,-194,-196,-201,-199,-200,385,386,-170,-169,-214,-183,-184,-185,-202,-182,]),'STRING_CONCATENATION':([37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,98,101,103,130,131,186,193,194,196,197,198,200,201,202,203,207,208,209,210,211,212,213,214,215,216,217,218,219,236,239,240,241,242,243,262,300,316,326,327,328,330,331,332,354,355,365,366,367,369,387,],[-188,-189,107,107,107,107,-97,-98,-99,-100,-52,-101,-102,-57,-59,-103,-106,-190,107,107,-60,-61,-97,-58,-113,-62,-63,-112,-69,-65,-68,-72,-53,-70,-66,-67,-64,-111,-71,-104,-105,-107,-108,-109,-110,-170,-192,-193,-203,-197,-198,-169,-191,-132,-195,-194,-196,-201,-199,-200,-170,-169,-183,-184,-185,-202,-182,]),'RIGHT_PAREN':([37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,98,100,101,102,103,130,131,140,144,165,167,173,174,175,176,177,178,180,181,186,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,226,227,228,229,230,231,234,235,236,239,240,241,242,243,247,251,261,262,270,271,272,273,274,285,287,289,290,292,293,295,296,297,300,314,315,316,326,327,328,330,331,332,338,350,351,354,355,365,366,367,369,377,381,382,383,387,406,410,411,414,415,421,428,429,433,434,435,438,440,441,443,447,448,449,457,461,],[-188,-189,-87,-89,-91,-93,-97,-98,-99,-100,-52,-101,-102,-57,-59,-103,-106,-190,192,193,194,-89,-60,-61,220,-139,244,245,251,252,253,-162,-164,-166,-97,-98,-97,-139,193,-112,-111,-58,-113,-88,-62,-63,-112,-90,-69,-65,-68,-72,-92,-94,-53,-70,-66,-67,-64,-111,-71,-104,-105,-107,-108,-109,-110,268,-133,-134,-135,-136,-139,194,-139,-139,-170,-192,-193,-203,-197,-198,291,-155,300,-169,316,317,318,319,320,-38,-39,-44,-45,349,350,-163,-165,-167,-191,-137,-138,-132,-195,-194,-196,-201,-199,-200,377,-180,-158,-170,-169,-183,-184,-185,-202,-41,-40,410,411,-182,432,-42,-43,-181,-159,-139,-31,-32,-33,-34,446,-139,451,452,-35,350,-139,458,464,-36,]),'EQUALS_EQUALS':([52,53,56,57,58,59,61,62,65,66,67,69,70,102,103,131,132,133,166,190,191,194,198,212,214,215,216,217,218,219,236,262,365,366,367,378,387,],[108,119,-97,-98,-99,-100,-101,-102,127,108,129,-103,-106,108,119,119,108,127,119,119,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,-170,-169,-183,-184,-185,108,-182,]),'IDENTICAL':([52,53,56,57,58,59,61,62,66,69,70,102,103,131,132,166,190,191,194,198,212,214,215,216,217,218,219,378,],[109,-112,-97,-98,-99,-100,-101,-102,109,-103,-106,109,-112,-112,109,-112,-112,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,109,]),'NOT_EQUALS':([52,53,56,57,58,59,61,62,66,69,70,102,103,131,132,166,190,191,194,198,212,214,215,216,217,218,219,378,],[110,-112,-97,-98,-99,-100,-101,-102,110,-103,-106,110,-112,-112,110,-112,-112,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,110,]),'NOT_IDENTICAL':([52,53,56,57,58,59,61,62,66,69,70,102,103,131,132,166,190,191,194,198,212,214,215,216,217,218,219,378,],[111,-112,-97,-98,-99,-100,-101,-102,111,-103,-106,111,-112,-112,111,-112,-112,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,111,]),'SMALL_THAN':([52,53,56,57,58,59,61,62,66,69,70,102,103,131,132,166,190,191,194,198,212,214,215,216,217,218,219,378,],[112,-112,-97,-98,-99,-100,-101,-102,112,-103,-106,112,-112,-112,112,-112,-112,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,112,]),'GREATER_THAN':([52,53,56,57,58,59,61,62,66,69,70,81,86,102,103,131,132,166,190,191,194,198,212,214,215,216,217,218,219,257,363,378,],[113,-112,-97,-98,-99,-100,-101,-102,113,-103,-106,163,164,113,-112,-112,113,-112,-112,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,298,394,113,]),'SMALL_EQUALS_TO':([52,53,56,57,58,59,61,62,66,69,70,102,103,131,132,166,190,191,194,198,212,214,215,216,217,218,219,378,],[114,-112,-97,-98,-99,-100,-101,-102,114,-103,-106,114,-112,-112,114,-112,-112,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,114,]),'GREATER_EQUALS_TO':([52,53,56,57,58,59,61,62,66,69,70,102,103,131,132,166,190,191,194,198,212,214,215,216,217,218,219,378,],[115,-112,-97,-98,-99,-100,-101,-102,115,-103,-106,115,-112,-112,115,-112,-112,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,115,]),'SPACECRAFT':([52,53,56,57,58,59,61,62,66,69,70,102,103,131,132,166,190,191,194,198,212,214,215,216,217,218,219,378,],[116,-112,-97,-98,-99,-100,-101,-102,116,-103,-106,116,-112,-112,116,-112,-112,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,116,]),'NULL_FUSION':([52,53,56,57,58,59,61,62,66,69,70,102,103,131,132,166,190,191,194,198,212,214,215,216,217,218,219,378,],[117,-112,-97,-98,-99,-100,-101,-102,117,-103,-106,117,-112,-112,117,-112,-112,-97,-113,-112,-111,-104,-105,-107,-108,-109,-110,117,]),'MULTIPLY':([53,56,70,103,131,145,166,190,191,194,198,212,285,286,287,289,290,338,377,381,410,411,427,444,],[-112,-111,136,-112,-112,-112,-112,-112,-111,-113,-112,-111,-38,343,-39,-44,-45,343,-41,343,-42,-43,343,343,]),'DIVIDE':([53,56,70,103,131,145,166,190,191,194,198,212,285,286,287,289,290,338,377,381,410,411,427,444,],[-112,-111,137,-112,-112,-112,-112,-112,-111,-113,-112,-111,-38,344,-39,-44,-45,344,-41,344,-42,-43,344,344,]),'MODULE':([53,56,70,103,131,145,166,190,191,194,198,212,285,286,287,289,290,338,377,381,410,411,427,444,],[-112,-111,138,-112,-112,-112,-112,-112,-111,-113,-112,-111,-38,345,-39,-44,-45,345,-41,345,-42,-43,345,345,]),'POW':([53,56,70,103,131,145,166,190,191,194,198,212,285,286,287,289,290,338,377,381,410,411,427,444,],[-112,-111,139,-112,-112,-112,-112,-112,-111,-113,-112,-111,-38,346,-39,-44,-45,346,-41,346,-42,-43,346,346,]),'PLUS':([53,56,69,70,103,131,145,166,190,191,194,198,212,216,217,218,219,285,286,287,289,290,338,377,381,410,411,427,444,],[-112,-111,134,-106,-112,-112,-112,-112,-112,-111,-113,-112,-111,-107,-108,-109,-110,-38,341,-39,-44,-45,341,-41,341,-42,-43,341,341,]),'LOGIC_AND':([56,57,58,59,60,61,62,63,64,69,70,130,131,186,193,194,196,197,198,200,201,202,203,207,208,209,210,211,212,213,214,215,216,217,218,219,236,262,354,355,365,366,367,387,],[-97,-98,-99,-100,124,-101,-102,-57,-59,-103,-106,-60,-61,-97,-58,-113,-62,-63,-112,-69,-65,-68,-72,-53,-70,-66,-67,-64,-111,-71,-104,-105,-107,-108,-109,-110,-170,-169,-170,-169,-183,-184,-185,-182,]),'LOGIC_OR':([56,57,58,59,60,61,62,63,64,69,70,130,131,186,193,194,196,197,198,200,201,202,203,207,208,209,210,211,212,213,214,215,216,217,218,219,236,262,354,355,365,366,367,387,],[-97,-98,-99,-100,125,-101,-102,-57,-59,-103,-106,-60,-61,-97,-58,-113,-62,-63,-112,-69,-65,-68,-72,-53,-70,-66,-67,-64,-111,-71,-104,-105,-107,-108,-109,-110,-170,-169,-170,-169,-183,-184,-185,-182,]),'LOGIC_XOR':([56,57,58,59,60,61,62,63,64,69,70,130,131,186,193,194,196,197,198,200,201,202,203,207,208,209,210,211,212,213,214,215,216,217,218,219,236,262,354,355,365,366,367,387,],[-97,-98,-99,-100,126,-101,-102,-57,-59,-103,-106,-60,-61,-97,-58,-113,-62,-63,-112,-69,-65,-68,-72,-53,-70,-66,-67,-64,-111,-71,-104,-105,-107,-108,-109,-110,-170,-169,-170,-169,-183,-184,-185,-182,]),'RIGHT_BRACKET':([57,58,59,61,62,79,97,160,161,182,185,186,204,259,302,303,321,322,323,324,329,351,352,353,415,],[-98,-99,-100,-101,-102,162,187,236,237,258,259,-97,262,-178,354,355,365,366,367,368,369,-158,-179,387,-159,]),'EXTENDS':([73,74,],[142,142,]),'IMPLEMENTS':([73,141,223,],[-210,222,-209,]),'LEFT_BRACE':([73,74,141,143,221,223,244,245,265,266,268,291,320,360,394,399,432,446,452,458,464,],[-210,-210,-212,224,264,-209,282,283,-211,-213,313,348,313,-214,313,425,445,456,460,465,468,]),'FEGTS':([76,80,82,],[154,-126,-127,]),'READLINE':([76,80,82,],[155,-126,-127,]),'FN':([76,80,82,],[158,-126,-127,]),'PUBLIC':([224,264,267,304,307,357,359,419,420,450,459,479,491,],[-207,-216,309,309,-206,-215,-219,-221,-222,-220,-208,-218,-217,]),'PRIVATE':([224,264,267,304,307,357,359,419,420,450,459,479,491,],[-207,-216,310,310,-206,-215,-219,-221,-222,-220,-208,-218,-217,]),'PROTECTED':([224,264,267,304,307,357,359,419,420,450,459,479,491,],[-207,-216,311,311,-206,-215,-219,-221,-222,-220,-208,-218,-217,]),'STDIN':([232,],[271,]),'STATIC':([264,304,309,310,311,357,358,359,419,420,450,479,491,],[-216,-226,-223,-224,-225,-215,388,-219,-221,-222,-220,-218,-217,]),'ELSEIF':([370,477,],[398,398,]),'ELSE':([370,477,],[399,399,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[2,2,334,334,334,334,334,334,334,334,334,472,472,472,]),'print_statement':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'assignment':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,76,282,283,313,334,348,425,445,456,460,465,468,470,],[5,5,149,5,5,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,282,283,313,334,348,358,425,445,456,460,465,468,470,],[13,13,13,13,13,13,13,391,13,13,13,13,13,13,13,]),'structure_array_principal':([0,2,76,282,283,313,334,348,425,445,456,460,465,468,470,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,76,282,283,313,334,348,425,445,456,460,465,468,470,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,71,76,104,118,121,122,282,283,313,334,348,425,445,456,460,465,468,470,],[16,16,55,55,55,55,16,55,55,55,55,16,16,16,16,16,16,16,16,16,16,16,16,]),'if_statement':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,282,283,313,334,348,425,445,456,460,465,468,470,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,282,283,313,334,348,358,425,445,456,460,465,468,470,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,282,283,313,334,348,358,425,445,456,460,465,468,470,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,76,94,238,250,254,255,256,282,283,313,325,334,348,425,445,456,460,465,468,470,],[28,28,28,178,277,178,178,178,178,28,28,28,178,28,28,28,28,28,28,28,28,28,]),'associative_array':([0,2,76,282,283,313,334,348,425,445,456,460,465,468,470,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,76,282,283,313,334,348,425,445,456,460,465,468,470,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,68,71,76,89,90,99,104,118,119,121,122,123,127,279,281,282,283,313,334,347,348,424,425,445,456,460,465,468,470,474,],[31,31,65,65,65,133,65,31,133,133,133,65,65,202,65,65,133,208,328,330,31,31,31,31,383,31,133,31,31,31,31,476,476,476,488,]),'matrix_firstform':([0,2,76,282,283,313,334,348,425,445,456,460,465,468,470,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,76,282,283,313,334,348,425,445,456,460,465,468,470,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,68,71,76,89,90,99,104,118,119,121,122,123,282,283,313,334,348,424,425,445,456,460,465,468,470,],[34,34,67,67,67,67,67,34,67,67,67,67,67,203,67,67,67,34,34,34,34,34,67,34,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,76,282,283,313,334,348,425,445,456,460,465,468,470,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,76,282,283,313,334,348,425,445,456,460,465,468,470,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,71,76,94,104,118,121,122,250,254,255,256,282,283,313,325,334,348,425,445,456,460,465,468,470,],[37,37,37,37,37,37,37,177,37,37,37,37,177,177,177,177,37,37,37,177,37,37,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,71,76,104,118,121,122,282,283,313,334,348,425,445,456,460,465,468,470,474,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,473,473,473,486,]),'printable_values':([10,11,50,71,104,118,121,122,],[51,72,100,140,195,199,205,206,]),'values':([10,11,50,68,71,76,89,90,94,96,99,104,105,118,119,121,122,123,127,144,170,188,230,234,235,249,250,254,255,256,269,279,281,298,325,335,371,395,418,421,424,436,438,448,474,],[52,52,52,132,52,146,132,132,176,185,132,52,196,52,201,52,52,132,209,229,248,229,229,229,229,292,293,176,176,176,315,327,331,351,176,374,400,423,439,229,132,447,229,229,484,]),'conditional':([10,11,50,68,71,89,90,99,104,118,121,122,424,],[54,54,101,130,101,165,167,189,54,54,54,54,441,]),'boolean':([10,11,50,68,71,76,89,90,94,96,99,104,105,118,119,121,122,123,127,144,170,188,230,234,235,249,250,254,255,256,269,279,281,298,325,335,371,395,418,421,424,436,438,448,474,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'boolean_expression':([10,11,50,68,71,89,90,99,104,118,121,122,123,424,],[60,60,60,60,60,60,60,60,60,60,60,60,207,60,]),'comparation':([10,11,50,68,71,89,90,99,104,118,121,122,123,424,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'logic_not_sentence':([10,11,50,68,71,89,90,99,104,118,121,122,123,424,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'expression':([10,11,50,68,71,76,89,90,99,104,105,118,121,122,123,128,134,135,153,424,],[66,66,102,66,102,147,66,66,102,66,197,66,66,66,66,211,214,215,231,66,]),'term':([10,11,50,68,71,76,89,90,99,104,105,118,121,122,123,128,134,135,136,137,138,139,153,424,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,216,217,218,219,69,69,]),'factor':([10,11,50,68,71,76,89,90,99,104,105,118,121,122,123,128,134,135,136,137,138,139,153,424,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'assignment_operator':([23,475,],[76,76,]),'structure_matrix_second':([45,299,],[97,352,]),'printable_dividers':([52,53,54,55,101,103,],[104,118,121,122,121,118,]),'comparator_operator':([52,66,102,132,378,],[105,128,128,105,404,]),'logic_operator':([60,],[123,]),'class_extends_opt':([73,74,],[141,143,]),'function_invocation':([76,163,164,],[148,239,242,]),'input':([76,],[150,]),'special_function':([76,],[151,]),'arrow_function':([76,],[156,]),'anonymous_functions':([76,],[157,]),'values_array_indexed':([94,250,254,255,256,325,],[173,173,295,296,297,173,]),'structure_array':([94,95,386,],[174,182,415,]),'structure_matrix_first':([94,385,],[175,414,]),'key':([94,95,386,],[179,179,179,]),'class_implements_opt':([141,],[221,]),'params':([144,188,230,234,235,421,438,448,],[225,261,270,273,274,440,449,457,]),'real_params':([144,188,230,234,235,421,438,448,],[226,226,226,226,226,226,226,226,]),'empty':([144,188,230,234,235,421,438,448,],[227,227,227,227,227,227,227,227,]),'accessType':([163,164,],[240,243,]),'interface_list':([222,],[265,]),'interface_body':([224,],[267,]),'expression_for':([246,284,340,404,],[286,338,381,427,]),'number_values':([246,284,340,404,454,],[287,287,287,287,461,]),'class_body':([264,],[304,]),'interface_method':([267,],[307,]),'visibility_opt':([267,304,],[308,358,]),'codeblock':([268,320,394,],[312,364,422,]),'body_statement':([282,283,313,334,348,425,445,456,460,],[333,337,362,373,384,442,455,463,466,]),'operator_aritmetic':([286,338,381,427,444,],[340,340,340,340,454,]),'class_member':([304,],[357,]),'class_attribute':([304,],[359,]),'condition_for':([339,],[380,]),'elseif_statement':([370,477,],[396,489,]),'else_statement':([370,477,],[397,490,]),'increment_statement':([379,409,],[406,435,]),'method_body':([465,468,470,],[469,478,482,]),'classStatement':([465,468,470,],[470,470,470,]),'return_form':([465,468,470,],[471,471,480,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',83),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',12,'p_for_statement','syntaxAnalysis.py',84),
  ('for_statement -> FOR LEFT_PAREN SEMICOLON SEMICOLON RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',8,'p_for_statement','syntaxAnalysis.py',85),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',93),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',94),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',95),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',100),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',108),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',109),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',110),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',115),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',116),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',121),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',125),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',126),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',133),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',134),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',140),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',141),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',142),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',148),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',149),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',150),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',157),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',158),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',165),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',166),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',167),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',168),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',169),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',170),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',171),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',172),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',173),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',174),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',175),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',181),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',182),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',183),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',184),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',185),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',186),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',187),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',188),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',189),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',190),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',196),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',197),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',198),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',199),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',205),
  ('printable_values -> values printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',206),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',207),
  ('printable_values -> VARIABLE printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',208),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',209),
  ('printable_values -> conditional printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',210),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',211),
  ('printable_values -> structure_object_principal printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',212),
  ('printable_dividers -> COMMA','printable_dividers',1,'p_printable_dividers','syntaxAnalysis.py',219),
  ('printable_dividers -> STRING_CONCATENATION','printable_dividers',1,'p_printable_dividers','syntaxAnalysis.py',220),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',227),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',228),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',229),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',230),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',236),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',237),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',243),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',244),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',245),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',251),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',252),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',253),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',254),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',255),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',261),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',262),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',263),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',274),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',275),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',281),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',282),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',283),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',284),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',285),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',286),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',287),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',288),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',289),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',290),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',297),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',298),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',304),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',305),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',311),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',317),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',328),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',334),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',335),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',341),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',342),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',343),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',344),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',354),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',362),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',368),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',369),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',375),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',381),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',387),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',393),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',394),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',405),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',406),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',407),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',414),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',415),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',416),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',417),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',422),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',426),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',427),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',433),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',434),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',440),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',441),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',446),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',447),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',448),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',449),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',450),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',451),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',456),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',461),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',462),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',468),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',469),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',470),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',471),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',472),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',477),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',481),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',486),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',487),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',493),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',494),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',500),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',501),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',502),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',503),
  ('modify_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET EQUALS values','modify_element_matrix',9,'p_modify_element_matrix','syntaxAnalysis.py',508),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',512),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',521),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',522),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',527),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',528),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',532),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',533),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',534),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',535),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',536),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',537),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',538),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',539),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',540),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',541),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',547),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',548),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',553),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',557),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',561),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',562),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',566),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',570),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',571),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',575),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',576),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',580),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',581),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',585),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',586),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',590),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',591),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',592),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',597),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',598),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',599),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',604),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',605),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',606),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',607),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',611),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',612),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',613),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',614),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',615),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',621),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',622),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',623),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',628),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',629),
]
