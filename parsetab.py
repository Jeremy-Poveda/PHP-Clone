
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ARRAY_POP ARRAY_PUSH BREAK CLASS COLON COMMA COMMENT CONST COUNT COUNT_NORMAL COUNT_RECURSIVE DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION STRLEN SUBSTR TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n                   | length_operations\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n                        | logic_expression\n    \n    logic_expression : true_boolean_types logic_operator false_boolean_types\n                     | false_boolean_types logic_operator true_boolean_types\n    \n    true_boolean_types : TRUE\n                       | STRING\n                       | INTEGER\n                       | FLOAT\n                       | ARRAY LEFT_PAREN values RIGHT_PAREN\n    \n    false_boolean_types : FALSE\n                        | STRING\n                        | INTEGER\n                        | FLOAT\n                        | ARRAY LEFT_PAREN RIGHT_PAREN\n                        | NULL\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE COMMA printable_values\n                     | STRING STRING_CONCATENATION STRING\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal COMMA printable_values\n                     | function_invocation\n                     | function_invocation COMMA printable_values\n                     | string_special_function\n                     | string_special_function COMMA printable_values\n                     | array_special_function\n                     | array_special_function COMMA printable_values\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | FLOAT\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n           | STRING\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator string_special_function\n                        | VARIABLE assignment_operator array_special_function\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    string_special_function : STRLEN LEFT_PAREN string_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN\n    \n    string_param : STRING\n                 | VARIABLE\n    \n    int_param : INTEGER\n              | VARIABLE\n    \n    array_special_function : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                           | ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN\n    \n    count_param : COMMA COUNT_NORMAL\n                | COMMA COUNT_RECURSIVE\n                |\n    \n    length_operations : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                      | STRLEN LEFT_PAREN string_param RIGHT_PAREN\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN  access_method_object SEMICOLON\n                | RETURN SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[10,10,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,10,10,-217,-233,-247,-163,10,-237,-236,-238,-243,-241,-242,10,-211,-210,-246,-244,-14,-13,-168,-15,-16,10,-20,10,10,10,-28,10,10,-277,-231,-195,-17,-278,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[11,11,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,11,11,-217,-233,-247,-163,11,-237,-236,-238,-243,-241,-242,11,-211,-210,-246,-244,-14,-13,-168,-15,-16,11,-20,11,11,11,-28,11,11,-277,-231,-195,-17,-278,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[17,17,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,17,17,-217,-233,-247,-163,17,-237,-236,-238,-243,-241,-242,17,-211,-210,-246,-244,-14,-13,-168,-15,-16,17,-20,17,17,17,-28,17,17,-277,-231,-195,-17,-278,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[18,18,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,18,18,-217,-233,-247,-163,18,-237,-236,-238,-243,-241,-242,18,-211,-210,-246,-244,-14,-13,-168,-15,-16,18,-20,18,18,18,-28,18,18,-277,-231,-195,-17,-278,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,89,93,95,98,100,102,112,193,194,204,205,206,300,307,308,310,311,312,313,314,321,322,328,330,332,345,348,356,361,362,375,381,394,396,397,398,399,400,401,402,403,413,414,415,417,418,419,421,443,444,445,446,447,448,458,459,465,479,484,486,487,509,510,514,541,544,547,550,551,555,558,559,561,563,564,567,568,570,574,580,581,582,],[22,22,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,196,-149,-150,-209,-214,-215,-232,-120,-121,-116,-117,-118,-249,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-258,-268,-229,22,22,-217,-233,-268,-247,-248,450,-265,-266,-267,-163,22,-237,-236,-238,-243,-241,-242,22,-211,-210,-246,-257,480,-261,-244,-14,-13,506,-168,-15,-16,-263,-264,22,-262,-20,22,-250,22,22,-28,22,22,-277,-231,-195,-17,-260,-278,-18,-19,-259,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,62,77,84,89,92,93,95,98,100,101,102,103,104,105,112,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,164,165,167,168,169,170,175,188,193,194,204,205,206,228,305,306,307,308,310,311,312,313,314,317,321,322,328,330,332,333,335,341,345,354,355,356,358,360,361,362,363,375,381,394,396,399,400,401,402,403,413,414,415,417,418,419,421,426,427,428,429,430,431,432,433,434,435,436,441,443,444,445,446,447,448,458,459,465,484,486,487,494,495,509,510,511,513,514,519,520,526,534,539,541,544,547,551,555,558,559,561,563,564,565,567,568,570,574,580,581,582,],[23,23,-5,-6,-7,-8,-9,53,53,-189,-190,-191,-10,-11,-12,96,97,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,117,-119,156,117,176,197,-149,-150,-209,-214,203,-215,208,208,210,-232,230,53,240,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,53,243,197,53,53,53,53,53,208,-53,-54,-55,257,261,261,265,267,270,240,275,240,240,240,240,240,240,257,240,-120,-121,-116,-117,-118,257,257,257,-211,-210,-234,-235,-245,-239,-240,364,-196,-197,-198,-218,-155,382,386,392,-258,408,410,-229,413,419,23,23,364,-217,-233,-268,-247,-265,-266,-267,-163,23,-237,-236,-238,-243,-241,-242,23,467,364,-45,-46,-47,-48,-49,-50,470,474,261,386,-211,-210,-246,-257,481,-261,-244,-14,-13,-168,-15,-16,364,517,-263,-264,257,208,23,536,537,257,546,257,-262,-20,23,23,566,-28,566,566,-277,-231,578,-195,-17,-260,-278,-18,-19,-259,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,495,514,517,544,547,551,555,558,559,561,563,564,566,567,568,574,580,581,],[24,24,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,90,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,24,24,-217,-233,-247,-163,24,-237,-236,-238,-243,-241,-242,24,-211,-210,-246,-244,-14,-13,-168,-15,-16,519,24,531,-20,24,24,24,-28,24,24,-277,-231,90,-195,-17,-278,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,495,514,517,544,547,551,555,558,559,561,563,564,566,567,568,574,580,581,],[25,25,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,91,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,25,25,-217,-233,-247,-163,25,-237,-236,-238,-243,-241,-242,25,-211,-210,-246,-244,-14,-13,-168,-15,-16,520,25,532,-20,25,25,25,-28,25,25,-277,-231,91,-195,-17,-278,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[39,39,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,39,39,-217,-233,-247,-163,39,-237,-236,-238,-243,-241,-242,39,-211,-210,-246,-244,-14,-13,-168,-15,-16,39,-20,39,39,39,-28,39,39,-277,-231,-195,-17,-278,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[40,40,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,40,40,-217,-233,-247,-163,40,-237,-236,-238,-243,-241,-242,40,-211,-210,-246,-244,-14,-13,-168,-15,-16,40,-20,40,40,40,-28,40,40,-277,-231,-195,-17,-278,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[41,41,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,41,41,-217,-233,-247,-163,41,-237,-236,-238,-243,-241,-242,41,-211,-210,-246,-244,-14,-13,-168,-15,-16,41,-20,41,41,41,-28,41,41,-277,-231,-195,-17,-278,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,345,356,361,362,375,381,394,396,399,400,401,402,403,413,414,415,417,418,419,421,443,444,445,446,447,448,458,459,465,484,486,487,509,510,514,541,544,547,551,555,558,559,561,563,564,567,568,570,574,580,581,582,],[42,42,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-258,-229,42,42,-217,-233,-268,-247,-265,-266,-267,-163,42,-237,-236,-238,-243,-241,-242,42,-211,-210,-246,-257,42,-261,-244,-14,-13,-168,-15,-16,-263,-264,42,-262,-20,42,42,42,-28,42,42,-277,-231,-195,-17,-260,-278,-18,-19,-259,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,345,356,361,362,375,381,394,396,399,400,401,402,403,413,414,415,417,418,419,421,443,444,445,446,447,448,458,459,465,484,486,487,509,510,514,541,544,547,551,555,558,559,561,563,564,567,568,570,574,580,581,582,],[43,43,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-258,-229,43,43,-217,-233,-268,-247,-265,-266,-267,-163,43,-237,-236,-238,-243,-241,-242,43,-211,-210,-246,-257,43,-261,-244,-14,-13,-168,-15,-16,-263,-264,43,-262,-20,43,43,43,-28,43,43,-277,-231,-195,-17,-260,-278,-18,-19,-259,]),'ARRAY':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,62,77,84,89,93,95,98,100,102,103,104,108,112,113,121,133,138,139,140,141,142,143,144,145,146,150,162,163,193,194,204,205,206,307,308,309,310,311,312,313,314,320,321,322,324,325,326,328,330,332,356,361,362,375,381,396,402,403,412,413,414,415,417,418,419,421,435,443,444,445,458,459,465,476,484,486,487,513,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[44,44,-5,-6,-7,-8,-9,81,81,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,81,-119,81,81,44,-149,-150,-209,-214,-215,81,81,213,-232,81,81,81,81,81,81,81,81,81,-53,-54,-55,44,281,287,-120,-121,-116,-117,-118,-211,-210,357,-234,-235,-245,-239,-240,357,-196,-197,357,357,357,-198,-218,-155,-229,44,44,-217,-233,-247,-163,44,357,-237,-236,-238,-243,-241,-242,44,44,-211,-210,-246,-244,-14,-13,502,-168,-15,-16,81,44,-20,44,44,44,-28,44,44,-277,-231,-195,-17,-278,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,62,89,93,95,98,100,102,112,117,150,156,176,193,194,204,205,206,208,230,243,265,270,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,380,381,396,402,403,413,414,415,417,418,419,421,435,443,444,445,458,459,465,470,474,484,486,487,514,544,547,551,555,558,559,561,563,564,566,567,568,574,578,580,581,],[45,45,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,92,-192,-193,-194,-195,-212,-213,-216,-230,-231,109,110,-3,-4,136,-119,45,-149,-150,-209,-214,-215,-232,136,45,136,92,-120,-121,-116,-117,-118,136,136,136,92,341,354,355,-234,-235,359,-239,-240,-196,-197,-198,-218,-155,-229,45,45,-217,110,-233,-247,-163,45,341,-236,-238,-243,-241,341,45,45,-211,-210,-246,-244,-14,-13,341,92,-168,-15,-16,45,-20,45,45,45,-28,45,45,-277,-231,92,-195,-17,-278,341,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,62,84,89,93,95,98,100,102,108,112,121,133,138,139,140,141,142,193,194,204,205,206,307,308,310,311,312,313,314,320,321,322,324,325,326,328,330,332,356,361,362,375,381,396,402,403,412,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[46,46,-5,-6,-7,-8,-9,46,46,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,46,-119,46,46,-149,-150,-209,-214,-215,46,-232,46,46,46,46,46,46,46,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,46,-196,-197,46,46,46,-198,-218,-155,-229,46,46,-217,-233,-247,-163,46,46,-237,-236,-238,-243,-241,-242,46,-211,-210,-246,-244,-14,-13,-168,-15,-16,46,-20,46,46,46,-28,46,46,-277,-231,-195,-17,-278,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,375,381,396,402,413,414,415,417,418,419,443,444,445,458,459,465,484,486,487,544,558,568,580,581,],[0,-2,-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-1,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,-217,-233,-247,-163,-237,-236,-238,-243,-241,-242,-211,-210,-246,-244,-14,-13,-168,-15,-16,-20,-28,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,63,69,70,71,72,73,80,82,83,85,90,91,96,97,98,100,102,112,155,156,176,177,178,179,180,181,182,183,184,185,186,187,191,192,193,194,202,203,204,205,206,227,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,266,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,291,292,293,294,295,296,307,308,310,311,312,313,314,318,321,322,323,328,330,332,334,340,344,356,364,365,366,368,369,370,375,381,387,390,391,404,405,413,414,415,417,418,419,423,437,442,443,444,453,454,455,456,457,458,460,461,463,466,468,469,481,482,484,490,496,497,501,505,512,516,521,522,523,527,542,564,565,567,572,575,577,],[48,49,-135,-136,-189,-190,-191,-151,-152,-192,-193,-194,98,-212,-213,100,102,-216,-230,-231,-98,-100,-102,-117,-106,-108,-110,-112,-114,-116,-118,-119,-51,-120,-121,-56,-58,-59,-122,-72,-125,-99,-145,-146,-147,-148,-209,-214,-215,-232,-73,-74,-132,-137,-138,-139,-140,-141,-142,-143,-144,-116,-117,-118,-164,-165,-120,-121,-227,-228,-116,-117,-118,330,-96,-57,-133,-101,-75,-76,-132,-103,-105,-82,-78,-81,-85,-104,-107,-109,-111,-113,-115,-52,98,-83,-79,-80,-77,-130,-131,-134,-84,-60,-67,-68,-69,-70,-61,-62,-63,-64,-65,-123,-124,-71,-126,-127,-128,-129,-97,-211,-210,-234,-235,-245,-239,-240,-153,-196,-197,375,-198,-218,-155,-171,-181,-66,-229,-36,426,-37,-42,-43,-44,-217,-233,-178,-179,-180,-169,-170,-237,-236,-238,-243,-241,-242,464,-154,-172,-211,-210,-167,-224,-225,-226,-223,-244,491,492,493,-39,495,-38,509,510,-168,515,-40,-41,-188,-173,-166,-35,-185,-186,-187,541,550,574,576,98,583,584,585,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,555,558,559,561,563,564,567,568,574,580,581,],[-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,422,422,-217,-233,-247,-163,422,-237,-236,-238,-243,-241,-242,460,-211,-210,-246,-244,-14,-13,-168,-15,-16,422,-20,422,422,565,-28,565,565,-277,-231,-195,-17,-278,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,307,308,310,311,312,313,314,321,322,328,330,332,356,361,362,375,381,396,402,403,413,414,415,417,418,419,421,443,444,445,458,459,465,484,486,487,514,544,547,551,558,561,563,564,567,568,574,580,581,],[-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-229,423,423,-217,-233,-247,-163,423,-237,-236,-238,-243,-241,-242,461,-211,-210,-246,-244,-14,-13,-168,-15,-16,423,-20,423,423,-28,572,-277,-231,-195,-17,-278,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,193,194,204,205,206,300,307,308,310,311,312,313,314,321,322,328,330,332,345,348,356,375,381,394,396,397,402,413,414,415,417,418,419,420,421,424,443,444,445,446,448,451,458,459,462,464,465,484,486,487,491,492,493,509,510,515,530,541,544,550,553,556,558,560,561,562,563,564,567,568,569,570,571,573,574,576,580,581,582,583,584,585,],[-5,-6,-7,-8,-9,-189,-190,-191,-10,-11,-12,-192,-193,-194,-195,-212,-213,-216,-230,-231,-3,-4,-119,-209,-214,-215,-232,-120,-121,-116,-117,-118,-249,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,-155,-258,396,-229,-217,-233,445,-247,-248,-163,-237,-236,-238,-243,-241,-242,459,-21,465,-211,-210,-246,-257,-261,484,-244,-14,-25,-27,-13,-168,-15,-16,-23,-24,-26,-263,-264,-22,544,-262,-20,-250,558,568,-28,570,-269,-271,-277,-231,-195,-17,582,-260,-270,-273,-278,-276,-18,-19,-259,-272,-274,-275,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,64,65,66,67,68,77,81,84,88,89,93,95,103,104,112,113,121,122,123,124,125,126,127,128,129,130,131,132,133,138,139,140,141,142,143,144,145,146,153,164,165,167,168,169,170,188,189,190,195,196,213,281,287,312,317,357,363,367,371,372,427,428,429,430,431,432,433,483,488,494,502,507,513,525,],[50,84,103,104,105,107,108,113,147,148,149,150,151,113,166,113,175,188,-149,-150,113,113,228,113,113,188,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,113,113,113,113,113,113,113,-53,-54,-55,188,188,188,188,188,188,188,188,303,304,305,306,320,342,343,147,363,412,363,434,435,436,363,-45,-46,-47,-48,-49,-50,511,513,363,524,526,113,539,]),'STRING':([10,11,50,77,84,89,93,95,101,103,104,107,108,109,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,152,153,162,163,164,165,166,167,168,169,170,175,188,211,228,304,305,306,319,320,324,325,326,333,343,358,360,379,412,422,436,460,477,508,511,513,524,526,539,565,],[54,54,118,159,118,186,-149,-150,205,159,159,212,222,225,205,233,54,186,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,54,242,205,247,54,54,54,54,54,159,-53,-54,-55,205,260,260,205,274,278,284,274,274,205,274,274,274,274,205,274,205,205,351,205,205,205,205,205,205,205,205,205,205,205,205,205,205,260,205,225,205,205,159,205,205,205,205,]),'INTEGER':([10,11,50,77,84,89,92,93,95,101,103,104,108,109,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,138,139,140,141,142,143,144,145,146,147,152,153,162,163,164,165,166,167,168,169,170,175,188,211,228,305,306,317,319,320,324,325,326,333,335,341,343,354,355,358,359,360,363,379,412,422,427,428,429,430,431,432,433,441,460,477,494,508,511,513,524,526,533,539,552,565,],[60,60,119,60,119,185,198,-149,-150,204,60,60,221,224,204,231,60,185,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,60,204,198,60,60,60,60,60,60,-53,-54,-55,204,204,272,279,285,272,272,204,272,272,272,272,204,272,204,204,204,204,369,204,204,204,204,204,204,385,393,204,409,411,204,416,204,369,204,204,204,369,-45,-46,-47,-48,-49,-50,385,204,224,369,204,204,60,204,204,545,204,369,204,]),'FLOAT':([10,11,50,77,84,89,93,95,101,103,104,108,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,138,139,140,141,142,143,144,145,146,147,152,153,162,163,164,165,166,167,168,169,170,175,188,211,228,305,306,317,319,320,324,325,326,333,343,358,360,363,379,412,422,427,428,429,430,431,432,433,460,494,508,511,513,524,526,539,552,565,],[61,61,120,61,120,187,-149,-150,206,61,61,206,206,232,61,187,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,61,206,61,61,61,61,61,61,-53,-54,-55,206,206,273,280,286,273,273,206,273,273,273,273,206,273,206,206,206,206,370,206,206,206,206,206,206,206,206,206,370,206,206,206,370,-45,-46,-47,-48,-49,-50,206,370,206,206,61,206,206,206,370,206,]),'IDENTIFIER':([10,11,17,18,22,42,46,50,84,89,93,95,121,123,124,125,126,127,128,129,130,131,132,133,138,139,140,141,142,173,200,201,298,317,363,395,427,428,429,430,431,432,433,450,480,494,506,],[64,64,86,87,88,106,112,64,64,64,-149,-150,64,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,64,64,64,64,64,64,299,312,312,347,367,367,449,367,-45,-46,-47,-48,-49,-50,483,507,367,525,]),'STRLEN':([10,11,50,84,89,93,95,121,123,124,125,126,127,128,129,130,131,132,133,138,139,140,141,142,317,363,427,428,429,430,431,432,433,494,],[65,65,65,65,65,-149,-150,65,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,65,65,65,65,65,65,372,372,372,-45,-46,-47,-48,-49,-50,372,]),'SUBSTR':([10,11,50,84,89,93,95,121,133,138,139,140,141,142,],[66,66,66,66,66,-149,-150,66,66,66,66,66,66,66,]),'COUNT':([10,11,50,84,89,93,95,121,123,124,125,126,127,128,129,130,131,132,133,138,139,140,141,142,317,363,427,428,429,430,431,432,433,494,],[67,67,67,67,67,-149,-150,67,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,67,67,67,67,67,67,371,371,371,-45,-46,-47,-48,-49,-50,371,]),'ARRAY_POP':([10,11,50,84,89,93,95,121,133,138,139,140,141,142,],[68,68,68,68,68,-149,-150,68,68,68,68,68,68,68,]),'TRUE':([10,11,50,77,84,89,93,95,101,103,104,108,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,138,139,140,141,142,143,144,145,146,147,152,163,166,175,211,228,305,306,319,320,324,325,326,333,343,358,360,379,412,422,460,508,511,513,524,526,539,565,],[69,69,69,160,69,193,-149,-150,193,160,160,193,193,160,69,193,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,69,193,69,69,69,69,69,160,-53,-54,-55,193,193,283,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,160,193,193,193,193,]),'FALSE':([10,11,50,77,84,89,93,95,101,103,104,108,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,138,139,140,141,142,143,144,145,146,147,152,162,166,175,211,228,305,306,319,320,324,325,326,333,343,358,360,379,412,422,460,508,511,513,524,526,539,565,],[70,70,70,161,70,194,-149,-150,194,161,161,194,194,161,70,194,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,70,194,70,70,70,70,70,161,-53,-54,-55,194,194,277,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,161,194,194,194,194,]),'LOGIC_NOT':([10,11,50,77,84,103,104,113,121,133,138,139,140,141,142,143,144,145,146,513,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-53,-54,-55,77,]),'NULL':([10,11,50,77,84,103,104,113,121,133,138,139,140,141,142,143,144,145,146,162,513,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-53,-54,-55,82,82,]),'MINUS':([23,31,53,54,60,61,74,80,83,117,118,119,120,156,159,176,185,186,187,208,230,231,232,233,236,240,272,273,274,292,293,294,295,307,308,364,365,366,368,369,370,425,443,444,466,469,496,497,501,516,521,522,523,546,566,567,578,579,],[94,99,94,-134,-130,-131,99,165,-125,94,-134,-130,-131,-132,-134,94,-130,-134,-131,-132,-132,-130,-131,-134,-133,-132,-130,-131,-134,-126,-127,-128,-129,-211,-210,-36,429,-37,-42,-43,-44,429,-211,-210,-39,429,-40,-41,-188,429,-185,-186,-187,429,94,99,94,99,]),'EQUALS':([23,34,106,199,210,220,221,222,224,225,311,312,314,406,454,455,456,457,458,481,517,566,],[93,101,211,309,317,327,-201,-202,-201,-202,358,-245,360,452,-224,-225,-226,-223,-244,508,534,93,]),'PLUS_EQUALS':([23,517,566,],[95,533,95,]),'COMMA':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,69,70,71,72,73,80,82,83,98,100,102,112,115,117,118,119,120,155,156,185,186,187,193,194,204,205,206,212,217,218,219,221,222,235,236,238,239,240,243,244,245,246,253,255,257,258,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,291,292,293,294,295,307,308,310,311,312,313,314,321,322,328,329,330,332,334,340,344,346,347,356,374,375,381,382,383,384,385,386,387,390,391,413,414,415,417,418,419,438,439,442,443,444,449,454,455,456,457,458,472,473,474,505,],[-192,-193,-194,-212,-213,-216,-230,-231,121,133,-117,138,139,140,141,142,-116,-118,-119,-51,-120,-121,-56,-58,-59,-122,-72,-125,-209,-214,-215,-232,138,133,-117,-116,-118,-73,-74,-116,-117,-118,-120,-121,-116,-117,-118,319,324,325,326,-116,-117,-57,-133,-75,-76,-132,-82,-78,-81,-85,-52,333,-158,-159,-174,-175,335,337,337,337,-195,-83,-79,-80,-77,-130,-131,-134,-84,-60,-67,-68,-69,-70,-61,-62,-63,-64,-65,-123,-124,-71,-126,-127,-128,-129,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,380,-218,-155,-171,-181,-66,395,-255,-229,324,-217,-233,-160,-161,441,-176,-177,-178,-179,-180,-237,-236,-238,-243,-241,-242,476,477,-172,-211,-210,-256,-224,-225,-226,-223,-244,337,337,337,-173,]),'RIGHT_PAREN':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,69,70,71,72,73,80,82,83,98,100,102,112,114,115,116,117,118,119,120,147,155,156,166,171,175,185,186,187,193,194,204,205,206,207,209,214,215,216,217,218,219,221,222,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,290,291,292,293,294,295,301,302,305,306,307,308,310,311,312,313,314,321,322,328,330,331,332,334,336,338,339,340,342,344,350,351,352,353,356,364,366,368,369,370,373,374,375,376,377,378,381,382,383,384,385,386,387,388,389,390,391,413,414,415,417,418,419,425,438,439,442,443,444,454,455,456,457,458,466,469,470,471,472,473,474,475,478,496,497,498,499,500,501,503,504,505,511,518,521,522,523,526,528,529,531,532,536,537,538,539,540,545,548,557,],[-192,-193,-194,-212,-213,-216,-230,-231,-100,-102,-117,-106,-108,-110,-112,-114,-116,-118,-119,-51,-120,-121,-56,-58,-59,-122,-72,-125,-209,-214,-215,-232,234,235,236,-102,-117,-116,-118,-162,-73,-74,291,296,-162,-116,-117,-118,-120,-121,-116,-117,-118,315,316,321,322,323,-203,-205,-207,-116,-117,-162,235,-132,-130,-131,-134,-57,-133,-101,-75,-76,-132,-103,-105,-82,-78,-81,-85,-104,-107,-109,-111,-113,-115,-52,332,-156,-157,-158,-159,334,-174,-175,-184,-184,-184,-195,340,-83,-79,-80,-77,-130,-131,-134,-84,-60,-67,-68,-69,-70,-61,-62,-63,-64,-65,-123,-124,344,-71,-126,-127,-128,-129,349,236,-162,-162,-211,-210,-234,-235,-245,-239,-240,-196,-197,-198,-218,381,-155,-171,387,390,391,-181,291,-66,404,405,406,407,-229,-36,-37,-42,-43,-44,437,438,-217,-204,-206,-208,-233,-160,-161,442,-176,-177,-178,-182,-183,-179,-180,-237,-236,-238,-243,-241,-242,466,-221,-199,-172,-211,-210,-224,-225,-226,-223,-244,-39,-38,496,497,-184,-184,-184,501,505,-40,-41,521,522,523,-188,-222,-200,-173,-162,535,-185,-186,-187,-162,542,543,-29,-30,-31,-32,438,-162,549,-33,554,-34,]),'EQUALS_EQUALS':([52,53,54,60,61,62,69,70,74,75,76,80,83,116,117,118,119,120,156,157,158,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,307,308,454,455,456,457,467,],[123,135,-117,-116,-118,-119,-120,-121,152,123,154,-122,-125,123,135,-117,-116,-118,135,123,152,-117,-120,-121,135,135,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,-211,-210,-224,-225,-226,-223,123,]),'IDENTICAL':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,156,157,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,467,],[124,-132,-117,-116,-118,-119,-120,-121,124,-122,-125,124,-132,-117,-116,-118,-132,124,-117,-120,-121,-132,-132,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,124,]),'NOT_EQUALS':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,156,157,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,467,],[125,-132,-117,-116,-118,-119,-120,-121,125,-122,-125,125,-132,-117,-116,-118,-132,125,-117,-120,-121,-132,-132,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,125,]),'NOT_IDENTICAL':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,156,157,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,467,],[126,-132,-117,-116,-118,-119,-120,-121,126,-122,-125,126,-132,-117,-116,-118,-132,126,-117,-120,-121,-132,-132,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,126,]),'SMALL_THAN':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,156,157,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,467,],[127,-132,-117,-116,-118,-119,-120,-121,127,-122,-125,127,-132,-117,-116,-118,-132,127,-117,-120,-121,-132,-132,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,127,]),'GREATER_THAN':([52,53,54,60,61,62,69,70,75,80,83,94,99,116,117,118,119,120,156,157,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,327,452,467,],[128,-132,-117,-116,-118,-119,-120,-121,128,-122,-125,200,201,128,-132,-117,-116,-118,-132,128,-117,-120,-121,-132,-132,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,379,485,128,]),'SMALL_EQUALS_TO':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,156,157,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,467,],[129,-132,-117,-116,-118,-119,-120,-121,129,-122,-125,129,-132,-117,-116,-118,-132,129,-117,-120,-121,-132,-132,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,129,]),'GREATER_EQUALS_TO':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,156,157,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,467,],[130,-132,-117,-116,-118,-119,-120,-121,130,-122,-125,130,-132,-117,-116,-118,-132,130,-117,-120,-121,-132,-132,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,130,]),'SPACECRAFT':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,156,157,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,467,],[131,-132,-117,-116,-118,-119,-120,-121,131,-122,-125,131,-132,-117,-116,-118,-132,131,-117,-120,-121,-132,-132,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,131,]),'NULL_FUSION':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,156,157,159,160,161,208,230,231,232,233,236,240,272,273,274,288,289,292,293,294,295,467,],[132,-132,-117,-116,-118,-119,-120,-121,132,-122,-125,132,-132,-117,-116,-118,-132,132,-117,-120,-121,-132,-132,-116,-118,-117,-133,-132,-130,-131,-134,-123,-124,-126,-127,-128,-129,132,]),'STRING_CONCATENATION':([53,54,117,118,],[134,137,134,137,]),'MULTIPLY':([53,54,60,61,83,117,118,119,120,156,159,176,185,186,187,208,230,231,232,233,236,240,272,273,274,364,365,366,368,369,370,425,466,469,496,497,501,516,521,522,523,546,],[-132,-134,-130,-131,167,-132,-134,-130,-131,-132,-134,-132,-130,-134,-131,-132,-132,-130,-131,-134,-133,-132,-130,-131,-134,-36,430,-37,-42,-43,-44,430,-39,430,-40,-41,-188,430,-185,-186,-187,430,]),'DIVIDE':([53,54,60,61,83,117,118,119,120,156,159,176,185,186,187,208,230,231,232,233,236,240,272,273,274,364,365,366,368,369,370,425,466,469,496,497,501,516,521,522,523,546,],[-132,-134,-130,-131,168,-132,-134,-130,-131,-132,-134,-132,-130,-134,-131,-132,-132,-130,-131,-134,-133,-132,-130,-131,-134,-36,431,-37,-42,-43,-44,431,-39,431,-40,-41,-188,431,-185,-186,-187,431,]),'MODULE':([53,54,60,61,83,117,118,119,120,156,159,176,185,186,187,208,230,231,232,233,236,240,272,273,274,364,365,366,368,369,370,425,466,469,496,497,501,516,521,522,523,546,],[-132,-134,-130,-131,169,-132,-134,-130,-131,-132,-134,-132,-130,-134,-131,-132,-132,-130,-131,-134,-133,-132,-130,-131,-134,-36,432,-37,-42,-43,-44,432,-39,432,-40,-41,-188,432,-185,-186,-187,432,]),'POW':([53,54,60,61,83,117,118,119,120,156,159,176,185,186,187,208,230,231,232,233,236,240,272,273,274,364,365,366,368,369,370,425,466,469,496,497,501,516,521,522,523,546,],[-132,-134,-130,-131,170,-132,-134,-130,-131,-132,-134,-132,-130,-134,-131,-132,-132,-130,-131,-134,-133,-132,-130,-131,-134,-36,433,-37,-42,-43,-44,433,-39,433,-40,-41,-188,433,-185,-186,-187,433,]),'PLUS':([53,54,60,61,80,83,117,118,119,120,156,159,176,185,186,187,208,230,231,232,233,236,240,272,273,274,292,293,294,295,364,365,366,368,369,370,425,466,469,496,497,501,516,521,522,523,546,],[-132,-134,-130,-131,164,-125,-132,-134,-130,-131,-132,-134,-132,-130,-134,-131,-132,-132,-130,-131,-134,-133,-132,-130,-131,-134,-126,-127,-128,-129,-36,428,-37,-42,-43,-44,428,-39,428,-40,-41,-188,428,-185,-186,-187,428,]),'LOGIC_AND':([54,60,61,62,63,69,70,71,72,73,78,79,80,82,83,118,119,120,155,156,159,160,161,185,186,187,193,194,204,205,206,231,232,233,235,236,238,239,240,243,244,245,246,253,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,291,292,293,294,295,307,308,344,443,444,454,455,456,457,],[-63,-64,-65,-119,144,-62,-67,-56,-58,-59,144,144,-122,-72,-125,-63,-64,-65,-73,-74,-63,-62,-67,-116,-117,-118,-120,-121,-116,-117,-118,-64,-65,-63,-57,-133,-75,-76,-132,-82,-78,-81,-85,-52,-83,-79,-80,-77,-130,-131,-134,-84,-60,-67,-68,-69,-70,-61,-62,-63,-64,-65,-123,-124,-71,-126,-127,-128,-129,-211,-210,-66,-211,-210,-224,-225,-226,-223,]),'LOGIC_OR':([54,60,61,62,63,69,70,71,72,73,78,79,80,82,83,118,119,120,155,156,159,160,161,185,186,187,193,194,204,205,206,231,232,233,235,236,238,239,240,243,244,245,246,253,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,291,292,293,294,295,307,308,344,443,444,454,455,456,457,],[-63,-64,-65,-119,145,-62,-67,-56,-58,-59,145,145,-122,-72,-125,-63,-64,-65,-73,-74,-63,-62,-67,-116,-117,-118,-120,-121,-116,-117,-118,-64,-65,-63,-57,-133,-75,-76,-132,-82,-78,-81,-85,-52,-83,-79,-80,-77,-130,-131,-134,-84,-60,-67,-68,-69,-70,-61,-62,-63,-64,-65,-123,-124,-71,-126,-127,-128,-129,-211,-210,-66,-211,-210,-224,-225,-226,-223,]),'LOGIC_XOR':([54,60,61,62,63,69,70,71,72,73,78,79,80,82,83,118,119,120,155,156,159,160,161,185,186,187,193,194,204,205,206,231,232,233,235,236,238,239,240,243,244,245,246,253,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,291,292,293,294,295,307,308,344,443,444,454,455,456,457,],[-63,-64,-65,-119,146,-62,-67,-56,-58,-59,146,146,-122,-72,-125,-63,-64,-65,-73,-74,-63,-62,-67,-116,-117,-118,-120,-121,-116,-117,-118,-64,-65,-63,-57,-133,-75,-76,-132,-82,-78,-81,-85,-52,-83,-79,-80,-77,-130,-131,-134,-84,-60,-67,-68,-69,-70,-61,-62,-63,-64,-65,-123,-124,-71,-126,-127,-128,-129,-211,-210,-66,-211,-210,-224,-225,-226,-223,]),'RIGHT_BRACKET':([62,92,111,193,194,197,198,204,205,206,223,226,329,392,393,408,409,410,411,416,439,440,504,],[-119,199,227,-120,-121,307,308,-116,-117,-118,328,329,-219,443,444,454,455,456,457,458,-199,-220,-200,]),'EXTENDS':([86,87,],[173,173,]),'IMPLEMENTS':([86,172,299,],[-252,298,-251,]),'LEFT_BRACE':([86,87,172,174,297,299,315,316,346,347,349,407,449,485,489,535,543,549,554,],[-252,-252,-254,300,345,-251,361,362,-253,-255,403,403,-256,403,514,547,551,555,559,]),'FEGTS':([89,93,95,],[189,-149,-150,]),'READLINE':([89,93,95,],[190,-149,-150,]),'FN':([89,93,95,],[195,-149,-150,]),'PUBLIC':([300,345,348,394,397,446,448,509,510,541,550,570,582,],[-249,-258,399,399,-248,-257,-261,-263,-264,-262,-250,-260,-259,]),'PRIVATE':([300,345,348,394,397,446,448,509,510,541,550,570,582,],[-249,-258,400,400,-248,-257,-261,-263,-264,-262,-250,-260,-259,]),'PROTECTED':([300,345,348,394,397,446,448,509,510,541,550,570,582,],[-249,-258,401,401,-248,-257,-261,-263,-264,-262,-250,-260,-259,]),'STDIN':([303,],[350,]),'COUNT_NORMAL':([337,],[388,]),'COUNT_RECURSIVE':([337,],[389,]),'STATIC':([345,394,399,400,401,446,447,448,509,510,541,570,582,],[-258,-268,-265,-266,-267,-257,479,-261,-263,-264,-262,-260,-259,]),'ELSEIF':([459,568,],[488,488,]),'ELSE':([459,568,],[489,489,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,361,362,403,421,514,547,551,555,559,561,],[2,2,421,421,421,421,421,421,421,563,563,563,]),'print_statement':([0,2,361,362,403,421,514,547,551,555,559,561,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'assignment':([0,2,361,362,403,421,514,547,551,555,559,561,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,89,361,362,403,421,514,547,551,555,559,561,],[5,5,182,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,361,362,403,421,514,547,551,555,559,561,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,361,362,403,421,514,547,551,555,559,561,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,361,362,403,421,514,547,551,555,559,561,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,361,362,403,421,514,547,551,555,559,561,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,361,362,403,421,514,547,551,555,559,561,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,361,362,403,421,447,514,547,551,555,559,561,],[13,13,13,13,13,13,482,13,13,13,13,13,13,]),'structure_array_principal':([0,2,89,150,361,362,403,421,435,514,547,551,555,559,561,],[14,14,14,263,14,14,14,14,472,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,89,150,361,362,403,421,435,514,547,551,555,559,561,],[15,15,15,264,15,15,15,15,473,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,84,89,121,133,138,139,140,141,142,361,362,403,421,514,547,551,555,559,561,],[16,16,56,56,56,56,16,56,56,56,56,56,56,56,16,16,16,16,16,16,16,16,16,16,]),'if_statement':([0,2,361,362,403,421,514,547,551,555,559,561,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,361,362,403,421,514,547,551,555,559,561,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,361,362,403,421,514,547,551,555,559,561,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,361,362,403,421,447,514,547,551,555,559,561,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,361,362,403,421,447,514,547,551,555,559,561,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,89,108,150,309,320,324,325,326,361,362,403,412,421,435,514,547,551,555,559,561,],[28,28,28,219,28,356,219,219,219,219,28,28,28,219,28,28,28,28,28,28,28,28,]),'associative_array':([0,2,89,150,361,362,403,421,435,514,547,551,555,559,561,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,89,150,361,362,403,421,435,514,547,551,555,559,561,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,77,84,89,103,104,113,121,133,135,138,139,140,141,142,143,150,152,358,360,361,362,403,421,434,435,513,514,547,551,555,559,561,565,],[31,31,74,74,74,158,74,31,158,158,158,74,74,245,74,74,74,74,74,158,266,268,415,417,31,31,31,31,471,266,158,31,31,31,567,567,567,579,]),'matrix_firstform':([0,2,89,150,361,362,403,421,435,514,547,551,555,559,561,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,89,150,361,362,403,421,435,514,547,551,555,559,561,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,77,84,89,103,104,113,121,133,135,138,139,140,141,142,143,150,361,362,403,421,435,513,514,547,551,555,559,561,],[34,34,76,76,76,76,76,34,76,76,76,76,76,246,76,76,76,76,76,76,34,34,34,34,34,34,76,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,89,150,361,362,403,421,435,514,547,551,555,559,561,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,89,150,361,362,403,421,435,514,547,551,555,559,561,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,84,89,108,121,133,138,139,140,141,142,320,324,325,326,361,362,403,412,421,514,547,551,555,559,561,],[37,37,37,37,37,37,37,218,37,37,37,37,37,37,37,218,218,218,218,37,37,37,218,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,84,89,121,133,138,139,140,141,142,361,362,403,421,514,547,551,555,559,561,565,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,564,564,564,577,]),'printable_values':([10,11,50,84,121,133,138,139,140,141,142,],[51,85,114,171,237,241,248,249,250,251,252,]),'values':([10,11,50,77,84,89,101,103,104,108,110,113,121,122,133,135,138,139,140,141,142,143,147,152,166,175,211,228,305,306,319,320,324,325,326,333,343,358,360,379,412,422,460,508,511,513,524,526,539,565,],[52,52,52,157,52,177,202,157,157,217,226,157,52,238,52,244,52,52,52,52,52,157,258,269,290,258,318,258,258,258,373,374,217,217,217,383,290,414,418,439,217,463,490,527,258,157,538,258,258,575,]),'conditional':([10,11,50,77,84,103,104,113,121,133,138,139,140,141,142,513,],[55,55,115,155,115,207,209,229,55,55,55,55,55,55,55,529,]),'function_invocation':([10,11,50,84,89,121,133,138,139,140,141,142,200,201,],[57,57,57,57,179,57,57,57,57,57,57,57,310,313,]),'string_special_function':([10,11,50,84,89,121,133,138,139,140,141,142,],[58,58,58,58,180,58,58,58,58,58,58,58,]),'array_special_function':([10,11,50,84,89,121,133,138,139,140,141,142,],[59,59,59,59,181,59,59,59,59,59,59,59,]),'boolean':([10,11,50,77,84,89,101,103,104,108,110,113,121,122,133,135,138,139,140,141,142,143,147,152,166,175,211,228,305,306,319,320,324,325,326,333,343,358,360,379,412,422,460,508,511,513,524,526,539,565,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'boolean_expression':([10,11,50,77,84,103,104,113,121,133,138,139,140,141,142,143,513,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,253,63,]),'comparation':([10,11,50,77,84,103,104,113,121,133,138,139,140,141,142,143,513,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'logic_not_sentence':([10,11,50,77,84,103,104,113,121,133,138,139,140,141,142,143,513,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'logic_expression':([10,11,50,77,84,103,104,113,121,133,138,139,140,141,142,143,513,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'expression':([10,11,50,77,84,89,103,104,113,121,122,133,138,139,140,141,142,143,153,164,165,188,513,],[75,75,116,75,116,178,75,75,116,75,239,75,75,75,75,75,75,75,271,288,289,302,75,]),'true_boolean_types':([10,11,50,77,84,103,104,113,121,133,138,139,140,141,142,143,163,513,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,282,78,]),'false_boolean_types':([10,11,50,77,84,103,104,113,121,133,138,139,140,141,142,143,162,513,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,276,79,]),'term':([10,11,50,77,84,89,103,104,113,121,122,133,138,139,140,141,142,143,153,164,165,167,168,169,170,188,513,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,292,293,294,295,80,80,]),'factor':([10,11,50,77,84,89,103,104,113,121,122,133,138,139,140,141,142,143,153,164,165,167,168,169,170,188,513,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'assignment_operator':([23,566,],[89,89,]),'structure_matrix_second':([45,380,],[111,440,]),'comparator_operator':([52,75,116,157,467,],[122,153,153,122,494,]),'logic_operator':([63,78,79,],[143,162,163,]),'class_extends_opt':([86,87,],[172,174,]),'input':([89,],[183,]),'special_function':([89,],[184,]),'arrow_function':([89,],[191,]),'anonymous_functions':([89,],[192,]),'values_array_indexed':([108,320,324,325,326,412,],[214,214,376,377,378,214,]),'structure_array':([108,109,477,],[215,223,504,]),'structure_matrix_first':([108,476,],[216,503,]),'key':([108,109,477,],[220,220,220,]),'params':([147,175,228,305,306,511,526,539,],[254,301,331,352,353,528,540,548,]),'real_params':([147,175,228,305,306,511,526,539,],[255,255,255,255,255,255,255,255,]),'empty':([147,175,228,305,306,511,526,539,],[256,256,256,256,256,256,256,256,]),'string_param':([148,149,436,],[259,262,475,]),'class_implements_opt':([172,],[297,]),'accessType':([200,201,],[311,314,]),'count_param':([263,264,265,472,473,474,],[336,338,339,498,499,500,]),'interface_list':([298,],[346,]),'interface_body':([300,],[348,]),'expression_for':([317,363,427,494,],[365,425,469,516,]),'number_values':([317,363,427,494,552,],[366,366,366,366,557,]),'length_operations':([317,363,427,494,],[368,368,368,368,]),'int_param':([335,441,],[384,478,]),'class_body':([345,],[394,]),'interface_method':([348,],[397,]),'visibility_opt':([348,394,],[398,447,]),'codeblock':([349,407,485,],[402,453,512,]),'body_statement':([361,362,403,421,514,547,551,],[420,424,451,462,530,553,556,]),'operator_aritmetic':([365,425,469,516,546,],[427,427,427,427,552,]),'class_member':([394,],[446,]),'class_attribute':([394,],[448,]),'condition_for':([426,],[468,]),'elseif_statement':([459,568,],[486,580,]),'else_statement':([459,568,],[487,581,]),'increment_statement':([495,],[518,]),'method_body':([555,559,561,],[560,569,573,]),'classStatement':([555,559,561,],[561,561,561,]),'return_form':([555,559,561,],[562,562,571,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',83),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',88),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',89),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',93),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',98),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',103),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',104),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',108),
  ('expression_for -> length_operations','expression_for',1,'p_expression_for','syntaxAnalysis.py',109),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',114),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',115),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',120),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',121),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',125),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',132),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',133),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',139),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',140),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',141),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',147),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',148),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',149),
  ('boolean_expression -> logic_expression','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',150),
  ('logic_expression -> true_boolean_types logic_operator false_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',156),
  ('logic_expression -> false_boolean_types logic_operator true_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',157),
  ('true_boolean_types -> TRUE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',162),
  ('true_boolean_types -> STRING','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',163),
  ('true_boolean_types -> INTEGER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',164),
  ('true_boolean_types -> FLOAT','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',165),
  ('true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN','true_boolean_types',4,'p_true_boolean_types','syntaxAnalysis.py',166),
  ('false_boolean_types -> FALSE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',171),
  ('false_boolean_types -> STRING','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',172),
  ('false_boolean_types -> INTEGER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',173),
  ('false_boolean_types -> FLOAT','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',174),
  ('false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN','false_boolean_types',3,'p_false_boolean_types','syntaxAnalysis.py',175),
  ('false_boolean_types -> NULL','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',176),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',184),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',185),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',192),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',193),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',194),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',195),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',196),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',197),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',198),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',199),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',200),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',201),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',202),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',208),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',209),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',210),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',211),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',212),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',213),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',214),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',215),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',216),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',217),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',223),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',224),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',225),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',226),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',232),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',233),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',234),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',235),
  ('printable_values -> STRING STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',236),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',237),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',238),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',239),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',240),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',241),
  ('printable_values -> function_invocation','printable_values',1,'p_printable_values','syntaxAnalysis.py',242),
  ('printable_values -> function_invocation COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',243),
  ('printable_values -> string_special_function','printable_values',1,'p_printable_values','syntaxAnalysis.py',244),
  ('printable_values -> string_special_function COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',245),
  ('printable_values -> array_special_function','printable_values',1,'p_printable_values','syntaxAnalysis.py',246),
  ('printable_values -> array_special_function COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',247),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',253),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',254),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',255),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',256),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',262),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',263),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',269),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',270),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',271),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',277),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',278),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',279),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',280),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',281),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',288),
  ('factor -> FLOAT','factor',1,'p_factor','syntaxAnalysis.py',289),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',290),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',291),
  ('factor -> STRING','factor',1,'p_factor','syntaxAnalysis.py',292),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',319),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',320),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',326),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',327),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',328),
  ('variable_assignment -> VARIABLE assignment_operator string_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',329),
  ('variable_assignment -> VARIABLE assignment_operator array_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',330),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',331),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',332),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',333),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',334),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',335),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',336),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',337),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',344),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',345),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',351),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',352),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',358),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',364),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',375),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',381),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',382),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',388),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',389),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',390),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',391),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',401),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',409),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',415),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',416),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',422),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',428),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',434),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',440),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',441),
  ('string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','string_special_function',4,'p_string_special_function','syntaxAnalysis.py',449),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN','string_special_function',6,'p_string_special_function','syntaxAnalysis.py',450),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN','string_special_function',8,'p_string_special_function','syntaxAnalysis.py',451),
  ('string_param -> STRING','string_param',1,'p_string_param','syntaxAnalysis.py',456),
  ('string_param -> VARIABLE','string_param',1,'p_string_param','syntaxAnalysis.py',457),
  ('int_param -> INTEGER','int_param',1,'p_int_param','syntaxAnalysis.py',461),
  ('int_param -> VARIABLE','int_param',1,'p_int_param','syntaxAnalysis.py',462),
  ('array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',471),
  ('array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',472),
  ('array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',473),
  ('array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN','array_special_function',4,'p_array_special_function','syntaxAnalysis.py',474),
  ('count_param -> COMMA COUNT_NORMAL','count_param',2,'p_count_param','syntaxAnalysis.py',480),
  ('count_param -> COMMA COUNT_RECURSIVE','count_param',2,'p_count_param','syntaxAnalysis.py',481),
  ('count_param -> <empty>','count_param',0,'p_count_param','syntaxAnalysis.py',482),
  ('length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',486),
  ('length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',487),
  ('length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',488),
  ('length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','length_operations',4,'p_length_operations','syntaxAnalysis.py',489),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',501),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',502),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',503),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',510),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',511),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',512),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',513),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',518),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',522),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',523),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',529),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',530),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',536),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',537),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',542),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',543),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',544),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',545),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',546),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',547),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',552),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',557),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',558),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',564),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',565),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',566),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',567),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',568),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',573),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',577),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',582),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',583),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',589),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',590),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',596),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',597),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',598),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',599),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',604),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',605),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',611),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',620),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',621),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',626),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',627),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',631),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',632),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',633),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',634),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',635),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',636),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',637),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',638),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',639),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',640),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',646),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',647),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',652),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',656),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',660),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',661),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',665),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',669),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',670),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',674),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',675),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',679),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',680),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',684),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',685),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',689),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',690),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',691),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',696),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',697),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',698),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',703),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',704),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',705),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',706),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',710),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',711),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',712),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',713),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',714),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',720),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',721),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',722),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',727),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',728),
]
