
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY BREAK CLASS COLON COMMA COMMENT CONST DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION STRLEN SUBSTR TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n                        | logic_expression\n    \n    logic_expression : true_boolean_types logic_operator false_boolean_types\n                     | false_boolean_types logic_operator true_boolean_types\n    \n    true_boolean_types : TRUE\n                       | STRING\n                       | INTEGER\n                       | FLOAT\n                       | ARRAY LEFT_PAREN values RIGHT_PAREN\n    \n    false_boolean_types : FALSE\n                        | STRING\n                        | INTEGER\n                        | FLOAT\n                        | ARRAY LEFT_PAREN RIGHT_PAREN\n                        | NULL\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE COMMA printable_values\n                     | STRING STRING_CONCATENATION STRING\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal COMMA printable_values\n                     | function_invocation\n                     | function_invocation COMMA printable_values\n                     | string_special_function\n                     | string_special_function COMMA printable_values\n\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator string_special_function\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    string_special_function : STRLEN LEFT_PAREN string_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN\n    \n    string_param : STRING\n                 | VARIABLE\n    \n    int_param : INTEGER\n              | VARIABLE\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN  access_method_object SEMICOLON\n                | RETURN SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[10,10,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,10,10,-200,-216,-230,-157,10,-220,-219,-221,-226,-224,-225,10,-194,-193,-229,-227,-14,-13,-162,-15,-16,10,-20,10,10,10,-28,10,10,-260,-214,-178,-17,-261,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[11,11,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,11,11,-200,-216,-230,-157,11,-220,-219,-221,-226,-224,-225,11,-194,-193,-229,-227,-14,-13,-162,-15,-16,11,-20,11,11,11,-28,11,11,-260,-214,-178,-17,-261,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[17,17,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,17,17,-200,-216,-230,-157,17,-220,-219,-221,-226,-224,-225,17,-194,-193,-229,-227,-14,-13,-162,-15,-16,17,-20,17,17,17,-28,17,17,-260,-214,-178,-17,-261,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[18,18,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,18,18,-200,-216,-230,-157,18,-220,-219,-221,-226,-224,-225,18,-194,-193,-229,-227,-14,-13,-162,-15,-16,18,-20,18,18,18,-28,18,18,-260,-214,-178,-17,-261,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,86,90,92,95,97,99,109,177,178,184,185,195,279,286,287,289,290,291,292,293,300,301,307,309,311,319,322,330,335,336,346,352,360,362,363,364,365,366,367,368,369,379,380,381,383,384,385,387,407,408,409,410,411,412,422,423,429,439,444,446,447,465,466,470,494,497,500,503,504,508,511,512,514,516,517,520,521,523,527,533,534,535,],[22,22,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,187,-143,-144,-192,-197,-198,-215,-114,-115,-117,-118,-113,-232,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-241,-251,-212,22,22,-200,-216,-251,-230,-231,414,-248,-249,-250,-157,22,-220,-219,-221,-226,-224,-225,22,-194,-193,-229,-240,440,-244,-227,-14,-13,462,-162,-15,-16,-246,-247,22,-245,-20,22,-233,22,22,-28,22,22,-260,-214,-178,-17,-243,-261,-18,-19,-242,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,61,74,81,86,89,90,92,95,97,98,99,100,101,102,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,156,157,159,160,161,162,167,177,178,179,184,185,195,217,284,285,286,287,289,290,291,292,293,296,300,301,307,309,311,312,314,315,319,328,329,330,332,334,335,336,337,346,352,360,362,365,366,367,368,369,379,380,381,383,384,385,387,392,393,394,395,396,397,398,399,400,405,407,408,409,410,411,412,422,423,429,444,446,447,454,455,465,466,467,469,470,475,476,479,487,492,494,497,500,504,508,511,512,514,516,517,518,520,521,523,527,533,534,535,],[23,23,-5,-6,-7,-8,-9,53,53,-172,-173,-174,-10,-11,-12,93,94,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,114,-116,148,114,168,188,-143,-144,-192,-197,194,-198,197,197,199,-215,219,53,227,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,53,230,188,53,53,53,53,197,-52,-53,-54,243,247,247,251,227,254,227,227,227,227,227,227,243,-114,-115,227,-117,-118,-113,243,243,243,-194,-193,-217,-218,-228,-222,-223,338,-179,-180,-181,-201,-149,353,357,358,-241,374,376,-212,379,385,23,23,338,-200,-216,-251,-230,-248,-249,-250,-157,23,-220,-219,-221,-226,-224,-225,23,431,338,-44,-45,-46,-47,-48,-49,434,357,-194,-193,-229,-240,441,-244,-227,-14,-13,-162,-15,-16,338,473,-246,-247,243,197,23,489,490,243,499,243,-245,-20,23,23,519,-28,519,519,-260,-214,531,-178,-17,-243,-261,-18,-19,-242,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,455,470,473,497,500,504,508,511,512,514,516,517,519,520,521,527,533,534,],[24,24,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,87,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,24,24,-200,-216,-230,-157,24,-220,-219,-221,-226,-224,-225,24,-194,-193,-229,-227,-14,-13,-162,-15,-16,475,24,484,-20,24,24,24,-28,24,24,-260,-214,87,-178,-17,-261,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,455,470,473,497,500,504,508,511,512,514,516,517,519,520,521,527,533,534,],[25,25,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,88,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,25,25,-200,-216,-230,-157,25,-220,-219,-221,-226,-224,-225,25,-194,-193,-229,-227,-14,-13,-162,-15,-16,476,25,485,-20,25,25,25,-28,25,25,-260,-214,88,-178,-17,-261,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[39,39,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,39,39,-200,-216,-230,-157,39,-220,-219,-221,-226,-224,-225,39,-194,-193,-229,-227,-14,-13,-162,-15,-16,39,-20,39,39,39,-28,39,39,-260,-214,-178,-17,-261,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[40,40,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,40,40,-200,-216,-230,-157,40,-220,-219,-221,-226,-224,-225,40,-194,-193,-229,-227,-14,-13,-162,-15,-16,40,-20,40,40,40,-28,40,40,-260,-214,-178,-17,-261,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[41,41,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,41,41,-200,-216,-230,-157,41,-220,-219,-221,-226,-224,-225,41,-194,-193,-229,-227,-14,-13,-162,-15,-16,41,-20,41,41,41,-28,41,41,-260,-214,-178,-17,-261,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,319,330,335,336,346,352,360,362,365,366,367,368,369,379,380,381,383,384,385,387,407,408,409,410,411,412,422,423,429,444,446,447,465,466,470,494,497,500,504,508,511,512,514,516,517,520,521,523,527,533,534,535,],[42,42,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-241,-212,42,42,-200,-216,-251,-230,-248,-249,-250,-157,42,-220,-219,-221,-226,-224,-225,42,-194,-193,-229,-240,42,-244,-227,-14,-13,-162,-15,-16,-246,-247,42,-245,-20,42,42,42,-28,42,42,-260,-214,-178,-17,-243,-261,-18,-19,-242,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,319,330,335,336,346,352,360,362,365,366,367,368,369,379,380,381,383,384,385,387,407,408,409,410,411,412,422,423,429,444,446,447,465,466,470,494,497,500,504,508,511,512,514,516,517,520,521,523,527,533,534,535,],[43,43,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-241,-212,43,43,-200,-216,-251,-230,-248,-249,-250,-157,43,-220,-219,-221,-226,-224,-225,43,-194,-193,-229,-240,43,-244,-227,-14,-13,-162,-15,-16,-246,-247,43,-245,-20,43,43,43,-28,43,43,-260,-214,-178,-17,-243,-261,-18,-19,-242,]),'ARRAY':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,61,74,81,86,90,92,95,97,99,100,101,105,109,110,116,128,133,134,135,136,137,138,139,140,154,155,177,178,184,185,195,286,287,288,289,290,291,292,293,299,300,301,303,304,305,307,309,311,330,335,336,346,352,362,368,369,378,379,380,381,383,384,385,387,407,408,409,422,423,429,436,444,446,447,469,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[44,44,-5,-6,-7,-8,-9,78,78,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,78,-116,78,78,44,-143,-144,-192,-197,-198,78,78,202,-215,78,78,78,78,78,78,78,78,-52,-53,-54,260,266,-114,-115,-117,-118,-113,-194,-193,331,-217,-218,-228,-222,-223,331,-179,-180,331,331,331,-181,-201,-149,-212,44,44,-200,-216,-230,-157,44,331,-220,-219,-221,-226,-224,-225,44,-194,-193,-229,-227,-14,-13,458,-162,-15,-16,78,44,-20,44,44,44,-28,44,44,-260,-214,-178,-17,-261,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,61,86,90,92,95,97,99,109,114,148,168,177,178,184,185,195,197,219,230,251,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,351,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,434,444,446,447,470,497,500,504,508,511,512,514,516,517,519,520,521,527,531,533,534,],[45,45,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,89,-175,-176,-177,-178,-195,-196,-199,-213,-214,106,107,-3,-4,131,-116,45,-143,-144,-192,-197,-198,-215,131,131,89,-114,-115,-117,-118,-113,131,131,131,315,328,329,-217,-218,333,-222,-223,-179,-180,-181,-201,-149,-212,45,45,-200,107,-216,-230,-157,45,315,-219,-221,-226,-224,315,45,-194,-193,-229,-227,-14,-13,315,-162,-15,-16,45,-20,45,45,45,-28,45,45,-260,-214,89,-178,-17,-261,315,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,61,81,86,90,92,95,97,99,105,109,116,128,133,134,135,136,177,178,184,185,195,286,287,289,290,291,292,293,299,300,301,303,304,305,307,309,311,330,335,336,346,352,362,368,369,378,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[46,46,-5,-6,-7,-8,-9,46,46,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,46,-116,46,46,-143,-144,-192,-197,-198,46,-215,46,46,46,46,46,46,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,46,-179,-180,46,46,46,-181,-201,-149,-212,46,46,-200,-216,-230,-157,46,46,-220,-219,-221,-226,-224,-225,46,-194,-193,-229,-227,-14,-13,-162,-15,-16,46,-20,46,46,46,-28,46,46,-260,-214,-178,-17,-261,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,346,352,362,368,379,380,381,383,384,385,407,408,409,422,423,429,444,446,447,497,511,521,533,534,],[0,-2,-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-1,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,-200,-216,-230,-157,-220,-219,-221,-226,-224,-225,-194,-193,-229,-227,-14,-13,-162,-15,-16,-20,-28,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,66,67,68,69,70,77,79,80,82,87,88,93,94,95,97,99,109,147,148,168,169,170,171,172,173,174,175,176,177,178,182,183,184,185,193,194,195,216,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,270,271,272,273,274,275,286,287,289,290,291,292,293,297,300,301,302,307,309,311,313,318,330,338,339,340,342,343,346,352,370,371,379,380,381,383,384,385,389,401,406,407,408,417,418,419,420,421,422,424,425,427,430,432,433,441,442,444,450,456,457,461,468,472,480,495,517,518,520,525,528,530,],[48,49,-130,-131,-172,-173,-174,-145,-146,-175,-176,-177,95,-195,-196,97,99,-199,-213,-214,-97,-99,-101,-114,-105,-107,-109,-111,-113,-115,-116,-50,-117,-118,-55,-57,-58,-119,-71,-122,-98,-139,-140,-141,-142,-192,-197,-198,-215,-72,-73,-128,-132,-133,-134,-135,-136,-137,-138,-113,-114,-115,-158,-159,-117,-118,-210,-211,-113,309,-95,-56,-129,-100,-74,-75,-128,-102,-104,-81,-77,-80,-84,-103,-106,-108,-110,-112,-51,-82,-78,-79,-76,-127,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-120,-121,-70,-123,-124,-125,-126,-96,-194,-193,-217,-218,-228,-222,-223,-147,-179,-180,346,-181,-201,-149,-165,-65,-212,-36,392,-37,-42,-43,-200,-216,-163,-164,-220,-219,-221,-226,-224,-225,428,-148,-166,-194,-193,-161,-207,-208,-209,-206,-227,451,452,453,-39,455,-38,465,466,-162,471,-40,-41,-167,-160,-35,494,503,527,529,95,536,537,538,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,508,511,512,514,516,517,520,521,527,533,534,],[-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,388,388,-200,-216,-230,-157,388,-220,-219,-221,-226,-224,-225,424,-194,-193,-229,-227,-14,-13,-162,-15,-16,388,-20,388,388,518,-28,518,518,-260,-214,-178,-17,-261,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,286,287,289,290,291,292,293,300,301,307,309,311,330,335,336,346,352,362,368,369,379,380,381,383,384,385,387,407,408,409,422,423,429,444,446,447,470,497,500,504,511,514,516,517,520,521,527,533,534,],[-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-212,389,389,-200,-216,-230,-157,389,-220,-219,-221,-226,-224,-225,425,-194,-193,-229,-227,-14,-13,-162,-15,-16,389,-20,389,389,-28,525,-260,-214,-178,-17,-261,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,61,95,97,99,109,177,178,184,185,195,279,286,287,289,290,291,292,293,300,301,307,309,311,319,322,330,346,352,360,362,363,368,379,380,381,383,384,385,386,387,390,407,408,409,410,412,415,422,423,426,428,429,444,446,447,451,452,453,465,466,471,483,494,497,503,506,509,511,513,514,515,516,517,520,521,522,523,524,526,527,529,533,534,535,536,537,538,],[-5,-6,-7,-8,-9,-172,-173,-174,-10,-11,-12,-175,-176,-177,-178,-195,-196,-199,-213,-214,-3,-4,-116,-192,-197,-198,-215,-114,-115,-117,-118,-113,-232,-194,-193,-217,-218,-228,-222,-223,-179,-180,-181,-201,-149,-241,362,-212,-200,-216,409,-230,-231,-157,-220,-219,-221,-226,-224,-225,423,-21,429,-194,-193,-229,-240,-244,444,-227,-14,-25,-27,-13,-162,-15,-16,-23,-24,-26,-246,-247,-22,497,-245,-20,-233,511,521,-28,523,-252,-254,-260,-214,-178,-17,535,-243,-253,-256,-261,-259,-18,-19,-242,-255,-257,-258,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,63,64,65,74,78,81,85,86,90,92,100,101,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,133,134,135,136,137,138,139,140,145,156,157,159,160,161,162,179,180,181,186,187,202,260,266,291,296,331,337,341,393,394,395,396,397,398,399,443,448,454,458,463,469,478,],[50,81,100,101,102,104,105,110,141,142,143,110,158,110,167,179,-143,-144,110,110,217,110,110,179,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,110,110,110,110,110,110,-52,-53,-54,179,179,179,179,179,179,179,179,282,283,284,285,299,316,317,141,337,378,337,400,337,-44,-45,-46,-47,-48,-49,467,469,337,477,479,110,492,]),'STRING':([10,11,50,74,81,86,90,92,98,100,101,104,105,106,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,154,155,158,167,200,217,283,284,285,298,299,303,304,305,312,317,332,334,350,378,388,424,437,464,467,469,477,479,492,518,],[54,54,54,151,54,177,-143,-144,177,151,151,201,211,214,177,151,54,177,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,54,229,177,234,54,54,54,54,151,-52,-53,-54,177,246,246,177,257,263,177,177,177,177,325,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,214,177,177,151,177,177,177,177,]),'INTEGER':([10,11,50,74,81,86,89,90,92,98,100,101,105,106,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,133,134,135,136,137,138,139,140,141,144,145,154,155,156,157,158,159,160,161,162,167,179,200,217,284,285,296,298,299,303,304,305,312,314,315,317,328,329,332,333,334,337,350,378,388,393,394,395,396,397,398,399,405,424,437,454,464,467,469,477,479,486,492,505,518,],[59,59,115,59,115,176,189,-143,-144,195,59,59,210,213,195,220,59,176,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,59,195,189,59,59,59,59,59,-52,-53,-54,195,195,253,258,264,253,253,195,253,253,253,253,195,253,195,195,195,195,342,195,195,195,195,195,195,356,359,195,375,377,195,382,195,342,195,195,195,342,-44,-45,-46,-47,-48,-49,356,195,213,342,195,195,59,195,195,498,195,342,195,]),'FLOAT':([10,11,50,74,81,86,90,92,98,100,101,105,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,136,137,138,139,140,141,144,154,155,158,167,200,217,284,285,296,298,299,303,304,305,312,317,332,334,337,350,378,388,393,394,395,396,397,398,399,424,454,464,467,469,477,479,492,505,518,],[60,60,60,60,60,178,-143,-144,178,60,60,178,178,60,60,178,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,60,178,60,60,60,60,60,-52,-53,-54,178,178,259,265,178,178,178,178,178,178,343,178,178,178,178,178,178,178,178,178,343,178,178,178,343,-44,-45,-46,-47,-48,-49,178,343,178,178,60,178,178,178,343,178,]),'IDENTIFIER':([10,11,17,18,22,42,46,50,81,86,90,92,116,118,119,120,121,122,123,124,125,126,127,128,133,134,135,136,165,191,192,277,296,337,361,393,394,395,396,397,398,399,414,440,454,462,],[63,63,83,84,85,103,109,63,63,63,-143,-144,63,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,63,63,63,63,63,278,291,291,321,341,341,413,341,-44,-45,-46,-47,-48,-49,443,463,341,478,]),'STRLEN':([10,11,50,81,86,90,92,116,128,133,134,135,136,],[64,64,64,64,64,-143,-144,64,64,64,64,64,64,]),'SUBSTR':([10,11,50,81,86,90,92,116,128,133,134,135,136,],[65,65,65,65,65,-143,-144,65,65,65,65,65,65,]),'TRUE':([10,11,50,74,81,86,90,92,98,100,101,105,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,136,137,138,139,140,141,144,155,158,167,200,217,284,285,298,299,303,304,305,312,317,332,334,350,378,388,424,464,467,469,477,479,492,518,],[66,66,66,152,66,184,-143,-144,184,152,152,184,184,152,66,184,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,66,184,66,66,66,66,152,-52,-53,-54,184,184,262,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,152,184,184,184,184,]),'FALSE':([10,11,50,74,81,86,90,92,98,100,101,105,107,110,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,136,137,138,139,140,141,144,154,158,167,200,217,284,285,298,299,303,304,305,312,317,332,334,350,378,388,424,464,467,469,477,479,492,518,],[67,67,67,153,67,185,-143,-144,185,153,153,185,185,153,67,185,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,67,185,67,67,67,67,153,-52,-53,-54,185,185,256,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,153,185,185,185,185,]),'LOGIC_NOT':([10,11,50,74,81,100,101,110,116,128,133,134,135,136,137,138,139,140,469,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-52,-53,-54,74,]),'NULL':([10,11,50,74,81,100,101,110,116,128,133,134,135,136,137,138,139,140,154,469,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-52,-53,-54,79,79,]),'MINUS':([23,31,53,59,71,77,80,114,115,148,168,176,197,219,220,223,227,253,271,272,273,274,286,287,338,339,340,342,343,391,407,408,430,433,456,457,472,499,519,520,531,532,],[91,96,91,-127,96,157,-122,91,-127,-128,91,-127,-128,-128,-127,-129,-128,-127,-123,-124,-125,-126,-194,-193,-36,395,-37,-42,-43,395,-194,-193,-39,395,-40,-41,395,395,91,96,91,96,]),'EQUALS':([23,34,103,190,199,209,210,211,213,214,290,291,293,372,418,419,420,421,422,441,473,519,],[90,98,200,288,296,306,-184,-185,-184,-185,332,-228,334,416,-207,-208,-209,-206,-227,464,487,90,]),'PLUS_EQUALS':([23,473,519,],[92,486,92,]),'COMMA':([37,38,52,53,54,55,56,57,58,59,60,61,62,66,67,68,69,70,77,79,80,109,112,114,115,147,148,176,177,178,184,185,195,201,206,207,208,210,211,222,223,225,226,227,230,231,232,233,239,241,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,270,271,272,273,274,286,287,289,290,291,292,293,300,308,311,313,318,320,321,345,352,353,354,355,356,357,379,380,381,383,384,385,402,403,406,407,408,413,418,419,420,421,422,461,],[-213,-214,116,128,-114,133,134,135,136,-113,-115,-116,-50,-117,-118,-55,-57,-58,-119,-71,-122,-215,133,128,-113,-72,-73,-113,-114,-115,-117,-118,-113,298,303,304,305,-113,-114,-56,-129,-74,-75,-128,-81,-77,-80,-84,-51,312,-152,-153,-168,-169,314,-82,-78,-79,-76,-127,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-120,-121,-70,-123,-124,-125,-126,-194,-193,-217,-218,-228,-222,-223,-179,351,-149,-165,-65,361,-238,303,-216,-154,-155,405,-170,-171,-220,-219,-221,-226,-224,-225,436,437,-166,-194,-193,-239,-207,-208,-209,-206,-227,-167,]),'RIGHT_PAREN':([37,38,52,53,54,55,56,57,58,59,60,61,62,66,67,68,69,70,77,79,80,109,111,112,113,114,115,141,147,148,158,163,167,176,177,178,184,185,195,196,198,203,204,205,206,207,208,210,211,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,269,270,271,272,273,274,280,281,284,285,286,287,289,290,291,292,293,300,310,311,313,316,318,324,325,326,327,338,340,342,343,344,345,347,348,349,352,353,354,355,356,357,379,380,381,383,384,385,391,402,403,406,407,408,418,419,420,421,422,430,433,434,435,438,456,457,459,460,461,467,474,479,481,482,484,485,489,490,491,492,493,498,501,510,],[-213,-214,-99,-101,-114,-105,-107,-109,-111,-113,-115,-116,-50,-117,-118,-55,-57,-58,-119,-71,-122,-215,221,222,223,-101,-113,-156,-72,-73,270,275,-156,-113,-114,-115,-117,-118,-113,294,295,300,301,302,-186,-188,-190,-113,-114,-156,222,-128,-127,-56,-129,-100,-74,-75,-128,-102,-104,-81,-77,-80,-84,-103,-106,-108,-110,-112,-51,311,-150,-151,-152,-153,313,-168,-169,-82,-78,-79,-76,-127,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-120,-121,318,-70,-123,-124,-125,-126,323,223,-156,-156,-194,-193,-217,-218,-228,-222,-223,-179,352,-149,-165,270,-65,370,371,372,373,-36,-37,-42,-43,401,402,-187,-189,-191,-216,-154,-155,406,-170,-171,-220,-219,-221,-226,-224,-225,430,-204,-182,-166,-194,-193,-207,-208,-209,-206,-227,-39,-38,456,457,461,-40,-41,-205,-183,-167,-156,488,-156,495,496,-29,-30,-31,-32,402,-156,502,-33,507,-34,]),'EQUALS_EQUALS':([52,53,54,59,60,61,66,67,71,72,73,77,80,113,114,115,148,149,150,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,286,287,418,419,420,421,431,],[118,130,-114,-113,-115,-116,-117,-118,144,118,146,-119,-122,118,130,-113,130,118,144,-114,-117,-118,130,130,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,-194,-193,-207,-208,-209,-206,118,]),'IDENTICAL':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,148,149,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,431,],[119,-128,-114,-113,-115,-116,-117,-118,119,-119,-122,119,-128,-113,-128,119,-114,-117,-118,-128,-128,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,119,]),'NOT_EQUALS':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,148,149,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,431,],[120,-128,-114,-113,-115,-116,-117,-118,120,-119,-122,120,-128,-113,-128,120,-114,-117,-118,-128,-128,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,120,]),'NOT_IDENTICAL':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,148,149,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,431,],[121,-128,-114,-113,-115,-116,-117,-118,121,-119,-122,121,-128,-113,-128,121,-114,-117,-118,-128,-128,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,121,]),'SMALL_THAN':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,148,149,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,431,],[122,-128,-114,-113,-115,-116,-117,-118,122,-119,-122,122,-128,-113,-128,122,-114,-117,-118,-128,-128,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,122,]),'GREATER_THAN':([52,53,54,59,60,61,66,67,72,77,80,91,96,113,114,115,148,149,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,306,416,431,],[123,-128,-114,-113,-115,-116,-117,-118,123,-119,-122,191,192,123,-128,-113,-128,123,-114,-117,-118,-128,-128,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,350,445,123,]),'SMALL_EQUALS_TO':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,148,149,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,431,],[124,-128,-114,-113,-115,-116,-117,-118,124,-119,-122,124,-128,-113,-128,124,-114,-117,-118,-128,-128,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,124,]),'GREATER_EQUALS_TO':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,148,149,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,431,],[125,-128,-114,-113,-115,-116,-117,-118,125,-119,-122,125,-128,-113,-128,125,-114,-117,-118,-128,-128,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,125,]),'SPACECRAFT':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,148,149,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,431,],[126,-128,-114,-113,-115,-116,-117,-118,126,-119,-122,126,-128,-113,-128,126,-114,-117,-118,-128,-128,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,126,]),'NULL_FUSION':([52,53,54,59,60,61,66,67,72,77,80,113,114,115,148,149,151,152,153,197,219,220,223,227,253,267,268,271,272,273,274,431,],[127,-128,-114,-113,-115,-116,-117,-118,127,-119,-122,127,-128,-113,-128,127,-114,-117,-118,-128,-128,-113,-129,-128,-127,-120,-121,-123,-124,-125,-126,127,]),'STRING_CONCATENATION':([53,54,114,],[129,132,129,]),'MULTIPLY':([53,59,80,114,115,148,168,176,197,219,220,223,227,253,338,339,340,342,343,391,430,433,456,457,472,499,],[-128,-127,159,-128,-127,-128,-128,-127,-128,-128,-127,-129,-128,-127,-36,396,-37,-42,-43,396,-39,396,-40,-41,396,396,]),'DIVIDE':([53,59,80,114,115,148,168,176,197,219,220,223,227,253,338,339,340,342,343,391,430,433,456,457,472,499,],[-128,-127,160,-128,-127,-128,-128,-127,-128,-128,-127,-129,-128,-127,-36,397,-37,-42,-43,397,-39,397,-40,-41,397,397,]),'MODULE':([53,59,80,114,115,148,168,176,197,219,220,223,227,253,338,339,340,342,343,391,430,433,456,457,472,499,],[-128,-127,161,-128,-127,-128,-128,-127,-128,-128,-127,-129,-128,-127,-36,398,-37,-42,-43,398,-39,398,-40,-41,398,398,]),'POW':([53,59,80,114,115,148,168,176,197,219,220,223,227,253,338,339,340,342,343,391,430,433,456,457,472,499,],[-128,-127,162,-128,-127,-128,-128,-127,-128,-128,-127,-129,-128,-127,-36,399,-37,-42,-43,399,-39,399,-40,-41,399,399,]),'PLUS':([53,59,77,80,114,115,148,168,176,197,219,220,223,227,253,271,272,273,274,338,339,340,342,343,391,430,433,456,457,472,499,],[-128,-127,156,-122,-128,-127,-128,-128,-127,-128,-128,-127,-129,-128,-127,-123,-124,-125,-126,-36,394,-37,-42,-43,394,-39,394,-40,-41,394,394,]),'LOGIC_AND':([54,59,60,61,62,66,67,68,69,70,75,76,77,79,80,115,147,148,151,152,153,176,177,178,184,185,195,220,222,223,225,226,227,230,231,232,233,239,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,270,271,272,273,274,286,287,318,407,408,418,419,420,421,],[-62,-63,-64,-116,138,-61,-66,-55,-57,-58,138,138,-119,-71,-122,-63,-72,-73,-62,-61,-66,-113,-114,-115,-117,-118,-113,-63,-56,-129,-74,-75,-128,-81,-77,-80,-84,-51,-82,-78,-79,-76,-127,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-120,-121,-70,-123,-124,-125,-126,-194,-193,-65,-194,-193,-207,-208,-209,-206,]),'LOGIC_OR':([54,59,60,61,62,66,67,68,69,70,75,76,77,79,80,115,147,148,151,152,153,176,177,178,184,185,195,220,222,223,225,226,227,230,231,232,233,239,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,270,271,272,273,274,286,287,318,407,408,418,419,420,421,],[-62,-63,-64,-116,139,-61,-66,-55,-57,-58,139,139,-119,-71,-122,-63,-72,-73,-62,-61,-66,-113,-114,-115,-117,-118,-113,-63,-56,-129,-74,-75,-128,-81,-77,-80,-84,-51,-82,-78,-79,-76,-127,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-120,-121,-70,-123,-124,-125,-126,-194,-193,-65,-194,-193,-207,-208,-209,-206,]),'LOGIC_XOR':([54,59,60,61,62,66,67,68,69,70,75,76,77,79,80,115,147,148,151,152,153,176,177,178,184,185,195,220,222,223,225,226,227,230,231,232,233,239,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,270,271,272,273,274,286,287,318,407,408,418,419,420,421,],[-62,-63,-64,-116,140,-61,-66,-55,-57,-58,140,140,-119,-71,-122,-63,-72,-73,-62,-61,-66,-113,-114,-115,-117,-118,-113,-63,-56,-129,-74,-75,-128,-81,-77,-80,-84,-51,-82,-78,-79,-76,-127,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-120,-121,-70,-123,-124,-125,-126,-194,-193,-65,-194,-193,-207,-208,-209,-206,]),'RIGHT_BRACKET':([61,89,108,177,178,184,185,188,189,195,212,215,308,358,359,374,375,376,377,382,403,404,460,],[-116,190,216,-114,-115,-117,-118,286,287,-113,307,308,-202,407,408,418,419,420,421,422,-182,-203,-183,]),'EXTENDS':([83,84,],[165,165,]),'IMPLEMENTS':([83,164,278,],[-235,277,-234,]),'LEFT_BRACE':([83,84,164,166,276,278,294,295,320,321,323,373,413,445,449,488,496,502,507,],[-235,-235,-237,279,319,-234,335,336,-236,-238,369,369,-239,369,470,500,504,508,512,]),'FEGTS':([86,90,92,],[180,-143,-144,]),'READLINE':([86,90,92,],[181,-143,-144,]),'FN':([86,90,92,],[186,-143,-144,]),'PUBLIC':([279,319,322,360,363,410,412,465,466,494,503,523,535,],[-232,-241,365,365,-231,-240,-244,-246,-247,-245,-233,-243,-242,]),'PRIVATE':([279,319,322,360,363,410,412,465,466,494,503,523,535,],[-232,-241,366,366,-231,-240,-244,-246,-247,-245,-233,-243,-242,]),'PROTECTED':([279,319,322,360,363,410,412,465,466,494,503,523,535,],[-232,-241,367,367,-231,-240,-244,-246,-247,-245,-233,-243,-242,]),'STDIN':([282,],[324,]),'STATIC':([319,360,365,366,367,410,411,412,465,466,494,523,535,],[-241,-251,-248,-249,-250,-240,439,-244,-246,-247,-245,-243,-242,]),'ELSEIF':([423,521,],[448,448,]),'ELSE':([423,521,],[449,449,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,335,336,369,387,470,500,504,508,512,514,],[2,2,387,387,387,387,387,387,387,516,516,516,]),'print_statement':([0,2,335,336,369,387,470,500,504,508,512,514,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'assignment':([0,2,335,336,369,387,470,500,504,508,512,514,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,86,335,336,369,387,470,500,504,508,512,514,],[5,5,173,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,335,336,369,387,470,500,504,508,512,514,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,335,336,369,387,470,500,504,508,512,514,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,335,336,369,387,470,500,504,508,512,514,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,335,336,369,387,470,500,504,508,512,514,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,335,336,369,387,470,500,504,508,512,514,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,335,336,369,387,411,470,500,504,508,512,514,],[13,13,13,13,13,13,442,13,13,13,13,13,13,]),'structure_array_principal':([0,2,86,335,336,369,387,470,500,504,508,512,514,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,86,335,336,369,387,470,500,504,508,512,514,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,81,86,116,128,133,134,135,136,335,336,369,387,470,500,504,508,512,514,],[16,16,56,56,56,56,16,56,56,56,56,56,56,16,16,16,16,16,16,16,16,16,16,]),'if_statement':([0,2,335,336,369,387,470,500,504,508,512,514,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,335,336,369,387,470,500,504,508,512,514,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,335,336,369,387,470,500,504,508,512,514,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,335,336,369,387,411,470,500,504,508,512,514,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,335,336,369,387,411,470,500,504,508,512,514,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,86,105,288,299,303,304,305,335,336,369,378,387,470,500,504,508,512,514,],[28,28,28,208,330,208,208,208,208,28,28,28,208,28,28,28,28,28,28,28,]),'associative_array':([0,2,86,335,336,369,387,470,500,504,508,512,514,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,86,335,336,369,387,470,500,504,508,512,514,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,74,81,86,100,101,110,116,128,130,133,134,135,136,137,144,332,334,335,336,369,387,400,469,470,500,504,508,512,514,518,],[31,31,71,71,71,150,71,31,150,150,150,71,71,232,71,71,71,71,150,249,381,383,31,31,31,31,435,150,31,31,31,520,520,520,532,]),'matrix_firstform':([0,2,86,335,336,369,387,470,500,504,508,512,514,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,86,335,336,369,387,470,500,504,508,512,514,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,74,81,86,100,101,110,116,128,130,133,134,135,136,137,335,336,369,387,469,470,500,504,508,512,514,],[34,34,73,73,73,73,73,34,73,73,73,73,73,233,73,73,73,73,73,34,34,34,34,73,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,86,335,336,369,387,470,500,504,508,512,514,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,86,335,336,369,387,470,500,504,508,512,514,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,81,86,105,116,128,133,134,135,136,299,303,304,305,335,336,369,378,387,470,500,504,508,512,514,],[37,37,37,37,37,37,37,207,37,37,37,37,37,37,207,207,207,207,37,37,37,207,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,81,86,116,128,133,134,135,136,335,336,369,387,470,500,504,508,512,514,518,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,517,517,517,530,]),'printable_values':([10,11,50,81,116,128,133,134,135,136,],[51,82,111,163,224,228,235,236,237,238,]),'values':([10,11,50,74,81,86,98,100,101,105,107,110,116,117,128,130,133,134,135,136,137,141,144,158,167,200,217,284,285,298,299,303,304,305,312,317,332,334,350,378,388,424,464,467,469,477,479,492,518,],[52,52,52,149,52,169,193,149,149,206,215,149,52,225,52,231,52,52,52,52,149,244,250,269,244,297,244,244,244,344,345,206,206,206,354,269,380,384,403,206,427,450,480,244,149,491,244,244,528,]),'conditional':([10,11,50,74,81,100,101,110,116,128,133,134,135,136,469,],[55,55,112,147,112,196,198,218,55,55,55,55,55,55,482,]),'function_invocation':([10,11,50,81,86,116,128,133,134,135,136,191,192,],[57,57,57,57,171,57,57,57,57,57,57,289,292,]),'string_special_function':([10,11,50,81,86,116,128,133,134,135,136,],[58,58,58,58,172,58,58,58,58,58,58,]),'boolean':([10,11,50,74,81,86,98,100,101,105,107,110,116,117,128,130,133,134,135,136,137,141,144,158,167,200,217,284,285,298,299,303,304,305,312,317,332,334,350,378,388,424,464,467,469,477,479,492,518,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'boolean_expression':([10,11,50,74,81,100,101,110,116,128,133,134,135,136,137,469,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,239,62,]),'comparation':([10,11,50,74,81,100,101,110,116,128,133,134,135,136,137,469,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'logic_not_sentence':([10,11,50,74,81,100,101,110,116,128,133,134,135,136,137,469,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'logic_expression':([10,11,50,74,81,100,101,110,116,128,133,134,135,136,137,469,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'expression':([10,11,50,74,81,86,100,101,110,116,117,128,133,134,135,136,137,145,156,157,179,469,],[72,72,113,72,113,170,72,72,113,72,226,72,72,72,72,72,72,252,267,268,281,72,]),'true_boolean_types':([10,11,50,74,81,100,101,110,116,128,133,134,135,136,137,155,469,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,261,75,]),'false_boolean_types':([10,11,50,74,81,100,101,110,116,128,133,134,135,136,137,154,469,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,255,76,]),'term':([10,11,50,74,81,86,100,101,110,116,117,128,133,134,135,136,137,145,156,157,159,160,161,162,179,469,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,271,272,273,274,77,77,]),'factor':([10,11,50,74,81,86,100,101,110,116,117,128,133,134,135,136,137,145,156,157,159,160,161,162,179,469,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'assignment_operator':([23,519,],[86,86,]),'structure_matrix_second':([45,351,],[108,404,]),'comparator_operator':([52,72,113,149,431,],[117,145,145,117,454,]),'logic_operator':([62,75,76,],[137,154,155,]),'class_extends_opt':([83,84,],[164,166,]),'input':([86,],[174,]),'special_function':([86,],[175,]),'arrow_function':([86,],[182,]),'anonymous_functions':([86,],[183,]),'values_array_indexed':([105,299,303,304,305,378,],[203,203,347,348,349,203,]),'structure_array':([105,106,437,],[204,212,460,]),'structure_matrix_first':([105,436,],[205,459,]),'key':([105,106,437,],[209,209,209,]),'params':([141,167,217,284,285,467,479,492,],[240,280,310,326,327,481,493,501,]),'real_params':([141,167,217,284,285,467,479,492,],[241,241,241,241,241,241,241,241,]),'empty':([141,167,217,284,285,467,479,492,],[242,242,242,242,242,242,242,242,]),'string_param':([142,143,],[245,248,]),'class_implements_opt':([164,],[276,]),'accessType':([191,192,],[290,293,]),'interface_list':([277,],[320,]),'interface_body':([279,],[322,]),'expression_for':([296,337,393,454,],[339,391,433,472,]),'number_values':([296,337,393,454,505,],[340,340,340,340,510,]),'int_param':([314,405,],[355,438,]),'class_body':([319,],[360,]),'interface_method':([322,],[363,]),'visibility_opt':([322,360,],[364,411,]),'codeblock':([323,373,445,],[368,417,468,]),'body_statement':([335,336,369,387,470,500,504,],[386,390,415,426,483,506,509,]),'operator_aritmetic':([339,391,433,472,499,],[393,393,393,393,505,]),'class_member':([360,],[410,]),'class_attribute':([360,],[412,]),'condition_for':([392,],[432,]),'elseif_statement':([423,521,],[446,533,]),'else_statement':([423,521,],[447,534,]),'increment_statement':([455,],[474,]),'method_body':([508,512,514,],[513,522,526,]),'classStatement':([508,512,514,],[514,514,514,]),'return_form':([508,512,514,],[515,515,524,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',83),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',88),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',89),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',93),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',98),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',103),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',104),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',108),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',113),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',114),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',119),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',120),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',121),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',131),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',132),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',138),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',139),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',140),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',146),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',147),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',148),
  ('boolean_expression -> logic_expression','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',149),
  ('logic_expression -> true_boolean_types logic_operator false_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',155),
  ('logic_expression -> false_boolean_types logic_operator true_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',156),
  ('true_boolean_types -> TRUE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',161),
  ('true_boolean_types -> STRING','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',162),
  ('true_boolean_types -> INTEGER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',163),
  ('true_boolean_types -> FLOAT','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',164),
  ('true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN','true_boolean_types',4,'p_true_boolean_types','syntaxAnalysis.py',165),
  ('false_boolean_types -> FALSE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',170),
  ('false_boolean_types -> STRING','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',171),
  ('false_boolean_types -> INTEGER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',172),
  ('false_boolean_types -> FLOAT','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',173),
  ('false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN','false_boolean_types',3,'p_false_boolean_types','syntaxAnalysis.py',174),
  ('false_boolean_types -> NULL','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',175),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',183),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',184),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',191),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',192),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',193),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',194),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',195),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',196),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',197),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',198),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',199),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',200),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',201),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',207),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',208),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',209),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',210),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',211),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',212),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',213),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',214),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',215),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',216),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',222),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',223),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',224),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',225),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',231),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',232),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',233),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',234),
  ('printable_values -> STRING STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',235),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',236),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',237),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',238),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',239),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',240),
  ('printable_values -> function_invocation','printable_values',1,'p_printable_values','syntaxAnalysis.py',241),
  ('printable_values -> function_invocation COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',242),
  ('printable_values -> string_special_function','printable_values',1,'p_printable_values','syntaxAnalysis.py',243),
  ('printable_values -> string_special_function COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',244),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',251),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',252),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',253),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',254),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',260),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',261),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',267),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',268),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',269),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',275),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',276),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',277),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',278),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',279),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',285),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',286),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',287),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',298),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',299),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',305),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',306),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',307),
  ('variable_assignment -> VARIABLE assignment_operator string_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',308),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',309),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',310),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',311),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',312),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',313),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',314),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',315),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',322),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',323),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',329),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',330),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',336),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',342),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',353),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',359),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',360),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',366),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',367),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',368),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',369),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',379),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',387),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',393),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',394),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',400),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',406),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',412),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',418),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',419),
  ('string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','string_special_function',4,'p_string_special_function','syntaxAnalysis.py',427),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN','string_special_function',6,'p_string_special_function','syntaxAnalysis.py',428),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN','string_special_function',8,'p_string_special_function','syntaxAnalysis.py',429),
  ('string_param -> STRING','string_param',1,'p_string_param','syntaxAnalysis.py',434),
  ('string_param -> VARIABLE','string_param',1,'p_string_param','syntaxAnalysis.py',435),
  ('int_param -> INTEGER','int_param',1,'p_int_param','syntaxAnalysis.py',439),
  ('int_param -> VARIABLE','int_param',1,'p_int_param','syntaxAnalysis.py',440),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',452),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',453),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',454),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',461),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',462),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',463),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',464),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',469),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',473),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',474),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',480),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',481),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',487),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',488),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',493),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',494),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',495),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',496),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',497),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',498),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',503),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',508),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',509),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',515),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',516),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',517),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',518),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',519),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',524),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',528),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',533),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',534),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',540),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',541),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',547),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',548),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',549),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',550),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',555),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',556),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',562),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',571),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',572),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',577),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',578),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',582),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',583),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',584),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',585),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',586),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',587),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',588),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',589),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',590),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',591),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',597),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',598),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',603),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',607),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',611),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',612),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',616),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',620),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',621),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',625),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',626),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',630),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',631),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',635),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',636),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',640),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',641),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',642),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',647),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',648),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',649),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',654),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',655),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',656),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',657),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',661),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',662),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',663),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',664),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',665),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',671),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',672),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',673),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',678),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',679),
]
