
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ARRAY_POP ARRAY_PUSH BREAK CLASS COLON COMMA COMMENT CONST COUNT COUNT_NORMAL COUNT_RECURSIVE DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION STRLEN SUBSTR TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n            | RETURN printable_values SEMICOLON\n            | sentence RETURN printable_values SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n                   | length_operations\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | VARIABLE\n                        | IDENTIFIER\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n                        | logic_expression\n    \n    logic_expression : true_boolean_types logic_operator false_boolean_types\n                     | false_boolean_types logic_operator true_boolean_types\n    \n    true_boolean_types : TRUE\n                       | STRING\n                       | INTEGER\n                       | FLOAT\n                       | VARIABLE\n                       | IDENTIFIER\n                       | ARRAY LEFT_PAREN values RIGHT_PAREN\n    \n    false_boolean_types : FALSE\n                        | STRING\n                        | INTEGER\n                        | VARIABLE\n                        | IDENTIFIER\n                        | FLOAT\n                        | ARRAY LEFT_PAREN RIGHT_PAREN\n                        | NULL\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values printable_dividers printable_values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE printable_dividers printable_values\n                     | VARIABLE COMMA printable_values\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional printable_dividers printable_values\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal printable_dividers printable_values\n                     | structure_object_principal COMMA printable_values\n    \n    printable_dividers : COMMA\n                       | STRING_CONCATENATION\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | FLOAT\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n           | STRING\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator IDENTIFIER\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator string_special_function\n                        | VARIABLE assignment_operator array_special_function\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE assignment_operator conditional\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n                        | VARIABLE LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n                   | FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement\n                   | FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    string_special_function : STRLEN LEFT_PAREN string_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN\n    \n    string_param : STRING\n                 | VARIABLE\n    \n    int_param : INTEGER\n              | VARIABLE\n    \n    array_special_function : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                           | ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN\n    \n    count_param : COMMA COUNT_NORMAL\n                | COMMA COUNT_RECURSIVE\n                |\n    \n    length_operations : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                      | STRLEN LEFT_PAREN string_param RIGHT_PAREN\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN access_method_object SEMICOLON\n                | RETURN SEMICOLON\n                | RETURN expression SEMICOLON\n                | RETURN string_special_function SEMICOLON\n                | RETURN array_special_function SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,497,498,499,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[10,10,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,10,10,-229,-245,-259,-173,10,-165,-164,-249,-248,-250,-255,-253,-254,10,-223,-222,-258,-256,-14,-13,-180,10,-15,-16,10,-20,10,10,10,-30,10,10,-292,-243,-207,-17,-293,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,497,498,499,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[11,11,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,11,11,-229,-245,-259,-173,11,-165,-164,-249,-248,-250,-255,-253,-254,11,-223,-222,-258,-256,-14,-13,-180,11,-15,-16,11,-20,11,11,11,-30,11,11,-292,-243,-207,-17,-293,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,498,499,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[17,17,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,17,17,-229,-245,-259,-173,17,-165,-164,-249,-248,-250,-255,-253,-254,17,-223,-222,-258,-256,-14,-13,-180,-15,-16,17,-20,17,17,17,-30,17,17,-292,-243,-207,-17,-293,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,498,499,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[18,18,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,18,18,-229,-245,-259,-173,18,-165,-164,-249,-248,-250,-255,-253,-254,18,-223,-222,-258,-256,-14,-13,-180,-15,-16,18,-20,18,18,18,-30,18,18,-292,-243,-207,-17,-293,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,82,86,88,91,93,95,105,195,196,197,198,199,287,304,305,308,309,310,311,312,319,320,326,328,335,338,359,364,365,378,384,387,389,390,391,392,393,394,395,396,399,400,417,418,419,421,422,423,425,445,446,447,448,449,450,468,469,476,489,494,498,499,522,523,530,559,562,565,568,569,573,576,577,579,581,582,585,586,588,592,601,602,603,],[22,22,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,186,-158,-159,-221,-226,-227,-244,-123,-124,-125,-127,-128,-261,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-270,-280,-241,22,22,-229,-245,-280,-259,-260,452,-277,-278,-279,-173,22,-165,-164,-249,-248,-250,-255,-253,-254,22,-223,-222,-258,-269,490,-273,-256,-14,-13,519,-180,-15,-16,-275,-276,22,-274,-20,22,-262,22,22,-30,22,22,-292,-243,-207,-17,-272,-293,-18,-19,-271,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,59,70,77,82,85,86,88,91,93,94,95,96,97,98,105,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,152,153,155,156,157,158,163,191,192,195,196,197,198,199,221,238,293,294,295,296,297,298,301,302,304,305,308,309,310,311,312,315,319,320,326,328,331,335,340,357,358,359,361,363,364,365,366,378,384,387,389,392,393,394,395,396,399,400,402,417,418,419,421,422,423,425,426,430,431,432,433,434,435,436,437,438,439,440,445,446,447,448,449,450,468,469,470,476,494,495,497,498,499,508,509,522,523,524,529,530,536,537,543,552,557,559,562,565,569,573,576,577,579,581,582,583,585,586,588,592,601,602,603,],[23,23,-5,-6,-7,-8,-9,53,53,-201,-202,-203,-10,-11,-12,89,90,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,110,-126,145,110,164,188,-158,-159,-221,-226,194,-227,201,201,203,-244,223,53,53,237,-122,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,53,53,-122,242,188,53,53,53,53,201,-55,-56,-57,253,237,258,263,272,237,237,237,237,237,237,291,307,307,-123,-124,-125,-127,-128,291,237,291,291,345,345,349,351,291,291,-223,-222,-246,-247,-257,-251,-252,367,-208,-209,-210,-230,385,-270,397,412,414,-241,417,423,23,23,367,-229,-245,-280,-259,-277,-278,-279,-173,23,-165,-164,456,-249,-248,-250,-255,-253,-254,23,53,478,367,-47,-48,-49,-50,-51,-52,481,485,345,-223,-222,-258,-269,491,-273,-256,-14,53,-13,-180,456,237,-15,-16,367,534,-275,-276,291,201,23,554,555,291,564,291,-274,-20,23,23,584,-30,584,584,-292,-243,599,-207,-17,-272,-293,-18,-19,-271,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,498,499,509,530,534,562,565,569,573,576,577,579,581,582,584,585,586,592,601,602,],[24,24,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,83,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,24,24,-229,-245,-259,-173,24,-165,-164,-249,-248,-250,-255,-253,-254,24,-223,-222,-258,-256,-14,-13,-180,-15,-16,536,24,549,-20,24,24,24,-30,24,24,-292,-243,83,-207,-17,-293,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,498,499,509,530,534,562,565,569,573,576,577,579,581,582,584,585,586,592,601,602,],[25,25,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,84,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,25,25,-229,-245,-259,-173,25,-165,-164,-249,-248,-250,-255,-253,-254,25,-223,-222,-258,-256,-14,-13,-180,-15,-16,537,25,550,-20,25,25,25,-30,25,25,-292,-243,84,-207,-17,-293,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,498,499,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[39,39,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,39,39,-229,-245,-259,-173,39,-165,-164,-249,-248,-250,-255,-253,-254,39,-223,-222,-258,-256,-14,-13,-180,-15,-16,39,-20,39,39,39,-30,39,39,-292,-243,-207,-17,-293,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,498,499,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[40,40,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,40,40,-229,-245,-259,-173,40,-165,-164,-249,-248,-250,-255,-253,-254,40,-223,-222,-258,-256,-14,-13,-180,-15,-16,40,-20,40,40,40,-30,40,40,-292,-243,-207,-17,-293,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,498,499,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[41,41,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,41,41,-229,-245,-259,-173,41,-165,-164,-249,-248,-250,-255,-253,-254,41,-223,-222,-258,-256,-14,-13,-180,-15,-16,41,-20,41,41,41,-30,41,41,-292,-243,-207,-17,-293,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,335,359,364,365,378,384,387,389,392,393,394,395,396,399,400,417,418,419,421,422,423,425,445,446,447,448,449,450,468,469,476,494,498,499,522,523,530,559,562,565,569,573,576,577,579,581,582,585,586,588,592,601,602,603,],[42,42,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-270,-241,42,42,-229,-245,-280,-259,-277,-278,-279,-173,42,-165,-164,-249,-248,-250,-255,-253,-254,42,-223,-222,-258,-269,42,-273,-256,-14,-13,-180,-15,-16,-275,-276,42,-274,-20,42,42,42,-30,42,42,-292,-243,-207,-17,-272,-293,-18,-19,-271,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,335,359,364,365,378,384,387,389,392,393,394,395,396,399,400,417,418,419,421,422,423,425,445,446,447,448,449,450,468,469,476,494,498,499,522,523,530,559,562,565,569,573,576,577,579,581,582,585,586,588,592,601,602,603,],[43,43,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-270,-241,43,43,-229,-245,-280,-259,-277,-278,-279,-173,43,-165,-164,-249,-248,-250,-255,-253,-254,43,-223,-222,-258,-269,43,-273,-256,-14,-13,-180,-15,-16,-275,-276,43,-274,-20,43,43,43,-30,43,43,-292,-243,-207,-17,-272,-293,-18,-19,-271,]),'ARRAY':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,59,70,77,82,86,88,91,93,95,96,97,101,105,106,114,115,117,128,129,130,133,134,135,136,137,138,139,140,150,151,195,196,197,198,199,297,303,304,305,306,308,309,310,311,312,318,319,320,322,323,324,326,328,359,364,365,378,384,389,395,396,399,400,416,417,418,419,421,422,423,425,426,439,445,446,447,468,469,470,476,487,494,498,499,529,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[44,44,-5,-6,-7,-8,-9,74,74,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,74,-126,74,74,187,-158,-159,-221,-226,-227,74,74,206,-244,74,74,74,-122,74,74,-122,74,74,74,74,74,-55,-56,-57,266,274,-123,-124,-125,-127,-128,44,206,-223,-222,360,-246,-247,-257,-251,-252,360,-208,-209,360,360,360,-210,-230,-241,44,44,-229,-245,-259,-173,44,-165,-164,360,-249,-248,-250,-255,-253,-254,44,74,44,-223,-222,-258,-256,-14,74,-13,516,-180,-15,-16,74,44,-20,44,44,44,-30,44,44,-292,-243,-207,-17,-293,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,59,82,86,88,91,93,95,105,110,145,164,187,195,196,197,198,199,201,223,242,253,297,304,305,308,309,310,311,312,319,320,326,328,349,359,364,365,378,383,384,389,395,396,399,400,417,418,419,421,422,423,425,439,445,446,447,468,469,476,481,485,494,498,499,530,562,565,569,573,576,577,579,581,582,584,585,586,592,599,601,602,],[45,45,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,85,-204,-205,-206,-207,-224,-225,-228,-242,-243,102,103,-3,-4,132,-126,45,-158,-159,-221,-226,-227,-244,132,132,85,102,-123,-124,-125,-127,-128,132,132,132,331,45,357,358,-246,-247,362,-251,-252,-208,-209,-210,-230,85,-241,45,45,-229,103,-245,-259,-173,45,-165,-164,331,-248,-250,-255,-253,331,45,45,-223,-222,-258,-256,-14,-13,331,85,-180,-15,-16,45,-20,45,45,45,-30,45,45,-292,-243,85,-207,-17,-293,331,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,59,77,82,86,88,91,93,95,101,105,114,115,117,128,129,130,133,134,135,136,195,196,197,198,199,303,304,305,308,309,310,311,312,318,319,320,322,323,324,326,328,359,364,365,378,384,389,395,396,399,400,416,417,418,419,421,422,423,425,426,445,446,447,468,469,470,476,494,498,499,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[46,46,-5,-6,-7,-8,-9,46,46,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,46,-126,46,46,-158,-159,-221,-226,-227,46,-244,46,46,-122,46,46,-122,46,46,46,46,-123,-124,-125,-127,-128,46,-223,-222,-246,-247,-257,-251,-252,46,-208,-209,46,46,46,-210,-230,-241,46,46,-229,-245,-259,-173,46,-165,-164,46,-249,-248,-250,-255,-253,-254,46,46,-223,-222,-258,-256,-14,46,-13,-180,-15,-16,46,-20,46,46,46,-30,46,46,-292,-243,-207,-17,-293,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,378,384,389,395,399,400,417,418,419,421,422,423,445,446,447,468,469,476,494,498,499,562,576,586,601,602,],[0,-2,-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-1,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,-229,-245,-259,-173,-165,-164,-249,-248,-250,-255,-253,-254,-223,-222,-258,-256,-14,-13,-180,-15,-16,-20,-30,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,73,75,76,78,83,84,89,90,91,93,95,105,111,112,113,144,145,164,165,166,167,168,169,170,171,172,173,174,181,182,183,184,193,194,195,196,197,198,199,201,220,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,275,276,278,279,280,281,282,283,304,305,308,309,310,311,312,316,319,320,321,326,328,334,350,359,367,368,369,371,372,373,378,384,399,400,401,407,408,409,417,418,419,421,422,423,427,441,445,446,457,460,461,463,464,465,466,467,468,470,471,473,474,477,479,480,491,492,494,496,502,504,510,511,515,526,527,528,533,538,539,540,544,546,560,582,583,585,590,593,595,596,597,598,599,],[48,49,-142,-143,-201,-202,-203,-160,-161,-204,-205,-206,91,-224,-225,93,95,-228,-242,-243,-106,-108,-59,-124,-115,-118,-123,-125,-126,-53,-127,-128,-58,-60,-62,-63,-129,-80,-132,-107,-154,-155,-156,-157,-221,-226,-227,-244,-124,-123,-125,-81,-59,-59,-144,-60,-146,-147,-148,-149,-150,-151,-152,-153,-174,-175,91,93,-239,-240,-123,-124,-125,-127,-128,-59,328,-104,-61,-140,-109,-110,-83,-84,-123,-124,-125,-139,-112,-113,-114,-90,-86,-89,-93,-116,-117,-119,-120,-54,-91,-87,-88,-85,-137,-138,-141,-92,-64,-73,-74,-75,-76,-77,-78,-65,-66,-67,-68,-69,-70,-71,-130,-131,-79,-133,-134,-135,-136,-105,-223,-222,-246,-247,-257,-251,-252,-162,-208,-209,378,-210,-230,-72,91,-241,-38,430,-39,-44,-45,-46,-229,-245,-165,-164,-183,-193,-181,-182,-249,-248,-250,-255,-253,-254,475,-163,-223,-222,-190,-191,-192,-179,-236,-237,-238,-235,-256,503,505,506,507,-41,509,-40,522,523,-180,-184,531,532,-42,-43,-200,-176,-177,-178,-37,-197,-198,-199,559,-185,568,592,594,91,604,605,606,607,608,609,-139,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,498,499,530,562,565,569,573,576,577,579,581,582,585,586,592,601,602,],[-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,426,426,-229,-245,-259,-173,426,-165,-164,-249,-248,-250,-255,-253,-254,470,-223,-222,-258,-256,-14,-13,-180,-15,-16,426,-20,426,426,583,-30,583,583,-292,-243,-207,-17,-293,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,304,305,308,309,310,311,312,319,320,326,328,359,364,365,378,384,389,395,396,399,400,417,418,419,421,422,423,425,445,446,447,468,469,476,494,498,499,530,562,565,569,576,579,581,582,585,586,592,601,602,],[-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-241,427,427,-229,-245,-259,-173,427,-165,-164,-249,-248,-250,-255,-253,-254,471,-223,-222,-258,-256,-14,-13,-180,-15,-16,427,-20,427,427,-30,590,-292,-243,-207,-17,-293,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,91,93,95,105,195,196,197,198,199,287,304,305,308,309,310,311,312,319,320,326,328,335,338,359,378,384,387,389,390,395,399,400,417,418,419,421,422,423,424,425,428,445,446,447,448,450,453,468,469,472,475,476,494,498,499,503,505,506,507,522,523,531,532,548,559,562,568,571,574,576,578,579,580,581,582,585,586,587,588,589,591,592,594,601,602,603,604,605,606,607,608,609,],[-5,-6,-7,-8,-9,-201,-202,-203,-10,-11,-12,-204,-205,-206,-207,-224,-225,-228,-242,-243,-3,-4,-126,-221,-226,-227,-244,-123,-124,-125,-127,-128,-261,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,-270,389,-241,-229,-245,447,-259,-260,-173,-165,-164,-249,-248,-250,-255,-253,-254,469,-21,476,-223,-222,-258,-269,-273,494,-256,-14,-25,-27,-13,-180,-15,-16,-23,-24,-26,-28,-275,-276,-22,-28,562,-274,-20,-262,576,586,-30,588,-281,-283,-292,-243,-207,-17,603,-272,-282,-285,-293,-288,-18,-19,-271,-284,-286,-287,-289,-290,-291,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,70,74,77,81,82,86,88,96,97,105,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,139,140,142,152,153,155,156,157,158,164,166,175,176,177,178,179,180,185,186,187,206,238,266,274,307,310,315,360,366,370,374,375,426,431,432,433,434,435,436,437,470,493,497,500,508,516,520,529,542,583,],[50,77,96,97,98,100,101,106,106,154,106,163,106,-158,-159,106,106,221,106,106,106,238,-122,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,106,106,-122,106,106,106,106,106,-55,-56,-57,238,238,238,238,238,238,238,293,294,295,296,297,298,299,300,301,302,303,318,238,332,333,293,294,366,416,366,438,439,440,106,366,-47,-48,-49,-50,-51,-52,106,524,238,529,366,541,543,106,557,238,]),'INTEGER':([10,11,50,70,77,82,85,86,88,94,96,97,101,102,103,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,150,151,152,153,154,155,156,157,158,163,204,221,238,293,294,301,302,303,315,317,318,322,323,324,331,333,340,357,358,361,362,363,366,382,402,416,426,431,432,433,434,435,436,437,470,488,495,497,508,521,524,529,541,543,551,557,570,583,],[57,57,112,57,112,112,189,-158,-159,195,57,57,214,217,195,224,57,57,234,-122,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,57,57,-122,195,189,57,57,57,57,57,-55,-56,-57,195,255,262,270,255,255,195,255,255,255,255,195,195,195,255,195,195,195,195,214,372,195,195,195,195,195,386,195,195,413,415,195,420,195,372,195,455,195,57,372,-47,-48,-49,-50,-51,-52,57,217,455,255,372,195,195,57,195,195,563,195,372,234,]),'STRING':([10,11,50,70,77,82,86,88,94,96,97,100,101,102,103,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,150,151,152,153,154,155,156,157,158,163,204,221,238,293,294,295,296,300,301,302,303,317,318,322,323,324,333,340,361,363,382,416,426,440,470,488,497,521,524,529,541,543,557,583,],[54,54,111,54,111,111,-158,-159,196,54,54,205,215,218,196,226,54,54,235,-122,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,54,54,241,196,54,54,54,54,54,-55,-56,-57,196,257,261,269,257,257,196,257,257,257,257,196,196,196,257,196,196,344,344,353,196,196,215,196,196,196,196,196,196,196,196,196,196,196,54,344,54,218,257,196,196,54,196,196,196,235,]),'FLOAT':([10,11,50,70,77,82,86,88,94,96,97,101,103,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,150,151,152,153,154,155,156,157,158,163,204,221,238,293,294,301,302,303,315,317,318,322,323,324,333,340,361,363,366,382,416,426,431,432,433,434,435,436,437,470,497,508,521,524,529,541,543,557,570,583,],[58,58,113,58,113,113,-158,-159,197,58,58,197,197,225,58,58,236,-122,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,58,58,-122,197,58,58,58,58,58,-55,-56,-57,197,256,265,271,256,256,197,256,256,256,256,197,197,197,256,197,197,197,197,197,373,197,197,197,197,197,197,197,197,197,373,197,197,58,373,-47,-48,-49,-50,-51,-52,58,256,373,197,197,58,197,197,197,373,236,]),'TRUE':([10,11,50,70,77,82,86,88,94,96,97,101,103,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,151,154,163,204,221,293,294,301,302,303,317,318,322,323,324,333,340,361,363,382,416,426,470,521,524,529,541,543,557,583,],[61,61,61,148,61,61,-158,-159,198,148,148,198,198,148,61,61,198,-122,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,61,61,-122,198,61,61,61,61,148,-55,-56,-57,198,268,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,61,61,198,198,148,198,198,198,198,]),'FALSE':([10,11,50,70,77,82,86,88,94,96,97,101,103,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,150,154,163,204,221,293,294,301,302,303,317,318,322,323,324,333,340,361,363,382,416,426,470,521,524,529,541,543,557,583,],[62,62,62,149,62,62,-158,-159,199,149,149,199,199,149,62,62,199,-122,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,62,62,-122,199,62,62,62,62,149,-55,-56,-57,199,260,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,62,62,199,199,149,199,199,199,199,]),'IDENTIFIER':([10,11,17,18,22,42,46,50,70,77,82,86,88,96,97,106,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,134,135,136,137,138,139,140,150,151,161,191,192,285,315,366,388,426,431,432,433,434,435,436,437,452,470,490,508,519,529,],[64,64,79,80,81,99,105,64,64,64,166,-158,-159,64,64,64,64,64,-122,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,64,64,-122,64,64,64,64,64,-55,-56,-57,264,273,286,310,310,337,370,370,451,64,370,-47,-48,-49,-50,-51,-52,493,64,520,370,542,64,]),'LOGIC_NOT':([10,11,50,70,77,82,86,88,96,97,106,114,115,117,128,129,130,133,134,135,136,137,138,139,140,426,470,529,],[70,70,70,70,70,70,-158,-159,70,70,70,70,70,-122,70,70,-122,70,70,70,70,70,-55,-56,-57,70,70,70,]),'NULL':([10,11,50,70,77,82,86,88,96,97,106,114,115,117,128,129,130,133,134,135,136,137,138,139,140,150,426,470,529,],[75,75,75,75,75,75,-158,-159,75,75,75,75,75,-122,75,75,-122,75,75,75,75,75,-55,-56,-57,75,75,75,75,]),'MINUS':([23,31,53,54,57,58,67,73,76,110,111,112,113,145,164,183,201,223,224,225,226,229,234,235,236,237,255,256,257,279,280,281,282,304,305,367,368,369,371,372,373,429,445,446,477,480,510,511,515,533,538,539,540,564,584,585,599,600,],[87,92,87,-141,-137,-138,92,153,-132,87,-141,-137,-138,-139,87,92,-139,-139,-137,-138,-141,-140,-137,-141,-138,-139,-137,-138,-141,-133,-134,-135,-136,-223,-222,-38,433,-39,-44,-45,-46,433,-223,-222,-41,433,-42,-43,-200,433,-197,-198,-199,433,87,92,87,92,]),'EQUALS':([23,34,99,184,190,203,213,214,215,217,218,309,310,312,410,464,465,466,467,468,491,534,584,],[86,94,204,94,306,315,325,-213,-214,-213,-214,361,-257,363,462,-236,-237,-238,-235,-256,521,552,86,]),'PLUS_EQUALS':([23,534,584,],[88,551,88,]),'COMMA':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,73,75,76,91,93,95,105,108,110,111,112,113,144,145,195,196,197,198,199,201,205,210,211,212,214,215,228,229,232,233,234,235,236,237,242,243,244,245,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,275,276,278,279,280,281,282,289,291,292,304,305,308,309,310,311,312,319,320,326,327,328,334,336,337,344,345,346,347,348,349,350,356,359,377,378,384,397,398,399,400,417,418,419,421,422,423,442,443,445,446,451,454,455,456,464,465,466,467,468,473,483,484,485,502,],[-204,-205,-206,-224,-225,-228,-242,-243,115,129,-124,134,136,-123,-125,-126,-53,-127,-128,-58,-60,-62,-63,-129,-80,-132,-221,-226,-227,-244,134,129,-124,-123,-125,-81,-59,-123,-124,-125,-127,-128,-59,317,322,323,324,-123,-124,-61,-140,-83,-84,-123,-124,-125,-139,-90,-86,-89,-93,-54,-91,-87,-88,-85,-137,-138,-141,-92,-64,-73,-74,-75,-76,-77,-78,-65,-66,-67,-68,-69,-70,-71,-130,-131,-79,-133,-134,-135,-136,340,-168,-169,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,383,-230,-72,388,-267,-186,-187,402,404,404,404,-207,322,-241,322,-229,-245,-170,-171,-165,-164,-249,-248,-250,-255,-253,-254,487,488,-223,-222,-268,495,-188,-189,-236,-237,-238,-235,-256,115,404,404,404,115,]),'RIGHT_PAREN':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,73,75,76,91,93,95,105,107,108,109,110,111,112,113,144,145,154,159,163,195,196,197,198,199,200,201,202,207,208,209,210,211,212,214,215,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,275,276,277,278,279,280,281,282,288,289,290,291,292,293,294,301,302,303,304,305,308,309,310,311,312,319,320,326,328,329,330,332,334,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,359,367,369,371,372,373,376,377,378,379,380,381,384,397,398,399,400,403,405,406,417,418,419,421,422,423,429,442,443,445,446,454,455,456,458,459,464,465,466,467,468,477,480,481,482,483,484,485,486,510,511,512,513,514,515,517,518,524,525,535,538,539,540,543,545,547,549,550,554,555,556,557,558,563,566,575,],[-204,-205,-206,-224,-225,-228,-242,-243,-108,-59,-124,-115,-118,-123,-125,-126,-53,-127,-128,-58,-60,-62,-63,-129,-80,-132,-221,-226,-227,-244,227,228,229,-59,-124,-123,-125,-81,-59,278,283,-172,-123,-124,-125,-127,-128,313,-59,314,319,320,321,-215,-217,-219,-123,-124,-172,228,-59,-137,-138,-141,-61,-140,-109,-110,-83,-84,-123,-124,-125,-139,-112,-113,-114,-90,-86,-89,-93,-116,-117,-119,-120,-54,-91,-87,-88,-85,-137,-138,-141,-92,-64,-73,-74,-75,-76,-77,-78,-65,-66,-67,-68,-69,-70,-71,-130,-131,334,-79,-133,-134,-135,-136,339,-166,-167,-168,-169,-172,-172,-172,-172,278,-223,-222,-246,-247,-257,-251,-252,-208,-209,-210,-230,384,229,278,-72,399,400,401,-186,-187,-196,-196,-196,-207,407,408,409,410,411,334,-241,-38,-39,-44,-45,-46,441,442,-229,-216,-218,-220,-245,-170,-171,-165,-164,457,460,461,-249,-248,-250,-255,-253,-254,477,-233,-211,-223,-222,496,-188,-189,-194,-195,-236,-237,-238,-235,-256,-41,-40,510,511,-196,-196,-196,515,-42,-43,538,539,540,-200,-234,-212,-172,546,553,-197,-198,-199,-172,560,561,-31,-32,-33,-34,442,-172,567,-35,572,-36,]),'STRING_CONCATENATION':([37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,73,75,76,105,108,110,111,112,113,144,145,195,196,197,198,199,201,228,229,232,233,234,235,236,237,242,243,244,245,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,275,276,278,279,280,281,282,304,305,308,309,310,311,312,334,384,399,400,417,418,419,421,422,423,445,446,464,465,466,467,468,473,502,],[-242,-243,117,130,-124,117,117,-123,-125,-126,-53,-127,-128,-58,-60,-62,-63,-129,-80,-132,-244,117,130,-124,-123,-125,-81,-59,-123,-124,-125,-127,-128,-59,-61,-140,-83,-84,-123,-124,-125,-139,-90,-86,-89,-93,-54,-91,-87,-88,-85,-137,-138,-141,-92,-64,-73,-74,-75,-76,-77,-78,-65,-66,-67,-68,-69,-70,-71,-130,-131,-79,-133,-134,-135,-136,-223,-222,-246,-247,-257,-251,-252,-72,-245,-165,-164,-249,-248,-250,-255,-253,-254,-223,-222,-236,-237,-238,-235,-256,117,117,]),'EQUALS_EQUALS':([52,53,54,57,58,59,61,62,67,68,69,73,76,109,110,111,112,113,145,146,147,148,149,164,165,167,183,184,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,304,305,464,465,466,467,473,478,502,],[118,131,-124,-123,-125,-126,-127,-128,141,118,143,-129,-132,118,131,-124,-123,-125,131,118,141,-127,-128,131,118,118,141,143,131,131,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,-223,-222,-236,-237,-238,-235,118,118,118,]),'IDENTICAL':([52,53,54,57,58,59,61,62,68,73,76,109,110,111,112,113,145,146,148,149,164,165,167,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,473,478,502,],[119,-139,-124,-123,-125,-126,-127,-128,119,-129,-132,119,-139,-124,-123,-125,-139,119,-127,-128,-139,119,119,-139,-139,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,119,119,119,]),'NOT_EQUALS':([52,53,54,57,58,59,61,62,68,73,76,109,110,111,112,113,145,146,148,149,164,165,167,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,473,478,502,],[120,-139,-124,-123,-125,-126,-127,-128,120,-129,-132,120,-139,-124,-123,-125,-139,120,-127,-128,-139,120,120,-139,-139,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,120,120,120,]),'NOT_IDENTICAL':([52,53,54,57,58,59,61,62,68,73,76,109,110,111,112,113,145,146,148,149,164,165,167,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,473,478,502,],[121,-139,-124,-123,-125,-126,-127,-128,121,-129,-132,121,-139,-124,-123,-125,-139,121,-127,-128,-139,121,121,-139,-139,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,121,121,121,]),'SMALL_THAN':([52,53,54,57,58,59,61,62,68,73,76,109,110,111,112,113,145,146,148,149,164,165,167,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,473,478,502,],[122,-139,-124,-123,-125,-126,-127,-128,122,-129,-132,122,-139,-124,-123,-125,-139,122,-127,-128,-139,122,122,-139,-139,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,122,122,122,]),'GREATER_THAN':([52,53,54,57,58,59,61,62,68,73,76,87,92,109,110,111,112,113,145,146,148,149,164,165,167,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,325,462,473,478,502,],[123,-139,-124,-123,-125,-126,-127,-128,123,-129,-132,191,192,123,-139,-124,-123,-125,-139,123,-127,-128,-139,123,123,-139,-139,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,382,497,123,123,123,]),'SMALL_EQUALS_TO':([52,53,54,57,58,59,61,62,68,73,76,109,110,111,112,113,145,146,148,149,164,165,167,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,473,478,502,],[124,-139,-124,-123,-125,-126,-127,-128,124,-129,-132,124,-139,-124,-123,-125,-139,124,-127,-128,-139,124,124,-139,-139,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,124,124,124,]),'GREATER_EQUALS_TO':([52,53,54,57,58,59,61,62,68,73,76,109,110,111,112,113,145,146,148,149,164,165,167,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,473,478,502,],[125,-139,-124,-123,-125,-126,-127,-128,125,-129,-132,125,-139,-124,-123,-125,-139,125,-127,-128,-139,125,125,-139,-139,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,125,125,125,]),'SPACECRAFT':([52,53,54,57,58,59,61,62,68,73,76,109,110,111,112,113,145,146,148,149,164,165,167,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,473,478,502,],[126,-139,-124,-123,-125,-126,-127,-128,126,-129,-132,126,-139,-124,-123,-125,-139,126,-127,-128,-139,126,126,-139,-139,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,126,126,126,]),'NULL_FUSION':([52,53,54,57,58,59,61,62,68,73,76,109,110,111,112,113,145,146,148,149,164,165,167,201,223,224,225,226,229,237,255,256,257,275,276,279,280,281,282,473,478,502,],[127,-139,-124,-123,-125,-126,-127,-128,127,-129,-132,127,-139,-124,-123,-125,-139,127,-127,-128,-139,127,127,-139,-139,-123,-125,-124,-140,-139,-137,-138,-141,-130,-131,-133,-134,-135,-136,127,127,127,]),'LOGIC_AND':([53,54,57,58,59,60,61,62,63,64,65,66,71,72,73,75,76,110,111,112,113,144,145,148,149,164,166,195,196,197,198,199,201,223,224,225,226,228,229,232,233,234,235,236,237,242,243,244,245,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,275,276,278,279,280,281,282,304,305,334,445,446,464,465,466,467,],[-59,-67,-68,-69,-126,138,-66,-73,-58,-60,-62,-63,138,138,-129,-80,-132,-59,-67,-68,-69,-81,-59,-66,-73,-59,-60,-123,-124,-125,-127,-128,-59,-59,-68,-69,-67,-61,-140,-83,-84,-123,-124,-125,-139,-90,-86,-89,-93,-54,-91,-87,-88,-85,-137,-138,-141,-92,-64,-73,-74,-75,-76,-77,-78,-65,-66,-67,-68,-69,-70,-71,-130,-131,-79,-133,-134,-135,-136,-223,-222,-72,-223,-222,-236,-237,-238,-235,]),'LOGIC_OR':([53,54,57,58,59,60,61,62,63,64,65,66,71,72,73,75,76,110,111,112,113,144,145,148,149,164,166,195,196,197,198,199,201,223,224,225,226,228,229,232,233,234,235,236,237,242,243,244,245,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,275,276,278,279,280,281,282,304,305,334,445,446,464,465,466,467,],[-59,-67,-68,-69,-126,139,-66,-73,-58,-60,-62,-63,139,139,-129,-80,-132,-59,-67,-68,-69,-81,-59,-66,-73,-59,-60,-123,-124,-125,-127,-128,-59,-59,-68,-69,-67,-61,-140,-83,-84,-123,-124,-125,-139,-90,-86,-89,-93,-54,-91,-87,-88,-85,-137,-138,-141,-92,-64,-73,-74,-75,-76,-77,-78,-65,-66,-67,-68,-69,-70,-71,-130,-131,-79,-133,-134,-135,-136,-223,-222,-72,-223,-222,-236,-237,-238,-235,]),'LOGIC_XOR':([53,54,57,58,59,60,61,62,63,64,65,66,71,72,73,75,76,110,111,112,113,144,145,148,149,164,166,195,196,197,198,199,201,223,224,225,226,228,229,232,233,234,235,236,237,242,243,244,245,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,275,276,278,279,280,281,282,304,305,334,445,446,464,465,466,467,],[-59,-67,-68,-69,-126,140,-66,-73,-58,-60,-62,-63,140,140,-129,-80,-132,-59,-67,-68,-69,-81,-59,-66,-73,-59,-60,-123,-124,-125,-127,-128,-59,-59,-68,-69,-67,-61,-140,-83,-84,-123,-124,-125,-139,-90,-86,-89,-93,-54,-91,-87,-88,-85,-137,-138,-141,-92,-64,-73,-74,-75,-76,-77,-78,-65,-66,-67,-68,-69,-70,-71,-130,-131,-79,-133,-134,-135,-136,-223,-222,-72,-223,-222,-236,-237,-238,-235,]),'MULTIPLY':([53,54,57,58,76,110,111,112,113,145,164,201,223,224,225,226,229,234,235,236,237,255,256,257,367,368,369,371,372,373,429,477,480,510,511,515,533,538,539,540,564,599,],[-139,-141,-137,-138,155,-139,-141,-137,-138,-139,-139,-139,-139,-137,-138,-141,-140,-137,-141,-138,-139,-137,-138,-141,-38,434,-39,-44,-45,-46,434,-41,434,-42,-43,-200,434,-197,-198,-199,434,-139,]),'DIVIDE':([53,54,57,58,76,110,111,112,113,145,164,201,223,224,225,226,229,234,235,236,237,255,256,257,367,368,369,371,372,373,429,477,480,510,511,515,533,538,539,540,564,599,],[-139,-141,-137,-138,156,-139,-141,-137,-138,-139,-139,-139,-139,-137,-138,-141,-140,-137,-141,-138,-139,-137,-138,-141,-38,435,-39,-44,-45,-46,435,-41,435,-42,-43,-200,435,-197,-198,-199,435,-139,]),'MODULE':([53,54,57,58,76,110,111,112,113,145,164,201,223,224,225,226,229,234,235,236,237,255,256,257,367,368,369,371,372,373,429,477,480,510,511,515,533,538,539,540,564,599,],[-139,-141,-137,-138,157,-139,-141,-137,-138,-139,-139,-139,-139,-137,-138,-141,-140,-137,-141,-138,-139,-137,-138,-141,-38,436,-39,-44,-45,-46,436,-41,436,-42,-43,-200,436,-197,-198,-199,436,-139,]),'POW':([53,54,57,58,76,110,111,112,113,145,164,201,223,224,225,226,229,234,235,236,237,255,256,257,367,368,369,371,372,373,429,477,480,510,511,515,533,538,539,540,564,599,],[-139,-141,-137,-138,158,-139,-141,-137,-138,-139,-139,-139,-139,-137,-138,-141,-140,-137,-141,-138,-139,-137,-138,-141,-38,437,-39,-44,-45,-46,437,-41,437,-42,-43,-200,437,-197,-198,-199,437,-139,]),'PLUS':([53,54,57,58,73,76,110,111,112,113,145,164,201,223,224,225,226,229,234,235,236,237,255,256,257,279,280,281,282,367,368,369,371,372,373,429,477,480,510,511,515,533,538,539,540,564,599,],[-139,-141,-137,-138,152,-132,-139,-141,-137,-138,-139,-139,-139,-139,-137,-138,-141,-140,-137,-141,-138,-139,-137,-138,-141,-133,-134,-135,-136,-38,432,-39,-44,-45,-46,432,-41,432,-42,-43,-200,432,-197,-198,-199,432,-139,]),'RIGHT_BRACKET':([59,85,104,188,189,195,196,197,198,199,216,219,327,385,386,412,413,414,415,420,443,444,518,],[-126,190,220,304,305,-123,-124,-125,-127,-128,326,327,-231,445,446,464,465,466,467,468,-211,-232,-212,]),'EXTENDS':([79,80,],[161,161,]),'IMPLEMENTS':([79,160,286,],[-264,285,-263,]),'LEFT_BRACE':([79,80,160,162,284,286,313,314,336,337,339,411,451,497,501,553,561,567,572,],[-264,-264,-266,287,335,-263,364,365,-265,-267,396,396,-268,396,530,565,569,573,577,]),'STRLEN':([82,86,88,118,119,120,121,122,123,124,125,126,127,315,366,431,432,433,434,435,436,437,508,583,],[175,-158,-159,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,375,375,375,-47,-48,-49,-50,-51,-52,375,175,]),'SUBSTR':([82,86,88,583,],[176,-158,-159,176,]),'COUNT':([82,86,88,118,119,120,121,122,123,124,125,126,127,315,366,431,432,433,434,435,436,437,508,583,],[177,-158,-159,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,374,374,374,-47,-48,-49,-50,-51,-52,374,177,]),'ARRAY_POP':([82,86,88,583,],[178,-158,-159,178,]),'FEGTS':([82,86,88,],[179,-158,-159,]),'READLINE':([82,86,88,],[180,-158,-159,]),'FN':([82,86,88,],[185,-158,-159,]),'PUBLIC':([287,335,338,387,390,448,450,522,523,559,568,588,603,],[-261,-270,392,392,-260,-269,-273,-275,-276,-274,-262,-272,-271,]),'PRIVATE':([287,335,338,387,390,448,450,522,523,559,568,588,603,],[-261,-270,393,393,-260,-269,-273,-275,-276,-274,-262,-272,-271,]),'PROTECTED':([287,335,338,387,390,448,450,522,523,559,568,588,603,],[-261,-270,394,394,-260,-269,-273,-275,-276,-274,-262,-272,-271,]),'STDIN':([299,],[352,]),'STATIC':([335,387,392,393,394,448,449,450,522,523,559,588,603,],[-270,-280,-277,-278,-279,-269,489,-273,-275,-276,-274,-272,-271,]),'COUNT_NORMAL':([404,],[458,]),'COUNT_RECURSIVE':([404,],[459,]),'ELSEIF':([469,586,],[500,500,]),'ELSE':([469,586,],[501,501,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,364,365,396,425,530,565,569,573,577,579,],[2,2,425,425,425,425,425,425,425,581,581,581,]),'print_statement':([0,2,364,365,396,425,497,530,565,569,573,577,579,],[3,3,3,3,3,3,527,3,3,3,3,3,3,]),'assignment':([0,2,364,365,396,425,530,565,569,573,577,579,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,82,364,365,396,425,530,565,569,573,577,579,],[5,5,171,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,364,365,396,425,530,565,569,573,577,579,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,364,365,396,425,530,565,569,573,577,579,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,364,365,396,425,530,565,569,573,577,579,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,364,365,396,425,530,565,569,573,577,579,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,364,365,396,425,530,565,569,573,577,579,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,364,365,396,425,449,530,565,569,573,577,579,],[13,13,13,13,13,13,492,13,13,13,13,13,13,]),'structure_array_principal':([0,2,82,297,364,365,396,425,439,530,565,569,573,577,579,],[14,14,14,347,14,14,14,14,483,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,82,297,364,365,396,425,439,530,565,569,573,577,579,],[15,15,15,348,15,15,15,15,484,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,77,82,114,115,128,129,133,134,135,136,364,365,396,425,426,470,530,565,569,573,577,579,],[16,16,56,56,56,56,16,56,56,56,56,56,56,56,56,16,16,16,16,56,56,16,16,16,16,16,16,]),'if_statement':([0,2,364,365,396,425,530,565,569,573,577,579,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,364,365,396,425,530,565,569,573,577,579,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,364,365,396,425,530,565,569,573,577,579,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,364,365,396,425,449,530,565,569,573,577,579,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,364,365,396,425,449,530,565,569,573,577,579,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,82,101,297,303,306,318,322,323,324,364,365,396,416,425,439,530,565,569,573,577,579,],[28,28,28,212,28,212,359,212,212,212,212,28,28,28,212,28,28,28,28,28,28,28,28,]),'associative_array':([0,2,82,297,364,365,396,425,439,530,565,569,573,577,579,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,82,297,364,365,396,425,439,530,565,569,573,577,579,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,70,77,82,96,97,106,114,115,128,129,131,133,134,135,136,137,141,297,361,363,364,365,396,425,426,438,439,470,529,530,565,569,573,577,579,583,],[31,31,67,67,67,147,67,183,147,147,147,67,67,67,67,244,67,67,67,67,147,251,350,419,421,31,31,31,31,67,482,350,67,147,31,31,31,585,585,585,600,]),'matrix_firstform':([0,2,82,297,364,365,396,425,439,530,565,569,573,577,579,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,82,297,364,365,396,425,439,530,565,569,573,577,579,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,70,77,82,96,97,106,114,115,128,129,131,133,134,135,136,137,297,364,365,396,425,426,439,470,529,530,565,569,573,577,579,],[34,34,69,69,69,69,69,184,69,69,69,69,69,69,69,245,69,69,69,69,69,34,34,34,34,34,69,34,69,69,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,82,297,364,365,396,425,439,530,565,569,573,577,579,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,82,297,364,365,396,425,439,530,565,569,573,577,579,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,77,82,101,114,115,128,129,133,134,135,136,303,318,322,323,324,364,365,396,416,425,426,470,530,565,569,573,577,579,],[37,37,37,37,37,37,37,211,37,37,37,37,37,37,37,37,211,211,211,211,211,37,37,37,211,37,37,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,77,82,114,115,128,129,133,134,135,136,364,365,396,425,426,470,530,565,569,573,577,579,583,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,582,582,582,595,]),'printable_values':([10,11,50,77,114,115,128,129,133,134,135,136,426,470,],[51,78,107,159,230,231,239,240,246,247,248,249,474,504,]),'values':([10,11,50,70,77,82,94,96,97,101,103,106,114,115,116,128,129,131,133,134,135,136,137,141,154,163,204,221,293,294,301,302,303,317,318,322,323,324,333,340,361,363,382,416,426,470,521,524,529,541,543,557,583,],[52,52,52,146,52,165,193,146,146,210,219,146,52,52,232,52,52,243,52,52,52,52,146,252,277,292,316,292,292,292,292,292,356,376,377,210,210,210,277,398,418,422,443,210,473,502,544,292,146,556,292,292,593,]),'conditional':([10,11,50,70,77,82,96,97,106,114,115,128,129,133,134,135,136,426,470,529,],[55,55,108,144,108,174,200,202,222,55,55,55,55,55,55,55,55,55,55,547,]),'boolean':([10,11,50,70,77,82,94,96,97,101,103,106,114,115,116,128,129,131,133,134,135,136,137,141,154,163,204,221,293,294,301,302,303,317,318,322,323,324,333,340,361,363,382,416,426,470,521,524,529,541,543,557,583,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'boolean_expression':([10,11,50,70,77,82,96,97,106,114,115,128,129,133,134,135,136,137,426,470,529,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,250,60,60,60,]),'comparation':([10,11,50,70,77,82,96,97,106,114,115,128,129,133,134,135,136,137,426,470,529,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'logic_not_sentence':([10,11,50,70,77,82,96,97,106,114,115,128,129,133,134,135,136,137,426,470,529,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'logic_expression':([10,11,50,70,77,82,96,97,106,114,115,128,129,133,134,135,136,137,426,470,529,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'expression':([10,11,50,70,77,82,96,97,106,114,115,116,128,129,133,134,135,136,137,142,152,153,238,426,470,497,529,583,],[68,68,109,68,109,167,68,68,109,68,68,233,68,68,68,68,68,68,68,254,275,276,330,68,68,528,68,596,]),'true_boolean_types':([10,11,50,70,77,82,96,97,106,114,115,128,129,133,134,135,136,137,151,426,470,529,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,267,71,71,71,]),'false_boolean_types':([10,11,50,70,77,82,96,97,106,114,115,128,129,133,134,135,136,137,150,426,470,529,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,259,72,72,72,]),'term':([10,11,50,70,77,82,96,97,106,114,115,116,128,129,133,134,135,136,137,142,152,153,155,156,157,158,238,426,470,497,529,583,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,279,280,281,282,73,73,73,73,73,73,]),'factor':([10,11,50,70,77,82,96,97,106,114,115,116,128,129,133,134,135,136,137,142,152,153,155,156,157,158,238,426,470,497,529,583,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'assignment_operator':([23,584,],[82,82,]),'structure_matrix_second':([45,383,],[104,444,]),'printable_dividers':([52,53,55,56,108,110,473,502,],[114,128,133,135,133,128,114,114,]),'comparator_operator':([52,68,109,146,165,167,473,478,502,],[116,142,142,116,116,142,116,508,116,]),'logic_operator':([60,71,72,],[137,150,151,]),'class_extends_opt':([79,80,],[160,162,]),'function_invocation':([82,191,192,],[168,308,311,]),'string_special_function':([82,583,],[169,597,]),'array_special_function':([82,583,],[170,598,]),'input':([82,],[172,]),'special_function':([82,],[173,]),'arrow_function':([82,],[181,]),'anonymous_functions':([82,],[182,]),'values_array_indexed':([101,303,318,322,323,324,416,],[207,207,207,379,380,381,207,]),'structure_array':([101,102,303,488,],[208,216,208,518,]),'structure_matrix_first':([101,303,487,],[209,209,517,]),'key':([101,102,303,488,],[213,213,213,213,]),'class_implements_opt':([160,],[284,]),'params':([163,221,293,294,301,302,524,543,557,],[288,329,341,342,354,355,545,558,566,]),'real_params':([163,221,293,294,301,302,524,543,557,],[289,289,289,289,289,289,289,289,289,]),'empty':([163,221,293,294,301,302,524,543,557,],[290,290,290,290,290,290,290,290,290,]),'accessType':([191,192,],[309,312,]),'interface_list':([285,],[336,]),'interface_body':([287,],[338,]),'string_param':([295,296,440,],[343,346,486,]),'expression_for':([315,366,431,508,],[368,429,480,533,]),'number_values':([315,366,431,508,570,],[369,369,369,369,575,]),'length_operations':([315,366,431,508,],[371,371,371,371,]),'class_body':([335,],[387,]),'interface_method':([338,],[390,]),'visibility_opt':([338,387,],[391,449,]),'codeblock':([339,411,497,],[395,463,526,]),'count_param':([347,348,349,483,484,485,],[403,405,406,512,513,514,]),'body_statement':([364,365,396,425,530,565,569,],[424,428,453,472,548,571,574,]),'operator_aritmetic':([368,429,480,533,564,],[431,431,431,431,570,]),'class_member':([387,],[448,]),'class_attribute':([387,],[450,]),'int_param':([402,495,],[454,525,]),'condition_for':([430,],[479,]),'elseif_statement':([469,586,],[498,601,]),'else_statement':([469,586,],[499,602,]),'increment_statement':([509,],[535,]),'method_body':([573,577,579,],[578,587,591,]),'classStatement':([573,577,579,],[579,579,579,]),'return_form':([573,577,579,],[580,580,589,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('body_statement -> RETURN printable_values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',77),
  ('body_statement -> sentence RETURN printable_values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',78),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',85),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',93),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',94),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',95),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',100),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',108),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',109),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',110),
  ('expression_for -> length_operations','expression_for',1,'p_expression_for','syntaxAnalysis.py',111),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',116),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',117),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',125),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',126),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',127),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',134),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',135),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',142),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',143),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',144),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',150),
  ('boolean_expression -> VARIABLE','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',151),
  ('boolean_expression -> IDENTIFIER','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',152),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',153),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',154),
  ('boolean_expression -> logic_expression','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',155),
  ('logic_expression -> true_boolean_types logic_operator false_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',161),
  ('logic_expression -> false_boolean_types logic_operator true_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',162),
  ('true_boolean_types -> TRUE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',167),
  ('true_boolean_types -> STRING','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',168),
  ('true_boolean_types -> INTEGER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',169),
  ('true_boolean_types -> FLOAT','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',170),
  ('true_boolean_types -> VARIABLE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',171),
  ('true_boolean_types -> IDENTIFIER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',172),
  ('true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN','true_boolean_types',4,'p_true_boolean_types','syntaxAnalysis.py',173),
  ('false_boolean_types -> FALSE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',178),
  ('false_boolean_types -> STRING','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',179),
  ('false_boolean_types -> INTEGER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',180),
  ('false_boolean_types -> VARIABLE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',181),
  ('false_boolean_types -> IDENTIFIER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',182),
  ('false_boolean_types -> FLOAT','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',183),
  ('false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN','false_boolean_types',3,'p_false_boolean_types','syntaxAnalysis.py',184),
  ('false_boolean_types -> NULL','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',185),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',193),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',194),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',201),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',202),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',203),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',204),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',205),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',206),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',207),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',208),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',209),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',210),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',211),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',217),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',218),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',219),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',220),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',221),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',222),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',223),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',224),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',225),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',226),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',235),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',236),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',237),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',238),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',243),
  ('printable_values -> values printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',244),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',245),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',246),
  ('printable_values -> VARIABLE printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',247),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',248),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',249),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',250),
  ('printable_values -> conditional printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',251),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',252),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',253),
  ('printable_values -> structure_object_principal printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',254),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',255),
  ('printable_dividers -> COMMA','printable_dividers',1,'p_printable_dividers','syntaxAnalysis.py',260),
  ('printable_dividers -> STRING_CONCATENATION','printable_dividers',1,'p_printable_dividers','syntaxAnalysis.py',261),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',267),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',268),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',269),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',270),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',276),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',277),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',283),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',284),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',285),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',291),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',292),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',293),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',294),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',295),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',302),
  ('factor -> FLOAT','factor',1,'p_factor','syntaxAnalysis.py',303),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',304),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',305),
  ('factor -> STRING','factor',1,'p_factor','syntaxAnalysis.py',306),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',333),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',334),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',340),
  ('variable_assignment -> VARIABLE assignment_operator IDENTIFIER','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',341),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',342),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',343),
  ('variable_assignment -> VARIABLE assignment_operator string_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',344),
  ('variable_assignment -> VARIABLE assignment_operator array_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',345),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',346),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',347),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',348),
  ('variable_assignment -> VARIABLE assignment_operator conditional','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',349),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',350),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',351),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',352),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',353),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',360),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',361),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',367),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',368),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',374),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',380),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',391),
  ('function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',392),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',398),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',399),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',405),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',406),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',407),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',408),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',418),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',426),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',432),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',433),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',439),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',440),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',441),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',447),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',453),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',459),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',460),
  ('string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','string_special_function',4,'p_string_special_function','syntaxAnalysis.py',468),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN','string_special_function',6,'p_string_special_function','syntaxAnalysis.py',469),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN','string_special_function',8,'p_string_special_function','syntaxAnalysis.py',470),
  ('string_param -> STRING','string_param',1,'p_string_param','syntaxAnalysis.py',475),
  ('string_param -> VARIABLE','string_param',1,'p_string_param','syntaxAnalysis.py',476),
  ('int_param -> INTEGER','int_param',1,'p_int_param','syntaxAnalysis.py',480),
  ('int_param -> VARIABLE','int_param',1,'p_int_param','syntaxAnalysis.py',481),
  ('array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',490),
  ('array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',491),
  ('array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',492),
  ('array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN','array_special_function',4,'p_array_special_function','syntaxAnalysis.py',493),
  ('count_param -> COMMA COUNT_NORMAL','count_param',2,'p_count_param','syntaxAnalysis.py',499),
  ('count_param -> COMMA COUNT_RECURSIVE','count_param',2,'p_count_param','syntaxAnalysis.py',500),
  ('count_param -> <empty>','count_param',0,'p_count_param','syntaxAnalysis.py',501),
  ('length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',505),
  ('length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',506),
  ('length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',507),
  ('length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','length_operations',4,'p_length_operations','syntaxAnalysis.py',508),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',520),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',521),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',522),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',529),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',530),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',531),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',532),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',537),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',541),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',542),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',548),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',549),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',555),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',556),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',561),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',562),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',563),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',564),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',565),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',566),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',571),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',576),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',577),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',583),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',584),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',585),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',586),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',587),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',592),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',596),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',601),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',602),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',608),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',609),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',615),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',616),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',617),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',618),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',623),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',624),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',630),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',639),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',640),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',645),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',646),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',650),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',651),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',652),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',653),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',654),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',655),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',656),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',657),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',658),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',659),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',665),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',666),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',671),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',675),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',679),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',680),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',684),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',688),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',689),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',693),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',694),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',698),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',699),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',703),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',704),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',708),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',709),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',710),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',715),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',716),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',717),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',722),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',723),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',724),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',725),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',729),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',730),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',731),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',732),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',733),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',739),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',740),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',741),
  ('return_form -> RETURN expression SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',742),
  ('return_form -> RETURN string_special_function SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',743),
  ('return_form -> RETURN array_special_function SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',744),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',749),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',750),
]
