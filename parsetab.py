
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY BREAK CLASS COLON COMMA COMMENT CONST DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE COMMA printable_values\n                     | STRING STRING_CONCATENATION STRING\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal COMMA printable_values\n\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN  access_method_object SEMICOLON\n                | RETURN SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[10,10,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,10,10,-174,-190,-204,-138,10,-130,-194,-193,-195,-200,-198,-199,10,-168,-167,-203,-201,-14,-13,-143,-15,-16,10,-20,10,10,10,-28,10,10,-234,-188,-152,-17,-235,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[11,11,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,11,11,-174,-190,-204,-138,11,-130,-194,-193,-195,-200,-198,-199,11,-168,-167,-203,-201,-14,-13,-143,-15,-16,11,-20,11,11,11,-28,11,11,-234,-188,-152,-17,-235,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[17,17,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,17,17,-174,-190,-204,-138,17,-130,-194,-193,-195,-200,-198,-199,17,-168,-167,-203,-201,-14,-13,-143,-15,-16,17,-20,17,17,17,-28,17,17,-234,-188,-152,-17,-235,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[18,18,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,18,18,-174,-190,-204,-138,18,-130,-194,-193,-195,-200,-198,-199,18,-168,-167,-203,-201,-14,-13,-143,-15,-16,18,-20,18,18,18,-28,18,18,-234,-188,-152,-17,-235,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,76,80,82,85,87,89,99,135,169,228,240,241,243,244,245,246,247,254,255,261,263,266,269,279,284,285,295,301,304,306,307,308,309,310,311,312,313,316,326,327,328,330,331,332,334,352,353,354,355,356,357,367,368,374,383,388,390,391,408,409,413,437,440,443,446,447,451,454,455,457,459,460,463,464,466,470,476,477,478,],[22,22,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,161,-124,-125,-166,-171,-172,-189,-96,-95,-206,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-215,-225,-186,22,22,-174,-190,-225,-204,-205,359,-222,-223,-224,-138,22,-130,-194,-193,-195,-200,-198,-199,22,-168,-167,-203,-214,384,-218,-201,-14,-13,405,-143,-15,-16,-220,-221,22,-219,-20,22,-207,22,22,-28,22,22,-234,-188,-152,-17,-217,-235,-18,-19,-216,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,58,59,61,62,68,71,76,79,80,82,85,87,88,89,90,91,92,99,100,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,122,123,124,125,126,127,128,129,130,135,136,137,138,139,140,141,146,155,169,191,234,238,239,240,241,243,244,245,246,247,250,254,255,261,263,265,266,271,277,278,279,281,283,284,285,286,295,301,304,306,309,310,311,312,313,316,326,327,328,330,331,332,334,339,340,341,342,343,344,345,346,347,352,353,354,355,356,357,367,368,374,388,390,391,398,399,408,409,410,412,413,418,419,422,430,435,437,440,443,447,451,454,455,457,459,460,461,463,464,466,470,476,477,478,],[23,23,-5,-6,-7,-8,-9,53,53,-146,-147,-148,-10,-11,-12,83,84,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,104,-97,-98,-99,-100,132,104,147,162,-124,-125,-166,-171,168,-172,171,171,173,-189,193,53,201,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,53,204,162,53,53,171,-52,-53,-54,214,201,217,-96,201,201,201,201,201,201,232,201,-95,232,232,232,232,-168,-167,-191,-192,-202,-196,-197,287,-153,-154,-155,-175,302,-215,314,321,323,-186,326,332,23,23,287,-174,-190,-225,-204,-222,-223,-224,-138,23,-130,-194,-193,-195,-200,-198,-199,23,376,287,-44,-45,-46,-47,-48,-49,379,-168,-167,-203,-214,385,-218,-201,-14,-13,-143,-15,-16,287,416,-220,-221,232,171,23,432,433,232,442,232,-219,-20,23,23,462,-28,462,462,-234,-188,474,-152,-17,-217,-235,-18,-19,-216,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,399,413,416,440,443,447,451,454,455,457,459,460,462,463,464,470,476,477,],[24,24,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,77,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,24,24,-174,-190,-204,-138,24,-130,-194,-193,-195,-200,-198,-199,24,-168,-167,-203,-201,-14,-13,-143,-15,-16,418,24,427,-20,24,24,24,-28,24,24,-234,-188,77,-152,-17,-235,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,399,413,416,440,443,447,451,454,455,457,459,460,462,463,464,470,476,477,],[25,25,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,78,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,25,25,-174,-190,-204,-138,25,-130,-194,-193,-195,-200,-198,-199,25,-168,-167,-203,-201,-14,-13,-143,-15,-16,419,25,428,-20,25,25,25,-28,25,25,-234,-188,78,-152,-17,-235,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[39,39,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,39,39,-174,-190,-204,-138,39,-130,-194,-193,-195,-200,-198,-199,39,-168,-167,-203,-201,-14,-13,-143,-15,-16,39,-20,39,39,39,-28,39,39,-234,-188,-152,-17,-235,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[40,40,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,40,40,-174,-190,-204,-138,40,-130,-194,-193,-195,-200,-198,-199,40,-168,-167,-203,-201,-14,-13,-143,-15,-16,40,-20,40,40,40,-28,40,40,-234,-188,-152,-17,-235,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[41,41,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,41,41,-174,-190,-204,-138,41,-130,-194,-193,-195,-200,-198,-199,41,-168,-167,-203,-201,-14,-13,-143,-15,-16,41,-20,41,41,41,-28,41,41,-234,-188,-152,-17,-235,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,266,279,284,285,295,301,304,306,309,310,311,312,313,316,326,327,328,330,331,332,334,352,353,354,355,356,357,367,368,374,388,390,391,408,409,413,437,440,443,447,451,454,455,457,459,460,463,464,466,470,476,477,478,],[42,42,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-215,-186,42,42,-174,-190,-225,-204,-222,-223,-224,-138,42,-130,-194,-193,-195,-200,-198,-199,42,-168,-167,-203,-214,42,-218,-201,-14,-13,-143,-15,-16,-220,-221,42,-219,-20,42,42,42,-28,42,42,-234,-188,-152,-17,-217,-235,-18,-19,-216,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,266,279,284,285,295,301,304,306,309,310,311,312,313,316,326,327,328,330,331,332,334,352,353,354,355,356,357,367,368,374,388,390,391,408,409,413,437,440,443,447,451,454,455,457,459,460,463,464,466,470,476,477,478,],[43,43,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-215,-186,43,43,-174,-190,-225,-204,-222,-223,-224,-138,43,-130,-194,-193,-195,-200,-198,-199,43,-168,-167,-203,-214,43,-218,-201,-14,-13,-143,-15,-16,-220,-221,43,-219,-20,43,43,43,-28,43,43,-234,-188,-152,-17,-217,-235,-18,-19,-216,]),'ARRAY':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,76,80,82,85,87,89,95,99,135,169,240,241,242,243,244,245,246,247,253,254,255,257,258,259,261,263,279,284,285,295,301,306,312,313,316,325,326,327,328,330,331,332,334,352,353,354,367,368,374,381,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[44,44,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,44,-124,-125,-166,-171,-172,176,-189,-96,-95,-168,-167,280,-191,-192,-202,-196,-197,280,-153,-154,280,280,280,-155,-175,-186,44,44,-174,-190,-204,-138,44,-130,280,-194,-193,-195,-200,-198,-199,44,-168,-167,-203,-201,-14,-13,402,-143,-15,-16,44,-20,44,44,44,-28,44,44,-234,-188,-152,-17,-235,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,58,59,61,62,76,80,82,85,87,89,99,104,132,135,147,169,171,193,204,214,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,300,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,379,388,390,391,413,440,443,447,451,454,455,457,459,460,462,463,464,470,474,476,477,],[45,45,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,79,-149,-150,-151,-152,-169,-170,-173,-187,-188,96,97,-3,-4,120,-97,-98,-99,-100,45,-124,-125,-166,-171,-172,-189,120,120,-96,79,-95,120,120,120,265,277,278,-191,-192,282,-196,-197,-153,-154,-155,-175,-186,45,45,-174,97,-190,-204,-138,45,-130,265,-193,-195,-200,-198,265,45,-168,-167,-203,-201,-14,-13,265,-143,-15,-16,45,-20,45,45,45,-28,45,45,-234,-188,79,-152,-17,-235,265,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,58,59,61,62,71,76,80,82,85,87,89,95,99,105,117,122,123,135,169,240,241,243,244,245,246,247,253,254,255,257,258,259,261,263,279,284,285,295,301,306,312,313,316,325,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[46,46,-5,-6,-7,-8,-9,46,46,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,46,-97,-98,-99,-100,46,46,-124,-125,-166,-171,-172,46,-189,46,46,46,46,-96,-95,-168,-167,-191,-192,-202,-196,-197,46,-153,-154,46,46,46,-155,-175,-186,46,46,-174,-190,-204,-138,46,-130,46,-194,-193,-195,-200,-198,-199,46,-168,-167,-203,-201,-14,-13,-143,-15,-16,46,-20,46,46,46,-28,46,46,-234,-188,-152,-17,-235,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,295,301,306,312,316,326,327,328,330,331,332,352,353,354,367,368,374,388,390,391,440,454,464,476,477,],[0,-2,-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-1,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,-174,-190,-204,-138,-130,-194,-193,-195,-200,-198,-199,-168,-167,-203,-201,-14,-13,-143,-15,-16,-20,-28,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,72,77,78,83,84,85,87,89,99,131,132,135,147,148,149,150,151,152,153,158,159,167,168,169,190,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,240,241,243,244,245,246,247,251,254,255,256,261,263,279,287,288,289,291,292,295,301,316,317,318,326,327,328,330,331,332,336,348,352,353,362,363,364,365,366,367,369,370,372,375,377,378,385,386,388,394,400,401,411,415,423,438,460,461,463,468,471,473,],[48,49,-112,-113,-146,-147,-148,-126,-127,-149,-150,-151,85,-169,-170,87,89,-173,-187,-188,-83,-85,-87,-96,-91,-93,-95,-97,-98,-50,-99,-100,-55,-57,-101,-104,-84,-120,-121,-122,-123,-166,-171,-172,-189,-58,-59,-96,-110,-114,-115,-116,-117,-118,-119,-139,-140,-184,-185,-95,263,-81,-56,-111,-86,-60,-61,-110,-88,-90,-67,-63,-66,-70,-89,-92,-94,-51,-68,-64,-65,-62,-109,-69,-102,-103,-105,-106,-107,-108,-82,-168,-167,-191,-192,-202,-196,-197,-128,-153,-154,295,-155,-175,-186,-36,339,-37,-42,-43,-174,-190,-130,-144,-145,-194,-193,-195,-200,-198,-199,373,-129,-168,-167,-142,-181,-182,-183,-180,-201,395,396,397,-39,399,-38,408,409,-143,414,-40,-41,-141,-35,437,446,470,472,85,479,480,481,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,451,454,455,457,459,460,463,464,470,476,477,],[-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,335,335,-174,-190,-204,-138,335,-130,-194,-193,-195,-200,-198,-199,369,-168,-167,-203,-201,-14,-13,-143,-15,-16,335,-20,335,335,461,-28,461,461,-234,-188,-152,-17,-235,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,240,241,243,244,245,246,247,254,255,261,263,279,284,285,295,301,306,312,313,316,326,327,328,330,331,332,334,352,353,354,367,368,374,388,390,391,413,440,443,447,454,457,459,460,463,464,470,476,477,],[-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-186,336,336,-174,-190,-204,-138,336,-130,-194,-193,-195,-200,-198,-199,370,-168,-167,-203,-201,-14,-13,-143,-15,-16,336,-20,336,336,-28,468,-234,-188,-152,-17,-235,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,58,59,61,62,85,87,89,99,135,169,228,240,241,243,244,245,246,247,254,255,261,263,266,269,279,295,301,304,306,307,312,316,326,327,328,330,331,332,333,334,337,352,353,354,355,357,360,367,368,371,373,374,388,390,391,395,396,397,408,409,414,426,437,440,446,449,452,454,456,457,458,459,460,463,464,465,466,467,469,470,472,476,477,478,479,480,481,],[-5,-6,-7,-8,-9,-146,-147,-148,-10,-11,-12,-149,-150,-151,-152,-169,-170,-173,-187,-188,-3,-4,-97,-98,-99,-100,-166,-171,-172,-189,-96,-95,-206,-168,-167,-191,-192,-202,-196,-197,-153,-154,-155,-175,-215,306,-186,-174,-190,354,-204,-205,-138,-130,-194,-193,-195,-200,-198,-199,368,-21,374,-168,-167,-203,-214,-218,388,-201,-14,-25,-27,-13,-143,-15,-16,-23,-24,-26,-220,-221,-22,440,-219,-20,-207,454,464,-28,466,-226,-228,-234,-188,-152,-17,478,-217,-227,-230,-235,-233,-18,-19,-216,-229,-231,-232,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,68,71,75,76,80,82,90,91,99,100,105,106,107,108,109,110,111,112,113,114,115,116,117,122,123,124,125,126,127,129,136,137,138,139,140,141,154,155,156,157,160,161,176,245,250,280,286,290,340,341,342,343,344,345,346,387,392,398,402,406,412,421,],[50,71,90,91,92,94,95,100,100,100,146,155,-124,-125,100,100,191,100,100,155,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,100,100,100,100,-52,-53,-54,155,155,155,155,155,155,155,234,155,236,237,238,239,253,234,286,325,286,347,286,-44,-45,-46,-47,-48,-49,410,412,286,420,422,100,435,]),'STRING':([10,11,50,68,71,76,80,82,88,90,91,94,95,96,97,100,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,146,174,191,234,237,238,239,252,253,257,258,259,271,281,283,299,325,335,369,382,407,410,412,420,422,435,461,],[54,54,54,135,54,135,-124,-125,135,135,135,175,185,188,135,135,54,135,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,54,203,135,208,54,54,135,-52,-53,-54,135,135,135,135,135,274,135,135,135,135,135,135,135,135,135,135,135,135,135,135,188,135,135,135,135,135,135,135,]),'INTEGER':([10,11,50,68,71,76,79,80,82,88,90,91,95,96,97,100,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,122,123,124,125,126,127,128,129,136,137,138,139,140,141,146,155,174,191,234,238,239,250,252,253,257,258,259,265,271,277,278,281,282,283,286,299,325,335,340,341,342,343,344,345,346,369,382,398,407,410,412,420,422,429,435,448,461,],[57,57,57,57,57,57,163,-124,-125,169,57,57,184,187,169,194,57,57,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,57,169,163,57,57,57,-52,-53,-54,169,216,216,216,216,216,216,216,169,216,169,169,169,169,169,291,169,169,169,169,169,303,169,322,324,169,329,169,291,169,169,169,291,-44,-45,-46,-47,-48,-49,169,187,291,169,169,57,169,169,441,169,291,169,]),'FLOAT':([10,11,50,68,71,76,80,82,88,90,91,95,97,100,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,128,146,174,191,234,238,239,250,252,253,257,258,259,271,281,283,286,299,325,335,340,341,342,343,344,345,346,369,398,407,410,412,420,422,435,448,461,],[58,58,58,58,58,58,-124,-125,58,58,58,58,58,58,58,58,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,58,58,58,58,58,-52,-53,-54,58,58,58,58,58,58,58,292,58,58,58,58,58,58,58,58,292,58,58,58,292,-44,-45,-46,-47,-48,-49,58,292,58,58,58,58,58,58,292,58,]),'TRUE':([10,11,50,68,71,76,80,82,88,90,91,95,97,100,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,128,146,174,191,234,238,239,252,253,257,258,259,271,281,283,299,325,335,369,407,410,412,420,422,435,461,],[61,61,61,61,61,61,-124,-125,61,61,61,61,61,61,61,61,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,61,61,61,61,61,-52,-53,-54,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FALSE':([10,11,50,68,71,76,80,82,88,90,91,95,97,100,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,128,146,174,191,234,238,239,252,253,257,258,259,271,281,283,299,325,335,369,407,410,412,420,422,435,461,],[62,62,62,62,62,62,-124,-125,62,62,62,62,62,62,62,62,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,62,62,62,62,62,-52,-53,-54,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'LOGIC_NOT':([10,11,50,68,71,90,91,100,105,117,122,123,124,125,126,127,412,],[68,68,68,68,68,68,68,68,68,68,68,68,68,-52,-53,-54,68,]),'IDENTIFIER':([17,18,22,42,46,76,80,82,107,108,109,110,111,112,113,114,115,116,144,165,166,226,250,286,305,340,341,342,343,344,345,346,359,384,398,405,],[73,74,75,93,99,154,-124,-125,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,227,245,245,268,290,290,358,290,-44,-45,-46,-47,-48,-49,387,406,290,421,]),'MINUS':([23,31,53,57,65,69,70,104,132,147,171,193,194,197,201,216,220,221,222,223,240,241,287,288,289,291,292,338,352,353,375,378,400,401,415,442,462,463,474,475,],[81,86,81,-109,86,137,-104,81,-110,81,-110,-110,-109,-111,-110,-109,-105,-106,-107,-108,-168,-167,-36,342,-37,-42,-43,342,-168,-167,-39,342,-40,-41,342,342,81,86,81,86,]),'EQUALS':([23,34,93,164,173,183,184,185,187,188,244,245,247,319,363,364,365,366,367,385,416,462,],[80,88,174,242,250,260,-158,-159,-158,-159,281,-202,283,361,-181,-182,-183,-180,-201,407,430,80,]),'PLUS_EQUALS':([23,416,462,],[82,429,82,]),'COMMA':([37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,99,102,104,131,132,135,169,175,180,181,182,184,185,196,197,199,200,201,204,205,206,207,211,212,213,214,215,216,217,218,219,220,221,222,223,230,232,233,240,241,243,244,245,246,247,254,262,267,268,294,301,314,315,316,326,327,328,330,331,332,349,350,352,353,358,363,364,365,366,367,],[-187,-188,105,117,-96,122,123,-95,-97,-98,-50,-99,-100,-55,-57,-101,-104,-189,122,117,-58,-59,-96,-95,252,257,258,259,-95,-96,-56,-111,-60,-61,-110,-67,-63,-66,-70,-51,-68,-64,-65,-62,-109,-69,-102,-103,-105,-106,-107,-108,271,-133,-134,-168,-167,-191,-192,-202,-196,-197,-153,300,305,-212,257,-190,-135,-136,-130,-194,-193,-195,-200,-198,-199,381,382,-168,-167,-213,-181,-182,-183,-180,-201,]),'RIGHT_PAREN':([37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,99,101,102,103,104,131,132,135,142,146,169,170,172,177,178,179,180,181,182,184,185,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,229,230,231,232,233,234,235,238,239,240,241,243,244,245,246,247,254,264,272,273,274,275,276,287,289,291,292,293,294,296,297,298,301,314,315,316,326,327,328,330,331,332,338,349,350,352,353,363,364,365,366,367,375,378,379,380,400,401,403,404,410,417,422,424,425,427,428,432,433,434,435,436,441,444,453,],[-187,-188,-85,-87,-96,-91,-93,-95,-97,-98,-50,-99,-100,-55,-57,-101,-104,-189,195,196,197,-87,-58,-59,-96,224,-137,-95,248,249,254,255,256,-160,-162,-164,-95,-96,-137,196,-110,-109,-56,-111,-86,-60,-61,-110,-88,-90,-67,-63,-66,-70,-89,-92,-94,-51,-68,-64,-65,-62,-109,-69,-102,-103,-105,-106,-107,-108,270,-131,-132,-133,-134,-137,197,-137,-137,-168,-167,-191,-192,-202,-196,-197,-153,301,316,317,318,319,320,-36,-37,-42,-43,348,349,-161,-163,-165,-190,-135,-136,-130,-194,-193,-195,-200,-198,-199,375,-178,-156,-168,-167,-181,-182,-183,-180,-201,-39,-38,400,401,-40,-41,-179,-157,-137,431,-137,438,439,-29,-30,-31,-32,349,-137,445,-33,450,-34,]),'EQUALS_EQUALS':([52,53,54,57,58,59,61,62,65,66,67,69,70,103,104,132,133,134,135,171,193,194,197,201,216,218,219,220,221,222,223,240,241,363,364,365,366,376,],[107,119,-96,-95,-97,-98,-99,-100,128,107,130,-101,-104,107,119,119,107,128,-96,119,119,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,-168,-167,-181,-182,-183,-180,107,]),'IDENTICAL':([52,53,54,57,58,59,61,62,66,69,70,103,104,132,133,135,171,193,194,197,201,216,218,219,220,221,222,223,376,],[108,-110,-96,-95,-97,-98,-99,-100,108,-101,-104,108,-110,-110,108,-96,-110,-110,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,108,]),'NOT_EQUALS':([52,53,54,57,58,59,61,62,66,69,70,103,104,132,133,135,171,193,194,197,201,216,218,219,220,221,222,223,376,],[109,-110,-96,-95,-97,-98,-99,-100,109,-101,-104,109,-110,-110,109,-96,-110,-110,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,109,]),'NOT_IDENTICAL':([52,53,54,57,58,59,61,62,66,69,70,103,104,132,133,135,171,193,194,197,201,216,218,219,220,221,222,223,376,],[110,-110,-96,-95,-97,-98,-99,-100,110,-101,-104,110,-110,-110,110,-96,-110,-110,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,110,]),'SMALL_THAN':([52,53,54,57,58,59,61,62,66,69,70,103,104,132,133,135,171,193,194,197,201,216,218,219,220,221,222,223,376,],[111,-110,-96,-95,-97,-98,-99,-100,111,-101,-104,111,-110,-110,111,-96,-110,-110,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,111,]),'GREATER_THAN':([52,53,54,57,58,59,61,62,66,69,70,81,86,103,104,132,133,135,171,193,194,197,201,216,218,219,220,221,222,223,260,361,376,],[112,-110,-96,-95,-97,-98,-99,-100,112,-101,-104,165,166,112,-110,-110,112,-96,-110,-110,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,299,389,112,]),'SMALL_EQUALS_TO':([52,53,54,57,58,59,61,62,66,69,70,103,104,132,133,135,171,193,194,197,201,216,218,219,220,221,222,223,376,],[113,-110,-96,-95,-97,-98,-99,-100,113,-101,-104,113,-110,-110,113,-96,-110,-110,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,113,]),'GREATER_EQUALS_TO':([52,53,54,57,58,59,61,62,66,69,70,103,104,132,133,135,171,193,194,197,201,216,218,219,220,221,222,223,376,],[114,-110,-96,-95,-97,-98,-99,-100,114,-101,-104,114,-110,-110,114,-96,-110,-110,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,114,]),'SPACECRAFT':([52,53,54,57,58,59,61,62,66,69,70,103,104,132,133,135,171,193,194,197,201,216,218,219,220,221,222,223,376,],[115,-110,-96,-95,-97,-98,-99,-100,115,-101,-104,115,-110,-110,115,-96,-110,-110,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,115,]),'NULL_FUSION':([52,53,54,57,58,59,61,62,66,69,70,103,104,132,133,135,171,193,194,197,201,216,218,219,220,221,222,223,376,],[116,-110,-96,-95,-97,-98,-99,-100,116,-101,-104,116,-110,-110,116,-96,-110,-110,-95,-111,-110,-109,-102,-103,-105,-106,-107,-108,116,]),'STRING_CONCATENATION':([53,54,104,],[118,121,118,]),'MULTIPLY':([53,57,70,104,132,147,171,193,194,197,201,216,287,288,289,291,292,338,375,378,400,401,415,442,],[-110,-109,138,-110,-110,-110,-110,-110,-109,-111,-110,-109,-36,343,-37,-42,-43,343,-39,343,-40,-41,343,343,]),'DIVIDE':([53,57,70,104,132,147,171,193,194,197,201,216,287,288,289,291,292,338,375,378,400,401,415,442,],[-110,-109,139,-110,-110,-110,-110,-110,-109,-111,-110,-109,-36,344,-37,-42,-43,344,-39,344,-40,-41,344,344,]),'MODULE':([53,57,70,104,132,147,171,193,194,197,201,216,287,288,289,291,292,338,375,378,400,401,415,442,],[-110,-109,140,-110,-110,-110,-110,-110,-109,-111,-110,-109,-36,345,-37,-42,-43,345,-39,345,-40,-41,345,345,]),'POW':([53,57,70,104,132,147,171,193,194,197,201,216,287,288,289,291,292,338,375,378,400,401,415,442,],[-110,-109,141,-110,-110,-110,-110,-110,-109,-111,-110,-109,-36,346,-37,-42,-43,346,-39,346,-40,-41,346,346,]),'PLUS':([53,57,69,70,104,132,147,171,193,194,197,201,216,220,221,222,223,287,288,289,291,292,338,375,378,400,401,415,442,],[-110,-109,136,-104,-110,-110,-110,-110,-110,-109,-111,-110,-109,-105,-106,-107,-108,-36,341,-37,-42,-43,341,-39,341,-40,-41,341,341,]),'LOGIC_AND':([57,58,59,60,61,62,63,64,69,70,131,132,135,169,196,197,199,200,201,204,205,206,207,211,212,213,214,215,216,217,218,219,220,221,222,223,240,241,352,353,363,364,365,366,],[-95,-97,-98,125,-99,-100,-55,-57,-101,-104,-58,-59,-96,-95,-56,-111,-60,-61,-110,-67,-63,-66,-70,-51,-68,-64,-65,-62,-109,-69,-102,-103,-105,-106,-107,-108,-168,-167,-168,-167,-181,-182,-183,-180,]),'LOGIC_OR':([57,58,59,60,61,62,63,64,69,70,131,132,135,169,196,197,199,200,201,204,205,206,207,211,212,213,214,215,216,217,218,219,220,221,222,223,240,241,352,353,363,364,365,366,],[-95,-97,-98,126,-99,-100,-55,-57,-101,-104,-58,-59,-96,-95,-56,-111,-60,-61,-110,-67,-63,-66,-70,-51,-68,-64,-65,-62,-109,-69,-102,-103,-105,-106,-107,-108,-168,-167,-168,-167,-181,-182,-183,-180,]),'LOGIC_XOR':([57,58,59,60,61,62,63,64,69,70,131,132,135,169,196,197,199,200,201,204,205,206,207,211,212,213,214,215,216,217,218,219,220,221,222,223,240,241,352,353,363,364,365,366,],[-95,-97,-98,127,-99,-100,-55,-57,-101,-104,-58,-59,-96,-95,-56,-111,-60,-61,-110,-67,-63,-66,-70,-51,-68,-64,-65,-62,-109,-69,-102,-103,-105,-106,-107,-108,-168,-167,-168,-167,-181,-182,-183,-180,]),'RIGHT_BRACKET':([58,59,61,62,79,98,135,162,163,169,186,189,262,302,303,321,322,323,324,329,350,351,404,],[-97,-98,-99,-100,164,190,-96,240,241,-95,261,262,-176,352,353,363,364,365,366,367,-156,-177,-157,]),'EXTENDS':([73,74,],[144,144,]),'IMPLEMENTS':([73,143,227,],[-209,226,-208,]),'LEFT_BRACE':([73,74,143,145,225,227,248,249,267,268,270,320,358,389,393,431,439,445,450,],[-209,-209,-211,228,266,-208,284,285,-210,-212,313,313,-213,313,413,443,447,451,455,]),'FEGTS':([76,80,82,],[156,-124,-125,]),'READLINE':([76,80,82,],[157,-124,-125,]),'FN':([76,80,82,],[160,-124,-125,]),'PUBLIC':([228,266,269,304,307,355,357,408,409,437,446,466,478,],[-206,-215,309,309,-205,-214,-218,-220,-221,-219,-207,-217,-216,]),'PRIVATE':([228,266,269,304,307,355,357,408,409,437,446,466,478,],[-206,-215,310,310,-205,-214,-218,-220,-221,-219,-207,-217,-216,]),'PROTECTED':([228,266,269,304,307,355,357,408,409,437,446,466,478,],[-206,-215,311,311,-205,-214,-218,-220,-221,-219,-207,-217,-216,]),'STDIN':([236,],[273,]),'STATIC':([266,304,309,310,311,355,356,357,408,409,437,466,478,],[-215,-225,-222,-223,-224,-214,383,-218,-220,-221,-219,-217,-216,]),'ELSEIF':([368,464,],[392,392,]),'ELSE':([368,464,],[393,393,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,284,285,313,334,413,443,447,451,455,457,],[2,2,334,334,334,334,334,334,334,459,459,459,]),'print_statement':([0,2,284,285,313,334,413,443,447,451,455,457,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'assignment':([0,2,284,285,313,334,413,443,447,451,455,457,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,76,284,285,313,334,413,443,447,451,455,457,],[5,5,151,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,284,285,313,334,413,443,447,451,455,457,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,284,285,313,334,413,443,447,451,455,457,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,284,285,313,334,413,443,447,451,455,457,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,284,285,313,334,413,443,447,451,455,457,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,284,285,313,334,413,443,447,451,455,457,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,284,285,313,334,356,413,443,447,451,455,457,],[13,13,13,13,13,13,386,13,13,13,13,13,13,]),'structure_array_principal':([0,2,76,284,285,313,334,413,443,447,451,455,457,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,76,284,285,313,334,413,443,447,451,455,457,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,71,76,105,117,122,123,284,285,313,334,413,443,447,451,455,457,],[16,16,56,56,56,56,16,56,56,56,56,16,16,16,16,16,16,16,16,16,16,]),'if_statement':([0,2,284,285,313,334,413,443,447,451,455,457,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,284,285,313,334,413,443,447,451,455,457,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,284,285,313,334,413,443,447,451,455,457,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,284,285,313,334,356,413,443,447,451,455,457,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,284,285,313,334,356,413,443,447,451,455,457,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,76,95,242,253,257,258,259,284,285,313,325,334,413,443,447,451,455,457,],[28,28,28,182,279,182,182,182,182,28,28,28,182,28,28,28,28,28,28,28,]),'associative_array':([0,2,76,284,285,313,334,413,443,447,451,455,457,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,76,284,285,313,334,413,443,447,451,455,457,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,68,71,76,90,91,100,105,117,119,122,123,124,128,281,283,284,285,313,334,347,412,413,443,447,451,455,457,461,],[31,31,65,65,65,134,65,31,134,134,134,65,65,206,65,65,134,212,328,330,31,31,31,31,380,134,31,31,31,463,463,463,475,]),'matrix_firstform':([0,2,76,284,285,313,334,413,443,447,451,455,457,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,76,284,285,313,334,413,443,447,451,455,457,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,68,71,76,90,91,100,105,117,119,122,123,124,284,285,313,334,412,413,443,447,451,455,457,],[34,34,67,67,67,67,67,34,67,67,67,67,67,207,67,67,67,34,34,34,34,67,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,76,284,285,313,334,413,443,447,451,455,457,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,76,284,285,313,334,413,443,447,451,455,457,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,71,76,95,105,117,122,123,253,257,258,259,284,285,313,325,334,413,443,447,451,455,457,],[37,37,37,37,37,37,37,181,37,37,37,37,181,181,181,181,37,37,37,181,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,71,76,105,117,122,123,284,285,313,334,413,443,447,451,455,457,461,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,460,460,460,473,]),'printable_values':([10,11,50,71,105,117,122,123,],[51,72,101,142,198,202,209,210,]),'values':([10,11,50,68,71,76,88,90,91,95,97,100,105,106,117,119,122,123,124,128,146,174,191,234,238,239,252,253,257,258,259,271,281,283,299,325,335,369,407,410,412,420,422,435,461,],[52,52,52,133,52,148,167,133,133,180,189,133,52,199,52,205,52,52,133,213,233,251,233,233,233,233,293,294,180,180,180,315,327,331,350,180,372,394,423,233,133,434,233,233,471,]),'conditional':([10,11,50,68,71,90,91,100,105,117,122,123,412,],[55,55,102,131,102,170,172,192,55,55,55,55,425,]),'boolean':([10,11,50,68,71,76,88,90,91,95,97,100,105,106,117,119,122,123,124,128,146,174,191,234,238,239,252,253,257,258,259,271,281,283,299,325,335,369,407,410,412,420,422,435,461,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'boolean_expression':([10,11,50,68,71,90,91,100,105,117,122,123,124,412,],[60,60,60,60,60,60,60,60,60,60,60,60,211,60,]),'comparation':([10,11,50,68,71,90,91,100,105,117,122,123,124,412,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'logic_not_sentence':([10,11,50,68,71,90,91,100,105,117,122,123,124,412,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'expression':([10,11,50,68,71,76,90,91,100,105,106,117,122,123,124,129,136,137,155,412,],[66,66,103,66,103,149,66,66,103,66,200,66,66,66,66,215,218,219,235,66,]),'term':([10,11,50,68,71,76,90,91,100,105,106,117,122,123,124,129,136,137,138,139,140,141,155,412,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,220,221,222,223,69,69,]),'factor':([10,11,50,68,71,76,90,91,100,105,106,117,122,123,124,129,136,137,138,139,140,141,155,412,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'assignment_operator':([23,462,],[76,76,]),'structure_matrix_second':([45,300,],[98,351,]),'comparator_operator':([52,66,103,133,376,],[106,129,129,106,398,]),'logic_operator':([60,],[124,]),'class_extends_opt':([73,74,],[143,145,]),'function_invocation':([76,165,166,],[150,243,246,]),'input':([76,],[152,]),'special_function':([76,],[153,]),'arrow_function':([76,],[158,]),'anonymous_functions':([76,],[159,]),'values_array_indexed':([95,253,257,258,259,325,],[177,177,296,297,298,177,]),'structure_array':([95,96,382,],[178,186,404,]),'structure_matrix_first':([95,381,],[179,403,]),'key':([95,96,382,],[183,183,183,]),'class_implements_opt':([143,],[225,]),'params':([146,191,234,238,239,410,422,435,],[229,264,272,275,276,424,436,444,]),'real_params':([146,191,234,238,239,410,422,435,],[230,230,230,230,230,230,230,230,]),'empty':([146,191,234,238,239,410,422,435,],[231,231,231,231,231,231,231,231,]),'accessType':([165,166,],[244,247,]),'interface_list':([226,],[267,]),'interface_body':([228,],[269,]),'expression_for':([250,286,340,398,],[288,338,378,415,]),'number_values':([250,286,340,398,448,],[289,289,289,289,453,]),'class_body':([266,],[304,]),'interface_method':([269,],[307,]),'visibility_opt':([269,304,],[308,356,]),'codeblock':([270,320,389,],[312,362,411,]),'body_statement':([284,285,313,334,413,443,447,],[333,337,360,371,426,449,452,]),'operator_aritmetic':([288,338,378,415,442,],[340,340,340,340,448,]),'class_member':([304,],[355,]),'class_attribute':([304,],[357,]),'condition_for':([339,],[377,]),'elseif_statement':([368,464,],[390,476,]),'else_statement':([368,464,],[391,477,]),'increment_statement':([399,],[417,]),'method_body':([451,455,457,],[456,465,469,]),'classStatement':([451,455,457,],[457,457,457,]),'return_form':([451,455,457,],[458,458,467,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',83),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',88),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',89),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',93),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',98),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',103),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',104),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',108),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',113),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',114),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',119),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',120),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',121),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',131),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',132),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',138),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',139),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',140),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',146),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',147),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',148),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',155),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',156),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',163),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',164),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',165),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',166),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',167),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',168),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',169),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',170),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',171),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',172),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',173),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',179),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',180),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',181),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',182),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',183),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',184),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',185),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',186),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',187),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',188),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',194),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',195),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',196),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',197),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',203),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',204),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',205),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',206),
  ('printable_values -> STRING STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',207),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',208),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',209),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',210),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',211),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',212),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',219),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',220),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',221),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',222),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',228),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',229),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',235),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',236),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',237),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',243),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',244),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',245),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',246),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',247),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',253),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',254),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',255),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',266),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',267),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',273),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',274),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',275),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',276),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',277),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',278),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',279),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',280),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',281),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',282),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',289),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',290),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',296),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',297),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',303),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',309),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',320),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',326),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',327),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',333),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',334),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',335),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',336),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',346),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',354),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',360),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',361),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',367),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',373),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',379),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',385),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',386),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',397),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',398),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',399),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',406),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',407),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',408),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',409),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',414),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',418),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',419),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',425),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',426),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',432),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',433),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',438),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',439),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',440),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',441),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',442),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',443),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',448),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',453),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',454),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',460),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',461),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',462),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',463),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',464),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',469),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',473),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',478),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',479),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',485),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',486),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',492),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',493),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',494),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',495),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',500),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',501),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',507),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',516),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',517),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',522),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',523),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',527),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',528),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',529),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',530),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',531),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',532),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',533),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',534),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',535),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',536),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',542),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',543),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',548),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',552),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',556),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',557),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',561),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',565),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',566),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',570),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',571),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',575),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',576),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',580),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',581),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',585),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',586),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',587),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',592),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',593),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',594),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',599),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',600),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',601),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',602),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',606),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',607),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',608),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',609),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',610),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',616),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',617),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',618),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',623),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',624),
]
