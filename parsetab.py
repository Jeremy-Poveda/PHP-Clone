
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ARRAY_POP ARRAY_SUM BREAK CLASS COLON COMMA COMMENT CONST COUNT COUNT_NORMAL COUNT_RECURSIVE DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL NULL_FUSION PHP_END_IDENTIFIER PHP_IDENTIFIER PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION STRLEN SUBSTR TRUE VARIABLE WHILEinicial_program : PHP_IDENTIFIER program PHP_END_IDENTIFIERprogram : sentence program program : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n            | RETURN printable_values SEMICOLON\n            | sentence RETURN printable_values SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n                   | length_operations\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | VARIABLE\n                        | IDENTIFIER\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n                        | logic_expression\n    \n    logic_expression : true_boolean_types logic_operator false_boolean_types\n                     | false_boolean_types logic_operator true_boolean_types\n    \n    true_boolean_types : TRUE\n                       | STRING\n                       | INTEGER\n                       | FLOAT\n                       | VARIABLE\n                       | IDENTIFIER\n                       | ARRAY LEFT_PAREN values RIGHT_PAREN\n    \n    false_boolean_types : FALSE\n                        | STRING\n                        | INTEGER\n                        | VARIABLE\n                        | IDENTIFIER\n                        | FLOAT\n                        | ARRAY LEFT_PAREN RIGHT_PAREN\n                        | NULL\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values printable_dividers printable_values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE printable_dividers printable_values\n                     | VARIABLE COMMA printable_values\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional printable_dividers printable_values\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal printable_dividers printable_values\n                     | structure_object_principal COMMA printable_values\n    \n    printable_dividers : COMMA\n                       | STRING_CONCATENATION\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | FLOAT\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n           | STRING\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator IDENTIFIER\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator string_special_function\n                        | VARIABLE assignment_operator array_special_function_structure\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE assignment_operator conditional\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n                        | VARIABLE LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n                   | FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement\n                   | FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    string_special_function : STRLEN LEFT_PAREN string_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN\n    \n    string_param : STRING\n                 | VARIABLE\n                 | INTEGER\n    \n    int_param : INTEGER\n              | VARIABLE\n              | STRING\n    \n    array_special_function_structure : array_special_function\n                                     | statement_array_special_function_error\n    \n    array_special_function : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                           | ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN\n                           | ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN\n    \n    statement_array_special_function_error : COUNT LEFT_PAREN error count_param RIGHT_PAREN\n                                           | ARRAY_POP LEFT_PAREN error RIGHT_PAREN\n                                           | ARRAY_SUM LEFT_PAREN error RIGHT_PAREN\n    \n    count_param : COMMA COUNT_NORMAL\n                | COMMA COUNT_RECURSIVE\n                |\n    \n    length_operations : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                      | STRLEN LEFT_PAREN string_param RIGHT_PAREN\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element         \n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element\n                          | statement_access_array_element_error\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    statement_access_array_element_error : VARIABLE LEFT_BRACKET error RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN access_method_object SEMICOLON\n                | RETURN SEMICOLON\n                | RETURN expression SEMICOLON\n                | RETURN string_special_function SEMICOLON\n                | RETURN array_special_function_structure SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'PHP_IDENTIFIER':([0,],[2,]),'$end':([1,50,],[0,-1,]),'ECHO':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,517,518,519,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[12,12,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,12,12,-240,-256,-270,-174,12,-166,-165,-260,-259,-261,-266,-264,-265,12,-233,-232,-269,-267,-15,-14,-181,12,-16,-17,12,-21,12,12,12,-31,12,12,-303,-254,-216,-18,-304,-19,-20,]),'PRINT':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,517,518,519,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[13,13,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,13,13,-240,-256,-270,-174,13,-166,-165,-260,-259,-261,-266,-264,-265,13,-233,-232,-269,-267,-15,-14,-181,13,-16,-17,13,-21,13,13,13,-31,13,13,-303,-254,-216,-18,-304,-19,-20,]),'CLASS':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,518,519,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[19,19,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,19,19,-240,-256,-270,-174,19,-166,-165,-260,-259,-261,-266,-264,-265,19,-233,-232,-269,-267,-15,-14,-181,-16,-17,19,-21,19,19,19,-31,19,19,-303,-254,-216,-18,-304,-19,-20,]),'INTERFACE':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,518,519,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[20,20,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,20,20,-240,-256,-270,-174,20,-166,-165,-260,-259,-261,-266,-264,-265,20,-233,-232,-269,-267,-15,-14,-181,-16,-17,20,-21,20,20,20,-31,20,20,-303,-254,-216,-18,-304,-19,-20,]),'FUNCTION':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,86,90,92,96,98,108,202,203,204,205,206,294,312,313,315,317,318,319,320,321,328,329,335,337,344,347,373,378,379,392,398,401,403,404,405,406,407,408,409,410,413,414,435,436,437,439,440,441,443,463,464,465,466,467,468,488,489,496,509,514,518,519,542,543,550,579,582,585,588,589,593,596,597,599,601,602,605,606,608,612,621,622,623,],[24,24,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,192,-159,-160,-237,-238,-255,-124,-125,-126,-128,-129,-272,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-281,-291,-252,24,24,-240,-256,-291,-270,-271,470,-288,-289,-290,-174,24,-166,-165,-260,-259,-261,-266,-264,-265,24,-233,-232,-269,-280,510,-284,-267,-15,-14,539,-181,-16,-17,-286,-287,24,-285,-21,24,-273,24,24,-31,24,24,-303,-254,-216,-18,-283,-304,-19,-20,-282,]),'VARIABLE':([2,4,7,8,9,10,11,12,13,16,17,18,21,22,23,26,27,30,31,32,33,34,35,38,39,40,48,52,53,54,63,74,81,86,89,90,92,96,97,98,99,100,101,108,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,153,154,155,156,158,159,160,161,166,198,199,202,203,204,205,206,228,245,300,301,302,303,306,307,308,309,310,312,313,315,317,318,319,320,321,324,328,329,335,337,340,344,349,371,372,373,375,377,378,379,380,392,398,401,403,406,407,408,409,410,413,414,416,435,436,437,439,440,441,443,444,448,449,450,451,452,453,454,455,456,457,458,463,464,465,466,467,468,488,489,490,496,514,515,517,518,519,528,529,542,543,544,549,550,556,557,563,572,577,579,582,585,589,593,596,597,599,601,602,603,605,606,608,612,621,622,623,],[25,25,-6,-7,-8,-9,-10,57,57,-210,-211,-212,-11,-12,-13,93,94,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,113,-127,148,113,167,194,-159,-160,-237,201,-238,208,208,210,-255,230,57,57,244,-123,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,57,57,-123,249,194,57,57,57,57,208,-56,-57,-58,260,244,265,270,279,244,244,244,244,244,244,298,316,316,-124,-125,-126,-128,-129,298,244,298,298,354,354,361,364,366,298,298,-233,-232,-234,-257,-258,-268,-262,-263,381,-217,-218,-219,-241,399,-281,411,430,432,-252,435,441,25,25,381,-240,-256,-291,-270,-288,-289,-290,-174,25,-166,-165,474,-260,-259,-261,-266,-264,-265,25,57,498,381,-48,-49,-50,-51,-52,-53,501,505,354,-233,-232,-269,-280,511,-284,-267,-15,57,-14,-181,474,244,-16,-17,381,554,-286,-287,298,208,25,574,575,298,584,298,-285,-21,25,25,604,-31,604,604,-303,-254,619,-216,-18,-283,-304,-19,-20,-282,]),'INCREASE':([2,4,7,8,9,10,11,16,17,18,21,22,23,25,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,518,519,529,550,554,582,585,589,593,596,597,599,601,602,604,605,606,612,621,622,],[26,26,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,87,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,26,26,-240,-256,-270,-174,26,-166,-165,-260,-259,-261,-266,-264,-265,26,-233,-232,-269,-267,-15,-14,-181,-16,-17,556,26,569,-21,26,26,26,-31,26,26,-303,-254,87,-216,-18,-304,-19,-20,]),'DECREMENT':([2,4,7,8,9,10,11,16,17,18,21,22,23,25,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,518,519,529,550,554,582,585,589,593,596,597,599,601,602,604,605,606,612,621,622,],[27,27,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,88,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,27,27,-240,-256,-270,-174,27,-166,-165,-260,-259,-261,-266,-264,-265,27,-233,-232,-269,-267,-15,-14,-181,-16,-17,557,27,570,-21,27,27,27,-31,27,27,-303,-254,88,-216,-18,-304,-19,-20,]),'IF':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,518,519,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[41,41,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,41,41,-240,-256,-270,-174,41,-166,-165,-260,-259,-261,-266,-264,-265,41,-233,-232,-269,-267,-15,-14,-181,-16,-17,41,-21,41,41,41,-31,41,41,-303,-254,-216,-18,-304,-19,-20,]),'WHILE':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,518,519,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[42,42,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,42,42,-240,-256,-270,-174,42,-166,-165,-260,-259,-261,-266,-264,-265,42,-233,-232,-269,-267,-15,-14,-181,-16,-17,42,-21,42,42,42,-31,42,42,-303,-254,-216,-18,-304,-19,-20,]),'FOR':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,518,519,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[43,43,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,43,43,-240,-256,-270,-174,43,-166,-165,-260,-259,-261,-266,-264,-265,43,-233,-232,-269,-267,-15,-14,-181,-16,-17,43,-21,43,43,43,-31,43,43,-303,-254,-216,-18,-304,-19,-20,]),'CONST':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,344,373,378,379,392,398,401,403,406,407,408,409,410,413,414,435,436,437,439,440,441,443,463,464,465,466,467,468,488,489,496,514,518,519,542,543,550,579,582,585,589,593,596,597,599,601,602,605,606,608,612,621,622,623,],[44,44,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-281,-252,44,44,-240,-256,-291,-270,-288,-289,-290,-174,44,-166,-165,-260,-259,-261,-266,-264,-265,44,-233,-232,-269,-280,44,-284,-267,-15,-14,-181,-16,-17,-286,-287,44,-285,-21,44,44,44,-31,44,44,-303,-254,-216,-18,-283,-304,-19,-20,-282,]),'DEFINE':([2,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,344,373,378,379,392,398,401,403,406,407,408,409,410,413,414,435,436,437,439,440,441,443,463,464,465,466,467,468,488,489,496,514,518,519,542,543,550,579,582,585,589,593,596,597,599,601,602,605,606,608,612,621,622,623,],[45,45,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-281,-252,45,45,-240,-256,-291,-270,-288,-289,-290,-174,45,-166,-165,-260,-259,-261,-266,-264,-265,45,-233,-232,-269,-280,45,-284,-267,-15,-14,-181,-16,-17,-286,-287,45,-285,-21,45,45,45,-31,45,45,-303,-254,-216,-18,-283,-304,-19,-20,-282,]),'ARRAY':([2,4,7,8,9,10,11,12,13,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,54,63,74,81,86,90,92,96,98,99,100,104,108,109,117,118,120,131,132,133,136,137,138,139,140,141,142,143,153,154,202,203,204,205,206,306,311,312,313,314,315,317,318,319,320,321,327,328,329,331,332,333,335,337,373,378,379,392,398,403,409,410,413,414,434,435,436,437,439,440,441,443,444,457,463,464,465,488,489,490,496,507,514,518,519,549,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[46,46,-6,-7,-8,-9,-10,78,78,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,78,-127,78,78,193,-159,-160,-237,-238,78,78,213,-255,78,78,78,-123,78,78,-123,78,78,78,78,78,-56,-57,-58,273,281,-124,-125,-126,-128,-129,46,213,-233,-232,374,-234,-257,-258,-268,-262,-263,374,-217,-218,374,374,374,-219,-241,-252,46,46,-240,-256,-270,-174,46,-166,-165,374,-260,-259,-261,-266,-264,-265,46,78,46,-233,-232,-269,-267,-15,78,-14,536,-181,-16,-17,78,46,-21,46,46,46,-31,46,46,-303,-254,-216,-18,-304,-19,-20,]),'LEFT_BRACKET':([2,4,7,8,9,10,11,16,17,18,21,22,23,25,30,31,32,33,34,35,38,39,40,46,47,48,52,53,57,63,86,90,92,96,98,108,113,148,167,193,202,203,204,205,206,208,230,249,260,306,312,313,315,317,318,319,320,321,328,329,335,337,361,373,378,379,392,397,398,403,409,410,413,414,435,436,437,439,440,441,443,457,463,464,465,488,489,496,501,505,514,518,519,550,582,585,589,593,596,597,599,601,602,604,605,606,612,619,621,622,],[47,47,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,89,-213,-214,-215,-216,-235,-236,-239,-253,-254,105,106,-231,-4,-5,135,-127,47,-159,-160,-237,-238,-255,135,135,89,105,-124,-125,-126,-128,-129,135,135,135,340,47,371,372,-234,-257,-258,376,-262,-263,-217,-218,-219,-241,89,-252,47,47,-240,106,-256,-270,-174,47,-166,-165,340,-259,-261,-266,-264,340,47,47,-233,-232,-269,-267,-15,-14,340,89,-181,-16,-17,47,-21,47,47,47,-31,47,47,-303,-254,89,-216,-18,-304,340,-19,-20,]),'NEW':([2,4,7,8,9,10,11,12,13,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,54,63,81,86,90,92,96,98,104,108,117,118,120,131,132,133,136,137,138,139,202,203,204,205,206,311,312,313,315,317,318,319,320,321,327,328,329,331,332,333,335,337,373,378,379,392,398,403,409,410,413,414,434,435,436,437,439,440,441,443,444,463,464,465,488,489,490,496,514,518,519,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[49,49,-6,-7,-8,-9,-10,49,49,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,49,-127,49,49,-159,-160,-237,-238,49,-255,49,49,-123,49,49,-123,49,49,49,49,-124,-125,-126,-128,-129,49,-233,-232,-234,-257,-258,-268,-262,-263,49,-217,-218,49,49,49,-219,-241,-252,49,49,-240,-256,-270,-174,49,-166,-165,49,-260,-259,-261,-266,-264,-265,49,49,-233,-232,-269,-267,-15,49,-14,-181,-16,-17,49,-21,49,49,49,-31,49,49,-303,-254,-216,-18,-304,-19,-20,]),'PHP_END_IDENTIFIER':([3,4,7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,51,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,392,398,403,409,413,414,435,436,437,439,440,441,463,464,465,488,489,496,514,518,519,582,596,606,621,622,],[50,-3,-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-2,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,-240,-256,-270,-174,-166,-165,-260,-259,-261,-266,-264,-265,-233,-232,-269,-267,-15,-14,-181,-16,-17,-21,-31,-18,-19,-20,]),'SEMICOLON':([5,6,14,15,16,17,18,28,29,30,31,32,34,35,36,37,38,39,40,48,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,77,79,80,82,87,88,93,94,96,98,108,114,115,116,147,148,167,168,169,170,171,172,173,174,175,176,177,180,181,184,185,189,190,200,201,202,203,204,205,206,208,227,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,282,283,285,286,287,288,289,290,312,313,315,317,318,319,320,321,325,328,329,330,335,337,343,373,381,382,383,385,386,387,392,398,413,414,415,417,418,424,425,426,427,435,436,437,439,440,441,445,459,463,464,476,479,480,481,483,484,485,486,487,488,490,491,493,494,497,499,500,511,512,514,516,522,524,530,531,535,546,547,548,553,558,559,560,564,566,580,602,603,610,613,615,616,617,618,619,],[52,53,-143,-144,-210,-211,-212,-161,-162,-213,-214,-215,-235,-236,96,98,-239,-253,-254,-231,-107,-109,-60,-125,-116,-119,-124,-126,-127,-54,-128,-129,-59,-61,-63,-64,-130,-81,-133,-108,-155,-156,-157,-158,-237,-238,-255,-125,-124,-126,-82,-60,-60,-145,-61,-147,-148,-149,-150,-151,-152,-153,-154,-193,-194,-175,-176,-216,96,-250,-251,-124,-125,-126,-128,-129,-60,337,-105,-62,-141,-110,-111,-84,-85,-124,-125,-126,-140,-113,-114,-115,-91,-87,-90,-94,-117,-118,-120,-121,-55,-92,-88,-89,-86,-138,-139,-142,-93,-65,-74,-75,-76,-77,-78,-79,-66,-67,-68,-69,-70,-71,-72,-131,-132,-80,-134,-135,-136,-137,-106,-233,-232,-234,-257,-258,-268,-262,-263,-163,-217,-218,392,-219,-241,-73,-252,-39,448,-40,-45,-46,-47,-240,-256,-166,-165,-184,-182,-183,-198,-201,-199,-202,-260,-259,-261,-266,-264,-265,495,-164,-233,-232,-195,-196,-197,-200,-180,-247,-248,-249,-246,-267,523,525,526,527,-42,529,-41,542,543,-181,-185,551,552,-43,-44,-209,-177,-178,-179,-38,-206,-207,-208,579,-186,588,612,614,624,625,626,627,628,629,-140,]),'RETURN':([7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,518,519,550,582,585,589,593,596,597,599,601,602,605,606,612,621,622,],[-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,444,444,-240,-256,-270,-174,444,-166,-165,-260,-259,-261,-266,-264,-265,490,-233,-232,-269,-267,-15,-14,-181,-16,-17,444,-21,444,444,603,-31,603,603,-303,-254,-216,-18,-304,-19,-20,]),'BREAK':([7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,312,313,315,317,318,319,320,321,328,329,335,337,373,378,379,392,398,403,409,410,413,414,435,436,437,439,440,441,443,463,464,465,488,489,496,514,518,519,550,582,585,589,596,599,601,602,605,606,612,621,622,],[-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-252,445,445,-240,-256,-270,-174,445,-166,-165,-260,-259,-261,-266,-264,-265,491,-233,-232,-269,-267,-15,-14,-181,-16,-17,445,-21,445,445,-31,610,-303,-254,-216,-18,-304,-19,-20,]),'RIGHT_BRACE':([7,8,9,10,11,16,17,18,21,22,23,30,31,32,33,34,35,38,39,40,48,52,53,63,96,98,108,202,203,204,205,206,294,312,313,315,317,318,319,320,321,328,329,335,337,344,347,373,392,398,401,403,404,409,413,414,435,436,437,439,440,441,442,443,446,463,464,465,466,468,471,488,489,492,495,496,514,518,519,523,525,526,527,542,543,551,552,568,579,582,588,591,594,596,598,599,600,601,602,605,606,607,608,609,611,612,614,621,622,623,624,625,626,627,628,629,],[-6,-7,-8,-9,-10,-210,-211,-212,-11,-12,-13,-213,-214,-215,-216,-235,-236,-239,-253,-254,-231,-4,-5,-127,-237,-238,-255,-124,-125,-126,-128,-129,-272,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,-281,403,-252,-240,-256,465,-270,-271,-174,-166,-165,-260,-259,-261,-266,-264,-265,489,-22,496,-233,-232,-269,-280,-284,514,-267,-15,-26,-28,-14,-181,-16,-17,-24,-25,-27,-29,-286,-287,-23,-29,582,-285,-21,-273,596,606,-31,608,-292,-294,-303,-254,-216,-18,623,-283,-293,-296,-304,-299,-19,-20,-282,-295,-297,-298,-300,-301,-302,]),'LEFT_PAREN':([12,13,41,42,43,45,46,54,74,78,81,85,86,90,92,99,100,108,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,140,141,142,143,145,155,156,158,159,160,161,167,169,178,179,182,183,186,187,188,191,192,193,213,245,273,281,316,319,324,374,380,384,388,389,444,449,450,451,452,453,454,455,490,513,517,520,528,536,540,549,562,603,],[54,81,99,100,101,103,104,109,109,157,109,166,109,-159,-160,109,109,228,109,109,109,245,-123,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,109,109,-123,109,109,109,109,109,-56,-57,-58,245,245,245,245,245,245,245,300,301,302,303,304,305,306,307,308,309,310,311,327,245,341,342,300,301,380,434,380,456,457,458,109,380,-48,-49,-50,-51,-52,-53,109,544,245,549,380,561,563,109,577,245,]),'INTEGER':([12,13,54,74,81,86,89,90,92,97,99,100,104,105,106,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,153,154,155,156,157,158,159,160,161,166,211,228,245,300,301,302,303,309,310,311,324,326,327,331,332,333,340,342,349,371,372,375,376,377,380,396,416,434,444,449,450,451,452,453,454,455,458,490,508,515,517,528,541,544,549,561,563,571,577,590,603,],[61,61,115,61,115,115,195,-159,-160,202,61,61,221,224,202,231,61,61,241,-123,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,61,61,-123,202,195,61,61,61,61,61,-56,-57,-58,202,262,269,277,262,262,202,262,262,262,262,202,202,202,262,202,202,355,355,202,202,221,386,202,202,202,202,202,400,202,202,431,433,202,438,202,386,202,473,202,61,386,-48,-49,-50,-51,-52,-53,355,61,224,473,262,386,202,202,61,202,202,583,202,386,241,]),'STRING':([12,13,54,74,81,86,90,92,97,99,100,103,104,105,106,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,153,154,155,156,157,158,159,160,161,166,211,228,245,300,301,302,303,305,309,310,311,326,327,331,332,333,342,349,375,377,396,416,434,444,458,490,508,515,517,541,544,549,561,563,577,603,],[58,58,114,58,114,114,-159,-160,203,58,58,212,222,225,203,233,58,58,242,-123,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,58,58,248,203,58,58,58,58,58,-56,-57,-58,203,264,268,276,264,264,203,264,264,264,264,203,203,203,264,203,203,353,353,358,203,203,222,203,203,203,203,203,203,203,203,203,203,475,203,58,353,58,225,475,264,203,203,58,203,203,203,242,]),'FLOAT':([12,13,54,74,81,86,90,92,97,99,100,104,106,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,153,154,155,156,157,158,159,160,161,166,211,228,245,300,301,309,310,311,324,326,327,331,332,333,342,349,375,377,380,396,434,444,449,450,451,452,453,454,455,490,517,528,541,544,549,561,563,577,590,603,],[62,62,116,62,116,116,-159,-160,204,62,62,204,204,232,62,62,243,-123,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,62,62,-123,204,62,62,62,62,62,-56,-57,-58,204,263,272,278,263,263,204,263,263,263,263,204,204,204,263,204,204,204,204,204,387,204,204,204,204,204,204,204,204,204,387,204,204,62,387,-48,-49,-50,-51,-52,-53,62,263,387,204,204,62,204,204,204,387,243,]),'TRUE':([12,13,54,74,81,86,90,92,97,99,100,104,106,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,154,157,166,211,228,300,301,309,310,311,326,327,331,332,333,342,349,375,377,396,434,444,490,541,544,549,561,563,577,603,],[65,65,65,151,65,65,-159,-160,205,151,151,205,205,151,65,65,205,-123,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,65,65,-123,205,65,65,65,65,151,-56,-57,-58,205,275,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,65,65,205,205,151,205,205,205,205,]),'FALSE':([12,13,54,74,81,86,90,92,97,99,100,104,106,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,153,157,166,211,228,300,301,309,310,311,326,327,331,332,333,342,349,375,377,396,434,444,490,541,544,549,561,563,577,603,],[66,66,66,152,66,66,-159,-160,206,152,152,206,206,152,66,66,206,-123,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,66,66,-123,206,66,66,66,66,152,-56,-57,-58,206,267,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,66,66,206,206,152,206,206,206,206,]),'IDENTIFIER':([12,13,19,20,24,44,49,54,74,81,86,90,92,99,100,109,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,140,141,142,143,153,154,164,198,199,292,324,380,402,444,449,450,451,452,453,454,455,470,490,510,528,539,549,],[68,68,83,84,85,102,108,68,68,68,169,-159,-160,68,68,68,68,68,-123,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,68,68,-123,68,68,68,68,68,-56,-57,-58,271,280,293,319,319,346,384,384,469,68,384,-48,-49,-50,-51,-52,-53,513,68,540,384,562,68,]),'LOGIC_NOT':([12,13,54,74,81,86,90,92,99,100,109,117,118,120,131,132,133,136,137,138,139,140,141,142,143,444,490,549,],[74,74,74,74,74,74,-159,-160,74,74,74,74,74,-123,74,74,-123,74,74,74,74,74,-56,-57,-58,74,74,74,]),'NULL':([12,13,54,74,81,86,90,92,99,100,109,117,118,120,131,132,133,136,137,138,139,140,141,142,143,153,444,490,549,],[79,79,79,79,79,79,-159,-160,79,79,79,79,79,-123,79,79,-123,79,79,79,79,79,-56,-57,-58,79,79,79,79,]),'MINUS':([25,33,57,58,61,62,71,77,80,113,114,115,116,148,167,189,208,230,231,232,233,236,241,242,243,244,262,263,264,286,287,288,289,312,313,381,382,383,385,386,387,447,463,464,497,500,530,531,535,553,558,559,560,584,604,605,619,620,],[91,95,91,-142,-138,-139,95,156,-133,91,-142,-138,-139,-140,91,95,-140,-140,-138,-139,-142,-141,-138,-142,-139,-140,-138,-139,-142,-134,-135,-136,-137,-233,-232,-39,451,-40,-45,-46,-47,451,-233,-232,-42,451,-43,-44,-209,451,-206,-207,-208,451,91,95,91,95,]),'EQUALS':([25,36,102,190,196,210,220,221,222,224,225,318,319,321,428,484,485,486,487,488,511,554,604,],[90,97,211,97,314,324,334,-222,-223,-222,-223,375,-268,377,482,-247,-248,-249,-246,-267,541,572,90,]),'PLUS_EQUALS':([25,554,604,],[92,571,92,]),'COMMA':([30,31,32,34,35,38,39,40,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,77,79,80,96,98,108,111,113,114,115,116,147,148,202,203,204,205,206,208,212,217,218,219,221,222,235,236,239,240,241,242,243,244,249,250,251,252,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,282,283,285,286,287,288,289,296,298,299,312,313,315,317,318,319,320,321,328,329,335,336,337,343,345,346,353,354,355,356,359,360,361,362,363,370,373,391,392,398,411,412,413,414,435,436,437,439,440,441,460,461,463,464,469,472,473,474,475,484,485,486,487,488,493,503,504,505,522,],[-213,-214,-215,-235,-236,-239,-253,-254,-231,118,132,-125,137,139,-124,-126,-127,-54,-128,-129,-59,-61,-63,-64,-130,-81,-133,-237,-238,-255,137,132,-125,-124,-126,-82,-60,-124,-125,-126,-128,-129,-60,326,331,332,333,-124,-125,-62,-141,-84,-85,-124,-125,-126,-140,-91,-87,-90,-94,-55,-92,-88,-89,-86,-138,-139,-142,-93,-65,-74,-75,-76,-77,-78,-79,-66,-67,-68,-69,-70,-71,-72,-131,-132,-80,-134,-135,-136,-137,349,-169,-170,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,397,-241,-73,402,-278,-187,-188,-189,416,420,420,420,420,-216,331,-252,331,-240,-256,-171,-172,-166,-165,-260,-259,-261,-266,-264,-265,507,508,-233,-232,-279,515,-190,-191,-192,-247,-248,-249,-246,-267,118,420,420,420,118,]),'RIGHT_PAREN':([30,31,32,34,35,38,39,40,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,77,79,80,96,98,108,110,111,112,113,114,115,116,147,148,157,162,166,202,203,204,205,206,207,208,209,214,215,216,217,218,219,221,222,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,295,296,297,298,299,300,301,309,310,311,312,313,315,317,318,319,320,321,328,329,335,337,338,339,341,343,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,373,381,383,385,386,387,390,391,392,393,394,395,398,411,412,413,414,419,421,422,423,435,436,437,439,440,441,447,460,461,463,464,472,473,474,475,477,478,484,485,486,487,488,497,500,501,502,503,504,505,506,530,531,532,533,534,535,537,538,544,545,555,558,559,560,563,565,567,569,570,574,575,576,577,578,583,586,595,],[-213,-214,-215,-235,-236,-239,-253,-254,-231,-109,-60,-125,-116,-119,-124,-126,-127,-54,-128,-129,-59,-61,-63,-64,-130,-81,-133,-237,-238,-255,234,235,236,-60,-125,-124,-126,-82,-60,285,290,-173,-124,-125,-126,-128,-129,322,-60,323,328,329,330,-224,-226,-228,-124,-125,-173,235,-60,-138,-139,-142,-62,-141,-110,-111,-84,-85,-124,-125,-126,-140,-113,-114,-115,-91,-87,-90,-94,-117,-118,-120,-121,-55,-92,-88,-89,-86,-138,-139,-142,-93,-65,-74,-75,-76,-77,-78,-79,-66,-67,-68,-69,-70,-71,-72,-131,-132,343,-80,-134,-135,-136,-137,348,-167,-168,-169,-170,-173,-173,-173,-173,285,-233,-232,-234,-257,-258,-268,-262,-263,-217,-218,-219,-241,398,236,285,-73,413,414,415,-187,-188,-189,417,418,-205,-205,-205,-205,-216,424,425,426,427,428,429,343,-252,-39,-40,-45,-46,-47,459,460,-240,-225,-227,-229,-256,-171,-172,-166,-165,476,479,480,481,-260,-259,-261,-266,-264,-265,497,-244,-220,-233,-232,516,-190,-191,-192,-203,-204,-247,-248,-249,-246,-267,-42,-41,530,531,-205,-205,-205,535,-43,-44,558,559,560,-209,-245,-221,-173,566,573,-206,-207,-208,-173,580,581,-32,-33,-34,-35,460,-173,587,-36,592,-37,]),'STRING_CONCATENATION':([39,40,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,77,79,80,108,111,113,114,115,116,147,148,202,203,204,205,206,208,235,236,239,240,241,242,243,244,249,250,251,252,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,282,283,285,286,287,288,289,312,313,317,318,319,320,321,343,398,413,414,435,436,437,439,440,441,463,464,484,485,486,487,488,493,522,],[-253,-254,120,133,-125,120,120,-124,-126,-127,-54,-128,-129,-59,-61,-63,-64,-130,-81,-133,-255,120,133,-125,-124,-126,-82,-60,-124,-125,-126,-128,-129,-60,-62,-141,-84,-85,-124,-125,-126,-140,-91,-87,-90,-94,-55,-92,-88,-89,-86,-138,-139,-142,-93,-65,-74,-75,-76,-77,-78,-79,-66,-67,-68,-69,-70,-71,-72,-131,-132,-80,-134,-135,-136,-137,-233,-232,-257,-258,-268,-262,-263,-73,-256,-166,-165,-260,-259,-261,-266,-264,-265,-233,-232,-247,-248,-249,-246,-267,120,120,]),'EQUALS_EQUALS':([56,57,58,61,62,63,65,66,71,72,73,77,80,112,113,114,115,116,148,149,150,151,152,167,168,170,189,190,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,312,313,484,485,486,487,493,498,522,],[121,134,-125,-124,-126,-127,-128,-129,144,121,146,-130,-133,121,134,-125,-124,-126,134,121,144,-128,-129,134,121,121,144,146,134,134,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,-233,-232,-247,-248,-249,-246,121,121,121,]),'IDENTICAL':([56,57,58,61,62,63,65,66,72,77,80,112,113,114,115,116,148,149,151,152,167,168,170,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,493,498,522,],[122,-140,-125,-124,-126,-127,-128,-129,122,-130,-133,122,-140,-125,-124,-126,-140,122,-128,-129,-140,122,122,-140,-140,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,122,122,122,]),'NOT_EQUALS':([56,57,58,61,62,63,65,66,72,77,80,112,113,114,115,116,148,149,151,152,167,168,170,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,493,498,522,],[123,-140,-125,-124,-126,-127,-128,-129,123,-130,-133,123,-140,-125,-124,-126,-140,123,-128,-129,-140,123,123,-140,-140,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,123,123,123,]),'NOT_IDENTICAL':([56,57,58,61,62,63,65,66,72,77,80,112,113,114,115,116,148,149,151,152,167,168,170,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,493,498,522,],[124,-140,-125,-124,-126,-127,-128,-129,124,-130,-133,124,-140,-125,-124,-126,-140,124,-128,-129,-140,124,124,-140,-140,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,124,124,124,]),'SMALL_THAN':([56,57,58,61,62,63,65,66,72,77,80,112,113,114,115,116,148,149,151,152,167,168,170,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,493,498,522,],[125,-140,-125,-124,-126,-127,-128,-129,125,-130,-133,125,-140,-125,-124,-126,-140,125,-128,-129,-140,125,125,-140,-140,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,125,125,125,]),'GREATER_THAN':([56,57,58,61,62,63,65,66,72,77,80,91,95,112,113,114,115,116,148,149,151,152,167,168,170,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,334,482,493,498,522,],[126,-140,-125,-124,-126,-127,-128,-129,126,-130,-133,198,199,126,-140,-125,-124,-126,-140,126,-128,-129,-140,126,126,-140,-140,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,396,517,126,126,126,]),'SMALL_EQUALS_TO':([56,57,58,61,62,63,65,66,72,77,80,112,113,114,115,116,148,149,151,152,167,168,170,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,493,498,522,],[127,-140,-125,-124,-126,-127,-128,-129,127,-130,-133,127,-140,-125,-124,-126,-140,127,-128,-129,-140,127,127,-140,-140,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,127,127,127,]),'GREATER_EQUALS_TO':([56,57,58,61,62,63,65,66,72,77,80,112,113,114,115,116,148,149,151,152,167,168,170,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,493,498,522,],[128,-140,-125,-124,-126,-127,-128,-129,128,-130,-133,128,-140,-125,-124,-126,-140,128,-128,-129,-140,128,128,-140,-140,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,128,128,128,]),'SPACECRAFT':([56,57,58,61,62,63,65,66,72,77,80,112,113,114,115,116,148,149,151,152,167,168,170,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,493,498,522,],[129,-140,-125,-124,-126,-127,-128,-129,129,-130,-133,129,-140,-125,-124,-126,-140,129,-128,-129,-140,129,129,-140,-140,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,129,129,129,]),'NULL_FUSION':([56,57,58,61,62,63,65,66,72,77,80,112,113,114,115,116,148,149,151,152,167,168,170,208,230,231,232,233,236,244,262,263,264,282,283,286,287,288,289,493,498,522,],[130,-140,-125,-124,-126,-127,-128,-129,130,-130,-133,130,-140,-125,-124,-126,-140,130,-128,-129,-140,130,130,-140,-140,-124,-126,-125,-141,-140,-138,-139,-142,-131,-132,-134,-135,-136,-137,130,130,130,]),'LOGIC_AND':([57,58,61,62,63,64,65,66,67,68,69,70,75,76,77,79,80,113,114,115,116,147,148,151,152,167,169,202,203,204,205,206,208,230,231,232,233,235,236,239,240,241,242,243,244,249,250,251,252,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,282,283,285,286,287,288,289,312,313,343,463,464,484,485,486,487,],[-60,-68,-69,-70,-127,141,-67,-74,-59,-61,-63,-64,141,141,-130,-81,-133,-60,-68,-69,-70,-82,-60,-67,-74,-60,-61,-124,-125,-126,-128,-129,-60,-60,-69,-70,-68,-62,-141,-84,-85,-124,-125,-126,-140,-91,-87,-90,-94,-55,-92,-88,-89,-86,-138,-139,-142,-93,-65,-74,-75,-76,-77,-78,-79,-66,-67,-68,-69,-70,-71,-72,-131,-132,-80,-134,-135,-136,-137,-233,-232,-73,-233,-232,-247,-248,-249,-246,]),'LOGIC_OR':([57,58,61,62,63,64,65,66,67,68,69,70,75,76,77,79,80,113,114,115,116,147,148,151,152,167,169,202,203,204,205,206,208,230,231,232,233,235,236,239,240,241,242,243,244,249,250,251,252,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,282,283,285,286,287,288,289,312,313,343,463,464,484,485,486,487,],[-60,-68,-69,-70,-127,142,-67,-74,-59,-61,-63,-64,142,142,-130,-81,-133,-60,-68,-69,-70,-82,-60,-67,-74,-60,-61,-124,-125,-126,-128,-129,-60,-60,-69,-70,-68,-62,-141,-84,-85,-124,-125,-126,-140,-91,-87,-90,-94,-55,-92,-88,-89,-86,-138,-139,-142,-93,-65,-74,-75,-76,-77,-78,-79,-66,-67,-68,-69,-70,-71,-72,-131,-132,-80,-134,-135,-136,-137,-233,-232,-73,-233,-232,-247,-248,-249,-246,]),'LOGIC_XOR':([57,58,61,62,63,64,65,66,67,68,69,70,75,76,77,79,80,113,114,115,116,147,148,151,152,167,169,202,203,204,205,206,208,230,231,232,233,235,236,239,240,241,242,243,244,249,250,251,252,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,282,283,285,286,287,288,289,312,313,343,463,464,484,485,486,487,],[-60,-68,-69,-70,-127,143,-67,-74,-59,-61,-63,-64,143,143,-130,-81,-133,-60,-68,-69,-70,-82,-60,-67,-74,-60,-61,-124,-125,-126,-128,-129,-60,-60,-69,-70,-68,-62,-141,-84,-85,-124,-125,-126,-140,-91,-87,-90,-94,-55,-92,-88,-89,-86,-138,-139,-142,-93,-65,-74,-75,-76,-77,-78,-79,-66,-67,-68,-69,-70,-71,-72,-131,-132,-80,-134,-135,-136,-137,-233,-232,-73,-233,-232,-247,-248,-249,-246,]),'MULTIPLY':([57,58,61,62,80,113,114,115,116,148,167,208,230,231,232,233,236,241,242,243,244,262,263,264,381,382,383,385,386,387,447,497,500,530,531,535,553,558,559,560,584,619,],[-140,-142,-138,-139,158,-140,-142,-138,-139,-140,-140,-140,-140,-138,-139,-142,-141,-138,-142,-139,-140,-138,-139,-142,-39,452,-40,-45,-46,-47,452,-42,452,-43,-44,-209,452,-206,-207,-208,452,-140,]),'DIVIDE':([57,58,61,62,80,113,114,115,116,148,167,208,230,231,232,233,236,241,242,243,244,262,263,264,381,382,383,385,386,387,447,497,500,530,531,535,553,558,559,560,584,619,],[-140,-142,-138,-139,159,-140,-142,-138,-139,-140,-140,-140,-140,-138,-139,-142,-141,-138,-142,-139,-140,-138,-139,-142,-39,453,-40,-45,-46,-47,453,-42,453,-43,-44,-209,453,-206,-207,-208,453,-140,]),'MODULE':([57,58,61,62,80,113,114,115,116,148,167,208,230,231,232,233,236,241,242,243,244,262,263,264,381,382,383,385,386,387,447,497,500,530,531,535,553,558,559,560,584,619,],[-140,-142,-138,-139,160,-140,-142,-138,-139,-140,-140,-140,-140,-138,-139,-142,-141,-138,-142,-139,-140,-138,-139,-142,-39,454,-40,-45,-46,-47,454,-42,454,-43,-44,-209,454,-206,-207,-208,454,-140,]),'POW':([57,58,61,62,80,113,114,115,116,148,167,208,230,231,232,233,236,241,242,243,244,262,263,264,381,382,383,385,386,387,447,497,500,530,531,535,553,558,559,560,584,619,],[-140,-142,-138,-139,161,-140,-142,-138,-139,-140,-140,-140,-140,-138,-139,-142,-141,-138,-142,-139,-140,-138,-139,-142,-39,455,-40,-45,-46,-47,455,-42,455,-43,-44,-209,455,-206,-207,-208,455,-140,]),'PLUS':([57,58,61,62,77,80,113,114,115,116,148,167,208,230,231,232,233,236,241,242,243,244,262,263,264,286,287,288,289,381,382,383,385,386,387,447,497,500,530,531,535,553,558,559,560,584,619,],[-140,-142,-138,-139,155,-133,-140,-142,-138,-139,-140,-140,-140,-140,-138,-139,-142,-141,-138,-142,-139,-140,-138,-139,-142,-134,-135,-136,-137,-39,450,-40,-45,-46,-47,450,-42,450,-43,-44,-209,450,-206,-207,-208,450,-140,]),'RIGHT_BRACKET':([63,89,107,194,195,197,202,203,204,205,206,223,226,336,399,400,430,431,432,433,438,461,462,538,],[-127,196,227,312,313,315,-124,-125,-126,-128,-129,335,336,-242,463,464,484,485,486,487,488,-220,-243,-221,]),'EXTENDS':([83,84,],[164,164,]),'IMPLEMENTS':([83,163,293,],[-275,292,-274,]),'LEFT_BRACE':([83,84,163,165,291,293,322,323,345,346,348,429,469,517,521,573,581,587,592,],[-275,-275,-277,294,344,-274,378,379,-276,-278,410,410,-279,410,550,585,589,593,597,]),'STRLEN':([86,90,92,121,122,123,124,125,126,127,128,129,130,324,380,449,450,451,452,453,454,455,528,603,],[178,-159,-160,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,389,389,389,-48,-49,-50,-51,-52,-53,389,178,]),'SUBSTR':([86,90,92,603,],[179,-159,-160,179,]),'FEGTS':([86,90,92,],[182,-159,-160,]),'READLINE':([86,90,92,],[183,-159,-160,]),'COUNT':([86,90,92,121,122,123,124,125,126,127,128,129,130,324,380,449,450,451,452,453,454,455,528,603,],[186,-159,-160,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,388,388,388,-48,-49,-50,-51,-52,-53,388,186,]),'ARRAY_POP':([86,90,92,603,],[187,-159,-160,187,]),'ARRAY_SUM':([86,90,92,603,],[188,-159,-160,188,]),'FN':([86,90,92,],[191,-159,-160,]),'error':([89,306,307,308,],[197,362,365,367,]),'PUBLIC':([294,344,347,401,404,466,468,542,543,579,588,608,623,],[-272,-281,406,406,-271,-280,-284,-286,-287,-285,-273,-283,-282,]),'PRIVATE':([294,344,347,401,404,466,468,542,543,579,588,608,623,],[-272,-281,407,407,-271,-280,-284,-286,-287,-285,-273,-283,-282,]),'PROTECTED':([294,344,347,401,404,466,468,542,543,579,588,608,623,],[-272,-281,408,408,-271,-280,-284,-286,-287,-285,-273,-283,-282,]),'STDIN':([304,],[357,]),'STATIC':([344,401,406,407,408,466,467,468,542,543,579,608,623,],[-281,-291,-288,-289,-290,-280,509,-284,-286,-287,-285,-283,-282,]),'COUNT_NORMAL':([420,],[477,]),'COUNT_RECURSIVE':([420,],[478,]),'ELSEIF':([489,606,],[520,520,]),'ELSE':([489,606,],[521,521,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicial_program':([0,],[1,]),'program':([2,4,],[3,51,]),'sentence':([2,4,378,379,410,443,550,585,589,593,597,599,],[4,4,443,443,443,443,443,443,443,601,601,601,]),'print_statement':([2,4,378,379,410,443,517,550,585,589,593,597,599,],[5,5,5,5,5,5,547,5,5,5,5,5,5,]),'assignment':([2,4,378,379,410,443,550,585,589,593,597,599,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'types_structure':([2,4,86,378,379,410,443,550,585,589,593,597,599,],[7,7,174,7,7,7,7,7,7,7,7,7,7,]),'class_declaration':([2,4,378,379,410,443,550,585,589,593,597,599,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'interface_declaration':([2,4,378,379,410,443,550,585,589,593,597,599,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'control_structures':([2,4,378,379,410,443,550,585,589,593,597,599,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'function_declaration':([2,4,378,379,410,443,550,585,589,593,597,599,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'variable_assignment':([2,4,378,379,410,443,550,585,589,593,597,599,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'constant_assignment':([2,4,378,379,410,443,467,550,585,589,593,597,599,],[15,15,15,15,15,15,512,15,15,15,15,15,15,]),'structure_array_principal':([2,4,86,306,378,379,410,443,457,550,585,589,593,597,599,],[16,16,16,359,16,16,16,16,503,16,16,16,16,16,16,]),'structure_matrix_principal':([2,4,86,306,378,379,410,443,457,550,585,589,593,597,599,],[17,17,17,360,17,17,17,17,504,17,17,17,17,17,17,]),'structure_object_principal':([2,4,12,13,54,81,86,117,118,131,132,136,137,138,139,378,379,410,443,444,490,550,585,589,593,597,599,],[18,18,60,60,60,60,18,60,60,60,60,60,60,60,60,18,18,18,18,60,60,18,18,18,18,18,18,]),'if_statement':([2,4,378,379,410,443,550,585,589,593,597,599,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'while_statement':([2,4,378,379,410,443,550,585,589,593,597,599,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'for_statement':([2,4,378,379,410,443,550,585,589,593,597,599,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'const_syntax':([2,4,378,379,410,443,467,550,585,589,593,597,599,],[28,28,28,28,28,28,28,28,28,28,28,28,28,]),'define_syntax':([2,4,378,379,410,443,467,550,585,589,593,597,599,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'indexed_array':([2,4,86,104,306,311,314,327,331,332,333,378,379,410,434,443,457,550,585,589,593,597,599,],[30,30,30,219,30,219,373,219,219,219,219,30,30,30,219,30,30,30,30,30,30,30,30,]),'associative_array':([2,4,86,306,378,379,410,443,457,550,585,589,593,597,599,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'access_array_stucture':([2,4,86,306,378,379,410,443,457,550,585,589,593,597,599,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'access_array_element':([2,4,12,13,54,74,81,86,99,100,109,117,118,131,132,134,136,137,138,139,140,144,306,375,377,378,379,410,443,444,456,457,490,549,550,585,589,593,597,599,603,],[33,33,71,71,71,150,71,189,150,150,150,71,71,71,71,251,71,71,71,71,150,258,363,437,439,33,33,33,33,71,502,363,71,150,33,33,33,605,605,605,620,]),'matrix_firstform':([2,4,86,306,378,379,410,443,457,550,585,589,593,597,599,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'matrix_secondform':([2,4,86,306,378,379,410,443,457,550,585,589,593,597,599,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'access_element_matrix':([2,4,12,13,54,74,81,86,99,100,109,117,118,131,132,134,136,137,138,139,140,306,378,379,410,443,444,457,490,549,550,585,589,593,597,599,],[36,36,73,73,73,73,73,190,73,73,73,73,73,73,73,252,73,73,73,73,73,36,36,36,36,36,73,36,73,73,36,36,36,36,36,36,]),'modify_element_matrix':([2,4,86,306,378,379,410,443,457,550,585,589,593,597,599,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'add_element_matrix':([2,4,86,306,378,379,410,443,457,550,585,589,593,597,599,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'object_creation':([2,4,12,13,54,81,86,104,117,118,131,132,136,137,138,139,311,327,331,332,333,378,379,410,434,443,444,490,550,585,589,593,597,599,],[39,39,39,39,39,39,39,218,39,39,39,39,39,39,39,39,218,218,218,218,218,39,39,39,218,39,39,39,39,39,39,39,39,39,]),'access_method_object':([2,4,12,13,54,81,86,117,118,131,132,136,137,138,139,378,379,410,443,444,490,550,585,589,593,597,599,603,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,602,602,602,615,]),'statement_access_array_element_error':([2,4,86,306,378,379,410,443,457,550,585,589,593,597,599,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'printable_values':([12,13,54,81,117,118,131,132,136,137,138,139,444,490,],[55,82,110,162,237,238,246,247,253,254,255,256,494,524,]),'values':([12,13,54,74,81,86,97,99,100,104,106,109,117,118,119,131,132,134,136,137,138,139,140,144,157,166,211,228,300,301,309,310,311,326,327,331,332,333,342,349,375,377,396,434,444,490,541,544,549,561,563,577,603,],[56,56,56,149,56,168,200,149,149,217,226,149,56,56,239,56,56,250,56,56,56,56,149,259,284,299,325,299,299,299,299,299,370,390,391,217,217,217,284,412,436,440,461,217,493,522,564,299,149,576,299,299,613,]),'conditional':([12,13,54,74,81,86,99,100,109,117,118,131,132,136,137,138,139,444,490,549,],[59,59,111,147,111,177,207,209,229,59,59,59,59,59,59,59,59,59,59,567,]),'boolean':([12,13,54,74,81,86,97,99,100,104,106,109,117,118,119,131,132,134,136,137,138,139,140,144,157,166,211,228,300,301,309,310,311,326,327,331,332,333,342,349,375,377,396,434,444,490,541,544,549,561,563,577,603,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'boolean_expression':([12,13,54,74,81,86,99,100,109,117,118,131,132,136,137,138,139,140,444,490,549,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,257,64,64,64,]),'comparation':([12,13,54,74,81,86,99,100,109,117,118,131,132,136,137,138,139,140,444,490,549,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'logic_not_sentence':([12,13,54,74,81,86,99,100,109,117,118,131,132,136,137,138,139,140,444,490,549,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'logic_expression':([12,13,54,74,81,86,99,100,109,117,118,131,132,136,137,138,139,140,444,490,549,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'expression':([12,13,54,74,81,86,99,100,109,117,118,119,131,132,136,137,138,139,140,145,155,156,245,444,490,517,549,603,],[72,72,112,72,112,170,72,72,112,72,72,240,72,72,72,72,72,72,72,261,282,283,339,72,72,548,72,616,]),'true_boolean_types':([12,13,54,74,81,86,99,100,109,117,118,131,132,136,137,138,139,140,154,444,490,549,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,274,75,75,75,]),'false_boolean_types':([12,13,54,74,81,86,99,100,109,117,118,131,132,136,137,138,139,140,153,444,490,549,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,266,76,76,76,]),'term':([12,13,54,74,81,86,99,100,109,117,118,119,131,132,136,137,138,139,140,145,155,156,158,159,160,161,245,444,490,517,549,603,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,286,287,288,289,77,77,77,77,77,77,]),'factor':([12,13,54,74,81,86,99,100,109,117,118,119,131,132,136,137,138,139,140,145,155,156,158,159,160,161,245,444,490,517,549,603,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'assignment_operator':([25,604,],[86,86,]),'structure_matrix_second':([47,397,],[107,462,]),'printable_dividers':([56,57,59,60,111,113,493,522,],[117,131,136,138,136,131,117,117,]),'comparator_operator':([56,72,112,149,168,170,493,498,522,],[119,145,145,119,119,145,119,528,119,]),'logic_operator':([64,75,76,],[140,153,154,]),'class_extends_opt':([83,84,],[163,165,]),'function_invocation':([86,198,199,],[171,317,320,]),'string_special_function':([86,603,],[172,617,]),'array_special_function_structure':([86,603,],[173,618,]),'input':([86,],[175,]),'special_function':([86,],[176,]),'array_special_function':([86,603,],[180,180,]),'statement_array_special_function_error':([86,603,],[181,181,]),'arrow_function':([86,],[184,]),'anonymous_functions':([86,],[185,]),'values_array_indexed':([104,311,327,331,332,333,434,],[214,214,214,393,394,395,214,]),'structure_array':([104,105,311,508,],[215,223,215,538,]),'structure_matrix_first':([104,311,507,],[216,216,537,]),'key':([104,105,311,508,],[220,220,220,220,]),'class_implements_opt':([163,],[291,]),'params':([166,228,300,301,309,310,544,563,577,],[295,338,350,351,368,369,565,578,586,]),'real_params':([166,228,300,301,309,310,544,563,577,],[296,296,296,296,296,296,296,296,296,]),'empty':([166,228,300,301,309,310,544,563,577,],[297,297,297,297,297,297,297,297,297,]),'accessType':([198,199,],[318,321,]),'interface_list':([292,],[345,]),'interface_body':([294,],[347,]),'string_param':([302,303,458,],[352,356,506,]),'expression_for':([324,380,449,528,],[382,447,500,553,]),'number_values':([324,380,449,528,590,],[383,383,383,383,595,]),'length_operations':([324,380,449,528,],[385,385,385,385,]),'class_body':([344,],[401,]),'interface_method':([347,],[404,]),'visibility_opt':([347,401,],[405,467,]),'codeblock':([348,429,517,],[409,483,546,]),'count_param':([359,360,361,362,503,504,505,],[419,421,422,423,532,533,534,]),'body_statement':([378,379,410,443,550,585,589,],[442,446,471,492,568,591,594,]),'operator_aritmetic':([382,447,500,553,584,],[449,449,449,449,590,]),'class_member':([401,],[466,]),'class_attribute':([401,],[468,]),'int_param':([416,515,],[472,545,]),'condition_for':([448,],[499,]),'elseif_statement':([489,606,],[518,621,]),'else_statement':([489,606,],[519,622,]),'increment_statement':([529,],[555,]),'method_body':([593,597,599,],[598,607,611,]),'classStatement':([593,597,599,],[599,599,599,]),'return_form':([593,597,599,],[600,600,609,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicial_program","S'",1,None,None,None),
  ('inicial_program -> PHP_IDENTIFIER program PHP_END_IDENTIFIER','inicial_program',3,'p_inicial_program','syntaxAnalysis.py',11),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',14),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',18),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',28),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',29),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',30),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',37),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',38),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',39),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',45),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',51),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',52),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',53),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',59),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',60),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',61),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',67),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',76),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',77),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',78),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',79),
  ('body_statement -> RETURN printable_values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',80),
  ('body_statement -> sentence RETURN printable_values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',81),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',88),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',93),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',94),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',95),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',96),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',97),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',98),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',103),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',108),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',109),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',110),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',111),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',112),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',113),
  ('expression_for -> length_operations','expression_for',1,'p_expression_for','syntaxAnalysis.py',114),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',119),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',120),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',125),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',126),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',127),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',128),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',129),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',130),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',137),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',138),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',145),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',146),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',147),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',153),
  ('boolean_expression -> VARIABLE','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',154),
  ('boolean_expression -> IDENTIFIER','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',155),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',156),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',157),
  ('boolean_expression -> logic_expression','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',158),
  ('logic_expression -> true_boolean_types logic_operator false_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',164),
  ('logic_expression -> false_boolean_types logic_operator true_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',165),
  ('true_boolean_types -> TRUE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',170),
  ('true_boolean_types -> STRING','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',171),
  ('true_boolean_types -> INTEGER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',172),
  ('true_boolean_types -> FLOAT','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',173),
  ('true_boolean_types -> VARIABLE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',174),
  ('true_boolean_types -> IDENTIFIER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',175),
  ('true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN','true_boolean_types',4,'p_true_boolean_types','syntaxAnalysis.py',176),
  ('false_boolean_types -> FALSE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',181),
  ('false_boolean_types -> STRING','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',182),
  ('false_boolean_types -> INTEGER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',183),
  ('false_boolean_types -> VARIABLE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',184),
  ('false_boolean_types -> IDENTIFIER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',185),
  ('false_boolean_types -> FLOAT','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',186),
  ('false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN','false_boolean_types',3,'p_false_boolean_types','syntaxAnalysis.py',187),
  ('false_boolean_types -> NULL','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',188),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',196),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',197),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',204),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',205),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',206),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',207),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',208),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',209),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',210),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',211),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',212),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',213),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',214),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',220),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',221),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',222),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',223),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',224),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',225),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',226),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',227),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',228),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',229),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',238),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',239),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',240),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',241),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',246),
  ('printable_values -> values printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',247),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',248),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',249),
  ('printable_values -> VARIABLE printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',250),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',251),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',252),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',253),
  ('printable_values -> conditional printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',254),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',255),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',256),
  ('printable_values -> structure_object_principal printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',257),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',258),
  ('printable_dividers -> COMMA','printable_dividers',1,'p_printable_dividers','syntaxAnalysis.py',263),
  ('printable_dividers -> STRING_CONCATENATION','printable_dividers',1,'p_printable_dividers','syntaxAnalysis.py',264),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',270),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',271),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',272),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',273),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',279),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',280),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',286),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',287),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',288),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',294),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',295),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',296),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',297),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',298),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',305),
  ('factor -> FLOAT','factor',1,'p_factor','syntaxAnalysis.py',306),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',307),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',308),
  ('factor -> STRING','factor',1,'p_factor','syntaxAnalysis.py',309),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',336),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',337),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',343),
  ('variable_assignment -> VARIABLE assignment_operator IDENTIFIER','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',344),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',345),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',346),
  ('variable_assignment -> VARIABLE assignment_operator string_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',347),
  ('variable_assignment -> VARIABLE assignment_operator array_special_function_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',348),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',349),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',350),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',351),
  ('variable_assignment -> VARIABLE assignment_operator conditional','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',352),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',353),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',354),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',355),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',356),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',363),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',364),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',370),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',371),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',377),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',383),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',394),
  ('function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',395),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',401),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',402),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',408),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',409),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',410),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',411),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',421),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',429),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',435),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',436),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',442),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',443),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',444),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',450),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',456),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',462),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',463),
  ('string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','string_special_function',4,'p_string_special_function','syntaxAnalysis.py',471),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN','string_special_function',6,'p_string_special_function','syntaxAnalysis.py',472),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN','string_special_function',8,'p_string_special_function','syntaxAnalysis.py',473),
  ('string_param -> STRING','string_param',1,'p_string_param','syntaxAnalysis.py',478),
  ('string_param -> VARIABLE','string_param',1,'p_string_param','syntaxAnalysis.py',479),
  ('string_param -> INTEGER','string_param',1,'p_string_param','syntaxAnalysis.py',480),
  ('int_param -> INTEGER','int_param',1,'p_int_param','syntaxAnalysis.py',491),
  ('int_param -> VARIABLE','int_param',1,'p_int_param','syntaxAnalysis.py',492),
  ('int_param -> STRING','int_param',1,'p_int_param','syntaxAnalysis.py',493),
  ('array_special_function_structure -> array_special_function','array_special_function_structure',1,'p_array_special_function_structure','syntaxAnalysis.py',507),
  ('array_special_function_structure -> statement_array_special_function_error','array_special_function_structure',1,'p_array_special_function_structure','syntaxAnalysis.py',508),
  ('array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',513),
  ('array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',514),
  ('array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',515),
  ('array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN','array_special_function',4,'p_array_special_function','syntaxAnalysis.py',516),
  ('array_special_function -> ARRAY_SUM LEFT_PAREN VARIABLE RIGHT_PAREN','array_special_function',4,'p_array_special_function','syntaxAnalysis.py',517),
  ('statement_array_special_function_error -> COUNT LEFT_PAREN error count_param RIGHT_PAREN','statement_array_special_function_error',5,'p_statement_array_special_function_error','syntaxAnalysis.py',522),
  ('statement_array_special_function_error -> ARRAY_POP LEFT_PAREN error RIGHT_PAREN','statement_array_special_function_error',4,'p_statement_array_special_function_error','syntaxAnalysis.py',523),
  ('statement_array_special_function_error -> ARRAY_SUM LEFT_PAREN error RIGHT_PAREN','statement_array_special_function_error',4,'p_statement_array_special_function_error','syntaxAnalysis.py',524),
  ('count_param -> COMMA COUNT_NORMAL','count_param',2,'p_count_param','syntaxAnalysis.py',530),
  ('count_param -> COMMA COUNT_RECURSIVE','count_param',2,'p_count_param','syntaxAnalysis.py',531),
  ('count_param -> <empty>','count_param',0,'p_count_param','syntaxAnalysis.py',532),
  ('length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',536),
  ('length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',537),
  ('length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',538),
  ('length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','length_operations',4,'p_length_operations','syntaxAnalysis.py',539),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',551),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',552),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',553),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',560),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',561),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',562),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',563),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',568),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',572),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',573),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',579),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',580),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',586),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',587),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',592),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',593),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',594),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',595),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',596),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',597),
  ('access_array_stucture -> access_array_element','access_array_stucture',1,'p_access_array_stucture','syntaxAnalysis.py',602),
  ('access_array_stucture -> statement_access_array_element_error','access_array_stucture',1,'p_access_array_stucture','syntaxAnalysis.py',603),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',608),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',609),
  ('statement_access_array_element_error -> VARIABLE LEFT_BRACKET error RIGHT_BRACKET','statement_access_array_element_error',4,'p_statement_access_array_element_error','syntaxAnalysis.py',614),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',621),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',622),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',623),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',624),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',625),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',630),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',634),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',639),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',640),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',646),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',647),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',653),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',654),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',655),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',656),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',661),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',662),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',668),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',677),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',678),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',683),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',684),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',688),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',689),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',690),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',691),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',692),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',693),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',694),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',695),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',696),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',697),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',703),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',704),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',709),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',713),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',717),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',718),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',722),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',726),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',727),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',731),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',732),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',736),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',737),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',741),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',742),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',746),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',747),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',748),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',753),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',754),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',755),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',760),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',761),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',762),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',763),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',767),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',768),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',769),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',770),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',771),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',777),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',778),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',779),
  ('return_form -> RETURN expression SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',780),
  ('return_form -> RETURN string_special_function SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',781),
  ('return_form -> RETURN array_special_function_structure SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',782),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',787),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',788),
]
