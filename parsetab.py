
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY BREAK CLASS COLON COMMA COMMENT CONST DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n                        | logic_expression\n    \n    logic_expression : true_boolean_types logic_operator false_boolean_types\n                     | false_boolean_types logic_operator true_boolean_types\n    \n    true_boolean_types : TRUE\n                       | STRING\n                       | INTEGER\n                       | FLOAT\n                       | ARRAY LEFT_PAREN values RIGHT_PAREN\n    \n    false_boolean_types : FALSE\n                        | STRING\n                        | INTEGER\n                        | FLOAT\n                        | ARRAY LEFT_PAREN RIGHT_PAREN\n                        | NULL\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE COMMA printable_values\n                     | STRING STRING_CONCATENATION STRING\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal COMMA printable_values\n\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN  access_method_object SEMICOLON\n                | RETURN SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[10,10,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,10,10,-188,-204,-218,-152,10,-144,-208,-207,-209,-214,-212,-213,10,-182,-181,-217,-215,-14,-13,-157,-15,-16,10,-20,10,10,10,-28,10,10,-248,-202,-166,-17,-249,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[11,11,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,11,11,-188,-204,-218,-152,11,-144,-208,-207,-209,-214,-212,-213,11,-182,-181,-217,-215,-14,-13,-157,-15,-16,11,-20,11,11,11,-28,11,11,-248,-202,-166,-17,-249,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[17,17,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,17,17,-188,-204,-218,-152,17,-144,-208,-207,-209,-214,-212,-213,17,-182,-181,-217,-215,-14,-13,-157,-15,-16,17,-20,17,17,17,-28,17,17,-248,-202,-166,-17,-249,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[18,18,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,18,18,-188,-204,-218,-152,18,-144,-208,-207,-209,-214,-212,-213,18,-182,-181,-217,-215,-14,-13,-157,-15,-16,18,-20,18,18,18,-28,18,18,-248,-202,-166,-17,-249,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,81,85,87,90,92,94,104,166,167,174,175,185,258,270,271,273,274,275,276,277,284,285,291,293,299,302,312,317,318,328,334,337,339,340,341,342,343,344,345,346,349,359,360,361,363,364,365,367,385,386,387,388,389,390,400,401,407,416,421,423,424,441,442,446,470,473,476,479,480,484,487,488,490,492,493,496,497,499,503,509,510,511,],[22,22,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,177,-138,-139,-180,-185,-186,-203,-110,-111,-113,-114,-109,-220,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-229,-239,-200,22,22,-188,-204,-239,-218,-219,392,-236,-237,-238,-152,22,-144,-208,-207,-209,-214,-212,-213,22,-182,-181,-217,-228,417,-232,-215,-14,-13,438,-157,-15,-16,-234,-235,22,-233,-20,22,-221,22,22,-28,22,22,-248,-202,-166,-17,-231,-249,-18,-19,-230,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,59,69,76,81,84,85,87,90,92,93,94,95,96,97,104,105,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,128,129,130,131,132,133,134,135,136,146,147,149,150,151,152,157,166,167,169,174,175,185,207,264,268,269,270,271,273,274,275,276,277,280,284,285,291,293,295,299,304,310,311,312,314,316,317,318,319,328,334,337,339,342,343,344,345,346,349,359,360,361,363,364,365,367,372,373,374,375,376,377,378,379,380,385,386,387,388,389,390,400,401,407,421,423,424,431,432,441,442,443,445,446,451,452,455,463,468,470,473,476,480,484,487,488,490,492,493,494,496,497,499,503,509,510,511,],[23,23,-5,-6,-7,-8,-9,53,53,-160,-161,-162,-10,-11,-12,88,89,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,109,-112,138,109,158,178,-138,-139,-180,-185,184,-186,187,187,189,-203,209,53,217,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,53,220,178,53,53,187,-52,-53,-54,230,217,233,217,217,217,217,217,217,262,-110,-111,217,-113,-114,-109,262,262,262,262,-182,-181,-205,-206,-216,-210,-211,320,-167,-168,-169,-189,335,-229,347,354,356,-200,359,365,23,23,320,-188,-204,-239,-218,-236,-237,-238,-152,23,-144,-208,-207,-209,-214,-212,-213,23,409,320,-44,-45,-46,-47,-48,-49,412,-182,-181,-217,-228,418,-232,-215,-14,-13,-157,-15,-16,320,449,-234,-235,262,187,23,465,466,262,475,262,-233,-20,23,23,495,-28,495,495,-248,-202,507,-166,-17,-231,-249,-18,-19,-230,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,432,446,449,473,476,480,484,487,488,490,492,493,495,496,497,503,509,510,],[24,24,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,82,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,24,24,-188,-204,-218,-152,24,-144,-208,-207,-209,-214,-212,-213,24,-182,-181,-217,-215,-14,-13,-157,-15,-16,451,24,460,-20,24,24,24,-28,24,24,-248,-202,82,-166,-17,-249,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,432,446,449,473,476,480,484,487,488,490,492,493,495,496,497,503,509,510,],[25,25,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,83,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,25,25,-188,-204,-218,-152,25,-144,-208,-207,-209,-214,-212,-213,25,-182,-181,-217,-215,-14,-13,-157,-15,-16,452,25,461,-20,25,25,25,-28,25,25,-248,-202,83,-166,-17,-249,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[39,39,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,39,39,-188,-204,-218,-152,39,-144,-208,-207,-209,-214,-212,-213,39,-182,-181,-217,-215,-14,-13,-157,-15,-16,39,-20,39,39,39,-28,39,39,-248,-202,-166,-17,-249,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[40,40,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,40,40,-188,-204,-218,-152,40,-144,-208,-207,-209,-214,-212,-213,40,-182,-181,-217,-215,-14,-13,-157,-15,-16,40,-20,40,40,40,-28,40,40,-248,-202,-166,-17,-249,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[41,41,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,41,41,-188,-204,-218,-152,41,-144,-208,-207,-209,-214,-212,-213,41,-182,-181,-217,-215,-14,-13,-157,-15,-16,41,-20,41,41,41,-28,41,41,-248,-202,-166,-17,-249,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,299,312,317,318,328,334,337,339,342,343,344,345,346,349,359,360,361,363,364,365,367,385,386,387,388,389,390,400,401,407,421,423,424,441,442,446,470,473,476,480,484,487,488,490,492,493,496,497,499,503,509,510,511,],[42,42,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-229,-200,42,42,-188,-204,-239,-218,-236,-237,-238,-152,42,-144,-208,-207,-209,-214,-212,-213,42,-182,-181,-217,-228,42,-232,-215,-14,-13,-157,-15,-16,-234,-235,42,-233,-20,42,42,42,-28,42,42,-248,-202,-166,-17,-231,-249,-18,-19,-230,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,299,312,317,318,328,334,337,339,342,343,344,345,346,349,359,360,361,363,364,365,367,385,386,387,388,389,390,400,401,407,421,423,424,441,442,446,470,473,476,480,484,487,488,490,492,493,496,497,499,503,509,510,511,],[43,43,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-229,-200,43,43,-188,-204,-239,-218,-236,-237,-238,-152,43,-144,-208,-207,-209,-214,-212,-213,43,-182,-181,-217,-228,43,-232,-215,-14,-13,-157,-15,-16,-234,-235,43,-233,-20,43,43,43,-28,43,43,-248,-202,-166,-17,-231,-249,-18,-19,-230,]),'ARRAY':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,59,69,76,81,85,87,90,92,94,95,96,100,104,105,111,123,128,129,130,131,132,133,144,145,166,167,174,175,185,270,271,272,273,274,275,276,277,283,284,285,287,288,289,291,293,312,317,318,328,334,339,345,346,349,358,359,360,361,363,364,365,367,385,386,387,400,401,407,414,421,423,424,445,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[44,44,-5,-6,-7,-8,-9,73,73,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,73,-112,73,73,44,-138,-139,-180,-185,-186,73,73,192,-203,73,73,73,73,73,73,-52,-53,-54,239,245,-110,-111,-113,-114,-109,-182,-181,313,-205,-206,-216,-210,-211,313,-167,-168,313,313,313,-169,-189,-200,44,44,-188,-204,-218,-152,44,-144,313,-208,-207,-209,-214,-212,-213,44,-182,-181,-217,-215,-14,-13,435,-157,-15,-16,73,44,-20,44,44,44,-28,44,44,-248,-202,-166,-17,-249,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,59,81,85,87,90,92,94,104,109,138,158,166,167,174,175,185,187,209,220,230,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,333,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,412,421,423,424,446,473,476,480,484,487,488,490,492,493,495,496,497,503,507,509,510,],[45,45,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,84,-163,-164,-165,-166,-183,-184,-187,-201,-202,101,102,-3,-4,126,-112,45,-138,-139,-180,-185,-186,-203,126,126,84,-110,-111,-113,-114,-109,126,126,126,295,310,311,-205,-206,315,-210,-211,-167,-168,-169,-189,-200,45,45,-188,102,-204,-218,-152,45,-144,295,-207,-209,-214,-212,295,45,-182,-181,-217,-215,-14,-13,295,-157,-15,-16,45,-20,45,45,45,-28,45,45,-248,-202,84,-166,-17,-249,295,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,59,76,81,85,87,90,92,94,100,104,111,123,128,129,166,167,174,175,185,270,271,273,274,275,276,277,283,284,285,287,288,289,291,293,312,317,318,328,334,339,345,346,349,358,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[46,46,-5,-6,-7,-8,-9,46,46,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,46,-112,46,46,-138,-139,-180,-185,-186,46,-203,46,46,46,46,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,46,-167,-168,46,46,46,-169,-189,-200,46,46,-188,-204,-218,-152,46,-144,46,-208,-207,-209,-214,-212,-213,46,-182,-181,-217,-215,-14,-13,-157,-15,-16,46,-20,46,46,46,-28,46,46,-248,-202,-166,-17,-249,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,328,334,339,345,349,359,360,361,363,364,365,385,386,387,400,401,407,421,423,424,473,487,497,509,510,],[0,-2,-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-1,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,-188,-204,-218,-152,-144,-208,-207,-209,-214,-212,-213,-182,-181,-217,-215,-14,-13,-157,-15,-16,-20,-28,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,74,75,77,82,83,88,89,90,92,94,104,137,138,158,159,160,161,162,163,164,165,166,167,172,173,174,175,183,184,185,206,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,246,247,249,250,251,252,253,254,270,271,273,274,275,276,277,281,284,285,286,291,293,298,312,320,321,322,324,325,328,334,349,350,351,359,360,361,363,364,365,369,381,385,386,395,396,397,398,399,400,402,403,405,408,410,411,418,419,421,427,433,434,444,448,456,471,493,494,496,501,504,506,],[48,49,-126,-127,-160,-161,-162,-140,-141,-163,-164,-165,90,-183,-184,92,94,-187,-201,-202,-97,-99,-101,-110,-105,-107,-109,-111,-112,-50,-113,-114,-55,-57,-58,-115,-71,-118,-98,-134,-135,-136,-137,-180,-185,-186,-203,-72,-73,-124,-128,-129,-130,-131,-132,-133,-109,-110,-111,-153,-154,-113,-114,-198,-199,-109,293,-95,-56,-125,-100,-74,-75,-124,-102,-104,-81,-77,-80,-84,-103,-106,-108,-51,-82,-78,-79,-76,-123,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-116,-117,-70,-119,-120,-121,-122,-96,-182,-181,-205,-206,-216,-210,-211,-142,-167,-168,328,-169,-189,-65,-200,-36,372,-37,-42,-43,-188,-204,-144,-158,-159,-208,-207,-209,-214,-212,-213,406,-143,-182,-181,-156,-195,-196,-197,-194,-215,428,429,430,-39,432,-38,441,442,-157,447,-40,-41,-155,-35,470,479,503,505,90,512,513,514,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,484,487,488,490,492,493,496,497,503,509,510,],[-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,368,368,-188,-204,-218,-152,368,-144,-208,-207,-209,-214,-212,-213,402,-182,-181,-217,-215,-14,-13,-157,-15,-16,368,-20,368,368,494,-28,494,494,-248,-202,-166,-17,-249,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,270,271,273,274,275,276,277,284,285,291,293,312,317,318,328,334,339,345,346,349,359,360,361,363,364,365,367,385,386,387,400,401,407,421,423,424,446,473,476,480,487,490,492,493,496,497,503,509,510,],[-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-200,369,369,-188,-204,-218,-152,369,-144,-208,-207,-209,-214,-212,-213,403,-182,-181,-217,-215,-14,-13,-157,-15,-16,369,-20,369,369,-28,501,-248,-202,-166,-17,-249,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,166,167,174,175,185,258,270,271,273,274,275,276,277,284,285,291,293,299,302,312,328,334,337,339,340,345,349,359,360,361,363,364,365,366,367,370,385,386,387,388,390,393,400,401,404,406,407,421,423,424,428,429,430,441,442,447,459,470,473,479,482,485,487,489,490,491,492,493,496,497,498,499,500,502,503,505,509,510,511,512,513,514,],[-5,-6,-7,-8,-9,-160,-161,-162,-10,-11,-12,-163,-164,-165,-166,-183,-184,-187,-201,-202,-3,-4,-112,-180,-185,-186,-203,-110,-111,-113,-114,-109,-220,-182,-181,-205,-206,-216,-210,-211,-167,-168,-169,-189,-229,339,-200,-188,-204,387,-218,-219,-152,-144,-208,-207,-209,-214,-212,-213,401,-21,407,-182,-181,-217,-228,-232,421,-215,-14,-25,-27,-13,-157,-15,-16,-23,-24,-26,-234,-235,-22,473,-233,-20,-221,487,497,-28,499,-240,-242,-248,-202,-166,-17,511,-231,-241,-244,-249,-247,-18,-19,-230,-243,-245,-246,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,69,73,76,80,81,85,87,95,96,104,105,111,112,113,114,115,116,117,118,119,120,121,122,123,128,129,130,131,132,133,135,146,147,149,150,151,152,168,169,170,171,176,177,192,239,245,275,280,313,319,323,373,374,375,376,377,378,379,420,425,431,435,439,445,454,],[50,76,95,96,97,99,100,105,105,148,105,157,169,-138,-139,105,105,207,105,105,169,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,105,105,105,105,-52,-53,-54,169,169,169,169,169,169,169,264,169,266,267,268,269,283,296,297,264,319,358,319,380,319,-44,-45,-46,-47,-48,-49,443,445,319,453,455,105,468,]),'STRING':([10,11,50,69,76,81,85,87,93,95,96,99,100,101,102,105,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,144,145,148,157,190,207,264,267,268,269,282,283,287,288,289,297,304,314,316,332,358,368,402,415,440,443,445,453,455,468,494,],[54,54,54,141,54,166,-138,-139,166,141,141,191,201,204,166,141,54,166,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,54,219,166,224,54,54,141,-52,-53,-54,166,236,242,166,166,166,166,166,307,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,204,166,166,141,166,166,166,166,]),'INTEGER':([10,11,50,69,76,81,84,85,87,93,95,96,100,101,102,105,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,157,169,190,207,264,268,269,280,282,283,287,288,289,295,297,304,310,311,314,315,316,319,332,358,368,373,374,375,376,377,378,379,402,415,431,440,443,445,453,455,462,468,481,494,],[57,57,110,57,110,165,179,-138,-139,185,57,57,200,203,185,210,57,165,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,57,185,179,57,57,57,-52,-53,-54,185,232,237,243,232,232,185,232,232,232,232,185,232,185,185,185,185,185,324,185,185,185,185,185,336,185,185,355,357,185,362,185,324,185,185,185,324,-44,-45,-46,-47,-48,-49,185,203,324,185,185,57,185,185,474,185,324,185,]),'FLOAT':([10,11,50,69,76,81,85,87,93,95,96,100,102,105,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,129,130,131,132,133,134,144,145,148,157,190,207,264,268,269,280,282,283,287,288,289,297,304,314,316,319,332,358,368,373,374,375,376,377,378,379,402,431,440,443,445,453,455,468,481,494,],[58,58,58,58,58,167,-138,-139,167,58,58,167,167,58,58,167,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,58,167,58,58,58,-52,-53,-54,167,238,244,167,167,167,167,167,167,167,325,167,167,167,167,167,167,167,167,167,325,167,167,167,325,-44,-45,-46,-47,-48,-49,167,325,167,167,58,167,167,167,325,167,]),'TRUE':([10,11,50,69,76,81,85,87,93,95,96,100,102,105,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,129,130,131,132,133,134,145,148,157,190,207,264,268,269,282,283,287,288,289,297,304,314,316,332,358,368,402,440,443,445,453,455,468,494,],[61,61,61,142,61,174,-138,-139,174,142,142,174,174,142,61,174,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,61,174,61,61,142,-52,-53,-54,174,241,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,142,174,174,174,174,]),'FALSE':([10,11,50,69,76,81,85,87,93,95,96,100,102,105,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,129,130,131,132,133,134,144,148,157,190,207,264,268,269,282,283,287,288,289,297,304,314,316,332,358,368,402,440,443,445,453,455,468,494,],[62,62,62,143,62,175,-138,-139,175,143,143,175,175,143,62,175,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,62,175,62,62,143,-52,-53,-54,175,235,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,143,175,175,175,175,]),'LOGIC_NOT':([10,11,50,69,76,95,96,105,111,123,128,129,130,131,132,133,445,],[69,69,69,69,69,69,69,69,69,69,69,69,69,-52,-53,-54,69,]),'NULL':([10,11,50,69,76,95,96,105,111,123,128,129,130,131,132,133,144,445,],[74,74,74,74,74,74,74,74,74,74,74,74,74,-52,-53,-54,74,74,]),'IDENTIFIER':([17,18,22,42,46,81,85,87,113,114,115,116,117,118,119,120,121,122,155,181,182,256,280,319,338,373,374,375,376,377,378,379,392,417,431,438,],[78,79,80,98,104,168,-138,-139,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,257,275,275,301,323,323,391,323,-44,-45,-46,-47,-48,-49,420,439,323,454,]),'MINUS':([23,31,53,57,66,72,75,109,110,138,158,165,187,209,210,213,217,232,250,251,252,253,270,271,320,321,322,324,325,371,385,386,408,411,433,434,448,475,495,496,507,508,],[86,91,86,-123,91,147,-118,86,-123,-124,86,-123,-124,-124,-123,-125,-124,-123,-119,-120,-121,-122,-182,-181,-36,375,-37,-42,-43,375,-182,-181,-39,375,-40,-41,375,375,86,91,86,91,]),'EQUALS':([23,34,98,180,189,199,200,201,203,204,274,275,277,352,396,397,398,399,400,418,449,495,],[85,93,190,272,280,290,-172,-173,-172,-173,314,-216,316,394,-195,-196,-197,-194,-215,440,463,85,]),'PLUS_EQUALS':([23,449,495,],[87,462,87,]),'COMMA':([37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,74,75,104,107,109,110,137,138,165,166,167,174,175,185,191,196,197,198,200,201,212,213,215,216,217,220,221,222,223,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,246,247,249,250,251,252,253,260,262,263,270,271,273,274,275,276,277,284,292,298,300,301,327,334,347,348,349,359,360,361,363,364,365,382,383,385,386,391,396,397,398,399,400,],[-201,-202,111,123,-110,128,129,-109,-111,-112,-50,-113,-114,-55,-57,-58,-115,-71,-118,-203,128,123,-109,-72,-73,-109,-110,-111,-113,-114,-109,282,287,288,289,-109,-110,-56,-125,-74,-75,-124,-81,-77,-80,-84,-51,-82,-78,-79,-76,-123,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-116,-117,-70,-119,-120,-121,-122,304,-147,-148,-182,-181,-205,-206,-216,-210,-211,-167,333,-65,338,-226,287,-204,-149,-150,-144,-208,-207,-209,-214,-212,-213,414,415,-182,-181,-227,-195,-196,-197,-194,-215,]),'RIGHT_PAREN':([37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,74,75,104,106,107,108,109,110,137,138,148,153,157,165,166,167,174,175,185,186,188,193,194,195,196,197,198,200,201,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,246,247,248,249,250,251,252,253,259,260,261,262,263,264,265,268,269,270,271,273,274,275,276,277,284,294,296,298,305,306,307,308,309,320,322,324,325,326,327,329,330,331,334,347,348,349,359,360,361,363,364,365,371,382,383,385,386,396,397,398,399,400,408,411,412,413,433,434,436,437,443,450,455,457,458,460,461,465,466,467,468,469,474,477,486,],[-201,-202,-99,-101,-110,-105,-107,-109,-111,-112,-50,-113,-114,-55,-57,-58,-115,-71,-118,-203,211,212,213,-101,-109,-72,-73,249,254,-151,-109,-110,-111,-113,-114,-109,278,279,284,285,286,-174,-176,-178,-109,-110,-151,212,-124,-123,-56,-125,-100,-74,-75,-124,-102,-104,-81,-77,-80,-84,-103,-106,-108,-51,-82,-78,-79,-76,-123,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-116,-117,298,-70,-119,-120,-121,-122,303,-145,-146,-147,-148,-151,213,-151,-151,-182,-181,-205,-206,-216,-210,-211,-167,334,249,-65,349,350,351,352,353,-36,-37,-42,-43,381,382,-175,-177,-179,-204,-149,-150,-144,-208,-207,-209,-214,-212,-213,408,-192,-170,-182,-181,-195,-196,-197,-194,-215,-39,-38,433,434,-40,-41,-193,-171,-151,464,-151,471,472,-29,-30,-31,-32,382,-151,478,-33,483,-34,]),'EQUALS_EQUALS':([52,53,54,57,58,59,61,62,66,67,68,72,75,108,109,110,138,139,140,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,270,271,396,397,398,399,409,],[113,125,-110,-109,-111,-112,-113,-114,134,113,136,-115,-118,113,125,-109,125,113,134,-110,-113,-114,125,125,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,-182,-181,-195,-196,-197,-194,113,]),'IDENTICAL':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,138,139,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,409,],[114,-124,-110,-109,-111,-112,-113,-114,114,-115,-118,114,-124,-109,-124,114,-110,-113,-114,-124,-124,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,114,]),'NOT_EQUALS':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,138,139,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,409,],[115,-124,-110,-109,-111,-112,-113,-114,115,-115,-118,115,-124,-109,-124,115,-110,-113,-114,-124,-124,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,115,]),'NOT_IDENTICAL':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,138,139,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,409,],[116,-124,-110,-109,-111,-112,-113,-114,116,-115,-118,116,-124,-109,-124,116,-110,-113,-114,-124,-124,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,116,]),'SMALL_THAN':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,138,139,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,409,],[117,-124,-110,-109,-111,-112,-113,-114,117,-115,-118,117,-124,-109,-124,117,-110,-113,-114,-124,-124,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,117,]),'GREATER_THAN':([52,53,54,57,58,59,61,62,67,72,75,86,91,108,109,110,138,139,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,290,394,409,],[118,-124,-110,-109,-111,-112,-113,-114,118,-115,-118,181,182,118,-124,-109,-124,118,-110,-113,-114,-124,-124,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,332,422,118,]),'SMALL_EQUALS_TO':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,138,139,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,409,],[119,-124,-110,-109,-111,-112,-113,-114,119,-115,-118,119,-124,-109,-124,119,-110,-113,-114,-124,-124,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,119,]),'GREATER_EQUALS_TO':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,138,139,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,409,],[120,-124,-110,-109,-111,-112,-113,-114,120,-115,-118,120,-124,-109,-124,120,-110,-113,-114,-124,-124,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,120,]),'SPACECRAFT':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,138,139,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,409,],[121,-124,-110,-109,-111,-112,-113,-114,121,-115,-118,121,-124,-109,-124,121,-110,-113,-114,-124,-124,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,121,]),'NULL_FUSION':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,138,139,141,142,143,187,209,210,213,217,232,246,247,250,251,252,253,409,],[122,-124,-110,-109,-111,-112,-113,-114,122,-115,-118,122,-124,-109,-124,122,-110,-113,-114,-124,-124,-109,-125,-124,-123,-116,-117,-119,-120,-121,-122,122,]),'STRING_CONCATENATION':([53,54,109,],[124,127,124,]),'MULTIPLY':([53,57,75,109,110,138,158,165,187,209,210,213,217,232,320,321,322,324,325,371,408,411,433,434,448,475,],[-124,-123,149,-124,-123,-124,-124,-123,-124,-124,-123,-125,-124,-123,-36,376,-37,-42,-43,376,-39,376,-40,-41,376,376,]),'DIVIDE':([53,57,75,109,110,138,158,165,187,209,210,213,217,232,320,321,322,324,325,371,408,411,433,434,448,475,],[-124,-123,150,-124,-123,-124,-124,-123,-124,-124,-123,-125,-124,-123,-36,377,-37,-42,-43,377,-39,377,-40,-41,377,377,]),'MODULE':([53,57,75,109,110,138,158,165,187,209,210,213,217,232,320,321,322,324,325,371,408,411,433,434,448,475,],[-124,-123,151,-124,-123,-124,-124,-123,-124,-124,-123,-125,-124,-123,-36,378,-37,-42,-43,378,-39,378,-40,-41,378,378,]),'POW':([53,57,75,109,110,138,158,165,187,209,210,213,217,232,320,321,322,324,325,371,408,411,433,434,448,475,],[-124,-123,152,-124,-123,-124,-124,-123,-124,-124,-123,-125,-124,-123,-36,379,-37,-42,-43,379,-39,379,-40,-41,379,379,]),'PLUS':([53,57,72,75,109,110,138,158,165,187,209,210,213,217,232,250,251,252,253,320,321,322,324,325,371,408,411,433,434,448,475,],[-124,-123,146,-118,-124,-123,-124,-124,-123,-124,-124,-123,-125,-124,-123,-119,-120,-121,-122,-36,374,-37,-42,-43,374,-39,374,-40,-41,374,374,]),'LOGIC_AND':([54,57,58,59,60,61,62,63,64,65,70,71,72,74,75,110,137,138,141,142,143,165,166,167,174,175,185,210,212,213,215,216,217,220,221,222,223,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,246,247,249,250,251,252,253,270,271,298,385,386,396,397,398,399,],[-62,-63,-64,-112,131,-61,-66,-55,-57,-58,131,131,-115,-71,-118,-63,-72,-73,-62,-61,-66,-109,-110,-111,-113,-114,-109,-63,-56,-125,-74,-75,-124,-81,-77,-80,-84,-51,-82,-78,-79,-76,-123,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-116,-117,-70,-119,-120,-121,-122,-182,-181,-65,-182,-181,-195,-196,-197,-194,]),'LOGIC_OR':([54,57,58,59,60,61,62,63,64,65,70,71,72,74,75,110,137,138,141,142,143,165,166,167,174,175,185,210,212,213,215,216,217,220,221,222,223,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,246,247,249,250,251,252,253,270,271,298,385,386,396,397,398,399,],[-62,-63,-64,-112,132,-61,-66,-55,-57,-58,132,132,-115,-71,-118,-63,-72,-73,-62,-61,-66,-109,-110,-111,-113,-114,-109,-63,-56,-125,-74,-75,-124,-81,-77,-80,-84,-51,-82,-78,-79,-76,-123,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-116,-117,-70,-119,-120,-121,-122,-182,-181,-65,-182,-181,-195,-196,-197,-194,]),'LOGIC_XOR':([54,57,58,59,60,61,62,63,64,65,70,71,72,74,75,110,137,138,141,142,143,165,166,167,174,175,185,210,212,213,215,216,217,220,221,222,223,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,246,247,249,250,251,252,253,270,271,298,385,386,396,397,398,399,],[-62,-63,-64,-112,133,-61,-66,-55,-57,-58,133,133,-115,-71,-118,-63,-72,-73,-62,-61,-66,-109,-110,-111,-113,-114,-109,-63,-56,-125,-74,-75,-124,-81,-77,-80,-84,-51,-82,-78,-79,-76,-123,-83,-59,-66,-67,-68,-69,-60,-61,-62,-63,-64,-116,-117,-70,-119,-120,-121,-122,-182,-181,-65,-182,-181,-195,-196,-197,-194,]),'RIGHT_BRACKET':([59,84,103,166,167,174,175,178,179,185,202,205,292,335,336,354,355,356,357,362,383,384,437,],[-112,180,206,-110,-111,-113,-114,270,271,-109,291,292,-190,385,386,396,397,398,399,400,-170,-191,-171,]),'EXTENDS':([78,79,],[155,155,]),'IMPLEMENTS':([78,154,257,],[-223,256,-222,]),'LEFT_BRACE':([78,79,154,156,255,257,278,279,300,301,303,353,391,422,426,464,472,478,483,],[-223,-223,-225,258,299,-222,317,318,-224,-226,346,346,-227,346,446,476,480,484,488,]),'FEGTS':([81,85,87,],[170,-138,-139,]),'READLINE':([81,85,87,],[171,-138,-139,]),'FN':([81,85,87,],[176,-138,-139,]),'PUBLIC':([258,299,302,337,340,388,390,441,442,470,479,499,511,],[-220,-229,342,342,-219,-228,-232,-234,-235,-233,-221,-231,-230,]),'PRIVATE':([258,299,302,337,340,388,390,441,442,470,479,499,511,],[-220,-229,343,343,-219,-228,-232,-234,-235,-233,-221,-231,-230,]),'PROTECTED':([258,299,302,337,340,388,390,441,442,470,479,499,511,],[-220,-229,344,344,-219,-228,-232,-234,-235,-233,-221,-231,-230,]),'STDIN':([266,],[306,]),'STATIC':([299,337,342,343,344,388,389,390,441,442,470,499,511,],[-229,-239,-236,-237,-238,-228,416,-232,-234,-235,-233,-231,-230,]),'ELSEIF':([401,497,],[425,425,]),'ELSE':([401,497,],[426,426,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,317,318,346,367,446,476,480,484,488,490,],[2,2,367,367,367,367,367,367,367,492,492,492,]),'print_statement':([0,2,317,318,346,367,446,476,480,484,488,490,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'assignment':([0,2,317,318,346,367,446,476,480,484,488,490,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,81,317,318,346,367,446,476,480,484,488,490,],[5,5,162,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,317,318,346,367,446,476,480,484,488,490,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,317,318,346,367,446,476,480,484,488,490,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,317,318,346,367,446,476,480,484,488,490,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,317,318,346,367,446,476,480,484,488,490,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,317,318,346,367,446,476,480,484,488,490,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,317,318,346,367,389,446,476,480,484,488,490,],[13,13,13,13,13,13,419,13,13,13,13,13,13,]),'structure_array_principal':([0,2,81,317,318,346,367,446,476,480,484,488,490,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,81,317,318,346,367,446,476,480,484,488,490,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,76,81,111,123,128,129,317,318,346,367,446,476,480,484,488,490,],[16,16,56,56,56,56,16,56,56,56,56,16,16,16,16,16,16,16,16,16,16,]),'if_statement':([0,2,317,318,346,367,446,476,480,484,488,490,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,317,318,346,367,446,476,480,484,488,490,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,317,318,346,367,446,476,480,484,488,490,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,317,318,346,367,389,446,476,480,484,488,490,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,317,318,346,367,389,446,476,480,484,488,490,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,81,100,272,283,287,288,289,317,318,346,358,367,446,476,480,484,488,490,],[28,28,28,198,312,198,198,198,198,28,28,28,198,28,28,28,28,28,28,28,]),'associative_array':([0,2,81,317,318,346,367,446,476,480,484,488,490,],[29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,81,317,318,346,367,446,476,480,484,488,490,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,69,76,81,95,96,105,111,123,125,128,129,130,134,314,316,317,318,346,367,380,445,446,476,480,484,488,490,494,],[31,31,66,66,66,140,66,31,140,140,140,66,66,222,66,66,140,228,361,363,31,31,31,31,413,140,31,31,31,496,496,496,508,]),'matrix_firstform':([0,2,81,317,318,346,367,446,476,480,484,488,490,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,81,317,318,346,367,446,476,480,484,488,490,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,69,76,81,95,96,105,111,123,125,128,129,130,317,318,346,367,445,446,476,480,484,488,490,],[34,34,68,68,68,68,68,34,68,68,68,68,68,223,68,68,68,34,34,34,34,68,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,81,317,318,346,367,446,476,480,484,488,490,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,81,317,318,346,367,446,476,480,484,488,490,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,76,81,100,111,123,128,129,283,287,288,289,317,318,346,358,367,446,476,480,484,488,490,],[37,37,37,37,37,37,37,197,37,37,37,37,197,197,197,197,37,37,37,197,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,76,81,111,123,128,129,317,318,346,367,446,476,480,484,488,490,494,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,493,493,493,506,]),'printable_values':([10,11,50,76,111,123,128,129,],[51,77,106,153,214,218,225,226,]),'values':([10,11,50,69,76,81,93,95,96,100,102,105,111,112,123,125,128,129,130,134,148,157,190,207,264,268,269,282,283,287,288,289,297,304,314,316,332,358,368,402,440,443,445,453,455,468,494,],[52,52,52,139,52,159,183,139,139,196,205,139,52,215,52,221,52,52,139,229,248,263,281,263,263,263,263,326,327,196,196,196,248,348,360,364,383,196,405,427,456,263,139,467,263,263,504,]),'conditional':([10,11,50,69,76,95,96,105,111,123,128,129,445,],[55,55,107,137,107,186,188,208,55,55,55,55,458,]),'boolean':([10,11,50,69,76,81,93,95,96,100,102,105,111,112,123,125,128,129,130,134,148,157,190,207,264,268,269,282,283,287,288,289,297,304,314,316,332,358,368,402,440,443,445,453,455,468,494,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'boolean_expression':([10,11,50,69,76,95,96,105,111,123,128,129,130,445,],[60,60,60,60,60,60,60,60,60,60,60,60,227,60,]),'comparation':([10,11,50,69,76,95,96,105,111,123,128,129,130,445,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'logic_not_sentence':([10,11,50,69,76,95,96,105,111,123,128,129,130,445,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'logic_expression':([10,11,50,69,76,95,96,105,111,123,128,129,130,445,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'expression':([10,11,50,69,76,81,95,96,105,111,112,123,128,129,130,135,146,147,169,445,],[67,67,108,67,108,160,67,67,108,67,216,67,67,67,67,231,246,247,265,67,]),'true_boolean_types':([10,11,50,69,76,95,96,105,111,123,128,129,130,145,445,],[70,70,70,70,70,70,70,70,70,70,70,70,70,240,70,]),'false_boolean_types':([10,11,50,69,76,95,96,105,111,123,128,129,130,144,445,],[71,71,71,71,71,71,71,71,71,71,71,71,71,234,71,]),'term':([10,11,50,69,76,81,95,96,105,111,112,123,128,129,130,135,146,147,149,150,151,152,169,445,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,250,251,252,253,72,72,]),'factor':([10,11,50,69,76,81,95,96,105,111,112,123,128,129,130,135,146,147,149,150,151,152,169,445,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'assignment_operator':([23,495,],[81,81,]),'structure_matrix_second':([45,333,],[103,384,]),'comparator_operator':([52,67,108,139,409,],[112,135,135,112,431,]),'logic_operator':([60,70,71,],[130,144,145,]),'class_extends_opt':([78,79,],[154,156,]),'function_invocation':([81,181,182,],[161,273,276,]),'input':([81,],[163,]),'special_function':([81,],[164,]),'arrow_function':([81,],[172,]),'anonymous_functions':([81,],[173,]),'values_array_indexed':([100,283,287,288,289,358,],[193,193,329,330,331,193,]),'structure_array':([100,101,415,],[194,202,437,]),'structure_matrix_first':([100,414,],[195,436,]),'key':([100,101,415,],[199,199,199,]),'class_implements_opt':([154,],[255,]),'params':([157,207,264,268,269,443,455,468,],[259,294,305,308,309,457,469,477,]),'real_params':([157,207,264,268,269,443,455,468,],[260,260,260,260,260,260,260,260,]),'empty':([157,207,264,268,269,443,455,468,],[261,261,261,261,261,261,261,261,]),'accessType':([181,182,],[274,277,]),'interface_list':([256,],[300,]),'interface_body':([258,],[302,]),'expression_for':([280,319,373,431,],[321,371,411,448,]),'number_values':([280,319,373,431,481,],[322,322,322,322,486,]),'class_body':([299,],[337,]),'interface_method':([302,],[340,]),'visibility_opt':([302,337,],[341,389,]),'codeblock':([303,353,422,],[345,395,444,]),'body_statement':([317,318,346,367,446,476,480,],[366,370,393,404,459,482,485,]),'operator_aritmetic':([321,371,411,448,475,],[373,373,373,373,481,]),'class_member':([337,],[388,]),'class_attribute':([337,],[390,]),'condition_for':([372,],[410,]),'elseif_statement':([401,497,],[423,509,]),'else_statement':([401,497,],[424,510,]),'increment_statement':([432,],[450,]),'method_body':([484,488,490,],[489,498,502,]),'classStatement':([484,488,490,],[490,490,490,]),'return_form':([484,488,490,],[491,491,500,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',83),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',88),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',89),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',93),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',98),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',103),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',104),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',108),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',113),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',114),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',119),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',120),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',121),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',131),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',132),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',138),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',139),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',140),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',146),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',147),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',148),
  ('boolean_expression -> logic_expression','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',149),
  ('logic_expression -> true_boolean_types logic_operator false_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',155),
  ('logic_expression -> false_boolean_types logic_operator true_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',156),
  ('true_boolean_types -> TRUE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',161),
  ('true_boolean_types -> STRING','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',162),
  ('true_boolean_types -> INTEGER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',163),
  ('true_boolean_types -> FLOAT','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',164),
  ('true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN','true_boolean_types',4,'p_true_boolean_types','syntaxAnalysis.py',165),
  ('false_boolean_types -> FALSE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',170),
  ('false_boolean_types -> STRING','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',171),
  ('false_boolean_types -> INTEGER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',172),
  ('false_boolean_types -> FLOAT','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',173),
  ('false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN','false_boolean_types',3,'p_false_boolean_types','syntaxAnalysis.py',174),
  ('false_boolean_types -> NULL','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',175),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',183),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',184),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',191),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',192),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',193),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',194),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',195),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',196),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',197),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',198),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',199),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',200),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',201),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',207),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',208),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',209),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',210),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',211),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',212),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',213),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',214),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',215),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',216),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',222),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',223),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',224),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',225),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',231),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',232),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',233),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',234),
  ('printable_values -> STRING STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',235),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',236),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',237),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',238),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',239),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',240),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',247),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',248),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',249),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',250),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',256),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',257),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',263),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',264),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',265),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',271),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',272),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',273),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',274),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',275),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',281),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',282),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',283),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',294),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',295),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',301),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',302),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',303),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',304),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',305),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',306),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',307),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',308),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',309),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',310),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',317),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',318),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',324),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',325),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',331),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',337),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',348),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',354),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',355),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',361),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',362),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',363),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',364),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',374),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',382),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',388),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',389),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',395),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',401),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',407),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',413),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',414),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',425),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',426),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',427),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',434),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',435),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',436),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',437),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',442),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',446),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',447),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',453),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',454),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',460),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',461),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',466),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',467),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',468),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',469),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',470),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',471),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',476),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',481),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',482),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',488),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',489),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',490),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',491),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',492),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',497),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',501),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',506),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',507),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',513),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',514),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',520),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',521),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',522),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',523),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',528),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',529),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',535),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',544),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',545),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',550),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',551),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',555),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',556),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',557),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',558),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',559),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',560),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',561),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',562),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',563),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',564),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',570),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',571),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',576),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',580),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',584),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',585),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',589),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',593),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',594),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',598),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',599),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',603),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',604),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',608),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',609),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',613),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',614),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',615),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',620),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',621),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',622),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',627),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',628),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',629),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',630),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',634),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',635),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',636),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',637),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',638),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',644),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',645),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',646),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',651),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',652),
]
