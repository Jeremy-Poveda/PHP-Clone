
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ARRAY_POP ARRAY_PUSH BREAK CLASS COLON COMMA COMMENT CONST COUNT COUNT_NORMAL COUNT_RECURSIVE DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION STRLEN SUBSTR TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n            | RETURN printable_values SEMICOLON\n            | sentence RETURN printable_values SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n                   | length_operations\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n                        | logic_expression\n    \n    logic_expression : true_boolean_types logic_operator false_boolean_types\n                     | false_boolean_types logic_operator true_boolean_types\n    \n    true_boolean_types : TRUE\n                       | STRING\n                       | INTEGER\n                       | FLOAT\n                       | VARIABLE\n                       | ARRAY LEFT_PAREN values RIGHT_PAREN\n    \n    false_boolean_types : FALSE\n                        | STRING\n                        | INTEGER\n                        | VARIABLE\n                        | FLOAT\n                        | ARRAY LEFT_PAREN RIGHT_PAREN\n                        | NULL\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values printable_dividers printable_values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE printable_dividers printable_values\n                     | VARIABLE COMMA printable_values\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional printable_dividers printable_values\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal printable_dividers printable_values\n                     | structure_object_principal COMMA printable_values\n    \n    printable_dividers : COMMA\n                       | STRING_CONCATENATION\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | FLOAT\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n           | STRING\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator string_special_function\n                        | VARIABLE assignment_operator array_special_function\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE assignment_operator conditional\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n                        | VARIABLE LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n                   | FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    string_special_function : STRLEN LEFT_PAREN string_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN\n    \n    string_param : STRING\n                 | VARIABLE\n    \n    int_param : INTEGER\n              | VARIABLE\n    \n    array_special_function : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                           | ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN\n    \n    count_param : COMMA COUNT_NORMAL\n                | COMMA COUNT_RECURSIVE\n                |\n    \n    length_operations : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                      | STRLEN LEFT_PAREN string_param RIGHT_PAREN\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN  access_method_object SEMICOLON\n                | RETURN SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,494,495,496,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[10,10,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,10,10,-223,-239,-253,-168,10,-160,-159,-243,-242,-244,-249,-247,-248,10,-217,-216,-252,-250,-14,-13,-174,10,-15,-16,10,-20,10,10,10,-30,10,10,-283,-237,-201,-17,-284,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,494,495,496,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[11,11,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,11,11,-223,-239,-253,-168,11,-160,-159,-243,-242,-244,-249,-247,-248,11,-217,-216,-252,-250,-14,-13,-174,11,-15,-16,11,-20,11,11,11,-30,11,11,-283,-237,-201,-17,-284,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,495,496,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[17,17,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,17,17,-223,-239,-253,-168,17,-160,-159,-243,-242,-244,-249,-247,-248,17,-217,-216,-252,-250,-14,-13,-174,-15,-16,17,-20,17,17,17,-30,17,17,-283,-237,-201,-17,-284,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,495,496,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[18,18,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,18,18,-223,-239,-253,-168,18,-160,-159,-243,-242,-244,-249,-247,-248,18,-217,-216,-252,-250,-14,-13,-174,-15,-16,18,-20,18,18,18,-30,18,18,-283,-237,-201,-17,-284,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,81,85,87,90,92,94,104,194,195,196,197,198,284,301,302,305,306,307,308,309,316,317,323,325,332,335,356,361,362,375,381,384,386,387,388,389,390,391,392,393,396,397,414,415,416,418,419,420,422,442,443,444,445,446,447,465,466,473,486,491,495,496,519,520,526,555,558,561,564,565,569,572,573,575,577,578,581,582,584,588,594,595,596,],[22,22,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,185,-153,-154,-215,-220,-221,-238,-119,-120,-121,-123,-124,-255,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-264,-274,-235,22,22,-223,-239,-274,-253,-254,449,-271,-272,-273,-168,22,-160,-159,-243,-242,-244,-249,-247,-248,22,-217,-216,-252,-263,487,-267,-250,-14,-13,516,-174,-15,-16,-269,-270,22,-268,-20,22,-256,22,22,-30,22,22,-283,-237,-201,-17,-266,-284,-18,-19,-265,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,59,69,76,81,84,85,87,90,92,93,94,95,96,97,104,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,149,150,151,152,154,155,156,157,162,190,191,194,195,196,197,198,220,237,290,291,292,293,294,295,298,299,301,302,305,306,307,308,309,312,316,317,323,325,328,332,337,354,355,356,358,360,361,362,363,375,381,384,386,389,390,391,392,393,396,397,399,414,415,416,418,419,420,422,423,427,428,429,430,431,432,433,434,435,436,437,442,443,444,445,446,447,465,466,467,473,491,492,495,496,505,506,519,520,521,525,526,532,533,539,548,553,555,558,561,565,569,572,573,575,577,578,579,581,582,584,588,594,595,596,],[23,23,-5,-6,-7,-8,-9,53,53,-195,-196,-197,-10,-11,-12,88,89,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,109,-122,144,109,163,187,-153,-154,-215,-220,193,-221,200,200,202,-238,222,53,53,236,-118,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,53,53,-118,241,187,53,53,53,53,200,-55,-56,-57,252,236,257,262,270,236,236,236,236,236,236,288,304,304,-119,-120,-121,-123,-124,288,236,288,288,342,342,346,348,288,288,-217,-216,-240,-241,-251,-245,-246,364,-202,-203,-204,-224,382,-264,394,409,411,-235,414,420,23,23,364,-223,-239,-274,-253,-271,-272,-273,-168,23,-160,-159,453,-243,-242,-244,-249,-247,-248,23,53,475,364,-47,-48,-49,-50,-51,-52,478,482,342,-217,-216,-252,-263,488,-267,-250,-14,53,-13,-174,453,-15,-16,364,530,-269,-270,288,200,23,550,551,288,560,288,-268,-20,23,23,580,-30,580,580,-283,-237,592,-201,-17,-266,-284,-18,-19,-265,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,495,496,506,526,530,558,561,565,569,572,573,575,577,578,580,581,582,588,594,595,],[24,24,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,82,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,24,24,-223,-239,-253,-168,24,-160,-159,-243,-242,-244,-249,-247,-248,24,-217,-216,-252,-250,-14,-13,-174,-15,-16,532,24,545,-20,24,24,24,-30,24,24,-283,-237,82,-201,-17,-284,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,495,496,506,526,530,558,561,565,569,572,573,575,577,578,580,581,582,588,594,595,],[25,25,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,83,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,25,25,-223,-239,-253,-168,25,-160,-159,-243,-242,-244,-249,-247,-248,25,-217,-216,-252,-250,-14,-13,-174,-15,-16,533,25,546,-20,25,25,25,-30,25,25,-283,-237,83,-201,-17,-284,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,495,496,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[39,39,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,39,39,-223,-239,-253,-168,39,-160,-159,-243,-242,-244,-249,-247,-248,39,-217,-216,-252,-250,-14,-13,-174,-15,-16,39,-20,39,39,39,-30,39,39,-283,-237,-201,-17,-284,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,495,496,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[40,40,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,40,40,-223,-239,-253,-168,40,-160,-159,-243,-242,-244,-249,-247,-248,40,-217,-216,-252,-250,-14,-13,-174,-15,-16,40,-20,40,40,40,-30,40,40,-283,-237,-201,-17,-284,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,495,496,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[41,41,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,41,41,-223,-239,-253,-168,41,-160,-159,-243,-242,-244,-249,-247,-248,41,-217,-216,-252,-250,-14,-13,-174,-15,-16,41,-20,41,41,41,-30,41,41,-283,-237,-201,-17,-284,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,332,356,361,362,375,381,384,386,389,390,391,392,393,396,397,414,415,416,418,419,420,422,442,443,444,445,446,447,465,466,473,491,495,496,519,520,526,555,558,561,565,569,572,573,575,577,578,581,582,584,588,594,595,596,],[42,42,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-264,-235,42,42,-223,-239,-274,-253,-271,-272,-273,-168,42,-160,-159,-243,-242,-244,-249,-247,-248,42,-217,-216,-252,-263,42,-267,-250,-14,-13,-174,-15,-16,-269,-270,42,-268,-20,42,42,42,-30,42,42,-283,-237,-201,-17,-266,-284,-18,-19,-265,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,332,356,361,362,375,381,384,386,389,390,391,392,393,396,397,414,415,416,418,419,420,422,442,443,444,445,446,447,465,466,473,491,495,496,519,520,526,555,558,561,565,569,572,573,575,577,578,581,582,584,588,594,595,596,],[43,43,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-264,-235,43,43,-223,-239,-274,-253,-271,-272,-273,-168,43,-160,-159,-243,-242,-244,-249,-247,-248,43,-217,-216,-252,-263,43,-267,-250,-14,-13,-174,-15,-16,-269,-270,43,-268,-20,43,43,43,-30,43,43,-283,-237,-201,-17,-266,-284,-18,-19,-265,]),'ARRAY':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,59,69,76,81,85,87,90,92,94,95,96,100,104,105,113,114,116,127,128,129,132,133,134,135,136,137,138,139,149,150,194,195,196,197,198,294,300,301,302,303,305,306,307,308,309,315,316,317,319,320,321,323,325,356,361,362,375,381,386,392,393,396,397,413,414,415,416,418,419,420,422,423,436,442,443,444,465,466,467,473,484,491,495,496,525,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[44,44,-5,-6,-7,-8,-9,73,73,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,73,-122,73,73,186,-153,-154,-215,-220,-221,73,73,205,-238,73,73,73,-118,73,73,-118,73,73,73,73,73,-55,-56,-57,264,271,-119,-120,-121,-123,-124,44,205,-217,-216,357,-240,-241,-251,-245,-246,357,-202,-203,357,357,357,-204,-224,-235,44,44,-223,-239,-253,-168,44,-160,-159,357,-243,-242,-244,-249,-247,-248,44,73,44,-217,-216,-252,-250,-14,73,-13,513,-174,-15,-16,73,44,-20,44,44,44,-30,44,44,-283,-237,-201,-17,-284,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,59,81,85,87,90,92,94,104,109,144,163,186,194,195,196,197,198,200,222,241,252,294,301,302,305,306,307,308,309,316,317,323,325,346,356,361,362,375,380,381,386,392,393,396,397,414,415,416,418,419,420,422,436,442,443,444,465,466,473,478,482,491,495,496,526,558,561,565,569,572,573,575,577,578,580,581,582,588,592,594,595,],[45,45,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,84,-198,-199,-200,-201,-218,-219,-222,-236,-237,101,102,-3,-4,131,-122,45,-153,-154,-215,-220,-221,-238,131,131,84,101,-119,-120,-121,-123,-124,131,131,131,328,45,354,355,-240,-241,359,-245,-246,-202,-203,-204,-224,84,-235,45,45,-223,102,-239,-253,-168,45,-160,-159,328,-242,-244,-249,-247,328,45,45,-217,-216,-252,-250,-14,-13,328,84,-174,-15,-16,45,-20,45,45,45,-30,45,45,-283,-237,84,-201,-17,-284,328,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,59,76,81,85,87,90,92,94,100,104,113,114,116,127,128,129,132,133,134,135,194,195,196,197,198,300,301,302,305,306,307,308,309,315,316,317,319,320,321,323,325,356,361,362,375,381,386,392,393,396,397,413,414,415,416,418,419,420,422,423,442,443,444,465,466,467,473,491,495,496,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[46,46,-5,-6,-7,-8,-9,46,46,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,46,-122,46,46,-153,-154,-215,-220,-221,46,-238,46,46,-118,46,46,-118,46,46,46,46,-119,-120,-121,-123,-124,46,-217,-216,-240,-241,-251,-245,-246,46,-202,-203,46,46,46,-204,-224,-235,46,46,-223,-239,-253,-168,46,-160,-159,46,-243,-242,-244,-249,-247,-248,46,46,-217,-216,-252,-250,-14,46,-13,-174,-15,-16,46,-20,46,46,46,-30,46,46,-283,-237,-201,-17,-284,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,375,381,386,392,396,397,414,415,416,418,419,420,442,443,444,465,466,473,491,495,496,558,572,582,594,595,],[0,-2,-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-1,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,-223,-239,-253,-168,-160,-159,-243,-242,-244,-249,-247,-248,-217,-216,-252,-250,-14,-13,-174,-15,-16,-20,-30,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,74,75,77,82,83,88,89,90,92,94,104,110,111,112,143,144,163,164,165,166,167,168,169,170,171,172,180,181,182,183,192,193,194,195,196,197,198,219,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,272,273,275,276,277,278,279,280,301,302,305,306,307,308,309,313,316,317,318,323,325,331,347,356,364,365,366,368,369,370,375,381,396,397,398,404,405,406,414,415,416,418,419,420,424,438,442,443,454,457,458,460,461,462,463,464,465,467,468,470,471,474,476,477,488,489,491,493,499,501,507,508,512,523,524,529,534,535,536,540,542,556,578,579,581,586,589,591,],[48,49,-138,-139,-195,-196,-197,-155,-156,-198,-199,-200,90,-218,-219,92,94,-222,-236,-237,-102,-104,-107,-120,-111,-114,-119,-121,-122,-53,-123,-124,-58,-60,-61,-125,-76,-128,-103,-149,-150,-151,-152,-215,-220,-221,-238,-120,-119,-121,-77,-78,-135,-140,-141,-142,-143,-144,-145,-146,-147,-148,-169,-170,90,92,-233,-234,-119,-120,-121,-123,-124,325,-100,-59,-136,-105,-106,-79,-80,-119,-120,-121,-135,-108,-109,-110,-86,-82,-85,-89,-112,-113,-115,-116,-54,-87,-83,-84,-81,-133,-134,-137,-88,-62,-70,-71,-72,-73,-74,-63,-64,-65,-66,-67,-68,-126,-127,-75,-129,-130,-131,-132,-101,-217,-216,-240,-241,-251,-245,-246,-157,-202,-203,375,-204,-224,-69,90,-235,-38,427,-39,-44,-45,-46,-223,-239,-160,-159,-177,-187,-175,-176,-243,-242,-244,-249,-247,-248,472,-158,-217,-216,-184,-185,-186,-173,-230,-231,-232,-229,-250,500,502,503,504,-41,506,-40,519,520,-174,-178,527,528,-42,-43,-194,-171,-172,-37,-191,-192,-193,555,-179,564,588,590,90,597,598,599,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,495,496,526,558,561,565,569,572,573,575,577,578,581,582,588,594,595,],[-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,423,423,-223,-239,-253,-168,423,-160,-159,-243,-242,-244,-249,-247,-248,467,-217,-216,-252,-250,-14,-13,-174,-15,-16,423,-20,423,423,579,-30,579,579,-283,-237,-201,-17,-284,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,301,302,305,306,307,308,309,316,317,323,325,356,361,362,375,381,386,392,393,396,397,414,415,416,418,419,420,422,442,443,444,465,466,473,491,495,496,526,558,561,565,572,575,577,578,581,582,588,594,595,],[-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-235,424,424,-223,-239,-253,-168,424,-160,-159,-243,-242,-244,-249,-247,-248,468,-217,-216,-252,-250,-14,-13,-174,-15,-16,424,-20,424,424,-30,586,-283,-237,-201,-17,-284,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,59,90,92,94,104,194,195,196,197,198,284,301,302,305,306,307,308,309,316,317,323,325,332,335,356,375,381,384,386,387,392,396,397,414,415,416,418,419,420,421,422,425,442,443,444,445,447,450,465,466,469,472,473,491,495,496,500,502,503,504,519,520,527,528,544,555,558,564,567,570,572,574,575,576,577,578,581,582,583,584,585,587,588,590,594,595,596,597,598,599,],[-5,-6,-7,-8,-9,-195,-196,-197,-10,-11,-12,-198,-199,-200,-201,-218,-219,-222,-236,-237,-3,-4,-122,-215,-220,-221,-238,-119,-120,-121,-123,-124,-255,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,-264,386,-235,-223,-239,444,-253,-254,-168,-160,-159,-243,-242,-244,-249,-247,-248,466,-21,473,-217,-216,-252,-263,-267,491,-250,-14,-25,-27,-13,-174,-15,-16,-23,-24,-26,-28,-269,-270,-22,-28,558,-268,-20,-256,572,582,-30,584,-275,-277,-283,-237,-201,-17,596,-266,-276,-279,-284,-282,-18,-19,-265,-278,-280,-281,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,69,73,76,80,81,85,87,95,96,104,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,138,139,141,151,152,154,155,156,157,163,173,174,175,176,177,178,179,184,185,186,205,237,264,271,304,307,312,357,363,367,371,372,423,428,429,430,431,432,433,434,467,490,497,505,513,517,525,538,],[50,76,95,96,97,99,100,105,105,153,105,162,105,-153,-154,105,105,220,105,105,105,237,-118,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,105,105,-118,105,105,105,105,105,-55,-56,-57,237,237,237,237,237,237,237,290,291,292,293,294,295,296,297,298,299,300,315,237,329,330,290,291,363,413,363,435,436,437,105,363,-47,-48,-49,-50,-51,-52,105,521,525,363,537,539,105,553,]),'INTEGER':([10,11,50,69,76,81,84,85,87,93,95,96,100,101,102,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,149,150,151,152,153,154,155,156,157,162,203,220,237,290,291,298,299,300,312,314,315,319,320,321,328,330,337,354,355,358,359,360,363,379,399,413,423,428,429,430,431,432,433,434,467,485,492,505,518,521,525,537,539,547,553,566,579,],[57,57,111,57,111,111,188,-153,-154,194,57,57,213,216,194,223,57,57,233,-118,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,57,57,-118,194,188,57,57,57,57,57,-55,-56,-57,194,254,261,268,254,254,194,254,254,254,254,194,194,194,254,194,194,194,194,213,369,194,194,194,194,194,383,194,194,410,412,194,417,194,369,194,452,194,57,369,-47,-48,-49,-50,-51,-52,57,216,452,369,194,194,57,194,194,559,194,369,194,]),'STRING':([10,11,50,69,76,81,85,87,93,95,96,99,100,101,102,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,149,150,151,152,153,154,155,156,157,162,203,220,237,290,291,292,293,297,298,299,300,314,315,319,320,321,330,337,358,360,379,413,423,437,467,485,518,521,525,537,539,553,579,],[54,54,110,54,110,110,-153,-154,195,54,54,204,214,217,195,225,54,54,234,-118,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,54,54,240,195,54,54,54,54,54,-55,-56,-57,195,256,260,267,256,256,195,256,256,256,256,195,195,195,256,195,195,341,341,350,195,195,214,195,195,195,195,195,195,195,195,195,195,195,54,341,54,217,195,195,54,195,195,195,195,]),'FLOAT':([10,11,50,69,76,81,85,87,93,95,96,100,102,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,149,150,151,152,153,154,155,156,157,162,203,220,237,290,291,298,299,300,312,314,315,319,320,321,330,337,358,360,363,379,413,423,428,429,430,431,432,433,434,467,505,518,521,525,537,539,553,566,579,],[58,58,112,58,112,112,-153,-154,196,58,58,196,196,224,58,58,235,-118,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,58,58,-118,196,58,58,58,58,58,-55,-56,-57,196,255,263,269,255,255,196,255,255,255,255,196,196,196,255,196,196,196,196,196,370,196,196,196,196,196,196,196,196,196,370,196,196,58,370,-47,-48,-49,-50,-51,-52,58,370,196,196,58,196,196,196,370,196,]),'TRUE':([10,11,50,69,76,81,85,87,93,95,96,100,102,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,150,153,162,203,220,290,291,298,299,300,314,315,319,320,321,330,337,358,360,379,413,423,467,518,521,525,537,539,553,579,],[61,61,61,147,61,61,-153,-154,197,147,147,197,197,147,61,61,197,-118,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,61,61,-118,197,61,61,61,61,147,-55,-56,-57,197,266,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,61,61,197,197,147,197,197,197,197,]),'FALSE':([10,11,50,69,76,81,85,87,93,95,96,100,102,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,149,153,162,203,220,290,291,298,299,300,314,315,319,320,321,330,337,358,360,379,413,423,467,518,521,525,537,539,553,579,],[62,62,62,148,62,62,-153,-154,198,148,148,198,198,148,62,62,198,-118,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,62,62,-118,198,62,62,62,62,148,-55,-56,-57,198,259,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,62,62,198,198,148,198,198,198,198,]),'LOGIC_NOT':([10,11,50,69,76,81,85,87,95,96,105,113,114,116,127,128,129,132,133,134,135,136,137,138,139,423,467,525,],[69,69,69,69,69,69,-153,-154,69,69,69,69,69,-118,69,69,-118,69,69,69,69,69,-55,-56,-57,69,69,69,]),'NULL':([10,11,50,69,76,81,85,87,95,96,105,113,114,116,127,128,129,132,133,134,135,136,137,138,139,149,423,467,525,],[74,74,74,74,74,74,-153,-154,74,74,74,74,74,-118,74,74,-118,74,74,74,74,74,-55,-56,-57,74,74,74,74,]),'IDENTIFIER':([17,18,22,42,46,81,85,87,117,118,119,120,121,122,123,124,125,126,160,190,191,282,312,363,385,428,429,430,431,432,433,434,449,487,505,516,],[78,79,80,98,104,173,-153,-154,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,283,307,307,334,367,367,448,367,-47,-48,-49,-50,-51,-52,490,517,367,538,]),'MINUS':([23,31,53,54,57,58,66,72,75,109,110,111,112,144,163,182,200,222,223,224,225,228,233,234,235,236,254,255,256,276,277,278,279,301,302,364,365,366,368,369,370,426,442,443,474,477,507,508,512,529,534,535,536,560,580,581,592,593,],[86,91,86,-137,-133,-134,91,152,-128,86,-137,-133,-134,-135,86,91,-135,-135,-133,-134,-137,-136,-133,-137,-134,-135,-133,-134,-137,-129,-130,-131,-132,-217,-216,-38,430,-39,-44,-45,-46,430,-217,-216,-41,430,-42,-43,-194,430,-191,-192,-193,430,86,91,86,91,]),'EQUALS':([23,34,98,183,189,202,212,213,214,216,217,306,307,309,407,461,462,463,464,465,488,530,580,],[85,93,203,93,303,312,322,-207,-208,-207,-208,358,-251,360,459,-230,-231,-232,-229,-250,518,548,85,]),'PLUS_EQUALS':([23,530,580,],[87,547,87,]),'COMMA':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,74,75,90,92,94,104,107,109,110,111,112,143,144,194,195,196,197,198,204,209,210,211,213,214,227,228,231,232,233,234,235,236,241,242,243,244,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,272,273,275,276,277,278,279,286,288,289,301,302,305,306,307,308,309,316,317,323,324,325,331,333,334,341,342,343,344,345,346,347,353,356,374,375,381,394,395,396,397,414,415,416,418,419,420,439,440,442,443,448,451,452,453,461,462,463,464,465,470,480,481,482,499,],[-198,-199,-200,-218,-219,-222,-236,-237,114,128,-120,133,135,-119,-121,-122,-53,-123,-124,-58,-60,-61,-125,-76,-128,-215,-220,-221,-238,133,128,-120,-119,-121,-77,-78,-119,-120,-121,-123,-124,314,319,320,321,-119,-120,-59,-136,-79,-80,-119,-120,-121,-135,-86,-82,-85,-89,-54,-87,-83,-84,-81,-133,-134,-137,-88,-62,-70,-71,-72,-73,-74,-63,-64,-65,-66,-67,-68,-126,-127,-75,-129,-130,-131,-132,337,-163,-164,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,380,-224,-69,385,-261,-180,-181,399,401,401,401,-201,319,-235,319,-223,-239,-165,-166,-160,-159,-243,-242,-244,-249,-247,-248,484,485,-217,-216,-262,492,-182,-183,-230,-231,-232,-229,-250,114,401,401,401,114,]),'RIGHT_PAREN':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,74,75,90,92,94,104,106,107,108,109,110,111,112,143,144,153,158,162,194,195,196,197,198,199,201,206,207,208,209,210,211,213,214,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,272,273,274,275,276,277,278,279,285,286,287,288,289,290,291,298,299,300,301,302,305,306,307,308,309,316,317,323,325,326,327,329,331,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,356,364,366,368,369,370,373,374,375,376,377,378,381,394,395,396,397,400,402,403,414,415,416,418,419,420,426,439,440,442,443,451,452,453,455,456,461,462,463,464,465,474,477,478,479,480,481,482,483,507,508,509,510,511,512,514,515,521,522,531,534,535,536,539,541,543,545,546,550,551,552,553,554,559,562,571,],[-198,-199,-200,-218,-219,-222,-236,-237,-104,-107,-120,-111,-114,-119,-121,-122,-53,-123,-124,-58,-60,-61,-125,-76,-128,-215,-220,-221,-238,226,227,228,-107,-120,-119,-121,-77,-78,275,280,-167,-119,-120,-121,-123,-124,310,311,316,317,318,-209,-211,-213,-119,-120,-167,227,-135,-133,-134,-137,-59,-136,-105,-106,-79,-80,-119,-120,-121,-135,-108,-109,-110,-86,-82,-85,-89,-112,-113,-115,-116,-54,-87,-83,-84,-81,-133,-134,-137,-88,-62,-70,-71,-72,-73,-74,-63,-64,-65,-66,-67,-68,-126,-127,331,-75,-129,-130,-131,-132,336,-161,-162,-163,-164,-167,-167,-167,-167,275,-217,-216,-240,-241,-251,-245,-246,-202,-203,-204,-224,381,228,275,-69,396,397,398,-180,-181,-190,-190,-190,-201,404,405,406,407,408,331,-235,-38,-39,-44,-45,-46,438,439,-223,-210,-212,-214,-239,-165,-166,-160,-159,454,457,458,-243,-242,-244,-249,-247,-248,474,-227,-205,-217,-216,493,-182,-183,-188,-189,-230,-231,-232,-229,-250,-41,-40,507,508,-190,-190,-190,512,-42,-43,534,535,536,-194,-228,-206,-167,542,549,-191,-192,-193,-167,556,557,-31,-32,-33,-34,439,-167,563,-35,568,-36,]),'STRING_CONCATENATION':([37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,74,75,104,107,109,110,111,112,143,144,194,195,196,197,198,227,228,231,232,233,234,235,236,241,242,243,244,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,272,273,275,276,277,278,279,301,302,305,306,307,308,309,331,381,396,397,414,415,416,418,419,420,442,443,461,462,463,464,465,470,499,],[-236,-237,116,129,-120,116,116,-119,-121,-122,-53,-123,-124,-58,-60,-61,-125,-76,-128,-238,116,129,-120,-119,-121,-77,-78,-119,-120,-121,-123,-124,-59,-136,-79,-80,-119,-120,-121,-135,-86,-82,-85,-89,-54,-87,-83,-84,-81,-133,-134,-137,-88,-62,-70,-71,-72,-73,-74,-63,-64,-65,-66,-67,-68,-126,-127,-75,-129,-130,-131,-132,-217,-216,-240,-241,-251,-245,-246,-69,-239,-160,-159,-243,-242,-244,-249,-247,-248,-217,-216,-230,-231,-232,-229,-250,116,116,]),'EQUALS_EQUALS':([52,53,54,57,58,59,61,62,66,67,68,72,75,108,109,110,111,112,144,145,146,147,148,163,164,165,182,183,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,301,302,461,462,463,464,470,475,499,],[117,130,-120,-119,-121,-122,-123,-124,140,117,142,-125,-128,117,130,-120,-119,-121,130,117,140,-123,-124,130,117,117,140,142,130,130,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,-217,-216,-230,-231,-232,-229,117,117,117,]),'IDENTICAL':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,111,112,144,145,147,148,163,164,165,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,470,475,499,],[118,-135,-120,-119,-121,-122,-123,-124,118,-125,-128,118,-135,-120,-119,-121,-135,118,-123,-124,-135,118,118,-135,-135,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,118,118,118,]),'NOT_EQUALS':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,111,112,144,145,147,148,163,164,165,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,470,475,499,],[119,-135,-120,-119,-121,-122,-123,-124,119,-125,-128,119,-135,-120,-119,-121,-135,119,-123,-124,-135,119,119,-135,-135,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,119,119,119,]),'NOT_IDENTICAL':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,111,112,144,145,147,148,163,164,165,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,470,475,499,],[120,-135,-120,-119,-121,-122,-123,-124,120,-125,-128,120,-135,-120,-119,-121,-135,120,-123,-124,-135,120,120,-135,-135,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,120,120,120,]),'SMALL_THAN':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,111,112,144,145,147,148,163,164,165,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,470,475,499,],[121,-135,-120,-119,-121,-122,-123,-124,121,-125,-128,121,-135,-120,-119,-121,-135,121,-123,-124,-135,121,121,-135,-135,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,121,121,121,]),'GREATER_THAN':([52,53,54,57,58,59,61,62,67,72,75,86,91,108,109,110,111,112,144,145,147,148,163,164,165,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,322,459,470,475,499,],[122,-135,-120,-119,-121,-122,-123,-124,122,-125,-128,190,191,122,-135,-120,-119,-121,-135,122,-123,-124,-135,122,122,-135,-135,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,379,494,122,122,122,]),'SMALL_EQUALS_TO':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,111,112,144,145,147,148,163,164,165,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,470,475,499,],[123,-135,-120,-119,-121,-122,-123,-124,123,-125,-128,123,-135,-120,-119,-121,-135,123,-123,-124,-135,123,123,-135,-135,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,123,123,123,]),'GREATER_EQUALS_TO':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,111,112,144,145,147,148,163,164,165,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,470,475,499,],[124,-135,-120,-119,-121,-122,-123,-124,124,-125,-128,124,-135,-120,-119,-121,-135,124,-123,-124,-135,124,124,-135,-135,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,124,124,124,]),'SPACECRAFT':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,111,112,144,145,147,148,163,164,165,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,470,475,499,],[125,-135,-120,-119,-121,-122,-123,-124,125,-125,-128,125,-135,-120,-119,-121,-135,125,-123,-124,-135,125,125,-135,-135,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,125,125,125,]),'NULL_FUSION':([52,53,54,57,58,59,61,62,67,72,75,108,109,110,111,112,144,145,147,148,163,164,165,200,222,223,224,225,228,236,254,255,256,272,273,276,277,278,279,470,475,499,],[126,-135,-120,-119,-121,-122,-123,-124,126,-125,-128,126,-135,-120,-119,-121,-135,126,-123,-124,-135,126,126,-135,-135,-119,-121,-120,-136,-135,-133,-134,-137,-126,-127,-129,-130,-131,-132,126,126,126,]),'LOGIC_AND':([53,54,57,58,59,60,61,62,63,64,65,70,71,72,74,75,109,110,111,112,143,144,147,148,163,194,195,196,197,198,200,222,223,224,225,227,228,231,232,233,234,235,236,241,242,243,244,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,272,273,275,276,277,278,279,301,302,331,442,443,461,462,463,464,],[-68,-65,-66,-67,-122,137,-64,-70,-58,-60,-61,137,137,-125,-76,-128,-68,-65,-66,-67,-77,-68,-64,-70,-68,-119,-120,-121,-123,-124,-68,-68,-66,-67,-65,-59,-136,-79,-80,-119,-120,-121,-135,-86,-82,-85,-89,-54,-87,-83,-84,-81,-133,-134,-137,-88,-62,-70,-71,-72,-73,-74,-63,-64,-65,-66,-67,-68,-126,-127,-75,-129,-130,-131,-132,-217,-216,-69,-217,-216,-230,-231,-232,-229,]),'LOGIC_OR':([53,54,57,58,59,60,61,62,63,64,65,70,71,72,74,75,109,110,111,112,143,144,147,148,163,194,195,196,197,198,200,222,223,224,225,227,228,231,232,233,234,235,236,241,242,243,244,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,272,273,275,276,277,278,279,301,302,331,442,443,461,462,463,464,],[-68,-65,-66,-67,-122,138,-64,-70,-58,-60,-61,138,138,-125,-76,-128,-68,-65,-66,-67,-77,-68,-64,-70,-68,-119,-120,-121,-123,-124,-68,-68,-66,-67,-65,-59,-136,-79,-80,-119,-120,-121,-135,-86,-82,-85,-89,-54,-87,-83,-84,-81,-133,-134,-137,-88,-62,-70,-71,-72,-73,-74,-63,-64,-65,-66,-67,-68,-126,-127,-75,-129,-130,-131,-132,-217,-216,-69,-217,-216,-230,-231,-232,-229,]),'LOGIC_XOR':([53,54,57,58,59,60,61,62,63,64,65,70,71,72,74,75,109,110,111,112,143,144,147,148,163,194,195,196,197,198,200,222,223,224,225,227,228,231,232,233,234,235,236,241,242,243,244,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,272,273,275,276,277,278,279,301,302,331,442,443,461,462,463,464,],[-68,-65,-66,-67,-122,139,-64,-70,-58,-60,-61,139,139,-125,-76,-128,-68,-65,-66,-67,-77,-68,-64,-70,-68,-119,-120,-121,-123,-124,-68,-68,-66,-67,-65,-59,-136,-79,-80,-119,-120,-121,-135,-86,-82,-85,-89,-54,-87,-83,-84,-81,-133,-134,-137,-88,-62,-70,-71,-72,-73,-74,-63,-64,-65,-66,-67,-68,-126,-127,-75,-129,-130,-131,-132,-217,-216,-69,-217,-216,-230,-231,-232,-229,]),'MULTIPLY':([53,54,57,58,75,109,110,111,112,144,163,200,222,223,224,225,228,233,234,235,236,254,255,256,364,365,366,368,369,370,426,474,477,507,508,512,529,534,535,536,560,],[-135,-137,-133,-134,154,-135,-137,-133,-134,-135,-135,-135,-135,-133,-134,-137,-136,-133,-137,-134,-135,-133,-134,-137,-38,431,-39,-44,-45,-46,431,-41,431,-42,-43,-194,431,-191,-192,-193,431,]),'DIVIDE':([53,54,57,58,75,109,110,111,112,144,163,200,222,223,224,225,228,233,234,235,236,254,255,256,364,365,366,368,369,370,426,474,477,507,508,512,529,534,535,536,560,],[-135,-137,-133,-134,155,-135,-137,-133,-134,-135,-135,-135,-135,-133,-134,-137,-136,-133,-137,-134,-135,-133,-134,-137,-38,432,-39,-44,-45,-46,432,-41,432,-42,-43,-194,432,-191,-192,-193,432,]),'MODULE':([53,54,57,58,75,109,110,111,112,144,163,200,222,223,224,225,228,233,234,235,236,254,255,256,364,365,366,368,369,370,426,474,477,507,508,512,529,534,535,536,560,],[-135,-137,-133,-134,156,-135,-137,-133,-134,-135,-135,-135,-135,-133,-134,-137,-136,-133,-137,-134,-135,-133,-134,-137,-38,433,-39,-44,-45,-46,433,-41,433,-42,-43,-194,433,-191,-192,-193,433,]),'POW':([53,54,57,58,75,109,110,111,112,144,163,200,222,223,224,225,228,233,234,235,236,254,255,256,364,365,366,368,369,370,426,474,477,507,508,512,529,534,535,536,560,],[-135,-137,-133,-134,157,-135,-137,-133,-134,-135,-135,-135,-135,-133,-134,-137,-136,-133,-137,-134,-135,-133,-134,-137,-38,434,-39,-44,-45,-46,434,-41,434,-42,-43,-194,434,-191,-192,-193,434,]),'PLUS':([53,54,57,58,72,75,109,110,111,112,144,163,200,222,223,224,225,228,233,234,235,236,254,255,256,276,277,278,279,364,365,366,368,369,370,426,474,477,507,508,512,529,534,535,536,560,],[-135,-137,-133,-134,151,-128,-135,-137,-133,-134,-135,-135,-135,-135,-133,-134,-137,-136,-133,-137,-134,-135,-133,-134,-137,-129,-130,-131,-132,-38,429,-39,-44,-45,-46,429,-41,429,-42,-43,-194,429,-191,-192,-193,429,]),'RIGHT_BRACKET':([59,84,103,187,188,194,195,196,197,198,215,218,324,382,383,409,410,411,412,417,440,441,515,],[-122,189,219,301,302,-119,-120,-121,-123,-124,323,324,-225,442,443,461,462,463,464,465,-205,-226,-206,]),'EXTENDS':([78,79,],[160,160,]),'IMPLEMENTS':([78,159,283,],[-258,282,-257,]),'LEFT_BRACE':([78,79,159,161,281,283,310,311,333,334,336,408,448,494,498,549,557,563,568,],[-258,-258,-260,284,332,-257,361,362,-259,-261,393,393,-262,393,526,561,565,569,573,]),'STRLEN':([81,85,87,117,118,119,120,121,122,123,124,125,126,312,363,428,429,430,431,432,433,434,505,],[174,-153,-154,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,372,372,372,-47,-48,-49,-50,-51,-52,372,]),'SUBSTR':([81,85,87,],[175,-153,-154,]),'COUNT':([81,85,87,117,118,119,120,121,122,123,124,125,126,312,363,428,429,430,431,432,433,434,505,],[176,-153,-154,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,371,371,371,-47,-48,-49,-50,-51,-52,371,]),'ARRAY_POP':([81,85,87,],[177,-153,-154,]),'FEGTS':([81,85,87,],[178,-153,-154,]),'READLINE':([81,85,87,],[179,-153,-154,]),'FN':([81,85,87,],[184,-153,-154,]),'PUBLIC':([284,332,335,384,387,445,447,519,520,555,564,584,596,],[-255,-264,389,389,-254,-263,-267,-269,-270,-268,-256,-266,-265,]),'PRIVATE':([284,332,335,384,387,445,447,519,520,555,564,584,596,],[-255,-264,390,390,-254,-263,-267,-269,-270,-268,-256,-266,-265,]),'PROTECTED':([284,332,335,384,387,445,447,519,520,555,564,584,596,],[-255,-264,391,391,-254,-263,-267,-269,-270,-268,-256,-266,-265,]),'STDIN':([296,],[349,]),'STATIC':([332,384,389,390,391,445,446,447,519,520,555,584,596,],[-264,-274,-271,-272,-273,-263,486,-267,-269,-270,-268,-266,-265,]),'COUNT_NORMAL':([401,],[455,]),'COUNT_RECURSIVE':([401,],[456,]),'ELSEIF':([466,582,],[497,497,]),'ELSE':([466,582,],[498,498,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,361,362,393,422,526,561,565,569,573,575,],[2,2,422,422,422,422,422,422,422,577,577,577,]),'print_statement':([0,2,361,362,393,422,494,526,561,565,569,573,575,],[3,3,3,3,3,3,524,3,3,3,3,3,3,]),'assignment':([0,2,361,362,393,422,526,561,565,569,573,575,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,81,361,362,393,422,526,561,565,569,573,575,],[5,5,169,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,361,362,393,422,526,561,565,569,573,575,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,361,362,393,422,526,561,565,569,573,575,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,361,362,393,422,526,561,565,569,573,575,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,361,362,393,422,526,561,565,569,573,575,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,361,362,393,422,526,561,565,569,573,575,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,361,362,393,422,446,526,561,565,569,573,575,],[13,13,13,13,13,13,489,13,13,13,13,13,13,]),'structure_array_principal':([0,2,81,294,361,362,393,422,436,526,561,565,569,573,575,],[14,14,14,344,14,14,14,14,480,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,81,294,361,362,393,422,436,526,561,565,569,573,575,],[15,15,15,345,15,15,15,15,481,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,76,81,113,114,127,128,132,133,134,135,361,362,393,422,423,467,526,561,565,569,573,575,],[16,16,56,56,56,56,16,56,56,56,56,56,56,56,56,16,16,16,16,56,56,16,16,16,16,16,16,]),'if_statement':([0,2,361,362,393,422,526,561,565,569,573,575,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,361,362,393,422,526,561,565,569,573,575,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,361,362,393,422,526,561,565,569,573,575,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,361,362,393,422,446,526,561,565,569,573,575,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,361,362,393,422,446,526,561,565,569,573,575,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,81,100,294,300,303,315,319,320,321,361,362,393,413,422,436,526,561,565,569,573,575,],[28,28,28,211,28,211,356,211,211,211,211,28,28,28,211,28,28,28,28,28,28,28,28,]),'associative_array':([0,2,81,294,361,362,393,422,436,526,561,565,569,573,575,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,81,294,361,362,393,422,436,526,561,565,569,573,575,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,69,76,81,95,96,105,113,114,127,128,130,132,133,134,135,136,140,294,358,360,361,362,393,422,423,435,436,467,525,526,561,565,569,573,575,579,],[31,31,66,66,66,146,66,182,146,146,146,66,66,66,66,243,66,66,66,66,146,250,347,416,418,31,31,31,31,66,479,347,66,146,31,31,31,581,581,581,593,]),'matrix_firstform':([0,2,81,294,361,362,393,422,436,526,561,565,569,573,575,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,81,294,361,362,393,422,436,526,561,565,569,573,575,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,69,76,81,95,96,105,113,114,127,128,130,132,133,134,135,136,294,361,362,393,422,423,436,467,525,526,561,565,569,573,575,],[34,34,68,68,68,68,68,183,68,68,68,68,68,68,68,244,68,68,68,68,68,34,34,34,34,34,68,34,68,68,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,81,294,361,362,393,422,436,526,561,565,569,573,575,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,81,294,361,362,393,422,436,526,561,565,569,573,575,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,76,81,100,113,114,127,128,132,133,134,135,300,315,319,320,321,361,362,393,413,422,423,467,526,561,565,569,573,575,],[37,37,37,37,37,37,37,210,37,37,37,37,37,37,37,37,210,210,210,210,210,37,37,37,210,37,37,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,76,81,113,114,127,128,132,133,134,135,361,362,393,422,423,467,526,561,565,569,573,575,579,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,578,578,578,591,]),'printable_values':([10,11,50,76,113,114,127,128,132,133,134,135,423,467,],[51,77,106,158,229,230,238,239,245,246,247,248,471,501,]),'values':([10,11,50,69,76,81,93,95,96,100,102,105,113,114,115,127,128,130,132,133,134,135,136,140,153,162,203,220,290,291,298,299,300,314,315,319,320,321,330,337,358,360,379,413,423,467,518,521,525,537,539,553,579,],[52,52,52,145,52,164,192,145,145,209,218,145,52,52,231,52,52,242,52,52,52,52,145,251,274,289,313,289,289,289,289,289,353,373,374,209,209,209,274,395,415,419,440,209,470,499,540,289,145,552,289,289,589,]),'conditional':([10,11,50,69,76,81,95,96,105,113,114,127,128,132,133,134,135,423,467,525,],[55,55,107,143,107,172,199,201,221,55,55,55,55,55,55,55,55,55,55,543,]),'boolean':([10,11,50,69,76,81,93,95,96,100,102,105,113,114,115,127,128,130,132,133,134,135,136,140,153,162,203,220,290,291,298,299,300,314,315,319,320,321,330,337,358,360,379,413,423,467,518,521,525,537,539,553,579,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'boolean_expression':([10,11,50,69,76,81,95,96,105,113,114,127,128,132,133,134,135,136,423,467,525,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,249,60,60,60,]),'comparation':([10,11,50,69,76,81,95,96,105,113,114,127,128,132,133,134,135,136,423,467,525,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'logic_not_sentence':([10,11,50,69,76,81,95,96,105,113,114,127,128,132,133,134,135,136,423,467,525,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'logic_expression':([10,11,50,69,76,81,95,96,105,113,114,127,128,132,133,134,135,136,423,467,525,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'expression':([10,11,50,69,76,81,95,96,105,113,114,115,127,128,132,133,134,135,136,141,151,152,237,423,467,525,],[67,67,108,67,108,165,67,67,108,67,67,232,67,67,67,67,67,67,67,253,272,273,327,67,67,67,]),'true_boolean_types':([10,11,50,69,76,81,95,96,105,113,114,127,128,132,133,134,135,136,150,423,467,525,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,265,70,70,70,]),'false_boolean_types':([10,11,50,69,76,81,95,96,105,113,114,127,128,132,133,134,135,136,149,423,467,525,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,258,71,71,71,]),'term':([10,11,50,69,76,81,95,96,105,113,114,115,127,128,132,133,134,135,136,141,151,152,154,155,156,157,237,423,467,525,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,276,277,278,279,72,72,72,72,]),'factor':([10,11,50,69,76,81,95,96,105,113,114,115,127,128,132,133,134,135,136,141,151,152,154,155,156,157,237,423,467,525,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'assignment_operator':([23,580,],[81,81,]),'structure_matrix_second':([45,380,],[103,441,]),'printable_dividers':([52,53,55,56,107,109,470,499,],[113,127,132,134,132,127,113,113,]),'comparator_operator':([52,67,108,145,164,165,470,475,499,],[115,141,141,115,115,141,115,505,115,]),'logic_operator':([60,70,71,],[136,149,150,]),'class_extends_opt':([78,79,],[159,161,]),'function_invocation':([81,190,191,],[166,305,308,]),'string_special_function':([81,],[167,]),'array_special_function':([81,],[168,]),'input':([81,],[170,]),'special_function':([81,],[171,]),'arrow_function':([81,],[180,]),'anonymous_functions':([81,],[181,]),'values_array_indexed':([100,300,315,319,320,321,413,],[206,206,206,376,377,378,206,]),'structure_array':([100,101,300,485,],[207,215,207,515,]),'structure_matrix_first':([100,300,484,],[208,208,514,]),'key':([100,101,300,485,],[212,212,212,212,]),'class_implements_opt':([159,],[281,]),'params':([162,220,290,291,298,299,521,539,553,],[285,326,338,339,351,352,541,554,562,]),'real_params':([162,220,290,291,298,299,521,539,553,],[286,286,286,286,286,286,286,286,286,]),'empty':([162,220,290,291,298,299,521,539,553,],[287,287,287,287,287,287,287,287,287,]),'accessType':([190,191,],[306,309,]),'interface_list':([282,],[333,]),'interface_body':([284,],[335,]),'string_param':([292,293,437,],[340,343,483,]),'expression_for':([312,363,428,505,],[365,426,477,529,]),'number_values':([312,363,428,505,566,],[366,366,366,366,571,]),'length_operations':([312,363,428,505,],[368,368,368,368,]),'class_body':([332,],[384,]),'interface_method':([335,],[387,]),'visibility_opt':([335,384,],[388,446,]),'codeblock':([336,408,494,],[392,460,523,]),'count_param':([344,345,346,480,481,482,],[400,402,403,509,510,511,]),'body_statement':([361,362,393,422,526,561,565,],[421,425,450,469,544,567,570,]),'operator_aritmetic':([365,426,477,529,560,],[428,428,428,428,566,]),'class_member':([384,],[445,]),'class_attribute':([384,],[447,]),'int_param':([399,492,],[451,522,]),'condition_for':([427,],[476,]),'elseif_statement':([466,582,],[495,594,]),'else_statement':([466,582,],[496,595,]),'increment_statement':([506,],[531,]),'method_body':([569,573,575,],[574,583,587,]),'classStatement':([569,573,575,],[575,575,575,]),'return_form':([569,573,575,],[576,576,585,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('body_statement -> RETURN printable_values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',77),
  ('body_statement -> sentence RETURN printable_values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',78),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',85),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',93),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',94),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',95),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',100),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',108),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',109),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',110),
  ('expression_for -> length_operations','expression_for',1,'p_expression_for','syntaxAnalysis.py',111),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',116),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',117),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',125),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',126),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',127),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',134),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',135),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',141),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',142),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',143),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',149),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',150),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',151),
  ('boolean_expression -> logic_expression','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',152),
  ('logic_expression -> true_boolean_types logic_operator false_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',158),
  ('logic_expression -> false_boolean_types logic_operator true_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',159),
  ('true_boolean_types -> TRUE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',164),
  ('true_boolean_types -> STRING','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',165),
  ('true_boolean_types -> INTEGER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',166),
  ('true_boolean_types -> FLOAT','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',167),
  ('true_boolean_types -> VARIABLE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',168),
  ('true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN','true_boolean_types',4,'p_true_boolean_types','syntaxAnalysis.py',169),
  ('false_boolean_types -> FALSE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',174),
  ('false_boolean_types -> STRING','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',175),
  ('false_boolean_types -> INTEGER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',176),
  ('false_boolean_types -> VARIABLE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',177),
  ('false_boolean_types -> FLOAT','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',178),
  ('false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN','false_boolean_types',3,'p_false_boolean_types','syntaxAnalysis.py',179),
  ('false_boolean_types -> NULL','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',180),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',188),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',189),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',196),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',197),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',198),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',199),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',200),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',201),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',202),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',203),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',204),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',205),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',206),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',212),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',213),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',214),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',215),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',216),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',217),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',218),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',219),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',220),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',221),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',229),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',230),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',231),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',232),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',237),
  ('printable_values -> values printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',238),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',239),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',240),
  ('printable_values -> VARIABLE printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',241),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',242),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',243),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',244),
  ('printable_values -> conditional printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',245),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',246),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',247),
  ('printable_values -> structure_object_principal printable_dividers printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',248),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',249),
  ('printable_dividers -> COMMA','printable_dividers',1,'p_printable_dividers','syntaxAnalysis.py',254),
  ('printable_dividers -> STRING_CONCATENATION','printable_dividers',1,'p_printable_dividers','syntaxAnalysis.py',255),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',261),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',262),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',263),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',264),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',270),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',271),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',277),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',278),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',279),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',285),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',286),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',287),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',288),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',289),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',296),
  ('factor -> FLOAT','factor',1,'p_factor','syntaxAnalysis.py',297),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',298),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',299),
  ('factor -> STRING','factor',1,'p_factor','syntaxAnalysis.py',300),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',327),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',328),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',334),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',335),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',336),
  ('variable_assignment -> VARIABLE assignment_operator string_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',337),
  ('variable_assignment -> VARIABLE assignment_operator array_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',338),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',339),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',340),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',341),
  ('variable_assignment -> VARIABLE assignment_operator conditional','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',342),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',343),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',344),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',345),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',346),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',353),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',354),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',360),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',361),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',367),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',373),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',384),
  ('function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',385),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',391),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',392),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',398),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',399),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',400),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',401),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',411),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',419),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',425),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',426),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',432),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',433),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',439),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',445),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',451),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',452),
  ('string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','string_special_function',4,'p_string_special_function','syntaxAnalysis.py',460),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN','string_special_function',6,'p_string_special_function','syntaxAnalysis.py',461),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN','string_special_function',8,'p_string_special_function','syntaxAnalysis.py',462),
  ('string_param -> STRING','string_param',1,'p_string_param','syntaxAnalysis.py',467),
  ('string_param -> VARIABLE','string_param',1,'p_string_param','syntaxAnalysis.py',468),
  ('int_param -> INTEGER','int_param',1,'p_int_param','syntaxAnalysis.py',472),
  ('int_param -> VARIABLE','int_param',1,'p_int_param','syntaxAnalysis.py',473),
  ('array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',482),
  ('array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',483),
  ('array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',484),
  ('array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN','array_special_function',4,'p_array_special_function','syntaxAnalysis.py',485),
  ('count_param -> COMMA COUNT_NORMAL','count_param',2,'p_count_param','syntaxAnalysis.py',491),
  ('count_param -> COMMA COUNT_RECURSIVE','count_param',2,'p_count_param','syntaxAnalysis.py',492),
  ('count_param -> <empty>','count_param',0,'p_count_param','syntaxAnalysis.py',493),
  ('length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',497),
  ('length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',498),
  ('length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',499),
  ('length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','length_operations',4,'p_length_operations','syntaxAnalysis.py',500),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',512),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',513),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',514),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',521),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',522),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',523),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',524),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',529),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',533),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',534),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',540),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',541),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',547),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',548),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',553),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',554),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',555),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',556),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',557),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',558),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',563),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',568),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',569),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',575),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',576),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',577),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',578),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',579),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',584),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',588),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',593),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',594),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',600),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',601),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',607),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',608),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',609),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',610),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',615),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',616),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',622),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',631),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',632),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',637),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',638),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',642),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',643),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',644),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',645),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',646),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',647),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',648),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',649),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',650),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',651),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',657),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',658),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',663),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',667),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',671),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',672),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',676),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',680),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',681),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',685),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',686),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',690),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',691),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',695),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',696),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',700),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',701),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',702),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',707),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',708),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',709),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',714),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',715),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',716),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',717),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',721),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',722),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',723),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',724),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',725),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',731),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',732),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',733),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',738),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',739),
]
