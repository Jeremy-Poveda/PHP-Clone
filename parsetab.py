
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ARRAY_POP ARRAY_PUSH BREAK CLASS COLON COMMA COMMENT CONST COUNT COUNT_NORMAL COUNT_RECURSIVE DECREMENT DEFINE DIVIDE ECHO ELSE ELSEIF EQUALS EQUALS_EQUALS EXTENDS FALSE FEGTS FLOAT FN FOR FUNCTION GREATER_EQUALS_TO GREATER_THAN IDENTICAL IDENTIFIER IF IMPLEMENTS INCREASE INTEGER INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LOGIC_AND LOGIC_AND LOGIC_NOT LOGIC_OR LOGIC_OR LOGIC_XOR MINUS MODULE MULTIPLY NEW NOT_EQUALS NOT_IDENTICAL NULL NULL_FUSION PLUS PLUS_EQUALS POW PRINT PRIVATE PROTECTED PUBLIC READLINE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SMALL_EQUALS_TO SMALL_THAN SPACECRAFT STATIC STDIN STRING STRING_CONCATENATION STRLEN SUBSTR TRUE VARIABLE WHILEprogram : sentence programprogram : sentence\n    sentence : print_statement SEMICOLON\n             | assignment SEMICOLON\n             | types_structure\n             | class_declaration\n             | interface_declaration\n             | control_structures\n             | function_declaration\n    \n    control_structures : if_statement\n                       | while_statement\n                       | for_statement\n    \n    while_statement : WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    if_statement : IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    elseif_statement : ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement\n                 | ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement\n    \n    else_statement : ELSE LEFT_BRACE body_statement RIGHT_BRACE\n    \n    body_statement : sentence\n            | sentence RETURN values SEMICOLON\n            | sentence RETURN SEMICOLON\n            | sentence BREAK SEMICOLON\n            | sentence body_statement\n            | RETURN values SEMICOLON\n            | BREAK SEMICOLON\n    \n    for_statement : FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE\n    \n    increment_statement : VARIABLE INCREASE\n                        | VARIABLE DECREMENT\n                        | INCREASE VARIABLE\n                        | DECREMENT VARIABLE\n                        | VARIABLE PLUS_EQUALS INTEGER\n                        | VARIABLE EQUALS VARIABLE operator_aritmetic number_values\n    \n    condition_for : VARIABLE comparator_operator expression_for\n    \n    expression_for : VARIABLE\n                   | number_values\n                   | expression_for operator_aritmetic expression_for\n                   | LEFT_PAREN expression_for RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN\n                   | IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN\n                   | length_operations\n    \n    number_values : INTEGER\n                  | FLOAT\n    \n    operator_aritmetic : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | MODULE\n                       | POW\n    \n    conditional  : boolean_expression\n                 | boolean_expression logic_operator boolean_expression\n\n    \n    logic_operator  : LOGIC_AND\n                    | LOGIC_OR\n                    | LOGIC_XOR \n    \n    boolean_expression  : comparation\n                        | VARIABLE\n                        | IDENTIFIER\n                        | LEFT_PAREN conditional RIGHT_PAREN\n                        | logic_not_sentence\n                        | logic_expression\n    \n    logic_expression : true_boolean_types logic_operator false_boolean_types\n                     | false_boolean_types logic_operator true_boolean_types\n    \n    true_boolean_types : TRUE\n                       | STRING\n                       | INTEGER\n                       | FLOAT\n                       | VARIABLE\n                       | IDENTIFIER\n                       | ARRAY LEFT_PAREN values RIGHT_PAREN\n    \n    false_boolean_types : FALSE\n                        | STRING\n                        | INTEGER\n                        | VARIABLE\n                        | IDENTIFIER\n                        | FLOAT\n                        | ARRAY LEFT_PAREN RIGHT_PAREN\n                        | NULL\n    \n    logic_not_sentence : LOGIC_NOT conditional\n             | LOGIC_NOT VARIABLE\n    \n    comparation : values comparator_operator values\n                | values comparator_operator expression\n                | expression comparator_operator expression\n                | VARIABLE EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS values\n                | access_array_element EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_array_element\n                | VARIABLE EQUALS_EQUALS VARIABLE\n                | access_array_element EQUALS_EQUALS access_array_element\n                | access_element_matrix EQUALS_EQUALS VARIABLE\n                | VARIABLE EQUALS_EQUALS access_element_matrix\n    \n    comparator_operator : EQUALS_EQUALS\n                         | IDENTICAL\n                         | NOT_EQUALS\n                         | NOT_IDENTICAL\n                         | SMALL_THAN\n                         | GREATER_THAN\n                         | SMALL_EQUALS_TO\n                         | GREATER_EQUALS_TO\n                         | SPACECRAFT\n                         | NULL_FUSION\n    \n    print_statement : ECHO LEFT_PAREN printable_values RIGHT_PAREN\n                    | PRINT LEFT_PAREN printable_values RIGHT_PAREN\n                    | ECHO printable_values\n                    | PRINT printable_values\n    \n    printable_values : values\n                     | values COMMA printable_values\n                     | VARIABLE\n                     | VARIABLE COMMA printable_values\n                     | STRING STRING_CONCATENATION STRING\n                     | VARIABLE STRING_CONCATENATION STRING\n                     | conditional\n                     | conditional COMMA printable_values\n                     | structure_object_principal\n                     | structure_object_principal COMMA printable_values\n                     | function_invocation\n                     | function_invocation COMMA printable_values\n                     | string_special_function\n                     | string_special_function COMMA printable_values\n                     | array_special_function\n                     | array_special_function COMMA printable_values\n    \n    values : INTEGER\n           | STRING\n           | FLOAT\n           | boolean\n    \n    boolean : TRUE\n            | FALSE\n    \n    expression : term\n               | term PLUS expression\n               | term MINUS expression\n    \n    term : factor\n         | factor MULTIPLY term\n         | factor DIVIDE term\n         | factor MODULE term\n         | factor POW term\n    \n    factor : INTEGER\n           | FLOAT\n           | VARIABLE\n           | LEFT_PAREN expression RIGHT_PAREN\n           | STRING\n    \n    assignment : variable_assignment\n               | constant_assignment\n    \n    variable_assignment : VARIABLE assignment_operator values\n                        | VARIABLE assignment_operator IDENTIFIER\n                        | VARIABLE assignment_operator expression \n                        | VARIABLE assignment_operator function_invocation\n                        | VARIABLE assignment_operator string_special_function\n                        | VARIABLE assignment_operator array_special_function\n                        | VARIABLE assignment_operator types_structure \n                        | VARIABLE assignment_operator input \n                        | VARIABLE assignment_operator special_function\n                        | VARIABLE assignment_operator conditional\n                        | VARIABLE INCREASE \n                        | VARIABLE DECREMENT \n                        | INCREASE VARIABLE \n                        | DECREMENT VARIABLE \n    \n    assignment_operator : EQUALS\n                        | PLUS_EQUALS\n    \n    constant_assignment : const_syntax\n                        | define_syntax\n    \n     const_syntax : CONST IDENTIFIER EQUALS values \n    \n        define_syntax : DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN \n    \n    function_invocation : IDENTIFIER LEFT_PAREN params RIGHT_PAREN\n                        | VARIABLE LEFT_PAREN params RIGHT_PAREN\n    \n    params : real_params\n           | empty\n    \n    real_params : VARIABLE\n                | values\n                | real_params COMMA VARIABLE\n                | real_params COMMA values\n    \n    empty :\n    \n    function_declaration : FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    special_function : arrow_function\n                     | anonymous_functions\n    \n    arrow_function : FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock\n                   | FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement\n                   | FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression\n    \n    anonymous_functions : FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock\n    \n    codeblock : LEFT_BRACE body_statement RIGHT_BRACE\n    \n    input : FEGTS LEFT_PAREN STDIN RIGHT_PAREN\n          | READLINE LEFT_PAREN STRING RIGHT_PAREN\n    \n    string_special_function : STRLEN LEFT_PAREN string_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN\n                            | SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN\n    \n    string_param : STRING\n                 | VARIABLE\n    \n    int_param : INTEGER\n              | VARIABLE\n    \n    array_special_function : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                           | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                           | ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN\n    \n    count_param : COMMA COUNT_NORMAL\n                | COMMA COUNT_RECURSIVE\n                |\n    \n    length_operations : COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN\n                      | COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN\n                      | STRLEN LEFT_PAREN string_param RIGHT_PAREN\n    \n    types_structure : structure_array_principal\n                    | structure_matrix_principal\n                    | structure_object_principal\n    \n    structure_array_principal : indexed_array\n                              | associative_array\n                              | access_array_stucture\n                              | access_array_element\n    indexed_array : ARRAY LEFT_PAREN values_array_indexed RIGHT_PARENassociative_array : ARRAY LEFT_PAREN structure_array RIGHT_PAREN \n                         | ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET\n    \n    structure_array : key EQUALS GREATER_THAN values\n                    | key EQUALS GREATER_THAN values COMMA structure_array\n    \n    key : INTEGER\n        | STRING\n    values_array_indexed : values\n                            | values COMMA values_array_indexed\n                            | object_creation\n                            | object_creation COMMA values_array_indexed\n                            | indexed_array\n                            | indexed_array COMMA values_array_indexed\n    \n    access_array_stucture : access_array_element SEMICOLON\n    \n    access_array_element : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET\n                         | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    \n    structure_matrix_principal : matrix_firstform\n                               | matrix_secondform\n                               | access_element_matrix SEMICOLON\n                               | modify_element_matrix SEMICOLON\n                               | add_element_matrix\n    matrix_firstform : ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLONmatrix_secondform : LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON\n    structure_matrix_second : LEFT_BRACKET values RIGHT_BRACKET\n                            | LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second\n    \n    structure_matrix_first : ARRAY LEFT_PAREN values RIGHT_PAREN\n                           | ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first\n    \n    access_element_matrix : VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET\n                          | VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET\n    modify_element_matrix : access_element_matrix EQUALS values\n                             | access_element_matrix EQUALS VARIABLE\n                             \n    add_element_matrix : VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array\n    structure_object_principal : object_creation\n                               | access_method_object\n    object_creation : NEW IDENTIFIER\n                       | NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN access_method_object : VARIABLE MINUS GREATER_THAN function_invocation\n                            | VARIABLE MINUS GREATER_THAN accessType\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS values\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element\n                            | access_array_element MINUS GREATER_THAN function_invocation\n                            | access_array_element MINUS GREATER_THAN accessType\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS values\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE\n                            | access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element\n                            \n    accessType : IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET\n               | IDENTIFIER\n    class_declaration : CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACEinterface_declaration : INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACEinterface_body : interface_body interface_method\n                     |interface_method : visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLONclass_extends_opt : EXTENDS IDENTIFIER\n                        | class_implements_opt : IMPLEMENTS interface_list\n                           |interface_list : IDENTIFIER\n                     | interface_list COMMA IDENTIFIERclass_body : class_body class_member\n                  |class_member : visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE\n                    | class_attribute \n    class_attribute : visibility_opt VARIABLE  EQUALS values SEMICOLON\n                    | visibility_opt VARIABLE SEMICOLON\n                    | visibility_opt constant_assignment SEMICOLON\n    visibility_opt : PUBLIC\n                     | PRIVATE\n                     | PROTECTED\n                     |method_body : classStatement\n                   | classStatement return_form\n                   | return_form\n                   | classStatement BREAK SEMICOLON\n                   | classStatement method_body\n    \n    return_form : RETURN values SEMICOLON\n                | RETURN access_method_object SEMICOLON\n                | RETURN SEMICOLON\n                | RETURN expression SEMICOLON\n                | RETURN string_special_function SEMICOLON\n                | RETURN array_special_function SEMICOLON\n    classStatement : sentence\n                      | access_method_object SEMICOLON'
    
_lr_action_items = {'ECHO':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,502,503,504,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[10,10,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,10,10,-228,-244,-258,-172,10,-248,-247,-249,-254,-252,-253,10,-222,-221,-257,-255,-14,-13,-179,10,-15,-16,10,-20,10,10,10,-28,10,10,-291,-242,-206,-17,-292,-18,-19,]),'PRINT':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,502,503,504,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[11,11,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,11,11,-228,-244,-258,-172,11,-248,-247,-249,-254,-252,-253,11,-222,-221,-257,-255,-14,-13,-179,11,-15,-16,11,-20,11,11,11,-28,11,11,-291,-242,-206,-17,-292,-18,-19,]),'CLASS':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[17,17,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,17,17,-228,-244,-258,-172,17,-248,-247,-249,-254,-252,-253,17,-222,-221,-257,-255,-14,-13,-179,-15,-16,17,-20,17,17,17,-28,17,17,-291,-242,-206,-17,-292,-18,-19,]),'INTERFACE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[18,18,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,18,18,-228,-244,-258,-172,18,-248,-247,-249,-254,-252,-253,18,-222,-221,-257,-255,-14,-13,-179,-15,-16,18,-20,18,18,18,-28,18,18,-291,-242,-206,-17,-292,-18,-19,]),'FUNCTION':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,89,93,95,98,100,102,112,206,207,208,209,210,313,320,321,324,325,326,327,328,335,336,342,344,347,349,361,364,373,378,379,392,398,411,413,414,415,416,417,418,419,420,430,431,432,434,435,436,438,460,461,462,463,464,465,475,476,482,496,501,503,504,526,527,533,560,563,566,569,570,574,577,578,580,582,583,586,587,589,593,602,603,604,],[22,22,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,197,-157,-158,-220,-225,-226,-243,-122,-123,-124,-126,-127,-260,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-269,-279,-240,22,22,-228,-244,-279,-258,-259,467,-276,-277,-278,-172,22,-248,-247,-249,-254,-252,-253,22,-222,-221,-257,-268,497,-272,-255,-14,-13,523,-179,-15,-16,-274,-275,22,-273,-20,22,-261,22,22,-28,22,22,-291,-242,-206,-17,-271,-292,-18,-19,-270,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,24,25,28,29,30,31,32,33,36,37,38,48,49,50,62,77,84,89,92,93,95,98,100,101,102,103,104,105,112,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,164,165,166,167,169,170,171,172,177,202,203,206,207,208,209,210,232,248,317,318,320,321,324,325,326,327,328,331,335,336,342,344,347,348,349,351,357,361,371,372,373,375,377,378,379,380,392,398,411,413,416,417,418,419,420,430,431,432,434,435,436,438,443,444,445,446,447,448,449,450,451,452,453,458,460,461,462,463,464,465,475,476,482,501,502,503,504,511,512,526,527,528,532,533,538,539,545,553,558,560,563,566,570,574,577,578,580,582,583,584,586,587,589,593,602,603,604,],[23,23,-5,-6,-7,-8,-9,53,53,-200,-201,-202,-10,-11,-12,96,97,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,117,-125,157,117,178,199,-157,-158,-220,-225,205,-226,212,212,214,-243,234,53,247,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,53,251,256,199,53,53,53,53,53,212,-53,-54,-55,251,270,270,274,276,279,247,284,289,298,247,247,247,247,247,247,251,323,323,-122,-123,-124,-126,-127,251,247,251,251,-222,-221,-245,-246,-256,-250,-251,381,-207,-208,-209,-229,-164,399,-163,403,409,-269,425,427,-240,430,436,23,23,381,-228,-244,-279,-258,-276,-277,-278,-172,23,-248,-247,-249,-254,-252,-253,23,484,381,-45,-46,-47,-48,-49,-50,487,491,270,403,-222,-221,-257,-268,498,-272,-255,-14,-13,-179,247,-15,-16,381,536,-274,-275,251,212,23,555,556,251,565,251,-273,-20,23,23,585,-28,585,585,-291,-242,600,-206,-17,-271,-292,-18,-19,-270,]),'INCREASE':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,512,533,536,563,566,570,574,577,578,580,582,583,585,586,587,593,602,603,],[24,24,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,90,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,24,24,-228,-244,-258,-172,24,-248,-247,-249,-254,-252,-253,24,-222,-221,-257,-255,-14,-13,-179,-15,-16,538,24,550,-20,24,24,24,-28,24,24,-291,-242,90,-206,-17,-292,-18,-19,]),'DECREMENT':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,512,533,536,563,566,570,574,577,578,580,582,583,585,586,587,593,602,603,],[25,25,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,91,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,25,25,-228,-244,-258,-172,25,-248,-247,-249,-254,-252,-253,25,-222,-221,-257,-255,-14,-13,-179,-15,-16,539,25,551,-20,25,25,25,-28,25,25,-291,-242,91,-206,-17,-292,-18,-19,]),'IF':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[39,39,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,39,39,-228,-244,-258,-172,39,-248,-247,-249,-254,-252,-253,39,-222,-221,-257,-255,-14,-13,-179,-15,-16,39,-20,39,39,39,-28,39,39,-291,-242,-206,-17,-292,-18,-19,]),'WHILE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[40,40,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,40,40,-228,-244,-258,-172,40,-248,-247,-249,-254,-252,-253,40,-222,-221,-257,-255,-14,-13,-179,-15,-16,40,-20,40,40,40,-28,40,40,-291,-242,-206,-17,-292,-18,-19,]),'FOR':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[41,41,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,41,41,-228,-244,-258,-172,41,-248,-247,-249,-254,-252,-253,41,-222,-221,-257,-255,-14,-13,-179,-15,-16,41,-20,41,41,41,-28,41,41,-291,-242,-206,-17,-292,-18,-19,]),'CONST':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,361,373,378,379,392,398,411,413,416,417,418,419,420,430,431,432,434,435,436,438,460,461,462,463,464,465,475,476,482,501,503,504,526,527,533,560,563,566,570,574,577,578,580,582,583,586,587,589,593,602,603,604,],[42,42,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-269,-240,42,42,-228,-244,-279,-258,-276,-277,-278,-172,42,-248,-247,-249,-254,-252,-253,42,-222,-221,-257,-268,42,-272,-255,-14,-13,-179,-15,-16,-274,-275,42,-273,-20,42,42,42,-28,42,42,-291,-242,-206,-17,-271,-292,-18,-19,-270,]),'DEFINE':([0,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,361,373,378,379,392,398,411,413,416,417,418,419,420,430,431,432,434,435,436,438,460,461,462,463,464,465,475,476,482,501,503,504,526,527,533,560,563,566,570,574,577,578,580,582,583,586,587,589,593,602,603,604,],[43,43,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-269,-240,43,43,-228,-244,-279,-258,-276,-277,-278,-172,43,-248,-247,-249,-254,-252,-253,43,-222,-221,-257,-268,43,-272,-255,-14,-13,-179,-15,-16,-274,-275,43,-273,-20,43,43,43,-28,43,43,-291,-242,-206,-17,-271,-292,-18,-19,-270,]),'ARRAY':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,62,77,84,89,93,95,98,100,102,103,104,108,112,113,121,133,139,140,141,142,143,144,145,146,147,151,164,165,206,207,208,209,210,319,320,321,322,324,325,326,327,328,334,335,336,338,339,340,342,344,347,349,373,378,379,392,398,413,419,420,429,430,431,432,434,435,436,438,452,460,461,462,475,476,482,493,501,503,504,532,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[44,44,-5,-6,-7,-8,-9,81,81,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,81,-125,81,81,198,-157,-158,-220,-225,-226,81,81,217,-243,81,81,81,81,81,81,81,81,81,-53,-54,-55,44,292,300,-122,-123,-124,-126,-127,217,-222,-221,374,-245,-246,-256,-250,-251,374,-207,-208,374,374,374,-209,-229,-164,-163,-240,44,44,-228,-244,-258,-172,44,374,-248,-247,-249,-254,-252,-253,44,44,-222,-221,-257,-255,-14,-13,519,-179,-15,-16,81,44,-20,44,44,44,-28,44,44,-291,-242,-206,-17,-292,-18,-19,]),'LEFT_BRACKET':([0,2,5,6,7,8,9,14,15,16,19,20,21,23,28,29,30,31,32,33,36,37,38,44,45,48,49,53,62,89,93,95,98,100,102,112,117,151,157,178,198,206,207,208,209,210,212,234,256,274,279,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,397,398,413,419,420,430,431,432,434,435,436,438,452,460,461,462,475,476,482,487,491,501,503,504,533,563,566,570,574,577,578,580,582,583,585,586,587,593,600,602,603,],[45,45,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,92,-203,-204,-205,-206,-223,-224,-227,-241,-242,109,110,-3,-4,137,-125,45,-157,-158,-220,-225,-226,-243,137,45,137,92,109,-122,-123,-124,-126,-127,137,137,137,92,357,371,372,-245,-246,376,-250,-251,-207,-208,-209,-229,-164,-163,-240,45,45,-228,110,-244,-258,-172,45,357,-247,-249,-254,-252,357,45,45,-222,-221,-257,-255,-14,-13,357,92,-179,-15,-16,45,-20,45,45,45,-28,45,45,-291,-242,92,-206,-17,-292,357,-18,-19,]),'NEW':([0,2,5,6,7,8,9,10,11,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,50,62,84,89,93,95,98,100,102,108,112,121,133,139,140,141,142,143,206,207,208,209,210,319,320,321,324,325,326,327,328,334,335,336,338,339,340,342,344,347,349,373,378,379,392,398,413,419,420,429,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[46,46,-5,-6,-7,-8,-9,46,46,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,46,-125,46,46,-157,-158,-220,-225,-226,46,-243,46,46,46,46,46,46,46,-122,-123,-124,-126,-127,46,-222,-221,-245,-246,-256,-250,-251,46,-207,-208,46,46,46,-209,-229,-164,-163,-240,46,46,-228,-244,-258,-172,46,46,-248,-247,-249,-254,-252,-253,46,-222,-221,-257,-255,-14,-13,-179,-15,-16,46,-20,46,46,46,-28,46,46,-291,-242,-206,-17,-292,-18,-19,]),'$end':([1,2,5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,47,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,392,398,413,419,430,431,432,434,435,436,460,461,462,475,476,482,501,503,504,563,577,587,602,603,],[0,-2,-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-1,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,-228,-244,-258,-172,-248,-247,-249,-254,-252,-253,-222,-221,-257,-255,-14,-13,-179,-15,-16,-20,-28,-17,-18,-19,]),'SEMICOLON':([3,4,12,13,14,15,16,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,80,82,83,85,90,91,96,97,98,100,102,112,119,120,156,157,158,178,179,180,181,182,183,184,185,186,187,188,189,192,193,194,195,204,205,206,207,208,209,210,212,231,238,239,240,241,242,243,244,245,246,247,249,250,256,257,258,259,260,261,262,263,264,265,266,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,301,302,304,305,306,307,308,309,320,321,324,325,326,327,328,332,335,336,337,342,344,347,349,350,356,360,373,381,382,383,385,386,387,392,398,404,407,408,421,422,430,431,432,434,435,436,440,454,459,460,461,470,471,472,473,474,475,477,478,480,483,485,486,498,499,501,507,513,514,518,522,529,530,531,535,540,541,542,546,561,583,584,586,591,594,596,597,598,599,600,],[48,49,-141,-142,-200,-201,-202,-159,-160,-203,-204,-205,98,-223,-224,100,102,-227,-241,-242,-104,-106,-57,-123,-112,-114,-116,-118,-120,-122,-124,-125,-51,-58,-126,-127,-56,-60,-61,-128,-78,-131,-105,-153,-154,-155,-156,-220,-225,-226,-243,-122,-124,-79,-57,-58,-57,-143,-58,-145,-146,-147,-148,-149,-150,-151,-152,-123,-173,-174,98,100,-238,-239,-122,-123,-124,-126,-127,-57,344,-102,-59,-139,-107,-81,-82,-122,-123,-124,-138,-109,-111,-88,-84,-87,-91,-110,-113,-115,-117,-119,-121,-52,98,-89,-85,-86,-83,-136,-137,-140,-90,-62,-71,-72,-73,-74,-75,-76,-63,-64,-65,-66,-67,-68,-69,-129,-130,-77,-132,-133,-134,-135,-103,-222,-221,-245,-246,-256,-250,-251,-161,-207,-208,392,-209,-229,-164,-163,-182,-192,-70,-240,-36,443,-37,-42,-43,-44,-228,-244,-189,-190,-191,-180,-181,-248,-247,-249,-254,-252,-253,481,-162,-183,-222,-221,-178,-235,-236,-237,-234,-255,508,509,510,-39,512,-38,526,527,-179,534,-40,-41,-199,-184,-175,-176,-177,-35,-196,-197,-198,560,569,593,595,98,605,606,607,608,609,610,-138,]),'RETURN':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,533,563,566,570,574,577,578,580,582,583,586,587,593,602,603,],[-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,439,439,-228,-244,-258,-172,439,-248,-247,-249,-254,-252,-253,477,-222,-221,-257,-255,-14,-13,-179,-15,-16,439,-20,439,439,584,-28,584,584,-291,-242,-206,-17,-292,-18,-19,]),'BREAK':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,320,321,324,325,326,327,328,335,336,342,344,347,349,373,378,379,392,398,413,419,420,430,431,432,434,435,436,438,460,461,462,475,476,482,501,503,504,533,563,566,570,577,580,582,583,586,587,593,602,603,],[-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-240,440,440,-228,-244,-258,-172,440,-248,-247,-249,-254,-252,-253,478,-222,-221,-257,-255,-14,-13,-179,-15,-16,440,-20,440,440,-28,591,-291,-242,-206,-17,-292,-18,-19,]),'RIGHT_BRACE':([5,6,7,8,9,14,15,16,19,20,21,28,29,30,31,32,33,36,37,38,48,49,62,98,100,102,112,206,207,208,209,210,313,320,321,324,325,326,327,328,335,336,342,344,347,349,361,364,373,392,398,411,413,414,419,430,431,432,434,435,436,437,438,441,460,461,462,463,465,468,475,476,479,481,482,501,503,504,508,509,510,526,527,534,549,560,563,569,572,575,577,579,580,581,582,583,586,587,588,589,590,592,593,595,602,603,604,605,606,607,608,609,610,],[-5,-6,-7,-8,-9,-200,-201,-202,-10,-11,-12,-203,-204,-205,-206,-223,-224,-227,-241,-242,-3,-4,-125,-220,-225,-226,-243,-122,-123,-124,-126,-127,-260,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,-164,-163,-269,413,-240,-228,-244,462,-258,-259,-172,-248,-247,-249,-254,-252,-253,476,-21,482,-222,-221,-257,-268,-272,501,-255,-14,-25,-27,-13,-179,-15,-16,-23,-24,-26,-274,-275,-22,563,-273,-20,-261,577,587,-28,589,-280,-282,-291,-242,-206,-17,604,-271,-281,-284,-292,-287,-18,-19,-270,-283,-285,-286,-288,-289,-290,]),'LEFT_PAREN':([10,11,39,40,41,43,44,50,53,64,65,66,67,68,77,81,84,88,89,93,95,103,104,112,113,117,121,122,123,124,125,126,127,128,129,130,131,132,133,139,140,141,142,143,144,145,146,147,154,166,167,169,170,171,172,178,180,190,191,196,197,198,217,248,292,300,323,326,331,374,380,384,388,389,444,445,446,447,448,449,450,500,502,505,511,519,524,532,544,584,],[50,84,103,104,105,107,108,113,135,148,149,150,151,152,113,168,113,177,113,-157,-158,113,113,232,113,135,113,248,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,113,113,113,113,113,113,113,-53,-54,-55,248,248,248,248,248,248,248,135,148,315,316,317,318,319,334,248,358,359,135,148,380,429,380,451,452,453,380,-45,-46,-47,-48,-49,-50,528,248,532,380,543,545,113,558,248,]),'STRING':([10,11,50,77,84,89,93,95,101,103,104,107,108,109,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,164,165,166,167,168,169,170,171,172,177,215,232,248,316,317,318,319,333,334,338,339,340,348,359,375,377,396,429,439,453,477,494,502,525,528,532,543,545,558,584,],[54,54,118,161,118,189,-157,-158,207,161,161,216,226,229,207,237,54,245,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,54,250,207,207,260,54,54,54,54,54,161,-53,-54,-55,207,269,269,207,283,287,295,283,283,207,283,283,283,283,207,207,207,283,367,207,207,226,207,207,207,207,207,207,207,207,207,207,207,207,269,207,229,283,207,207,161,207,207,207,245,]),'INTEGER':([10,11,50,77,84,89,92,93,95,101,103,104,108,109,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,139,140,141,142,143,144,145,146,147,148,153,154,164,165,166,167,168,169,170,171,172,177,215,232,248,317,318,319,331,333,334,338,339,340,348,351,357,359,371,372,375,376,377,380,396,429,439,444,445,446,447,448,449,450,458,477,494,502,511,525,528,532,543,545,552,558,571,584,],[60,60,119,60,119,119,200,-157,-158,206,60,60,225,228,206,235,60,244,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,60,206,206,200,60,60,60,60,60,60,-53,-54,-55,206,206,281,288,296,281,281,206,281,281,281,281,206,206,206,281,206,206,225,386,206,206,206,206,206,206,402,410,206,426,428,206,433,206,386,206,206,206,386,-45,-46,-47,-48,-49,-50,402,206,228,281,386,206,206,60,206,206,564,206,386,244,]),'FLOAT':([10,11,50,77,84,89,93,95,101,103,104,108,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,140,141,142,143,144,145,146,147,148,153,154,164,165,166,167,168,169,170,171,172,177,215,232,248,317,318,319,331,333,334,338,339,340,348,359,375,377,380,396,429,439,444,445,446,447,448,449,450,477,502,511,525,528,532,543,545,558,571,584,],[61,61,120,61,120,120,-157,-158,208,61,61,208,208,236,61,246,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,61,208,208,61,61,61,61,61,61,-53,-54,-55,208,208,282,291,297,282,282,208,282,282,282,282,208,208,208,282,208,208,208,387,208,208,208,208,208,208,208,208,208,387,208,208,208,387,-45,-46,-47,-48,-49,-50,208,282,387,208,208,61,208,208,208,387,246,]),'IDENTIFIER':([10,11,17,18,22,42,46,50,77,84,89,93,95,103,104,113,121,123,124,125,126,127,128,129,130,131,132,133,139,140,141,142,143,144,145,146,147,164,165,175,202,203,311,331,380,412,444,445,446,447,448,449,450,467,497,511,523,532,],[64,64,86,87,88,106,112,64,158,64,180,-157,-158,158,158,158,64,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,64,64,64,64,64,64,158,-53,-54,-55,290,299,312,326,326,363,384,384,466,384,-45,-46,-47,-48,-49,-50,500,524,384,544,158,]),'STRLEN':([10,11,50,84,89,93,95,121,123,124,125,126,127,128,129,130,131,132,133,139,140,141,142,143,331,380,444,445,446,447,448,449,450,511,584,],[65,65,65,65,65,-157,-158,65,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,65,65,65,65,65,65,389,389,389,-45,-46,-47,-48,-49,-50,389,65,]),'SUBSTR':([10,11,50,84,89,93,95,121,133,139,140,141,142,143,584,],[66,66,66,66,66,-157,-158,66,66,66,66,66,66,66,66,]),'COUNT':([10,11,50,84,89,93,95,121,123,124,125,126,127,128,129,130,131,132,133,139,140,141,142,143,331,380,444,445,446,447,448,449,450,511,584,],[67,67,67,67,67,-157,-158,67,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,67,67,67,67,67,67,388,388,388,-45,-46,-47,-48,-49,-50,388,67,]),'ARRAY_POP':([10,11,50,84,89,93,95,121,133,139,140,141,142,143,584,],[68,68,68,68,68,-157,-158,68,68,68,68,68,68,68,68,]),'TRUE':([10,11,50,77,84,89,93,95,101,103,104,108,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,140,141,142,143,144,145,146,147,148,153,165,168,177,215,232,317,318,319,333,334,338,339,340,348,359,375,377,396,429,439,477,525,528,532,543,545,558,584,],[69,69,69,162,69,69,-157,-158,209,162,162,209,209,162,69,209,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,69,209,209,69,69,69,69,69,162,-53,-54,-55,209,209,294,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,162,209,209,209,209,]),'FALSE':([10,11,50,77,84,89,93,95,101,103,104,108,110,113,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,140,141,142,143,144,145,146,147,148,153,164,168,177,215,232,317,318,319,333,334,338,339,340,348,359,375,377,396,429,439,477,525,528,532,543,545,558,584,],[70,70,70,163,70,70,-157,-158,210,163,163,210,210,163,70,210,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,70,210,210,70,70,70,70,70,163,-53,-54,-55,210,210,286,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,163,210,210,210,210,]),'LOGIC_NOT':([10,11,50,77,84,89,93,95,103,104,113,121,133,139,140,141,142,143,144,145,146,147,532,],[77,77,77,77,77,77,-157,-158,77,77,77,77,77,77,77,77,77,77,77,-53,-54,-55,77,]),'NULL':([10,11,50,77,84,89,93,95,103,104,113,121,133,139,140,141,142,143,144,145,146,147,164,532,],[82,82,82,82,82,82,-157,-158,82,82,82,82,82,82,82,82,82,82,82,-53,-54,-55,82,82,]),'MINUS':([23,31,53,54,60,61,74,80,83,117,118,119,120,157,161,178,189,194,212,234,235,236,237,240,244,245,246,247,281,282,283,305,306,307,308,320,321,381,382,383,385,386,387,442,460,461,483,486,513,514,518,535,540,541,542,565,585,586,600,601,],[94,99,94,-140,-136,-137,99,167,-131,94,-140,-136,-137,-138,-140,94,-140,99,-138,-138,-136,-137,-140,-139,-136,-140,-137,-138,-136,-137,-140,-132,-133,-134,-135,-222,-221,-36,446,-37,-42,-43,-44,446,-222,-221,-39,446,-40,-41,-199,446,-196,-197,-198,446,94,99,94,99,]),'EQUALS':([23,34,106,195,201,214,224,225,226,228,229,325,326,328,423,471,472,473,474,475,498,536,585,],[93,101,215,101,322,331,341,-212,-213,-212,-213,375,-256,377,469,-235,-236,-237,-234,-255,525,553,93,]),'PLUS_EQUALS':([23,536,585,],[95,552,95,]),'COMMA':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,80,82,83,98,100,102,112,115,117,118,119,120,156,157,158,206,207,208,209,210,212,216,221,222,223,225,226,239,240,242,243,244,245,246,247,251,253,255,256,257,258,259,266,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,301,302,304,305,306,307,308,320,321,324,325,326,327,328,335,336,342,343,344,347,349,350,356,360,362,363,370,373,391,392,398,399,400,401,402,403,404,407,408,430,431,432,434,435,436,455,456,459,460,461,466,471,472,473,474,475,489,490,491,522,],[-203,-204,-205,-223,-224,-227,-241,-242,121,133,-123,139,140,141,142,143,-122,-124,-125,-51,-58,-126,-127,-56,-60,-61,-128,-78,-131,-220,-225,-226,-243,139,133,-123,-122,-124,-79,-57,-58,-122,-123,-124,-126,-127,-57,333,338,339,340,-122,-123,-59,-139,-81,-82,-122,-123,-124,-138,-167,348,-168,-88,-84,-87,-91,-52,-185,-186,351,353,353,353,-206,-89,-85,-86,-83,-136,-137,-140,-90,-62,-71,-72,-73,-74,-75,-76,-63,-64,-65,-66,-67,-68,-69,-129,-130,-77,-132,-133,-134,-135,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,397,-229,-164,-163,-182,-192,-70,412,-266,338,-240,338,-228,-244,-169,-170,458,-187,-188,-189,-190,-191,-248,-247,-249,-254,-252,-253,493,494,-183,-222,-221,-267,-235,-236,-237,-234,-255,353,353,353,-184,]),'RIGHT_PAREN':([28,29,30,32,33,36,37,38,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,80,82,83,98,100,102,112,114,115,116,117,118,119,120,135,148,156,157,158,168,173,177,206,207,208,209,210,211,212,213,218,219,220,221,222,223,225,226,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,314,317,318,319,320,321,324,325,326,327,328,335,336,342,344,345,346,347,349,350,352,354,355,356,358,360,366,367,368,369,370,373,381,383,385,386,387,390,391,392,393,394,395,398,399,400,401,402,403,404,405,406,407,408,430,431,432,434,435,436,442,455,456,459,460,461,471,472,473,474,475,483,486,487,488,489,490,491,492,495,513,514,515,516,517,518,520,521,522,528,537,540,541,542,545,547,548,550,551,555,556,557,558,559,564,567,576,],[-203,-204,-205,-223,-224,-227,-241,-242,-106,-57,-123,-112,-114,-116,-118,-120,-122,-124,-125,-51,-58,-126,-127,-56,-60,-61,-128,-78,-131,-220,-225,-226,-243,238,239,240,-57,-123,-122,-124,-171,-171,-79,-57,-58,304,309,-171,-122,-123,-124,-126,-127,329,-57,330,335,336,337,-214,-216,-218,-122,-123,-171,239,-57,-136,-137,-140,-59,-139,-107,-81,-82,-122,-123,-124,-138,-109,-111,-167,347,-165,-166,-168,-88,-84,-87,-91,-110,-113,-115,-117,-119,-121,-52,349,350,-185,-186,-195,-195,-195,-206,356,-89,-85,-86,-83,-136,-137,-140,-90,-62,-71,-72,-73,-74,-75,-76,-63,-64,-65,-66,-67,-68,-69,-129,-130,360,-77,-132,-133,-134,-135,365,-171,-171,304,-222,-221,-245,-246,-256,-250,-251,-207,-208,-209,-229,398,240,-164,-163,-182,404,407,408,-192,304,-70,421,422,423,424,360,-240,-36,-37,-42,-43,-44,454,455,-228,-215,-217,-219,-244,-169,-170,459,-187,-188,-189,-193,-194,-190,-191,-248,-247,-249,-254,-252,-253,483,-232,-210,-183,-222,-221,-235,-236,-237,-234,-255,-39,-38,513,514,-195,-195,-195,518,522,-40,-41,540,541,542,-199,-233,-211,-184,-171,554,-196,-197,-198,-171,561,562,-29,-30,-31,-32,455,-171,568,-33,573,-34,]),'EQUALS_EQUALS':([52,53,54,60,61,62,69,70,74,75,76,80,83,116,117,118,119,120,157,159,160,161,162,163,178,179,181,189,194,195,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,320,321,471,472,473,474,484,],[123,136,-123,-122,-124,-125,-126,-127,153,123,155,-128,-131,123,136,-123,-122,-124,136,123,153,-123,-126,-127,136,123,123,-123,153,155,136,136,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,-222,-221,-235,-236,-237,-234,123,]),'IDENTICAL':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,159,161,162,163,178,179,181,189,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,484,],[124,-138,-123,-122,-124,-125,-126,-127,124,-128,-131,124,-138,-123,-122,-124,-138,124,-123,-126,-127,-138,124,124,-123,-138,-138,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,124,]),'NOT_EQUALS':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,159,161,162,163,178,179,181,189,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,484,],[125,-138,-123,-122,-124,-125,-126,-127,125,-128,-131,125,-138,-123,-122,-124,-138,125,-123,-126,-127,-138,125,125,-123,-138,-138,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,125,]),'NOT_IDENTICAL':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,159,161,162,163,178,179,181,189,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,484,],[126,-138,-123,-122,-124,-125,-126,-127,126,-128,-131,126,-138,-123,-122,-124,-138,126,-123,-126,-127,-138,126,126,-123,-138,-138,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,126,]),'SMALL_THAN':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,159,161,162,163,178,179,181,189,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,484,],[127,-138,-123,-122,-124,-125,-126,-127,127,-128,-131,127,-138,-123,-122,-124,-138,127,-123,-126,-127,-138,127,127,-123,-138,-138,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,127,]),'GREATER_THAN':([52,53,54,60,61,62,69,70,75,80,83,94,99,116,117,118,119,120,157,159,161,162,163,178,179,181,189,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,341,469,484,],[128,-138,-123,-122,-124,-125,-126,-127,128,-128,-131,202,203,128,-138,-123,-122,-124,-138,128,-123,-126,-127,-138,128,128,-123,-138,-138,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,396,502,128,]),'SMALL_EQUALS_TO':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,159,161,162,163,178,179,181,189,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,484,],[129,-138,-123,-122,-124,-125,-126,-127,129,-128,-131,129,-138,-123,-122,-124,-138,129,-123,-126,-127,-138,129,129,-123,-138,-138,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,129,]),'GREATER_EQUALS_TO':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,159,161,162,163,178,179,181,189,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,484,],[130,-138,-123,-122,-124,-125,-126,-127,130,-128,-131,130,-138,-123,-122,-124,-138,130,-123,-126,-127,-138,130,130,-123,-138,-138,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,130,]),'SPACECRAFT':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,159,161,162,163,178,179,181,189,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,484,],[131,-138,-123,-122,-124,-125,-126,-127,131,-128,-131,131,-138,-123,-122,-124,-138,131,-123,-126,-127,-138,131,131,-123,-138,-138,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,131,]),'NULL_FUSION':([52,53,54,60,61,62,69,70,75,80,83,116,117,118,119,120,157,159,161,162,163,178,179,181,189,212,234,235,236,237,240,247,281,282,283,301,302,305,306,307,308,484,],[132,-138,-123,-122,-124,-125,-126,-127,132,-128,-131,132,-138,-123,-122,-124,-138,132,-123,-126,-127,-138,132,132,-123,-138,-138,-122,-124,-123,-139,-138,-136,-137,-140,-129,-130,-132,-133,-134,-135,132,]),'STRING_CONCATENATION':([53,54,117,118,],[134,138,134,138,]),'LOGIC_AND':([53,54,60,61,62,63,64,69,70,71,72,73,78,79,80,82,83,117,118,119,120,156,157,158,161,162,163,178,180,189,206,207,208,209,210,212,234,235,236,237,239,240,242,243,244,245,246,247,256,257,258,259,266,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,301,302,304,305,306,307,308,320,321,360,460,461,471,472,473,474,],[-57,-65,-66,-67,-125,145,-58,-64,-71,-56,-60,-61,145,145,-128,-78,-131,-57,-65,-66,-67,-79,-57,-58,-65,-64,-71,-57,-58,-65,-122,-123,-124,-126,-127,-57,-57,-66,-67,-65,-59,-139,-81,-82,-122,-123,-124,-138,-88,-84,-87,-91,-52,-89,-85,-86,-83,-136,-137,-140,-90,-62,-71,-72,-73,-74,-75,-76,-63,-64,-65,-66,-67,-68,-69,-129,-130,-77,-132,-133,-134,-135,-222,-221,-70,-222,-221,-235,-236,-237,-234,]),'LOGIC_OR':([53,54,60,61,62,63,64,69,70,71,72,73,78,79,80,82,83,117,118,119,120,156,157,158,161,162,163,178,180,189,206,207,208,209,210,212,234,235,236,237,239,240,242,243,244,245,246,247,256,257,258,259,266,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,301,302,304,305,306,307,308,320,321,360,460,461,471,472,473,474,],[-57,-65,-66,-67,-125,146,-58,-64,-71,-56,-60,-61,146,146,-128,-78,-131,-57,-65,-66,-67,-79,-57,-58,-65,-64,-71,-57,-58,-65,-122,-123,-124,-126,-127,-57,-57,-66,-67,-65,-59,-139,-81,-82,-122,-123,-124,-138,-88,-84,-87,-91,-52,-89,-85,-86,-83,-136,-137,-140,-90,-62,-71,-72,-73,-74,-75,-76,-63,-64,-65,-66,-67,-68,-69,-129,-130,-77,-132,-133,-134,-135,-222,-221,-70,-222,-221,-235,-236,-237,-234,]),'LOGIC_XOR':([53,54,60,61,62,63,64,69,70,71,72,73,78,79,80,82,83,117,118,119,120,156,157,158,161,162,163,178,180,189,206,207,208,209,210,212,234,235,236,237,239,240,242,243,244,245,246,247,256,257,258,259,266,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,301,302,304,305,306,307,308,320,321,360,460,461,471,472,473,474,],[-57,-65,-66,-67,-125,147,-58,-64,-71,-56,-60,-61,147,147,-128,-78,-131,-57,-65,-66,-67,-79,-57,-58,-65,-64,-71,-57,-58,-65,-122,-123,-124,-126,-127,-57,-57,-66,-67,-65,-59,-139,-81,-82,-122,-123,-124,-138,-88,-84,-87,-91,-52,-89,-85,-86,-83,-136,-137,-140,-90,-62,-71,-72,-73,-74,-75,-76,-63,-64,-65,-66,-67,-68,-69,-129,-130,-77,-132,-133,-134,-135,-222,-221,-70,-222,-221,-235,-236,-237,-234,]),'MULTIPLY':([53,54,60,61,83,117,118,119,120,157,161,178,189,212,234,235,236,237,240,244,245,246,247,281,282,283,381,382,383,385,386,387,442,483,486,513,514,518,535,540,541,542,565,600,],[-138,-140,-136,-137,169,-138,-140,-136,-137,-138,-140,-138,-140,-138,-138,-136,-137,-140,-139,-136,-140,-137,-138,-136,-137,-140,-36,447,-37,-42,-43,-44,447,-39,447,-40,-41,-199,447,-196,-197,-198,447,-138,]),'DIVIDE':([53,54,60,61,83,117,118,119,120,157,161,178,189,212,234,235,236,237,240,244,245,246,247,281,282,283,381,382,383,385,386,387,442,483,486,513,514,518,535,540,541,542,565,600,],[-138,-140,-136,-137,170,-138,-140,-136,-137,-138,-140,-138,-140,-138,-138,-136,-137,-140,-139,-136,-140,-137,-138,-136,-137,-140,-36,448,-37,-42,-43,-44,448,-39,448,-40,-41,-199,448,-196,-197,-198,448,-138,]),'MODULE':([53,54,60,61,83,117,118,119,120,157,161,178,189,212,234,235,236,237,240,244,245,246,247,281,282,283,381,382,383,385,386,387,442,483,486,513,514,518,535,540,541,542,565,600,],[-138,-140,-136,-137,171,-138,-140,-136,-137,-138,-140,-138,-140,-138,-138,-136,-137,-140,-139,-136,-140,-137,-138,-136,-137,-140,-36,449,-37,-42,-43,-44,449,-39,449,-40,-41,-199,449,-196,-197,-198,449,-138,]),'POW':([53,54,60,61,83,117,118,119,120,157,161,178,189,212,234,235,236,237,240,244,245,246,247,281,282,283,381,382,383,385,386,387,442,483,486,513,514,518,535,540,541,542,565,600,],[-138,-140,-136,-137,172,-138,-140,-136,-137,-138,-140,-138,-140,-138,-138,-136,-137,-140,-139,-136,-140,-137,-138,-136,-137,-140,-36,450,-37,-42,-43,-44,450,-39,450,-40,-41,-199,450,-196,-197,-198,450,-138,]),'PLUS':([53,54,60,61,80,83,117,118,119,120,157,161,178,189,212,234,235,236,237,240,244,245,246,247,281,282,283,305,306,307,308,381,382,383,385,386,387,442,483,486,513,514,518,535,540,541,542,565,600,],[-138,-140,-136,-137,166,-131,-138,-140,-136,-137,-138,-140,-138,-140,-138,-138,-136,-137,-140,-139,-136,-140,-137,-138,-136,-137,-140,-132,-133,-134,-135,-36,445,-37,-42,-43,-44,445,-39,445,-40,-41,-199,445,-196,-197,-198,445,-138,]),'RIGHT_BRACKET':([62,92,111,199,200,206,207,208,209,210,227,230,343,409,410,425,426,427,428,433,456,457,521,],[-125,201,231,320,321,-122,-123,-124,-126,-127,342,343,-230,460,461,471,472,473,474,475,-210,-231,-211,]),'EXTENDS':([86,87,],[175,175,]),'IMPLEMENTS':([86,174,312,],[-263,311,-262,]),'LEFT_BRACE':([86,87,174,176,310,312,329,330,362,363,365,424,466,502,506,554,562,568,573,],[-263,-263,-265,313,361,-262,378,379,-264,-266,420,420,-267,420,533,566,570,574,578,]),'FEGTS':([89,93,95,],[190,-157,-158,]),'READLINE':([89,93,95,],[191,-157,-158,]),'FN':([89,93,95,],[196,-157,-158,]),'PUBLIC':([313,361,364,411,414,463,465,526,527,560,569,589,604,],[-260,-269,416,416,-259,-268,-272,-274,-275,-273,-261,-271,-270,]),'PRIVATE':([313,361,364,411,414,463,465,526,527,560,569,589,604,],[-260,-269,417,417,-259,-268,-272,-274,-275,-273,-261,-271,-270,]),'PROTECTED':([313,361,364,411,414,463,465,526,527,560,569,589,604,],[-260,-269,418,418,-259,-268,-272,-274,-275,-273,-261,-271,-270,]),'STDIN':([315,],[366,]),'COUNT_NORMAL':([353,],[405,]),'COUNT_RECURSIVE':([353,],[406,]),'STATIC':([361,411,416,417,418,463,464,465,526,527,560,589,604,],[-269,-279,-276,-277,-278,-268,496,-272,-274,-275,-273,-271,-270,]),'ELSEIF':([476,587,],[505,505,]),'ELSE':([476,587,],[506,506,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,47,]),'sentence':([0,2,378,379,420,438,533,566,570,574,578,580,],[2,2,438,438,438,438,438,438,438,582,582,582,]),'print_statement':([0,2,378,379,420,438,502,533,566,570,574,578,580,],[3,3,3,3,3,3,530,3,3,3,3,3,3,]),'assignment':([0,2,378,379,420,438,533,566,570,574,578,580,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'types_structure':([0,2,89,378,379,420,438,533,566,570,574,578,580,],[5,5,185,5,5,5,5,5,5,5,5,5,5,]),'class_declaration':([0,2,378,379,420,438,533,566,570,574,578,580,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_declaration':([0,2,378,379,420,438,533,566,570,574,578,580,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'control_structures':([0,2,378,379,420,438,533,566,570,574,578,580,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,378,379,420,438,533,566,570,574,578,580,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'variable_assignment':([0,2,378,379,420,438,533,566,570,574,578,580,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'constant_assignment':([0,2,378,379,420,438,464,533,566,570,574,578,580,],[13,13,13,13,13,13,499,13,13,13,13,13,13,]),'structure_array_principal':([0,2,89,151,378,379,420,438,452,533,566,570,574,578,580,],[14,14,14,272,14,14,14,14,489,14,14,14,14,14,14,]),'structure_matrix_principal':([0,2,89,151,378,379,420,438,452,533,566,570,574,578,580,],[15,15,15,273,15,15,15,15,490,15,15,15,15,15,15,]),'structure_object_principal':([0,2,10,11,50,84,89,121,133,139,140,141,142,143,378,379,420,438,533,566,570,574,578,580,],[16,16,56,56,56,56,16,56,56,56,56,56,56,56,16,16,16,16,16,16,16,16,16,16,]),'if_statement':([0,2,378,379,420,438,533,566,570,574,578,580,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([0,2,378,379,420,438,533,566,570,574,578,580,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'for_statement':([0,2,378,379,420,438,533,566,570,574,578,580,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const_syntax':([0,2,378,379,420,438,464,533,566,570,574,578,580,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'define_syntax':([0,2,378,379,420,438,464,533,566,570,574,578,580,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indexed_array':([0,2,89,108,151,319,322,334,338,339,340,378,379,420,429,438,452,533,566,570,574,578,580,],[28,28,28,223,28,223,373,223,223,223,223,28,28,28,223,28,28,28,28,28,28,28,28,]),'associative_array':([0,2,89,151,378,379,420,438,452,533,566,570,574,578,580,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'access_array_stucture':([0,2,89,151,378,379,420,438,452,533,566,570,574,578,580,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'access_array_element':([0,2,10,11,50,77,84,89,103,104,113,121,133,136,139,140,141,142,143,144,151,153,375,377,378,379,420,438,451,452,532,533,566,570,574,578,580,584,],[31,31,74,74,74,160,74,194,160,160,160,74,74,258,74,74,74,74,74,160,275,277,432,434,31,31,31,31,488,275,160,31,31,31,586,586,586,601,]),'matrix_firstform':([0,2,89,151,378,379,420,438,452,533,566,570,574,578,580,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'matrix_secondform':([0,2,89,151,378,379,420,438,452,533,566,570,574,578,580,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'access_element_matrix':([0,2,10,11,50,77,84,89,103,104,113,121,133,136,139,140,141,142,143,144,151,378,379,420,438,452,532,533,566,570,574,578,580,],[34,34,76,76,76,76,76,195,76,76,76,76,76,259,76,76,76,76,76,76,34,34,34,34,34,34,76,34,34,34,34,34,34,]),'modify_element_matrix':([0,2,89,151,378,379,420,438,452,533,566,570,574,578,580,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'add_element_matrix':([0,2,89,151,378,379,420,438,452,533,566,570,574,578,580,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'object_creation':([0,2,10,11,50,84,89,108,121,133,139,140,141,142,143,319,334,338,339,340,378,379,420,429,438,533,566,570,574,578,580,],[37,37,37,37,37,37,37,222,37,37,37,37,37,37,37,222,222,222,222,222,37,37,37,222,37,37,37,37,37,37,37,]),'access_method_object':([0,2,10,11,50,84,89,121,133,139,140,141,142,143,378,379,420,438,533,566,570,574,578,580,584,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,583,583,583,596,]),'printable_values':([10,11,50,84,121,133,139,140,141,142,143,],[51,85,114,173,241,249,261,262,263,264,265,]),'values':([10,11,50,77,84,89,101,103,104,108,110,113,121,122,133,135,136,139,140,141,142,143,144,148,153,168,177,215,232,317,318,319,333,334,338,339,340,348,359,375,377,396,429,439,477,525,528,532,543,545,558,584,],[52,52,52,159,52,179,204,159,159,221,230,159,52,242,52,255,257,52,52,52,52,52,159,255,278,303,255,332,255,255,255,370,390,391,221,221,221,400,303,431,435,456,221,480,507,546,255,159,557,255,255,594,]),'conditional':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,532,],[55,55,115,156,115,188,211,213,233,55,55,55,55,55,55,55,548,]),'function_invocation':([10,11,50,84,89,121,133,139,140,141,142,143,202,203,],[57,57,57,57,182,57,57,57,57,57,57,57,324,327,]),'string_special_function':([10,11,50,84,89,121,133,139,140,141,142,143,584,],[58,58,58,58,183,58,58,58,58,58,58,58,598,]),'array_special_function':([10,11,50,84,89,121,133,139,140,141,142,143,584,],[59,59,59,59,184,59,59,59,59,59,59,59,599,]),'boolean':([10,11,50,77,84,89,101,103,104,108,110,113,121,122,133,135,136,139,140,141,142,143,144,148,153,168,177,215,232,317,318,319,333,334,338,339,340,348,359,375,377,396,429,439,477,525,528,532,543,545,558,584,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'boolean_expression':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,532,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,266,63,]),'comparation':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,532,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'logic_not_sentence':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,532,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'logic_expression':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,532,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'expression':([10,11,50,77,84,89,103,104,113,121,122,133,139,140,141,142,143,144,154,166,167,248,502,532,584,],[75,75,116,75,116,181,75,75,116,75,243,75,75,75,75,75,75,75,280,301,302,346,531,75,597,]),'true_boolean_types':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,165,532,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,293,78,]),'false_boolean_types':([10,11,50,77,84,89,103,104,113,121,133,139,140,141,142,143,144,164,532,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,285,79,]),'term':([10,11,50,77,84,89,103,104,113,121,122,133,139,140,141,142,143,144,154,166,167,169,170,171,172,248,502,532,584,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,305,306,307,308,80,80,80,80,]),'factor':([10,11,50,77,84,89,103,104,113,121,122,133,139,140,141,142,143,144,154,166,167,169,170,171,172,248,502,532,584,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'assignment_operator':([23,585,],[89,89,]),'structure_matrix_second':([45,397,],[111,457,]),'comparator_operator':([52,75,116,159,179,181,484,],[122,154,154,122,122,154,511,]),'logic_operator':([63,78,79,],[144,164,165,]),'class_extends_opt':([86,87,],[174,176,]),'input':([89,],[186,]),'special_function':([89,],[187,]),'arrow_function':([89,],[192,]),'anonymous_functions':([89,],[193,]),'values_array_indexed':([108,319,334,338,339,340,429,],[218,218,218,393,394,395,218,]),'structure_array':([108,109,319,494,],[219,227,219,521,]),'structure_matrix_first':([108,319,493,],[220,220,520,]),'key':([108,109,319,494,],[224,224,224,224,]),'params':([135,148,177,232,317,318,528,545,558,],[252,267,314,345,368,369,547,559,567,]),'real_params':([135,148,177,232,317,318,528,545,558,],[253,253,253,253,253,253,253,253,253,]),'empty':([135,148,177,232,317,318,528,545,558,],[254,254,254,254,254,254,254,254,254,]),'string_param':([149,150,453,],[268,271,492,]),'class_implements_opt':([174,],[310,]),'accessType':([202,203,],[325,328,]),'count_param':([272,273,274,489,490,491,],[352,354,355,515,516,517,]),'interface_list':([311,],[362,]),'interface_body':([313,],[364,]),'expression_for':([331,380,444,511,],[382,442,486,535,]),'number_values':([331,380,444,511,571,],[383,383,383,383,576,]),'length_operations':([331,380,444,511,],[385,385,385,385,]),'int_param':([351,458,],[401,495,]),'class_body':([361,],[411,]),'interface_method':([364,],[414,]),'visibility_opt':([364,411,],[415,464,]),'codeblock':([365,424,502,],[419,470,529,]),'body_statement':([378,379,420,438,533,566,570,],[437,441,468,479,549,572,575,]),'operator_aritmetic':([382,442,486,535,565,],[444,444,444,444,571,]),'class_member':([411,],[463,]),'class_attribute':([411,],[465,]),'condition_for':([443,],[485,]),'elseif_statement':([476,587,],[503,602,]),'else_statement':([476,587,],[504,603,]),'increment_statement':([512,],[537,]),'method_body':([574,578,580,],[579,588,592,]),'classStatement':([574,578,580,],[580,580,580,]),'return_form':([574,578,580,],[581,581,590,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence program','program',2,'p_program_sentence_program','syntaxAnalysis.py',11),
  ('program -> sentence','program',1,'p_program_sentence','syntaxAnalysis.py',15),
  ('sentence -> print_statement SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',21),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence_print_statement','syntaxAnalysis.py',22),
  ('sentence -> types_structure','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',23),
  ('sentence -> class_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',24),
  ('sentence -> interface_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',25),
  ('sentence -> control_structures','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',26),
  ('sentence -> function_declaration','sentence',1,'p_sentence_print_statement','syntaxAnalysis.py',27),
  ('control_structures -> if_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',34),
  ('control_structures -> while_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',35),
  ('control_structures -> for_statement','control_structures',1,'p_control_structures','syntaxAnalysis.py',36),
  ('while_statement -> WHILE LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','while_statement',7,'p_while_statement','syntaxAnalysis.py',42),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','if_statement',7,'p_if_statement','syntaxAnalysis.py',48),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',49),
  ('if_statement -> IF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','if_statement',8,'p_if_statement','syntaxAnalysis.py',50),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','elseif_statement',7,'p_elseif_statement','syntaxAnalysis.py',56),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE elseif_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',57),
  ('elseif_statement -> ELSEIF LEFT_PAREN conditional RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE else_statement','elseif_statement',8,'p_elseif_statement','syntaxAnalysis.py',58),
  ('else_statement -> ELSE LEFT_BRACE body_statement RIGHT_BRACE','else_statement',4,'p_else_statement','syntaxAnalysis.py',64),
  ('body_statement -> sentence','body_statement',1,'p_body_statement','syntaxAnalysis.py',70),
  ('body_statement -> sentence RETURN values SEMICOLON','body_statement',4,'p_body_statement','syntaxAnalysis.py',71),
  ('body_statement -> sentence RETURN SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',72),
  ('body_statement -> sentence BREAK SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',73),
  ('body_statement -> sentence body_statement','body_statement',2,'p_body_statement','syntaxAnalysis.py',74),
  ('body_statement -> RETURN values SEMICOLON','body_statement',3,'p_body_statement','syntaxAnalysis.py',75),
  ('body_statement -> BREAK SEMICOLON','body_statement',2,'p_body_statement','syntaxAnalysis.py',76),
  ('for_statement -> FOR LEFT_PAREN VARIABLE EQUALS expression_for SEMICOLON condition_for SEMICOLON increment_statement RIGHT_PAREN LEFT_BRACE body_statement RIGHT_BRACE','for_statement',13,'p_for_statement','syntaxAnalysis.py',83),
  ('increment_statement -> VARIABLE INCREASE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',88),
  ('increment_statement -> VARIABLE DECREMENT','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',89),
  ('increment_statement -> INCREASE VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',90),
  ('increment_statement -> DECREMENT VARIABLE','increment_statement',2,'p_increment_statement','syntaxAnalysis.py',91),
  ('increment_statement -> VARIABLE PLUS_EQUALS INTEGER','increment_statement',3,'p_increment_statement','syntaxAnalysis.py',92),
  ('increment_statement -> VARIABLE EQUALS VARIABLE operator_aritmetic number_values','increment_statement',5,'p_increment_statement','syntaxAnalysis.py',93),
  ('condition_for -> VARIABLE comparator_operator expression_for','condition_for',3,'p_condition_for','syntaxAnalysis.py',98),
  ('expression_for -> VARIABLE','expression_for',1,'p_expression_for','syntaxAnalysis.py',103),
  ('expression_for -> number_values','expression_for',1,'p_expression_for','syntaxAnalysis.py',104),
  ('expression_for -> expression_for operator_aritmetic expression_for','expression_for',3,'p_expression_for','syntaxAnalysis.py',105),
  ('expression_for -> LEFT_PAREN expression_for RIGHT_PAREN','expression_for',3,'p_expression_for','syntaxAnalysis.py',106),
  ('expression_for -> IDENTIFIER LEFT_PAREN VARIABLE RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',107),
  ('expression_for -> IDENTIFIER LEFT_PAREN access_array_element RIGHT_PAREN','expression_for',4,'p_expression_for','syntaxAnalysis.py',108),
  ('expression_for -> length_operations','expression_for',1,'p_expression_for','syntaxAnalysis.py',109),
  ('number_values -> INTEGER','number_values',1,'p_number_values','syntaxAnalysis.py',114),
  ('number_values -> FLOAT','number_values',1,'p_number_values','syntaxAnalysis.py',115),
  ('operator_aritmetic -> PLUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',120),
  ('operator_aritmetic -> MINUS','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',121),
  ('operator_aritmetic -> MULTIPLY','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',122),
  ('operator_aritmetic -> DIVIDE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',123),
  ('operator_aritmetic -> MODULE','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',124),
  ('operator_aritmetic -> POW','operator_aritmetic',1,'p_operator_aritmetic','syntaxAnalysis.py',125),
  ('conditional -> boolean_expression','conditional',1,'p_conditional','syntaxAnalysis.py',132),
  ('conditional -> boolean_expression logic_operator boolean_expression','conditional',3,'p_conditional','syntaxAnalysis.py',133),
  ('logic_operator -> LOGIC_AND','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',140),
  ('logic_operator -> LOGIC_OR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',141),
  ('logic_operator -> LOGIC_XOR','logic_operator',1,'p_logic_operator','syntaxAnalysis.py',142),
  ('boolean_expression -> comparation','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',148),
  ('boolean_expression -> VARIABLE','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',149),
  ('boolean_expression -> IDENTIFIER','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',150),
  ('boolean_expression -> LEFT_PAREN conditional RIGHT_PAREN','boolean_expression',3,'p_boolean_expression','syntaxAnalysis.py',151),
  ('boolean_expression -> logic_not_sentence','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',152),
  ('boolean_expression -> logic_expression','boolean_expression',1,'p_boolean_expression','syntaxAnalysis.py',153),
  ('logic_expression -> true_boolean_types logic_operator false_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',159),
  ('logic_expression -> false_boolean_types logic_operator true_boolean_types','logic_expression',3,'p_logic_expression','syntaxAnalysis.py',160),
  ('true_boolean_types -> TRUE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',165),
  ('true_boolean_types -> STRING','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',166),
  ('true_boolean_types -> INTEGER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',167),
  ('true_boolean_types -> FLOAT','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',168),
  ('true_boolean_types -> VARIABLE','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',169),
  ('true_boolean_types -> IDENTIFIER','true_boolean_types',1,'p_true_boolean_types','syntaxAnalysis.py',170),
  ('true_boolean_types -> ARRAY LEFT_PAREN values RIGHT_PAREN','true_boolean_types',4,'p_true_boolean_types','syntaxAnalysis.py',171),
  ('false_boolean_types -> FALSE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',176),
  ('false_boolean_types -> STRING','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',177),
  ('false_boolean_types -> INTEGER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',178),
  ('false_boolean_types -> VARIABLE','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',179),
  ('false_boolean_types -> IDENTIFIER','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',180),
  ('false_boolean_types -> FLOAT','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',181),
  ('false_boolean_types -> ARRAY LEFT_PAREN RIGHT_PAREN','false_boolean_types',3,'p_false_boolean_types','syntaxAnalysis.py',182),
  ('false_boolean_types -> NULL','false_boolean_types',1,'p_false_boolean_types','syntaxAnalysis.py',183),
  ('logic_not_sentence -> LOGIC_NOT conditional','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',191),
  ('logic_not_sentence -> LOGIC_NOT VARIABLE','logic_not_sentence',2,'p_logic_not_sentence','syntaxAnalysis.py',192),
  ('comparation -> values comparator_operator values','comparation',3,'p_comparation','syntaxAnalysis.py',199),
  ('comparation -> values comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',200),
  ('comparation -> expression comparator_operator expression','comparation',3,'p_comparation','syntaxAnalysis.py',201),
  ('comparation -> VARIABLE EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',202),
  ('comparation -> access_array_element EQUALS_EQUALS values','comparation',3,'p_comparation','syntaxAnalysis.py',203),
  ('comparation -> access_array_element EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',204),
  ('comparation -> VARIABLE EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',205),
  ('comparation -> VARIABLE EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',206),
  ('comparation -> access_array_element EQUALS_EQUALS access_array_element','comparation',3,'p_comparation','syntaxAnalysis.py',207),
  ('comparation -> access_element_matrix EQUALS_EQUALS VARIABLE','comparation',3,'p_comparation','syntaxAnalysis.py',208),
  ('comparation -> VARIABLE EQUALS_EQUALS access_element_matrix','comparation',3,'p_comparation','syntaxAnalysis.py',209),
  ('comparator_operator -> EQUALS_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',215),
  ('comparator_operator -> IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',216),
  ('comparator_operator -> NOT_EQUALS','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',217),
  ('comparator_operator -> NOT_IDENTICAL','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',218),
  ('comparator_operator -> SMALL_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',219),
  ('comparator_operator -> GREATER_THAN','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',220),
  ('comparator_operator -> SMALL_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',221),
  ('comparator_operator -> GREATER_EQUALS_TO','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',222),
  ('comparator_operator -> SPACECRAFT','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',223),
  ('comparator_operator -> NULL_FUSION','comparator_operator',1,'p_comparator_operator','syntaxAnalysis.py',224),
  ('print_statement -> ECHO LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',230),
  ('print_statement -> PRINT LEFT_PAREN printable_values RIGHT_PAREN','print_statement',4,'p_print_statement','syntaxAnalysis.py',231),
  ('print_statement -> ECHO printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',232),
  ('print_statement -> PRINT printable_values','print_statement',2,'p_print_statement','syntaxAnalysis.py',233),
  ('printable_values -> values','printable_values',1,'p_printable_values','syntaxAnalysis.py',239),
  ('printable_values -> values COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',240),
  ('printable_values -> VARIABLE','printable_values',1,'p_printable_values','syntaxAnalysis.py',241),
  ('printable_values -> VARIABLE COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',242),
  ('printable_values -> STRING STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',243),
  ('printable_values -> VARIABLE STRING_CONCATENATION STRING','printable_values',3,'p_printable_values','syntaxAnalysis.py',244),
  ('printable_values -> conditional','printable_values',1,'p_printable_values','syntaxAnalysis.py',245),
  ('printable_values -> conditional COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',246),
  ('printable_values -> structure_object_principal','printable_values',1,'p_printable_values','syntaxAnalysis.py',247),
  ('printable_values -> structure_object_principal COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',248),
  ('printable_values -> function_invocation','printable_values',1,'p_printable_values','syntaxAnalysis.py',249),
  ('printable_values -> function_invocation COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',250),
  ('printable_values -> string_special_function','printable_values',1,'p_printable_values','syntaxAnalysis.py',251),
  ('printable_values -> string_special_function COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',252),
  ('printable_values -> array_special_function','printable_values',1,'p_printable_values','syntaxAnalysis.py',253),
  ('printable_values -> array_special_function COMMA printable_values','printable_values',3,'p_printable_values','syntaxAnalysis.py',254),
  ('values -> INTEGER','values',1,'p_values','syntaxAnalysis.py',260),
  ('values -> STRING','values',1,'p_values','syntaxAnalysis.py',261),
  ('values -> FLOAT','values',1,'p_values','syntaxAnalysis.py',262),
  ('values -> boolean','values',1,'p_values','syntaxAnalysis.py',263),
  ('boolean -> TRUE','boolean',1,'p_boolean','syntaxAnalysis.py',269),
  ('boolean -> FALSE','boolean',1,'p_boolean','syntaxAnalysis.py',270),
  ('expression -> term','expression',1,'p_expression','syntaxAnalysis.py',276),
  ('expression -> term PLUS expression','expression',3,'p_expression','syntaxAnalysis.py',277),
  ('expression -> term MINUS expression','expression',3,'p_expression','syntaxAnalysis.py',278),
  ('term -> factor','term',1,'p_term','syntaxAnalysis.py',284),
  ('term -> factor MULTIPLY term','term',3,'p_term','syntaxAnalysis.py',285),
  ('term -> factor DIVIDE term','term',3,'p_term','syntaxAnalysis.py',286),
  ('term -> factor MODULE term','term',3,'p_term','syntaxAnalysis.py',287),
  ('term -> factor POW term','term',3,'p_term','syntaxAnalysis.py',288),
  ('factor -> INTEGER','factor',1,'p_factor','syntaxAnalysis.py',295),
  ('factor -> FLOAT','factor',1,'p_factor','syntaxAnalysis.py',296),
  ('factor -> VARIABLE','factor',1,'p_factor','syntaxAnalysis.py',297),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','syntaxAnalysis.py',298),
  ('factor -> STRING','factor',1,'p_factor','syntaxAnalysis.py',299),
  ('assignment -> variable_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',326),
  ('assignment -> constant_assignment','assignment',1,'p_assignment','syntaxAnalysis.py',327),
  ('variable_assignment -> VARIABLE assignment_operator values','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',333),
  ('variable_assignment -> VARIABLE assignment_operator IDENTIFIER','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',334),
  ('variable_assignment -> VARIABLE assignment_operator expression','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',335),
  ('variable_assignment -> VARIABLE assignment_operator function_invocation','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',336),
  ('variable_assignment -> VARIABLE assignment_operator string_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',337),
  ('variable_assignment -> VARIABLE assignment_operator array_special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',338),
  ('variable_assignment -> VARIABLE assignment_operator types_structure','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',339),
  ('variable_assignment -> VARIABLE assignment_operator input','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',340),
  ('variable_assignment -> VARIABLE assignment_operator special_function','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',341),
  ('variable_assignment -> VARIABLE assignment_operator conditional','variable_assignment',3,'p_variable_assignment','syntaxAnalysis.py',342),
  ('variable_assignment -> VARIABLE INCREASE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',343),
  ('variable_assignment -> VARIABLE DECREMENT','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',344),
  ('variable_assignment -> INCREASE VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',345),
  ('variable_assignment -> DECREMENT VARIABLE','variable_assignment',2,'p_variable_assignment','syntaxAnalysis.py',346),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',353),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','syntaxAnalysis.py',354),
  ('constant_assignment -> const_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',360),
  ('constant_assignment -> define_syntax','constant_assignment',1,'p_constant_assignment','syntaxAnalysis.py',361),
  ('const_syntax -> CONST IDENTIFIER EQUALS values','const_syntax',4,'p_const_syntax','syntaxAnalysis.py',367),
  ('define_syntax -> DEFINE LEFT_PAREN STRING COMMA values RIGHT_PAREN','define_syntax',6,'p_define_syntax','syntaxAnalysis.py',373),
  ('function_invocation -> IDENTIFIER LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',384),
  ('function_invocation -> VARIABLE LEFT_PAREN params RIGHT_PAREN','function_invocation',4,'p_function_invocation','syntaxAnalysis.py',385),
  ('params -> real_params','params',1,'p_params','syntaxAnalysis.py',391),
  ('params -> empty','params',1,'p_params','syntaxAnalysis.py',392),
  ('real_params -> VARIABLE','real_params',1,'p_real_params','syntaxAnalysis.py',398),
  ('real_params -> values','real_params',1,'p_real_params','syntaxAnalysis.py',399),
  ('real_params -> real_params COMMA VARIABLE','real_params',3,'p_real_params','syntaxAnalysis.py',400),
  ('real_params -> real_params COMMA values','real_params',3,'p_real_params','syntaxAnalysis.py',401),
  ('empty -> <empty>','empty',0,'p_empty','syntaxAnalysis.py',411),
  ('function_declaration -> FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN codeblock','function_declaration',6,'p_function_declaration','syntaxAnalysis.py',419),
  ('special_function -> arrow_function','special_function',1,'p_special_function','syntaxAnalysis.py',425),
  ('special_function -> anonymous_functions','special_function',1,'p_special_function','syntaxAnalysis.py',426),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN codeblock','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',432),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN print_statement','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',433),
  ('arrow_function -> FN LEFT_PAREN params RIGHT_PAREN EQUALS GREATER_THAN expression','arrow_function',7,'p_arrow_function','syntaxAnalysis.py',434),
  ('anonymous_functions -> FUNCTION LEFT_PAREN params RIGHT_PAREN codeblock','anonymous_functions',5,'p_anonymous_functions','syntaxAnalysis.py',440),
  ('codeblock -> LEFT_BRACE body_statement RIGHT_BRACE','codeblock',3,'p_codeblock','syntaxAnalysis.py',446),
  ('input -> FEGTS LEFT_PAREN STDIN RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',452),
  ('input -> READLINE LEFT_PAREN STRING RIGHT_PAREN','input',4,'p_input','syntaxAnalysis.py',453),
  ('string_special_function -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','string_special_function',4,'p_string_special_function','syntaxAnalysis.py',461),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param RIGHT_PAREN','string_special_function',6,'p_string_special_function','syntaxAnalysis.py',462),
  ('string_special_function -> SUBSTR LEFT_PAREN string_param COMMA int_param COMMA int_param RIGHT_PAREN','string_special_function',8,'p_string_special_function','syntaxAnalysis.py',463),
  ('string_param -> STRING','string_param',1,'p_string_param','syntaxAnalysis.py',468),
  ('string_param -> VARIABLE','string_param',1,'p_string_param','syntaxAnalysis.py',469),
  ('int_param -> INTEGER','int_param',1,'p_int_param','syntaxAnalysis.py',473),
  ('int_param -> VARIABLE','int_param',1,'p_int_param','syntaxAnalysis.py',474),
  ('array_special_function -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',483),
  ('array_special_function -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',484),
  ('array_special_function -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','array_special_function',5,'p_array_special_function','syntaxAnalysis.py',485),
  ('array_special_function -> ARRAY_POP LEFT_PAREN VARIABLE RIGHT_PAREN','array_special_function',4,'p_array_special_function','syntaxAnalysis.py',486),
  ('count_param -> COMMA COUNT_NORMAL','count_param',2,'p_count_param','syntaxAnalysis.py',492),
  ('count_param -> COMMA COUNT_RECURSIVE','count_param',2,'p_count_param','syntaxAnalysis.py',493),
  ('count_param -> <empty>','count_param',0,'p_count_param','syntaxAnalysis.py',494),
  ('length_operations -> COUNT LEFT_PAREN structure_array_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',498),
  ('length_operations -> COUNT LEFT_PAREN structure_matrix_principal count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',499),
  ('length_operations -> COUNT LEFT_PAREN VARIABLE count_param RIGHT_PAREN','length_operations',5,'p_length_operations','syntaxAnalysis.py',500),
  ('length_operations -> STRLEN LEFT_PAREN string_param RIGHT_PAREN','length_operations',4,'p_length_operations','syntaxAnalysis.py',501),
  ('types_structure -> structure_array_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',513),
  ('types_structure -> structure_matrix_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',514),
  ('types_structure -> structure_object_principal','types_structure',1,'p_types_structure','syntaxAnalysis.py',515),
  ('structure_array_principal -> indexed_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',522),
  ('structure_array_principal -> associative_array','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',523),
  ('structure_array_principal -> access_array_stucture','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',524),
  ('structure_array_principal -> access_array_element','structure_array_principal',1,'p_structure_array_principal','syntaxAnalysis.py',525),
  ('indexed_array -> ARRAY LEFT_PAREN values_array_indexed RIGHT_PAREN','indexed_array',4,'p_indexed_array','syntaxAnalysis.py',530),
  ('associative_array -> ARRAY LEFT_PAREN structure_array RIGHT_PAREN','associative_array',4,'p_associative_array','syntaxAnalysis.py',534),
  ('associative_array -> ARRAY LEFT_BRACKET structure_array RIGHT_BRACKET','associative_array',4,'p_associative_array','syntaxAnalysis.py',535),
  ('structure_array -> key EQUALS GREATER_THAN values','structure_array',4,'p_structure_array','syntaxAnalysis.py',541),
  ('structure_array -> key EQUALS GREATER_THAN values COMMA structure_array','structure_array',6,'p_structure_array','syntaxAnalysis.py',542),
  ('key -> INTEGER','key',1,'p_key','syntaxAnalysis.py',548),
  ('key -> STRING','key',1,'p_key','syntaxAnalysis.py',549),
  ('values_array_indexed -> values','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',554),
  ('values_array_indexed -> values COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',555),
  ('values_array_indexed -> object_creation','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',556),
  ('values_array_indexed -> object_creation COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',557),
  ('values_array_indexed -> indexed_array','values_array_indexed',1,'p_values_array_indexed','syntaxAnalysis.py',558),
  ('values_array_indexed -> indexed_array COMMA values_array_indexed','values_array_indexed',3,'p_values_array_indexed','syntaxAnalysis.py',559),
  ('access_array_stucture -> access_array_element SEMICOLON','access_array_stucture',2,'p_access_array_stucture','syntaxAnalysis.py',564),
  ('access_array_element -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',569),
  ('access_array_element -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_array_element',4,'p_access_array_element','syntaxAnalysis.py',570),
  ('structure_matrix_principal -> matrix_firstform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',576),
  ('structure_matrix_principal -> matrix_secondform','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',577),
  ('structure_matrix_principal -> access_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',578),
  ('structure_matrix_principal -> modify_element_matrix SEMICOLON','structure_matrix_principal',2,'p_structure_matrix_principal','syntaxAnalysis.py',579),
  ('structure_matrix_principal -> add_element_matrix','structure_matrix_principal',1,'p_structure_matrix_principal','syntaxAnalysis.py',580),
  ('matrix_firstform -> ARRAY LEFT_PAREN structure_matrix_first RIGHT_PAREN SEMICOLON','matrix_firstform',5,'p_matrix_firstform','syntaxAnalysis.py',585),
  ('matrix_secondform -> LEFT_BRACKET structure_matrix_second RIGHT_BRACKET SEMICOLON','matrix_secondform',4,'p_matrix_secondform','syntaxAnalysis.py',589),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET','structure_matrix_second',3,'p_structure_matrix_second','syntaxAnalysis.py',594),
  ('structure_matrix_second -> LEFT_BRACKET values RIGHT_BRACKET COMMA structure_matrix_second','structure_matrix_second',5,'p_structure_matrix_second','syntaxAnalysis.py',595),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN','structure_matrix_first',4,'p_structure_matrix_first','syntaxAnalysis.py',601),
  ('structure_matrix_first -> ARRAY LEFT_PAREN values RIGHT_PAREN COMMA structure_matrix_first','structure_matrix_first',6,'p_structure_matrix_first','syntaxAnalysis.py',602),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',608),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',609),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET VARIABLE RIGHT_BRACKET LEFT_BRACKET INTEGER RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',610),
  ('access_element_matrix -> VARIABLE LEFT_BRACKET INTEGER RIGHT_BRACKET LEFT_BRACKET VARIABLE RIGHT_BRACKET','access_element_matrix',7,'p_access_element_matrix','syntaxAnalysis.py',611),
  ('modify_element_matrix -> access_element_matrix EQUALS values','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',616),
  ('modify_element_matrix -> access_element_matrix EQUALS VARIABLE','modify_element_matrix',3,'p_modify_element_matrix','syntaxAnalysis.py',617),
  ('add_element_matrix -> VARIABLE LEFT_BRACKET RIGHT_BRACKET EQUALS indexed_array','add_element_matrix',5,'p_add_element_matrix','syntaxAnalysis.py',623),
  ('structure_object_principal -> object_creation','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',632),
  ('structure_object_principal -> access_method_object','structure_object_principal',1,'p_structure_object_principal','syntaxAnalysis.py',633),
  ('object_creation -> NEW IDENTIFIER','object_creation',2,'p_object_creation','syntaxAnalysis.py',638),
  ('object_creation -> NEW IDENTIFIER LEFT_PAREN params RIGHT_PAREN','object_creation',5,'p_object_creation','syntaxAnalysis.py',639),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',643),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',644),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',645),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',646),
  ('access_method_object -> VARIABLE MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',647),
  ('access_method_object -> access_array_element MINUS GREATER_THAN function_invocation','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',648),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType','access_method_object',4,'p_access_method_object','syntaxAnalysis.py',649),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS values','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',650),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS VARIABLE','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',651),
  ('access_method_object -> access_array_element MINUS GREATER_THAN accessType EQUALS access_array_element','access_method_object',6,'p_access_method_object','syntaxAnalysis.py',652),
  ('accessType -> IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET','accessType',4,'p_accessType','syntaxAnalysis.py',658),
  ('accessType -> IDENTIFIER','accessType',1,'p_accessType','syntaxAnalysis.py',659),
  ('class_declaration -> CLASS IDENTIFIER class_extends_opt class_implements_opt LEFT_BRACE class_body RIGHT_BRACE','class_declaration',7,'p_class_declaration','syntaxAnalysis.py',664),
  ('interface_declaration -> INTERFACE IDENTIFIER class_extends_opt LEFT_BRACE interface_body RIGHT_BRACE','interface_declaration',6,'p_interface_declaration','syntaxAnalysis.py',668),
  ('interface_body -> interface_body interface_method','interface_body',2,'p_interface_body','syntaxAnalysis.py',672),
  ('interface_body -> <empty>','interface_body',0,'p_interface_body','syntaxAnalysis.py',673),
  ('interface_method -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN SEMICOLON','interface_method',7,'p_interface_method','syntaxAnalysis.py',677),
  ('class_extends_opt -> EXTENDS IDENTIFIER','class_extends_opt',2,'p_class_extends_opt','syntaxAnalysis.py',681),
  ('class_extends_opt -> <empty>','class_extends_opt',0,'p_class_extends_opt','syntaxAnalysis.py',682),
  ('class_implements_opt -> IMPLEMENTS interface_list','class_implements_opt',2,'p_class_implements_opt','syntaxAnalysis.py',686),
  ('class_implements_opt -> <empty>','class_implements_opt',0,'p_class_implements_opt','syntaxAnalysis.py',687),
  ('interface_list -> IDENTIFIER','interface_list',1,'p_interface_list','syntaxAnalysis.py',691),
  ('interface_list -> interface_list COMMA IDENTIFIER','interface_list',3,'p_interface_list','syntaxAnalysis.py',692),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','syntaxAnalysis.py',696),
  ('class_body -> <empty>','class_body',0,'p_class_body','syntaxAnalysis.py',697),
  ('class_member -> visibility_opt STATIC FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',10,'p_class_member','syntaxAnalysis.py',701),
  ('class_member -> visibility_opt FUNCTION IDENTIFIER LEFT_PAREN params RIGHT_PAREN LEFT_BRACE method_body RIGHT_BRACE','class_member',9,'p_class_member','syntaxAnalysis.py',702),
  ('class_member -> class_attribute','class_member',1,'p_class_member','syntaxAnalysis.py',703),
  ('class_attribute -> visibility_opt VARIABLE EQUALS values SEMICOLON','class_attribute',5,'p_class_attribute','syntaxAnalysis.py',708),
  ('class_attribute -> visibility_opt VARIABLE SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',709),
  ('class_attribute -> visibility_opt constant_assignment SEMICOLON','class_attribute',3,'p_class_attribute','syntaxAnalysis.py',710),
  ('visibility_opt -> PUBLIC','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',715),
  ('visibility_opt -> PRIVATE','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',716),
  ('visibility_opt -> PROTECTED','visibility_opt',1,'p_visibility_opt','syntaxAnalysis.py',717),
  ('visibility_opt -> <empty>','visibility_opt',0,'p_visibility_opt','syntaxAnalysis.py',718),
  ('method_body -> classStatement','method_body',1,'p_method_body','syntaxAnalysis.py',722),
  ('method_body -> classStatement return_form','method_body',2,'p_method_body','syntaxAnalysis.py',723),
  ('method_body -> return_form','method_body',1,'p_method_body','syntaxAnalysis.py',724),
  ('method_body -> classStatement BREAK SEMICOLON','method_body',3,'p_method_body','syntaxAnalysis.py',725),
  ('method_body -> classStatement method_body','method_body',2,'p_method_body','syntaxAnalysis.py',726),
  ('return_form -> RETURN values SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',732),
  ('return_form -> RETURN access_method_object SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',733),
  ('return_form -> RETURN SEMICOLON','return_form',2,'p_return_form','syntaxAnalysis.py',734),
  ('return_form -> RETURN expression SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',735),
  ('return_form -> RETURN string_special_function SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',736),
  ('return_form -> RETURN array_special_function SEMICOLON','return_form',3,'p_return_form','syntaxAnalysis.py',737),
  ('classStatement -> sentence','classStatement',1,'p_classStatement','syntaxAnalysis.py',742),
  ('classStatement -> access_method_object SEMICOLON','classStatement',2,'p_classStatement','syntaxAnalysis.py',743),
]
